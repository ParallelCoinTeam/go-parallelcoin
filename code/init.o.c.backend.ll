source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_2a6d0_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_38ed8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_38ef0_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_38f28_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_38f68_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_38fe8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39008_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39048_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_390d8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39108_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39148_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_39228_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39240_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39290_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_392e0_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39348_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_39360_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_393e0_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39448_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39488_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_39548_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_395e8_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_39628_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39668_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_396e8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39708_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39748_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_397c8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_397e8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39828_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_398a8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_398c8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_39908_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_39988_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_399a0_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_399c0_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_399d8_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39a08_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39a20_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39a38_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39a50_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39a68_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39a80_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39a98_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39ac8_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39af8_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32*, i32)* }
%vtable_39bd0_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_39d48_type = type { i32 (i32*)*, i32 (i32*)* }
%vtable_39d88_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_39dd0_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%has_fallback_type__1 = type { i32 }
%has_fallback_type_ = type { i32 }
%has_fallback_type_.0 = type { i32 }
%has_fallback_type__1.1 = type { i32 }
%has_fallback_type__2 = type { i32 }
%"vector<boost::filesystem3::path,std::allocator<boost::filesystem3::path>>" = type { i32 }

@cf = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@sf = internal unnamed_addr global i1 false
@tf = internal unnamed_addr global i1 false
@if = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@nt = internal unnamed_addr global i1 false
@gs = internal unnamed_addr global i16 0
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@global_var_b6.3266 = constant i32 608487168
@global_var_1c.3271 = constant i32 5125
@global_var_18.3278 = constant i32 862260260
@global_var_20.3279 = constant i32 -2096859904
@global_var_e8.3284 = constant i32 608471296
@global_var_4c.3290 = constant i32 5125
@global_var_9a2c.3296 = constant [9 x i8] c"Options:\00"
@global_var_e8f0.3297 = constant i32 1509967621
@global_var_9c86.3298 = constant [26 x i8] c"  -discover              \00"
@global_var_5424.3300 = constant i32 41506
@global_var_96.3308 = constant i32 -4
@global_var_c0a8.3311 = constant [35 x i8] c"wallet.dat corrupt, salvage failed\00"
@global_var_80.3314 = constant i32 -973078528
@global_var_c148.3316 = constant [62 x i8] c"Failed to listen on any port. Use -listen=0 if you want this.\00"
@global_var_8bc6.3317 = constant [3 x i8] c"t&\00"
@global_var_dc.3318 = constant i32 0
@global_var_a5b6.3319 = constant [21 x i8] c"Loading addresses...\00"
@global_var_9724.3320 = constant [26 x i8] c"st::thread_resource_error\00"
@global_var_e824.3321 = constant i32 1330
@global_var_198.3322 = constant i32 666668288
@global_var_120.3323 = constant i32 1697442947
@global_var_41.3324 = constant i32 0
@global_var_f175.3325 = constant i32 -65536
@global_var_38f50.3327 = constant i32 0
@global_var_970f.3328 = constant [18 x i8] c"boost::lock_error\00"
@global_var_9721.3329 = constant [29 x i8] c"boost::thread_resource_error\00"
@global_var_391c8.3330 = constant i32 42736
@global_var_2a6a8.3331 = constant i32 42880
@global_var_a8e0.3333 = constant [32 x i8] c"boost::signals2::no_slots_error\00"
@global_var_fe.3394 = constant i32 608487168
@global_var_39da0.3405 = constant i32 77120
@global_var_39db4.3406 = constant i32 73648
@global_var_38f08.3407 = constant i32 0
@global_var_394a4.3408 = constant i32 79440
@global_var_394b4.3410 = constant i32 73808
@global_var_38f84.3412 = constant i32 80176
@global_var_38f94.3414 = constant i32 73984
@global_var_39064.3416 = constant i32 79824
@global_var_39074.3418 = constant i32 74176
@global_var_39684.3420 = constant i32 77360
@global_var_39694.3422 = constant i32 74656
@global_var_39164.3423 = constant i32 78592
@global_var_39174.3425 = constant i32 74864
@global_var_39764.3426 = constant i32 78224
@global_var_39774.3428 = constant i32 75088
@global_var_39844.3429 = constant i32 79088
@global_var_39854.3431 = constant i32 75312
@global_var_39924.3432 = constant i32 77984
@global_var_39934.3434 = constant i32 75536
@global_var_39d58.3437 = constant i32 76128
@global_var_3963c.3439 = constant i32 76224
@global_var_3971c.3441 = constant i32 76320
@global_var_38f3c.3443 = constant i32 76432
@global_var_3901c.3445 = constant i32 76544
@global_var_3911c.3447 = constant i32 76656
@global_var_398dc.3449 = constant i32 76768
@global_var_397fc.3451 = constant i32 76880
@global_var_3945c.3453 = constant i32 76992
@global_var_60.3454 = constant i32 1696394371
@global_var_2444.3455 = constant i32 -1511460727
@global_var_38.3456 = constant i32 608471296
@global_var_34.3466 = constant i32 5281
@global_var_ab50.3467 = constant [45 x i8] c"boost::interprocess_exception::library_error\00"
@global_var_30.3470 = constant i32 1696394371
@global_var_3c.3471 = constant i32 -960483060
@global_var_50.3473 = constant i32 -2096859904
@global_var_e4.3479 = constant i32 5281
@global_var_68.3484 = constant i32 608471296
@global_var_39dc8.3485 = local_unnamed_addr constant i32 0
@global_var_38e20.3486 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_ac68.3487 = constant [54 x i8] c"/usr/include/boost/exception/detail/exception_ptr.hpp\00"
@global_var_51.3488 = constant i32 -998046603
@global_var_39dcc.3489 = local_unnamed_addr constant i32 239744
@global_var_3a880.3490 = constant i32 8
@global_var_3db40.3491 = constant [90 x i8] c"N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE\00"
@global_var_3a884.3492 = local_unnamed_addr constant [90 x i8]* @global_var_3db40.3491
@global_var_3a885.3493 = constant i32 1543504859
@global_var_84.3506 = constant i32 5
@global_var_88.3507 = constant i32 158662656
@global_var_a0.3519 = constant i32 1697442947
@global_var_40.3547 = constant i32 5
@global_var_44.3548 = constant i32 1149960448
@global_var_577.3550 = constant i32 39054
@global_var_11.3555 = constant i32 38624
@global_var_1d.3556 = constant i32 20
@global_var_15020.3558 = constant i32 1699540099
@global_var_98.3568 = constant i32 -1232207873
@global_var_ad8c.3573 = constant [51 x i8] c"/usr/include/boost/signals2/detail/slot_groups.hpp\00"
@global_var_32500.3580 = constant [917 x i8] c"boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const std::basic_string<char>&, boost::function<void(const std::basic_string<char>&)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, const std::basic_string<char>&, boost::function<void(const std::basic_string<char>&)> >, boost::signals2::mutex> > >]\00"
@global_var_c5f0.3602 = constant i32 1696394371
@global_var_5.3604 = constant i32 20
@0 = external global i32
@1 = internal constant [6 x i8] c"\EC\1Ce\A1\14\00"
@global_var_1.3274 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i32 0, i32 0)
@2 = internal constant [7 x i8] c"\FF\8D\9C$\D4\02\00"
@global_var_27bc.3275 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @2, i32 0, i32 0)
@global_var_4.3276 = constant i16* inttoptr (i32 5281 to i16*)
@global_var_8.3277 = external constant i8*
@global_var_70.3282 = constant i8 61
@global_var_89.3286 = constant i8 0
@global_var_c7.3287 = constant i8 -57
@global_var_96e0.3291 = local_unnamed_addr constant i1 true
@global_var_ff.3305 = constant i8 -57
@global_var_83.3312 = constant i8 -58
@3 = internal constant [7 x i8] c"$\0Ce3\05\14\00"
@global_var_48.3313 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i32 0, i32 0)
@global_var_65.3326 = constant i8 20
@global_var_85.3361 = constant i8 0
@4 = internal constant [3 x i8] c"\03$\00"
@global_var_ec83.3474 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i32 0, i32 0)
@global_var_f083.3475 = external constant i8*
@global_var_d8.3476 = external constant i8*
@5 = internal constant [4 x i8] c"\8D\BC'\00"
@global_var_d9.3477 = constant i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0)
@6 = internal constant [3 x i8] c"\BC'\00"
@global_var_da.3478 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @6, i32 0, i32 0)
@global_var_74.3482 = constant i8 0
@global_var_39.3508 = constant i8 -119
@global_var_1a2c.3551 = constant i16 368
@global_var_ffff.3552 = constant i64 6667584886641024138
@global_var_147b.3553 = constant i64 2602105335597795584
@global_var_a3e.3554 = constant i64 740574407
@global_var_2a6d0.3335 = constant %vtable_2a6d0_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32*)* @_ZN5boost6system12system_errorD0Ev, i32 (i32)* @_ZNK5boost6system12system_error4whatEv }
@global_var_38ed8.3336 = constant %vtable_38ed8_type { i32 (i32*)* @_ZN5boost16thread_exceptionD1Ev, i32 (i32*)* @_ZN5boost16thread_exceptionD0Ev, i32 ()* @fRequestShutdown }
@global_var_38ef0.3411 = constant %vtable_38ef0_type { i32 (i32*)* @_ZN5boost21thread_resource_errorD1Ev, i32 (i32*)* @_ZN5boost21thread_resource_errorD0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_38f28.3442 = constant %vtable_38f28_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_38f68.3413 = constant %vtable_38f68_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv }
@global_var_38fe8.3415 = constant %vtable_38fe8_type { i32 (i32*)* @_ZN5boost10lock_errorD1Ev, i32 (i32*)* @_ZN5boost10lock_errorD0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv }
@global_var_39008.3444 = constant %vtable_39008_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv }
@global_var_39048.3417 = constant %vtable_39048_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv }
@global_var_390d8.3334 = constant %vtable_390d8_type { i32 (i32*)* @_ZN5boost17bad_function_callD1Ev, i32 (i32*)* @_ZN5boost17bad_function_callD0Ev, i32 ()* @fRequestShutdown }
@global_var_39108.3446 = constant %vtable_39108_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, i32 ()* @fRequestShutdown }
@global_var_39148.3424 = constant %vtable_39148_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, i32 ()* @fRequestShutdown, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv }
@global_var_39228.3332 = constant %vtable_39228_type { i32 (i32*)* @_ZN5boost8signals211signal_baseD1Ev, i32 (i32*)* @_ZN5boost8signals211signal_baseD0Ev, i32 ()* @fRequestShutdown }
@global_var_39240.3517 = constant %vtable_39240_type { i32 (i32*)* @_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv }
@global_var_39290.3523 = constant %vtable_39290_type { i32 (i32*)* @_ZN5boost8signals27signal5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_SD_SF_bSG_EEENSL_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_SD_SF_bSG_EEENSL_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_SD_SF_bSG_EEENSL_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEE10lock_pimplEv }
@global_var_392e0.3527 = constant %vtable_392e0_type { i32 (i32*)* @_ZN5boost8signals27signal3IvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S6_S7_EEENSC_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal3IvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S6_S7_EEENSC_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal3IvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S6_S7_EEENSC_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEE10lock_pimplEv }
@global_var_39348.3338 = constant %vtable_39348_type { i32 (i32*)* @_ZN5boost12interprocess22interprocess_exceptionD1Ev, i32 (i32*)* @_ZN5boost12interprocess22interprocess_exceptionD0Ev, i32 (i32)* @_ZNK5boost12interprocess22interprocess_exception4whatEv }
@global_var_39360.3343 = constant %vtable_39360_type { i32 (i32*)* @_ZN5boost6detail11thread_dataIPFvvEED1Ev, i32 (i32*)* @_ZN5boost6detail11thread_dataIPFvvEED0Ev, i32 (i32)* @_ZN5boost6detail11thread_dataIPFvvEE3runEv, i32 ()* @function_8 }
@global_var_393e0.3337 = constant %vtable_393e0_type { i32 (i32*)* @_ZN5boost8signals214no_slots_errorD1Ev, i32 (i32*)* @_ZN5boost8signals214no_slots_errorD0Ev, i32 ()* @_ZNK5boost8signals214no_slots_error4whatEv }
@global_var_39448.3452 = constant %vtable_39448_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev, i32 ()* @_ZNK5boost8signals214no_slots_error4whatEv }
@global_var_39488.3409 = constant %vtable_39488_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev, i32 ()* @_ZNK5boost8signals214no_slots_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv.3264, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv }
@global_var_39548.3571 = constant %vtable_39548_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEE11get_deleterERKSt9type_info }
@global_var_395e8.3435 = constant %vtable_395e8_type { i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEE3runEv }
@global_var_39628.3438 = constant %vtable_39628_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev, i32 ()* @fRequestShutdown }
@global_var_39668.3421 = constant %vtable_39668_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev, i32 ()* @fRequestShutdown, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv }
@global_var_396e8.3339 = constant %vtable_396e8_type { i32 (i32*)* @_ZN5boost9gregorian16bad_day_of_monthD1Ev, i32 (i32*)* @_ZN5boost9gregorian16bad_day_of_monthD0Ev, i32 ()* @fRequestShutdown }
@global_var_39708.3440 = constant %vtable_39708_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev, i32 ()* @fRequestShutdown }
@global_var_39748.3427 = constant %vtable_39748_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev, i32 ()* @fRequestShutdown, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv }
@global_var_397c8.3341 = constant %vtable_397c8_type { i32 (i32*)* @_ZN5boost9gregorian9bad_monthD1Ev, i32 (i32*)* @_ZN5boost9gregorian9bad_monthD0Ev, i32 ()* @fRequestShutdown }
@global_var_397e8.3450 = constant %vtable_397e8_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev, i32 ()* @fRequestShutdown }
@global_var_39828.3430 = constant %vtable_39828_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev, i32 ()* @fRequestShutdown, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv }
@global_var_398a8.3340 = constant %vtable_398a8_type { i32 (i32*)* @_ZN5boost9gregorian8bad_yearD1Ev, i32 (i32*)* @_ZN5boost9gregorian8bad_yearD0Ev, i32 ()* @fRequestShutdown }
@global_var_398c8.3448 = constant %vtable_398c8_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev, i32 ()* @fRequestShutdown }
@global_var_39908.3433 = constant %vtable_39908_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev, i32 ()* @fRequestShutdown, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv }
@global_var_39988.3342 = constant %vtable_39988_type { i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvRKSsENS2_5list1INS_17reference_wrapperISsEEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvRKSsENS2_5list1INS_17reference_wrapperISsEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvRKSsENS2_5list1INS_17reference_wrapperISsEEEEEEE3runEv }
@global_var_399a0.3509 = constant %vtable_399a0_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvRKSsENS3_5list1INS_17reference_wrapperISsEEEEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvRKSsENS3_5list1INS_17reference_wrapperISsEEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvRKSsENS3_5list1INS_17reference_wrapperISsEEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvRKSsENS3_5list1INS_17reference_wrapperISsEEEEEEEEE11get_deleterERKSt9type_info }
@global_var_399c0.3589 = constant %vtable_399c0_type { i32 (i32*)* @_ZN5boost8signals26signalIFvRK7uint25610ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS6_EENSB_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals26signalIFvRK7uint25610ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS6_EENSB_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEE10lock_pimplEv }
@global_var_399d8.3546 = constant %vtable_399d8_type { i32 (i32*)* @_ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEE10lock_pimplEv }
@global_var_39a08.3542 = constant %vtable_39a08_type { i32 (i32*)* @_ZN5boost8signals27signal1IviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS6_IFvRKNS0_10connectionEiEEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal1IviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS6_IFvRKNS0_10connectionEiEEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal1IviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS6_IFvRKNS0_10connectionEiEEENS0_5mutexEE10lock_pimplEv }
@global_var_39a20.3588 = constant %vtable_39a20_type { i32 (i32*)* @_ZN5boost8signals26signalIFvvENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS2_EENS7_IFvRKNS0_10connectionEEEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals26signalIFvvENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS2_EENS7_IFvRKNS0_10connectionEEEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEE10lock_pimplEv }
@global_var_39a38.3538 = constant %vtable_39a38_type { i32 (i32*)* @_ZN5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEE10lock_pimplEv }
@global_var_39a50.3587 = constant %vtable_39a50_type { i32 (i32*)* @_ZN5boost8signals26signalIFSsPKcENS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIS4_EENS9_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals26signalIFSsPKcENS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIS4_EENS9_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv }
@global_var_39a68.3534 = constant %vtable_39a68_type { i32 (i32*)* @_ZN5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv }
@global_var_39a80.3586 = constant %vtable_39a80_type { i32 (i32*)* @_ZN5boost8signals26signalIFvRKSsENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals26signalIFvRKSsENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv }
@global_var_39a98.3533 = constant %vtable_39a98_type { i32 (i32*)* @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv }
@global_var_39ac8.3532 = constant %vtable_39ac8_type { i32 (i32*)* @_ZN5boost8signals27signal1IbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS6_IFbRKNS0_10connectionExEEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal1IbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS6_IFbRKNS0_10connectionExEEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal1IbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS6_IFbRKNS0_10connectionExEEENS0_5mutexEE10lock_pimplEv }
@global_var_39af8.3528 = constant %vtable_39af8_type { i32 (i32*)* @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEED1Ev, i32 (i32*)* @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEED0Ev, i32 (i32*, i32)* @_ZNK5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEE10lock_pimplEv }
@global_var_39bd0.3578 = constant %vtable_39bd0_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals210last_valueIbEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals210last_valueIbEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals210last_valueIbEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals210last_valueIbEEE11get_deleterERKSt9type_info }
@global_var_39d48.3436 = constant %vtable_39d48_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }
@global_var_39d88.3404 = constant %vtable_39d88_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }
@global_var_39dd0.3494 = constant %vtable_39dd0_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info }

define i32 @fRequestShutdown() {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_8() {
dec_label_pc_8:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_10:
  ret void
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_20:
  ret void
}

define void @_Z12HandleSIGHUPi(i32 %arg0) local_unnamed_addr {
dec_label_pc_30:
  ret void
}

define void @"~pthread_mutex_scoped_lock"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_34:
  ret void
}

define void @"~CImportingNow"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_60:
  ret void
}

define void @_ZN5boost5mutex6unlockEv(i32 %this) local_unnamed_addr {
dec_label_pc_68:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type__1 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a0:
  ret void
}

define void @CImportingNow(i32 %this) local_unnamed_addr {
dec_label_pc_d0:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::copy_into, const void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type_ %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_e0:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type_.0 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_120:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type__1.1 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_160:
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_16a:
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_19e:
  %eax.global-to-local = alloca i32, align 4
  %v2_19e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_19e = load i32, i32* %eax.global-to-local, align 4
  %v4_19e = trunc i32 %v3_19e to i8
  %v5_19e = add i8 %v4_19e, %v2_19e
  %v21_19e = inttoptr i32 %v3_19e to i8*
  store i8 %v5_19e, i8* %v21_19e, align 1
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<CNoDestination, CKeyID, CScriptID>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type__2 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1a0:
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_1d2:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1d2 = add i32 %tmp91, ptrtoint (i32* @global_var_b6.3266 to i32)
  %v2_1d2 = inttoptr i32 %v1_1d2 to i32*
  %v3_1d2 = load i32, i32* %v2_1d2, align 4
  %v4_1d2 = sub i32 %v3_1d2, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1d2, i32* %v2_1d2, align 4
  %v0_1d8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1d8 = add i32 %v0_1d8, ptrtoint (i8** @global_var_27bc.3275 to i32)
  %v2_1d8 = inttoptr i32 %v1_1d8 to i8*
  %v3_1d8 = load i8, i8* %v2_1d8, align 1
  %v4_1d8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1d8 = trunc i32 %v4_1d8 to i8
  %v6_1d8 = add i8 %v5_1d8, %v3_1d8
  store i8 %v6_1d8, i8* %v2_1d8, align 1
  %v2_1de = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1de = load i32, i32* %eax.global-to-local, align 4
  %v4_1de = trunc i32 %v3_1de to i8
  %v5_1de = add i8 %v4_1de, %v2_1de
  %v21_1de = inttoptr i32 %v3_1de to i8*
  store i8 %v5_1de, i8* %v21_1de, align 1
  ret void
}

define void @"__uninitialized_move_a<uint256*, uint256*, std::allocator<uint256> >"(i32 %__first, i32 %__last, i32 %__result, i32 %__alloc) local_unnamed_addr {
dec_label_pc_1e0:
  ret void
}

define void @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %this) local_unnamed_addr {
dec_label_pc_206:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v0_206 = load i32, i32* %ecx.global-to-local, align 4
  %v2_206 = inttoptr i32 %tmp93 to i32*
  store i32 %v0_206, i32* %v2_206, align 4
  %v0_208 = load i32, i32* %esi.global-to-local, align 4
  %v1_208 = add i32 %v0_208, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_208 = inttoptr i32 %v1_208 to i32*
  %v3_208 = load i32, i32* %v2_208, align 4
  store i32 %v3_208, i32* %ecx.global-to-local, align 4
  %v1_20b = load i32, i32* %edi.global-to-local, align 4
  %v2_20b = add i32 %v1_20b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_20b = inttoptr i32 %v2_20b to i32*
  store i32 %v3_208, i32* %v3_20b, align 4
  %v0_20e = load i32, i32* %esi.global-to-local, align 4
  %v1_20e = add i32 %v0_20e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_20e = inttoptr i32 %v1_20e to i32*
  %v3_20e = load i32, i32* %v2_20e, align 4
  store i32 %v3_20e, i32* %ecx.global-to-local, align 4
  %v1_211 = load i32, i32* %edi.global-to-local, align 4
  %v2_211 = add i32 %v1_211, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_211 = inttoptr i32 %v2_211 to i32*
  store i32 %v3_20e, i32* %v3_211, align 4
  %v0_214 = load i32, i32* %esi.global-to-local, align 4
  %v1_214 = add i32 %v0_214, 12
  %v2_214 = inttoptr i32 %v1_214 to i32*
  %v3_214 = load i32, i32* %v2_214, align 4
  store i32 %v3_214, i32* %ecx.global-to-local, align 4
  %v1_217 = load i32, i32* %edi.global-to-local, align 4
  %v2_217 = add i32 %v1_217, 12
  %v3_217 = inttoptr i32 %v2_217 to i32*
  store i32 %v3_214, i32* %v3_217, align 4
  %v0_21a = load i32, i32* %esi.global-to-local, align 4
  %v1_21a = add i32 %v0_21a, 16
  %v2_21a = inttoptr i32 %v1_21a to i32*
  %v3_21a = load i32, i32* %v2_21a, align 4
  store i32 %v3_21a, i32* %ecx.global-to-local, align 4
  %v1_21d = load i32, i32* %edi.global-to-local, align 4
  %v2_21d = add i32 %v1_21d, 16
  %v3_21d = inttoptr i32 %v2_21d to i32*
  store i32 %v3_21a, i32* %v3_21d, align 4
  %v0_220 = load i32, i32* %esi.global-to-local, align 4
  %v1_220 = add i32 %v0_220, 20
  %v2_220 = inttoptr i32 %v1_220 to i32*
  %v3_220 = load i32, i32* %v2_220, align 4
  store i32 %v3_220, i32* %ecx.global-to-local, align 4
  %v1_223 = load i32, i32* %edi.global-to-local, align 4
  %v2_223 = add i32 %v1_223, 20
  %v3_223 = inttoptr i32 %v2_223 to i32*
  store i32 %v3_220, i32* %v3_223, align 4
  %v0_226 = load i32, i32* %esi.global-to-local, align 4
  %v1_226 = add i32 %v0_226, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_226 = inttoptr i32 %v1_226 to i32*
  %v3_226 = load i32, i32* %v2_226, align 4
  %v1_229 = load i32, i32* %edi.global-to-local, align 4
  %v2_229 = add i32 %v1_229, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_229 = inttoptr i32 %v2_229 to i32*
  store i32 %v3_226, i32* %v3_229, align 4
  %v0_22c = load i32, i32* %esi.global-to-local, align 4
  %v1_22c = add i32 %v0_22c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_22c = inttoptr i32 %v1_22c to i32*
  %v3_22c = load i32, i32* %v2_22c, align 4
  %v1_22f = load i32, i32* %edi.global-to-local, align 4
  %v2_22f = add i32 %v1_22f, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_22f = inttoptr i32 %v2_22f to i32*
  store i32 %v3_22c, i32* %v3_22f, align 4
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_23a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_23c = load i32, i32* %ebx.global-to-local, align 4
  %v1_23c = add i32 %v0_23c, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_23c, i32* %ebx.global-to-local, align 4
  %v0_23f = load i32, i32* %esi.global-to-local, align 4
  %v2_23f = sub i32 %v0_23f, %v1_23c
  %v1_241 = and i32 %v2_23f, -32
  store i32 %v1_241, i32* %esi.global-to-local, align 4
  %v0_244 = load i32, i32* %eax.global-to-local, align 4
  %v3_244 = add i32 %v1_241, ptrtoint (i32* @global_var_20.3279 to i32)
  %v4_244 = add i32 %v3_244, %v0_244
  store i32 %v4_244, i32* %eax.global-to-local, align 4
  %v1_24c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_24c = icmp eq i32 %v1_24c, %this
  %v1_253 = icmp eq i1 %v3_24c, false
  br i1 %v1_253, label %dec_label_pc_25d, label %dec_label_pc_255

dec_label_pc_255:                                 ; preds = %dec_label_pc_23a
  ret void

dec_label_pc_25d:                                 ; preds = %dec_label_pc_23a
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_26e:
  %eax.global-to-local = alloca i32, align 4
  %v2_26e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_26e = load i32, i32* %eax.global-to-local, align 4
  %v4_26e = trunc i32 %v3_26e to i8
  %v5_26e = add i8 %v4_26e, %v2_26e
  %v21_26e = inttoptr i32 %v3_26e to i8*
  store i8 %v5_26e, i8* %v21_26e, align 1
  ret void
}

define void @_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_(i32 %this, i32 %key1, i32 %key2) local_unnamed_addr {
dec_label_pc_270:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_270 = load i32, i32* %ebx.global-to-local, align 4
  %v0_271 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_271, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_284 = load i32, i32* %edx.global-to-local, align 4
  %v4_284 = sub i32 %v0_271, %v3_284
  %v14_284 = icmp eq i32 %v4_284, 0
  br i1 %v14_284, label %dec_label_pc_2a0, label %dec_label_pc_288

dec_label_pc_288:                                 ; preds = %dec_label_pc_270
  %v15_284 = icmp slt i32 %v4_284, 0
  %v11_284 = xor i32 %v4_284, %v0_271
  %v10_284 = xor i32 %v3_284, %v0_271
  %v12_284 = and i32 %v11_284, %v10_284
  %v13_284 = icmp slt i32 %v12_284, 0
  %v2_288 = icmp ne i1 %v15_284, %v13_284
  %v3_288 = zext i1 %v2_288 to i32
  store i32 %v3_288, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %v0_270, i32* %ebx.global-to-local, align 4
  ret void

dec_label_pc_2a0:                                 ; preds = %dec_label_pc_270
  store i32 0, i32* %eax.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v0_271, { 1, 0, 2, 3 }
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_2a2:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2a7 = load i32, i32* %edx.global-to-local, align 4
  %v1_2a7 = add i32 %v0_2a7, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2a7 = inttoptr i32 %v1_2a7 to i8*
  %v3_2a7 = load i8, i8* %v2_2a7, align 1
  %v10_2a7 = icmp eq i8 %v3_2a7, 0
  br i1 %v10_2a7, label %bb, label %dec_label_pc_2ad

bb:                                               ; preds = %dec_label_pc_2a2
  %v1_2ab = call i32 @function_2c3()
  store i32 %v1_2ab, i32* @eax, align 4
  br label %dec_label_pc_2ad

dec_label_pc_2ad:                                 ; preds = %bb, %dec_label_pc_2a2
  %v0_2ad = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ad = add i32 %v0_2ad, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2ad = inttoptr i32 %v1_2ad to i8*
  %v3_2ad = load i8, i8* %v2_2ad, align 1
  %v10_2ad = icmp eq i8 %v3_2ad, 0
  br i1 %v10_2ad, label %bb98, label %dec_label_pc_2b3

bb98:                                             ; preds = %dec_label_pc_2ad
  %v1_2b1 = call i32 @function_2c3()
  br label %dec_label_pc_2b3

dec_label_pc_2b3:                                 ; preds = %bb98, %dec_label_pc_2ad
  ret void

; uselistorder directives
  uselistorder i32 ()* @function_2c3, { 1, 0 }
}

define i32 @function_2c3() local_unnamed_addr {
dec_label_pc_2c3:
  %v3_2cb = load i32, i32* @eax, align 4
  ret i32 %v3_2cb
}

define void @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %this) local_unnamed_addr {
dec_label_pc_2d6:
  %df.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_2d6 = load i32, i32* %eax.global-to-local, align 4
  %v1_2d6 = trunc i32 %v0_2d6 to i8
  %v2_2d6 = add i8 %v1_2d6, ptrtoint (i8* @global_var_70.3282 to i8)
  %v15_2d6 = zext i8 %v2_2d6 to i32
  %v17_2d6 = and i32 %v0_2d6, -256
  %v18_2d6 = or i32 %v15_2d6, %v17_2d6
  store i32 %v18_2d6, i32* %eax.global-to-local, align 4
  %v2_2d8 = load i32, i32* %edi.global-to-local, align 4
  %v3_2d8 = inttoptr i32 %v2_2d8 to i8*
  store i8 %v2_2d6, i8* %v3_2d8, align 1
  %v4_2d8 = load i32, i32* %edi.global-to-local, align 4
  %v5_2d8 = load i1, i1* %df.global-to-local, align 1
  %v6_2d8 = select i1 %v5_2d8, i32 -1, i32 ptrtoint (i8** @global_var_1.3274 to i32)
  %v7_2d8 = add i32 %v6_2d8, %v4_2d8
  store i32 %v7_2d8, i32* %edi.global-to-local, align 4
  %v0_2d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_2d9 = inttoptr i32 %v0_2d9 to i8*
  %v2_2d9 = load i8, i8* %v1_2d9, align 1
  %v4_2d9 = trunc i32 %v0_2d9 to i8
  %v5_2d9 = add i8 %v2_2d9, %v4_2d9
  store i8 %v5_2d9, i8* %v1_2d9, align 1
  ret void
}

define void @"operator+<char, std::char_traits<char>, std::allocator<char> >"(i8* %__lhs, i32 %__rhs) local_unnamed_addr {
dec_label_pc_2f0:
  ret void
}

define void @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %this) local_unnamed_addr {
dec_label_pc_30a:
  ret void
}

define i32 @function_353(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_353:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_353 = load i32, i32* %ebx.global-to-local, align 4
  %v1_353 = add i32 %v0_353, 1696343124
  %v2_353 = inttoptr i32 %v1_353 to i32*
  %v3_353 = load i32, i32* %v2_353, align 4
  %v4_353 = add i32 %v3_353, -1
  store i32 %v4_353, i32* %v2_353, align 4
  %v0_359 = load i32, i32* %edx.global-to-local, align 4
  %v1_359 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_359 = xor i32 %v1_359, %v0_359
  %v3_359 = icmp eq i32 %v2_359, 0
  store i32 %v2_359, i32* %edx.global-to-local, align 4
  %v0_35f = load i32, i32* %ebx.global-to-local, align 4
  %v1_361 = icmp eq i1 %v3_359, false
  br i1 %v1_361, label %dec_label_pc_377, label %dec_label_pc_363

dec_label_pc_363:                                 ; preds = %dec_label_pc_353
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_35f

dec_label_pc_377:                                 ; preds = %dec_label_pc_353
  ret i32 %v0_35f

; uselistorder directives
  uselistorder i32 %v0_35f, { 1, 0 }
}

define i32 @function_38d() local_unnamed_addr {
dec_label_pc_38d:
  %eax.global-to-local = alloca i32, align 4
  %v0_38d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_38d
}

define void @"path<std::basic_string<char> >"(i32 %this, i32 %source, i8* %arg2) local_unnamed_addr {
dec_label_pc_390:
  ret void
}

define void @_ZN11CDataStream5writeEPKci(i32 %this, i8* %pch, i32 %nSize) local_unnamed_addr {
dec_label_pc_3da:
  %eax.global-to-local = alloca i32, align 4
  %v0_3da = load i32, i32* %eax.global-to-local, align 4
  %v2_3da = add i32 %v0_3da, zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32)
  %v16_3da = and i32 %v2_3da, 255
  %v18_3da = and i32 %v0_3da, -256
  %v19_3da = or i32 %v16_3da, %v18_3da
  store i32 %v19_3da, i32* %eax.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v0_3da, { 1, 0 }
}

define i32 @function_3df(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3df:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3df = load i32, i32* %ebx.global-to-local, align 4
  %v1_3df = add i32 %v0_3df, 1697391684
  %v2_3df = inttoptr i32 %v1_3df to i32*
  %v3_3df = load i32, i32* %v2_3df, align 4
  %v4_3df = add i32 %v3_3df, -1
  store i32 %v4_3df, i32* %v2_3df, align 4
  %v0_3e5 = load i32, i32* %eax.global-to-local, align 4
  %v1_3e5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3e5 = xor i32 %v1_3e5, %v0_3e5
  %v3_3e5 = icmp eq i32 %v2_3e5, 0
  store i32 %v2_3e5, i32* %eax.global-to-local, align 4
  %v1_3eb = icmp eq i1 %v3_3e5, false
  br i1 %v1_3eb, label %dec_label_pc_3f9, label %dec_label_pc_3ed

dec_label_pc_3ed:                                 ; preds = %dec_label_pc_3df
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_3e5

dec_label_pc_3f9:                                 ; preds = %dec_label_pc_3df
  ret i32 %v2_3e5

; uselistorder directives
  uselistorder i32 %v2_3e5, { 1, 0, 2, 3 }
}

define i32 @function_3ff() local_unnamed_addr {
dec_label_pc_3ff:
  %eax.global-to-local = alloca i32, align 4
  %v0_3ff = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3ff
}

define void @_Z12ThreadImportSt6vectorIN5boost11filesystem34pathESaIS2_EE(%"vector<boost::filesystem3::path,std::allocator<boost::filesystem3::path>>" %vImportFiles) local_unnamed_addr {
dec_label_pc_410:
  ret void
}

define void @auto_buffer(i32 %this) local_unnamed_addr {
dec_label_pc_57a:
  ret void
}

define void @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE(i32 %this, i32 %n, i32 %arg2) local_unnamed_addr {
dec_label_pc_5ae:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_5ae = load i32, i32* %eax.global-to-local, align 4
  %v1_5ae = trunc i32 %v0_5ae to i8
  %v2_5ae = load i1, i1* %cf.global-to-local, align 1
  %v3_5ae = zext i1 %v2_5ae to i32
  %v4_5ae = add i32 %v0_5ae, 220
  %v5_5ae = add i32 %v4_5ae, %v3_5ae
  %v17_5ae = icmp ult i8 %v1_5ae, 36
  %v18_5ae = or i1 %v2_5ae, %v17_5ae
  store i1 %v18_5ae, i1* %cf.global-to-local, align 1
  %v31_5ae = and i32 %v5_5ae, 255
  %v33_5ae = and i32 %v0_5ae, -256
  %v34_5ae = or i32 %v31_5ae, %v33_5ae
  store i32 %v34_5ae, i32* %eax.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i1 %v2_5ae, { 1, 0 }
  uselistorder i32 %v0_5ae, { 1, 0, 2 }
}

define void @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5clearEv(i32 %this) local_unnamed_addr {
dec_label_pc_5e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_5e2 = load i32, i32* %eax.global-to-local, align 4
  %v11_5e2 = xor i32 %v0_5e2, 36
  store i32 %v11_5e2, i32* %eax.global-to-local, align 4
  ret void
}

define void @"~auto_buffer"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_616:
  %eax.global-to-local = alloca i32, align 4
  %v0_617 = load i32, i32* %eax.global-to-local, align 4
  %v11_617 = and i32 %v0_617, -220
  store i32 %v11_617, i32* %eax.global-to-local, align 4
  ret void
}

define void @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_(i32 %this, i32 %x) local_unnamed_addr {
dec_label_pc_64a:
  %eax.global-to-local = alloca i32, align 4
  %v0_64c = load i32, i32* %eax.global-to-local, align 4
  %v1_64c = trunc i32 %v0_64c to i8
  %v2_64c = add i8 %v1_64c, ptrtoint (i8* @global_var_89.3286 to i8)
  %v6_64c = icmp ult i8 %v2_64c, %v1_64c
  %v3_64e = zext i1 %v6_64c to i32
  %v4_64e = add i32 %v0_64c, zext (i8 add (i8 ptrtoint (i8* @global_var_89.3286 to i8), i8 -36) to i32)
  %v5_64e = add i32 %v3_64e, %v4_64e
  %v31_64e = and i32 %v5_64e, 255
  %v33_64e = and i32 %v0_64c, -256
  %v34_64e = or i32 %v31_64e, %v33_64e
  store i32 %v34_64e, i32* %eax.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v0_64c, { 1, 0, 2 }
}

define i32 @function_6a9() local_unnamed_addr {
dec_label_pc_6a9:
  %eax.global-to-local = alloca i32, align 4
  %v0_6a9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6a9
}

define i32 @function_6af() local_unnamed_addr {
dec_label_pc_6af:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define void @_ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE8on_errorEttNS0_14violation_enumE(i16 %arg0, i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_6b1:
  %eax.global-to-local = alloca i32, align 4
  %v0_6b1 = load i32, i32* %eax.global-to-local, align 4
  %v11_6b1 = and i32 %v0_6b1, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_6b1, i32* %eax.global-to-local, align 4
  ret void
}

define i32 @function_6b6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_6b6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_6b6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6b6 = add i32 %v0_6b6, 1701585988
  %v2_6b6 = inttoptr i32 %v1_6b6 to i32*
  %v3_6b6 = load i32, i32* %v2_6b6, align 4
  %v4_6b6 = add i32 %v3_6b6, -1
  store i32 %v4_6b6, i32* %v2_6b6, align 4
  %v0_6bc = load i32, i32* %eax.global-to-local, align 4
  %v1_6bc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_6bc = xor i32 %v1_6bc, %v0_6bc
  %v3_6bc = icmp eq i32 %v2_6bc, 0
  store i32 %v2_6bc, i32* @eax, align 4
  %v1_6c2 = icmp eq i1 %v3_6bc, false
  br i1 %v1_6c2, label %bb, label %dec_label_pc_6c8

bb:                                               ; preds = %dec_label_pc_6b6
  %v2_6c2 = call i32 @function_850()
  store i32 %v2_6c2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_6c8

dec_label_pc_6c8:                                 ; preds = %bb, %dec_label_pc_6b6
  %v0_6cf = phi i32 [ %v2_6c2, %bb ], [ %v2_6bc, %dec_label_pc_6b6 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_6cf
}

define void @_ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE8on_errorEttNS0_14violation_enumE(i16 %arg0, i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_739:
  %df.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_739 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_739, label %bb, label %dec_label_pc_739.dec_label_pc_73b_crit_edge

dec_label_pc_739.dec_label_pc_73b_crit_edge:      ; preds = %dec_label_pc_739
  %v0_73b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_73b

bb:                                               ; preds = %dec_label_pc_739
  %v1_739 = call i32 @function_75f()
  store i32 %v1_739, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_73b

dec_label_pc_73b:                                 ; preds = %dec_label_pc_739.dec_label_pc_73b_crit_edge, %bb
  %v17_73b = phi i32 [ %v0_73b.pre, %dec_label_pc_739.dec_label_pc_73b_crit_edge ], [ %v1_739, %bb ]
  %v1_73b = trunc i32 %v17_73b to i8
  %v2_73d = add i8 %v1_73b, add (i8 ptrtoint (i8* @global_var_c7.3287 to i8), i8 36)
  %v11_73d = icmp eq i8 %v2_73d, 0
  store i1 %v11_73d, i1* %zf.global-to-local, align 1
  %v16_73d = zext i8 %v2_73d to i32
  %v18_73d = and i32 %v17_73b, -256
  %v19_73d = or i32 %v16_73d, %v18_73d
  store i32 %v19_73d, i32* %eax.global-to-local, align 4
  %v2_740 = load i32, i32* %edi.global-to-local, align 4
  %v3_740 = inttoptr i32 %v2_740 to i8*
  store i8 %v2_73d, i8* %v3_740, align 1
  %v4_740 = load i32, i32* %edi.global-to-local, align 4
  %v5_740 = load i1, i1* %df.global-to-local, align 1
  %v6_740 = select i1 %v5_740, i32 -1, i32 ptrtoint (i8** @global_var_1.3274 to i32)
  %v7_740 = add i32 %v6_740, %v4_740
  store i32 %v7_740, i32* %edi.global-to-local, align 4
  %v0_741 = load i32, i32* %eax.global-to-local, align 4
  %v1_741 = inttoptr i32 %v0_741 to i8*
  %v2_741 = load i8, i8* %v1_741, align 1
  %v4_741 = trunc i32 %v0_741 to i8
  %v5_741 = add i8 %v2_741, %v4_741
  %v15_741 = icmp eq i8 %v5_741, 0
  store i1 %v15_741, i1* %zf.global-to-local, align 1
  store i8 %v5_741, i8* %v1_741, align 1
  ret void

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_73b, { 1, 0 }
}

define i32 @function_75f() local_unnamed_addr {
dec_label_pc_75f:
  %v2_75f = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_75f = load i32, i32* @eax, align 4
  %v4_75f = trunc i32 %v3_75f to i8
  %v5_75f = add i8 %v4_75f, %v2_75f
  %v21_75f = inttoptr i32 %v3_75f to i8*
  store i8 %v5_75f, i8* %v21_75f, align 1
  %v2_761 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_761 = load i32, i32* @eax, align 4
  %v4_761 = trunc i32 %v3_761 to i8
  %v5_761 = add i8 %v4_761, %v2_761
  %v21_761 = inttoptr i32 %v3_761 to i8*
  store i8 %v5_761, i8* %v21_761, align 1
  %v3_76b = load i32, i32* @eax, align 4
  ret i32 %v3_76b
}

define void @_ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE8on_errorEttNS0_14violation_enumE(i16 %arg0, i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7c1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_7c1 = load i32, i32* %eax.global-to-local, align 4
  %v1_7c1 = trunc i32 %v0_7c1 to i8
  %v0_7c3 = load i32, i32* %edx.global-to-local, align 4
  %v3_7c3 = udiv i32 %v0_7c3, 4
  %v9_7c3 = urem i32 %v3_7c3, 64
  %v11_7c3 = and i32 %v0_7c3, -256
  %v12_7c3 = or i32 %v9_7c3, %v11_7c3
  store i32 %v12_7c3, i32* %edx.global-to-local, align 4
  %v0_7c6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_7c1 = mul i32 %v0_7c1, 256
  %v5_7c63 = and i32 %v2_7c1, 3072
  %v1_7c64 = add i32 %v0_7c6, %v5_7c63
  %v22_7c6 = and i32 %v1_7c64, 65280
  %v23_7c6 = and i32 %v0_7c6, -65281
  %v24_7c6 = or i32 %v22_7c6, %v23_7c6
  store i32 %v24_7c6, i32* %ebx.global-to-local, align 4
  %v2_7c9 = and i8 %v1_7c1, 8
  %v8_7c9 = zext i8 %v2_7c9 to i32
  %v10_7c9 = and i32 %v0_7c1, -256
  %v11_7c9 = or i32 %v8_7c9, %v10_7c9
  store i32 %v11_7c9, i32* %eax.global-to-local, align 4
  %v2_7cb = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_7cb = or i8 %v2_7cb, %v2_7c9
  %v11_7cb = load i32, i32* %ecx.global-to-local, align 4
  %v12_7cb = inttoptr i32 %v11_7cb to i8*
  store i8 %v5_7cb, i8* %v12_7cb, align 1
  %v0_7cd = load i32, i32* %eax.global-to-local, align 4
  %v1_7cd = inttoptr i32 %v0_7cd to i8*
  %v2_7cd = load i8, i8* %v1_7cd, align 1
  %v4_7cd = trunc i32 %v0_7cd to i8
  %v5_7cd = add i8 %v2_7cd, %v4_7cd
  store i8 %v5_7cd, i8* %v1_7cd, align 1
  ret void

; uselistorder directives
  uselistorder i32 %v0_7c6, { 1, 0 }
  uselistorder i32 %v0_7c3, { 1, 0 }
  uselistorder i32 %v0_7c1, { 1, 0, 2 }
}

define i32 @function_7ee() local_unnamed_addr {
dec_label_pc_7ee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7f8() local_unnamed_addr {
dec_label_pc_7f8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7fd() local_unnamed_addr {
dec_label_pc_7fd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_811() local_unnamed_addr {
dec_label_pc_811:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_813() local_unnamed_addr {
dec_label_pc_813:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_82d() local_unnamed_addr {
dec_label_pc_82d:
  %v0_82f = call i32 @function_811()
  ret i32 %v0_82f
}

define i32 @function_831() local_unnamed_addr {
dec_label_pc_831:
  %v0_837 = call i32 @function_813()
  ret i32 %v0_837
}

define i32 @function_839() local_unnamed_addr {
dec_label_pc_839:
  %v0_83b = call i32 @function_7fd()
  ret i32 %v0_83b
}

define i32 @function_840() local_unnamed_addr {
dec_label_pc_840:
  %v0_840 = call i32 @function_811()
  ret i32 %v0_840

; uselistorder directives
  uselistorder i32 ()* @function_811, { 1, 0 }
}

define i32 @function_84e() local_unnamed_addr {
dec_label_pc_84e:
  %v0_84e = call i32 @function_813()
  ret i32 %v0_84e

; uselistorder directives
  uselistorder i32 ()* @function_813, { 1, 0 }
}

define i32 @function_850() local_unnamed_addr {
dec_label_pc_850:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_854() local_unnamed_addr {
dec_label_pc_854:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_854 = load i32, i32* %ecx.global-to-local, align 4
  %v1_854 = add i32 %v0_854, -1986008125
  %v2_854 = inttoptr i32 %v1_854 to i32*
  %v3_854 = load i32, i32* %v2_854, align 4
  %v4_854 = sub i32 %v3_854, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_854, i32* %v2_854, align 4
  %v0_85a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_85a
}

define i32 @function_878() local_unnamed_addr {
dec_label_pc_878:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_878 = load i32, i32* %ebx.global-to-local, align 4
  %v1_878 = add i32 %v0_878, -1994382268
  %v2_878 = inttoptr i32 %v1_878 to i32*
  %v3_878 = load i32, i32* %v2_878, align 4
  %v4_878 = sub i32 %v3_878, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_878, i32* %v2_878, align 4
  %v0_87e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_87e
}

define i32 @function_87f() local_unnamed_addr {
dec_label_pc_87f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_887() local_unnamed_addr {
dec_label_pc_887:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_88f() local_unnamed_addr {
dec_label_pc_88f:
  %v0_88f = call i32 @function_7f8()
  ret i32 %v0_88f
}

define i32 @function_894() local_unnamed_addr {
dec_label_pc_894:
  %v0_896 = call i32 @function_87f()
  ret i32 %v0_896
}

define i32 @function_898() local_unnamed_addr {
dec_label_pc_898:
  %v0_8a0 = call i32 @function_887()
  ret i32 %v0_8a0
}

define i32 @function_8ae() local_unnamed_addr {
dec_label_pc_8ae:
  %v0_8ae = call i32 @function_7ee()
  ret i32 %v0_8ae
}

define i32 @function_8b3() local_unnamed_addr {
dec_label_pc_8b3:
  %v0_8b5 = call i32 @function_7ee()
  ret i32 %v0_8b5

; uselistorder directives
  uselistorder i32 ()* @function_7ee, { 1, 0 }
}

define i32 @function_8c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_8c3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8c3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8c3 = add i32 %v0_8c3, -1913918472
  %v2_8c3 = inttoptr i32 %v1_8c3 to i32*
  %v3_8c3 = load i32, i32* %v2_8c3, align 4
  %v4_8c3 = sub i32 %v3_8c3, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_8c3, i32* %v2_8c3, align 4
  %v0_8ca = load i32, i32* %eax.global-to-local, align 4
  %v11_8ca = and i32 %v0_8ca, or (i32 zext (i8 ptrtoint (i32* @global_var_4c.3290 to i8) to i32), i32 -256)
  store i32 %v11_8ca, i32* @eax, align 4
  %v0_8cc = call i32 @function_8b3()
  store i32 %v0_8cc, i32* %eax.global-to-local, align 4
  ret i32 %v0_8cc
}

define void @_Z13StartShutdownv() local_unnamed_addr {
dec_label_pc_8d0:
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* bitcast (i1* @global_var_96e0.3291 to i8*), align 1
  br i1 false, label %dec_label_pc_8f7, label %dec_label_pc_8f3

dec_label_pc_8f3:                                 ; preds = %dec_label_pc_8d0
  ret void

dec_label_pc_8f7:                                 ; preds = %dec_label_pc_8d0
  ret void
}

define i1 @_Z17ShutdownRequestedv() local_unnamed_addr {
dec_label_pc_900:
  br i1 false, label %dec_label_pc_927, label %dec_label_pc_923

dec_label_pc_923:                                 ; preds = %dec_label_pc_900
  %v0_90f = load i8, i8* bitcast (i1* @global_var_96e0.3291 to i8*), align 1
  %tmp102 = urem i8 %v0_90f, 2
  %v1_926 = icmp ne i8 %tmp102, 0
  ret i1 %v1_926

dec_label_pc_927:                                 ; preds = %dec_label_pc_900
  ret i1 undef

; uselistorder directives
  uselistorder i8* bitcast (i1* @global_var_96e0.3291 to i8*), { 1, 0 }
}

define void @_Z8Shutdownv() local_unnamed_addr {
dec_label_pc_930:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_930 = load i32, i32* %esi.global-to-local, align 4
  %v0_931 = load i32, i32* %ebx.global-to-local, align 4
  %v0_935 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  %v5_948 = call i32 @function_95e(i32 %v0_935, i32 %v0_931, i32 %v0_930)
  ret void
}

define i32 @function_95e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_95e:
  %v3_96b = load i32, i32* @eax, align 4
  ret i32 %v3_96b
}

define i32 @function_991() local_unnamed_addr {
dec_label_pc_991:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9a9() local_unnamed_addr {
dec_label_pc_9a9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a61() local_unnamed_addr {
dec_label_pc_a61:
  %eax.global-to-local = alloca i32, align 4
  %v0_a61 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a61
}

define i32 @function_a83() local_unnamed_addr {
dec_label_pc_a83:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_aa5() local_unnamed_addr {
dec_label_pc_aa5:
  ret i32 1713388861
}

define i32 @function_ae4() local_unnamed_addr {
dec_label_pc_ae4:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_b35() local_unnamed_addr {
dec_label_pc_b35:
  %eax.global-to-local = alloca i32, align 4
  %v0_b35 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b35
}

define i32 @function_b3b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b3b:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_56 = alloca i32, align 4
  %v0_b3b = load i32, i32* %eax.global-to-local, align 4
  %v1_b3b = icmp eq i32 %v0_b3b, 0
  br i1 %v1_b3b, label %dec_label_pc_b47, label %dec_label_pc_b3f

dec_label_pc_b3f:                                 ; preds = %dec_label_pc_b3b
  br label %dec_label_pc_b47

dec_label_pc_b47:                                 ; preds = %dec_label_pc_b3f, %dec_label_pc_b3b
  %v2_b47 = ptrtoint i32* %stack_var_56 to i32
  store i32 %v2_b47, i32* %eax.global-to-local, align 4
  %v2_b4e = call i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev(i32* nonnull %stack_var_56)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_b57 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b57 = xor i32 %v1_b57, %arg1
  %v3_b57 = icmp eq i32 %v2_b57, 0
  store i32 %v2_b57, i32* @eax, align 4
  %v1_b5e = icmp eq i1 %v3_b57, false
  br i1 %v1_b5e, label %bb, label %dec_label_pc_b60

bb:                                               ; preds = %dec_label_pc_b47
  %v2_b5e = call i32 @function_bb9()
  store i32 %v2_b5e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_b60

dec_label_pc_b60:                                 ; preds = %bb, %dec_label_pc_b47
  %v0_b65 = phi i32 [ %v2_b5e, %bb ], [ %v2_b57, %dec_label_pc_b47 ]
  ret i32 %v0_b65
}

define i32 @function_b6d() local_unnamed_addr {
dec_label_pc_b6d:
  %v0_b6d = load i32, i32* @eax, align 4
  %v12_b6d = icmp eq i32 %v0_b6d, 1953656688
  br i1 %v12_b6d, label %bb, label %dec_label_pc_b79

bb:                                               ; preds = %dec_label_pc_b6d
  %v1_b73 = call i32 @function_991()
  store i32 %v1_b73, i32* @eax, align 4
  br label %dec_label_pc_b79

dec_label_pc_b79:                                 ; preds = %bb, %dec_label_pc_b6d
  %v0_b7b = call i32 @function_9a9()
  ret i32 %v0_b7b
}

define i32 @function_bb4() local_unnamed_addr {
dec_label_pc_bb4:
  %v3_bb4 = call i32 @function_95e(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  ret i32 %v3_bb4

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_95e, { 1, 0 }
}

define i32 @function_bb9() local_unnamed_addr {
dec_label_pc_bb9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_bbd() local_unnamed_addr {
dec_label_pc_bbd:
  %eax.global-to-local = alloca i32, align 4
  %v0_bbd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bbd
}

define i32 @function_bcb() local_unnamed_addr {
dec_label_pc_bcb:
  %eax.global-to-local = alloca i32, align 4
  %v0_bcb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bcb
}

define i32 @function_be1() local_unnamed_addr {
dec_label_pc_be1:
  %eax.global-to-local = alloca i32, align 4
  %v0_be1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_be1
}

define i32 @function_be2() local_unnamed_addr {
dec_label_pc_be2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_bf5() local_unnamed_addr {
dec_label_pc_bf5:
  %ecx.global-to-local = alloca i32, align 4
  %v0_bf5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_bf5 = add i32 %v0_bf5, 607422915
  %v2_bf5 = inttoptr i32 %v1_bf5 to i32*
  %v3_bf5 = load i32, i32* %v2_bf5, align 4
  %v4_bf5 = add i32 %v3_bf5, -1
  store i32 %v4_bf5, i32* %v2_bf5, align 4
  %v2_bfb = call i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev(i32* nonnull @0)
  store i32 %v2_bfb, i32* @eax, align 4
  %v0_c00 = call i32 @function_be2()
  ret i32 %v0_c00
}

define i32 @function_c02() local_unnamed_addr {
dec_label_pc_c02:
  %v0_c02 = load i32, i32* @ebx, align 4
  %v0_c05 = load i32, i32* @eax, align 4
  %v1_c09 = inttoptr i32 %v0_c02 to i32*
  %v2_c09 = call i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %v1_c09)
  store i32 %v0_c05, i32* @ebx, align 4
  %v0_c14 = load i32, i32* @esi, align 4
  %v1_c17 = inttoptr i32 %v0_c14 to i32*
  %v2_c17 = call i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev(i32* %v1_c17)
  store i32 %v2_c17, i32* @eax, align 4
  %v0_c1c = call i32 @function_be2()
  ret i32 %v0_c1c
}

define i32 @function_c1e() local_unnamed_addr {
dec_label_pc_c1e:
  %v0_c1e = call i32 @function_c02()
  ret i32 %v0_c1e
}

define i32 @function_c20() local_unnamed_addr {
dec_label_pc_c20:
  %eax.global-to-local = alloca i32, align 4
  %v0_c20 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c20
}

define i32 @function_c30() local_unnamed_addr {
dec_label_pc_c30:
  %v0_c30 = call i32 @function_be2()
  ret i32 %v0_c30

; uselistorder directives
  uselistorder i32 ()* @function_be2, { 2, 1, 0 }
}

define void @"__uninitialized_move_a<boost::filesystem3::path*, boost::filesystem3::path*, std::allocator<boost::filesystem3::path> >"(i32 %__first, i32 %__last, i32 %__result, i32 %__alloc) local_unnamed_addr {
dec_label_pc_c40:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_c41 = load i32, i32* %ecx.global-to-local, align 4
  %v0_c44 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_c44, i32* @edi, align 4
  %v0_c47 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_c47, i32* @esi, align 4
  store i32 %v0_c41, i32* @ebx, align 4
  %v0_c4f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  %v12_c5b = icmp eq i32 %v0_c44, %v0_c47
  br i1 %v12_c5b, label %bb, label %dec_label_pc_c5f

bb:                                               ; preds = %dec_label_pc_c40
  %v2_c5d = call i32 @function_c7a(i32 %v0_c4f)
  store i32 %v2_c5d, i32* @eax, align 4
  br label %dec_label_pc_c5f

dec_label_pc_c5f:                                 ; preds = %bb, %dec_label_pc_c40
  %v1_c60 = icmp eq i32 %v0_c41, 0
  br i1 %v1_c60, label %bb104, label %dec_label_pc_c64

bb104:                                            ; preds = %dec_label_pc_c5f
  %v1_c62 = call i32 @function_c70()
  store i32 %v1_c62, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c64

dec_label_pc_c64:                                 ; preds = %bb104, %dec_label_pc_c5f
  ret void

; uselistorder directives
  uselistorder i32 %v0_c41, { 1, 0 }
}

define i32 @function_c70() local_unnamed_addr {
dec_label_pc_c70:
  %v0_c78 = load i32, i32* @eax, align 4
  ret i32 %v0_c78
}

define i32 @function_c7a(i32 %arg1) local_unnamed_addr {
dec_label_pc_c7a:
  %v1_c7e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_c7e = icmp eq i32 %v1_c7e, %arg1
  %v0_c85 = load i32, i32* @ebx, align 4
  store i32 %v0_c85, i32* @eax, align 4
  %v1_c87 = icmp eq i1 %v3_c7e, false
  br i1 %v1_c87, label %bb, label %dec_label_pc_c89

bb:                                               ; preds = %dec_label_pc_c7a
  %v2_c87 = call i32 @function_caa()
  br label %dec_label_pc_c89

dec_label_pc_c89:                                 ; preds = %bb, %dec_label_pc_c7a
  %v0_c90 = phi i32 [ %v2_c87, %bb ], [ %v0_c85, %dec_label_pc_c7a ]
  ret i32 %v0_c90
}

define i32 @function_caa() local_unnamed_addr {
dec_label_pc_caa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cb0() local_unnamed_addr {
dec_label_pc_cb0:
  %eax.global-to-local = alloca i32, align 4
  %v0_cb0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cb0
}

define i32 @function_cbd() local_unnamed_addr {
dec_label_pc_cbd:
  %eax.global-to-local = alloca i32, align 4
  %v0_cbd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cbd
}

define i32 @_Z11HelpMessagev() local_unnamed_addr {
dec_label_pc_cc0:
  %stack_var_-852 = alloca i32, align 4
  %v2_cca = ptrtoint i32* %stack_var_-852 to i32
  %v3_cef = call i32 @_Z1_PKc(i32 %v2_cca, i32 ptrtoint ([9 x i8]* @global_var_9a2c.3296 to i32))
  ret i32 %v3_cef
}

define i32 @function_136e() local_unnamed_addr {
dec_label_pc_136e:
  %v0_136e = call i32 @function_8900009b()
  ret i32 %v0_136e
}

define i32 @function_1644() local_unnamed_addr {
dec_label_pc_1644:
  %eax.global-to-local = alloca i32, align 4
  %v0_1647 = load i32, i32* %eax.global-to-local, align 4
  %v11_164f = and i32 %v0_1647, or (i32 zext (i8 and (i8 ptrtoint (i16** @global_var_4.3276 to i8), i8 ptrtoint (i32* @global_var_e8.3284 to i8)) to i32), i32 -256)
  store i32 %v11_164f, i32* @eax, align 4
  %v0_1651 = call i32 @function_16ac()
  store i32 %v0_1651, i32* %eax.global-to-local, align 4
  ret i32 %v0_1651
}

define i32 @function_1653() local_unnamed_addr {
dec_label_pc_1653:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_272 = alloca i32, align 4
  %v0_1658 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_1658, i32* @ecx, align 4
  %v2_165a = ptrtoint i32* %stack_var_272 to i32
  store i32 %v2_165a, i32* @eax, align 4
  call void @"operator+<char, std::char_traits<char>, std::allocator<char> >"(i8* bitcast (i32* @0 to i8*), i32 ptrtoint (i32* @0 to i32))
  ret i32 ptrtoint (i32* @0 to i32)
}

define i32 @function_16ac() local_unnamed_addr {
dec_label_pc_16ac:
  %v3_16b7 = load i32, i32* @eax, align 4
  ret i32 %v3_16b7
}

define i32 @function_1766() local_unnamed_addr {
dec_label_pc_1766:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1768 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1768 = add i32 %v0_1768, 19932316
  %v2_1768 = inttoptr i32 %v1_1768 to i32*
  %v3_1768 = load i32, i32* %v2_1768, align 4
  %v4_1768 = add i32 %v3_1768, -1
  store i32 %v4_1768, i32* %v2_1768, align 4
  %v2_176e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_176e = load i32, i32* %eax.global-to-local, align 4
  %v4_176e = trunc i32 %v3_176e to i8
  %v5_176e = add i8 %v4_176e, %v2_176e
  %v21_176e = inttoptr i32 %v3_176e to i8*
  store i8 %v5_176e, i8* %v21_176e, align 1
  %v3_17b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_17b3
}

define i32 @function_17e4() local_unnamed_addr {
dec_label_pc_17e4:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_17e6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_17e6 = add i32 %v0_17e6, 20718748
  %v2_17e6 = inttoptr i32 %v1_17e6 to i32*
  %v3_17e6 = load i32, i32* %v2_17e6, align 4
  %v4_17e6 = add i32 %v3_17e6, -1
  store i32 %v4_17e6, i32* %v2_17e6, align 4
  %v2_17ec = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_17ec = load i32, i32* %eax.global-to-local, align 4
  %v4_17ec = trunc i32 %v3_17ec to i8
  %v5_17ec = add i8 %v4_17ec, %v2_17ec
  %v21_17ec = inttoptr i32 %v3_17ec to i8*
  store i8 %v5_17ec, i8* %v21_17ec, align 1
  %v3_17f2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_17f2
}

define i32 @function_1862() local_unnamed_addr {
dec_label_pc_1862:
  %v0_1862 = call i32 @function_9c8dffff()
  ret i32 %v0_1862
}

define i32 @function_18e0() local_unnamed_addr {
dec_label_pc_18e0:
  %v0_18e0 = call i32 @function_9c8dffff()
  ret i32 %v0_18e0

; uselistorder directives
  uselistorder i32 ()* @function_9c8dffff, { 1, 0 }
}

define i32 @function_195e() local_unnamed_addr {
dec_label_pc_195e:
  %v0_195e = call i32 @function_9c8e1962()
  ret i32 %v0_195e
}

define i32 @function_19dc() local_unnamed_addr {
dec_label_pc_19dc:
  %v0_19dc = call i32 @function_9c8e19e0()
  ret i32 %v0_19dc
}

define i32 @function_29aa() local_unnamed_addr {
dec_label_pc_29aa:
  %eax.global-to-local = alloca i32, align 4
  %v0_29aa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29aa
}

define i32 @function_2d75(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2d75:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2d75 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2d75 = add i32 %v0_2d75, 613714920
  %v2_2d75 = inttoptr i32 %v1_2d75 to i32*
  %v3_2d75 = load i32, i32* %v2_2d75, align 4
  %v4_2d75 = add i32 %v3_2d75, -1
  store i32 %v4_2d75, i32* %v2_2d75, align 4
  %v0_2d7c = load i32, i32* %eax.global-to-local, align 4
  %v4_2d7c = mul i32 %v0_2d7c, 2
  %v9_2d7c = icmp ult i32 %v4_2d7c, %v0_2d7c
  store i1 %v9_2d7c, i1* %cf.global-to-local, align 1
  store i32 %v4_2d7c, i32* %eax.global-to-local, align 4
  %v0_2d7e = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d7e = add i32 %v0_2d7e, 51
  %v2_2d7e = inttoptr i32 %v1_2d7e to i8*
  %v3_2d7e = load i8, i8* %v2_2d7e, align 1
  %tmp104 = udiv i32 %v0_2d7c, 128
  %v6_2d7e = trunc i32 %tmp104 to i8
  %v7_2d7e = add i8 %v3_2d7e, %v6_2d7e
  %v12_2d7e = icmp ult i8 %v7_2d7e, %v3_2d7e
  store i1 %v12_2d7e, i1* %cf.global-to-local, align 1
  store i8 %v7_2d7e, i8* %v2_2d7e, align 1
  %v0_2d81 = load i32, i32* %eax.global-to-local, align 4
  %v1_2d81 = load i1, i1* %cf.global-to-local, align 1
  %v2_2d81 = zext i1 %v1_2d81 to i32
  %v3_2d81 = add i32 %v0_2d81, 20
  %v4_2d81 = add i32 %v3_2d81, %v2_2d81
  %v14_2d81 = icmp eq i32 %v4_2d81, 0
  %v22_2d81 = icmp ule i32 %v4_2d81, %v0_2d81
  %v23_2d81 = icmp ugt i32 %v0_2d81, -21
  %v24_2d81 = select i1 %v1_2d81, i1 %v22_2d81, i1 %v23_2d81
  store i1 %v24_2d81, i1* %cf.global-to-local, align 1
  store i32 %v4_2d81, i32* @eax, align 4
  %v1_2d86 = icmp eq i1 %v14_2d81, false
  br i1 %v1_2d86, label %bb, label %dec_label_pc_2d8c

bb:                                               ; preds = %dec_label_pc_2d75
  %v2_2d86 = call i32 @function_2eae()
  store i32 %v2_2d86, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2d8c

dec_label_pc_2d8c:                                ; preds = %bb, %dec_label_pc_2d75
  %v0_2d96 = phi i32 [ %v2_2d86, %bb ], [ %v4_2d81, %dec_label_pc_2d75 ]
  %v0_2d8c = load i32, i32* @esp, align 4
  %v5_2d8c = icmp ugt i32 %v0_2d8c, -877
  store i1 %v5_2d8c, i1* %cf.global-to-local, align 1
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  ret i32 %v0_2d96

; uselistorder directives
  uselistorder i32 %v4_2d81, { 0, 2, 1, 3 }
  uselistorder i8 %v3_2d7e, { 1, 0 }
  uselistorder i32 %v0_2d7c, { 1, 2, 0 }
}

define i32 @function_2ea9() local_unnamed_addr {
dec_label_pc_2ea9:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ea9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ea9
}

define i32 @function_2eae() local_unnamed_addr {
dec_label_pc_2eae:
  %v0_2eae = load i32, i32* @eax, align 4
  ret i32 %v0_2eae
}

define i32 @function_2eb7() local_unnamed_addr {
dec_label_pc_2eb7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ec8() local_unnamed_addr {
dec_label_pc_2ec8:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ec8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ec8
}

define i32 @function_2ec9() local_unnamed_addr {
dec_label_pc_2ec9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ee3() local_unnamed_addr {
dec_label_pc_2ee3:
  %v0_2ee3 = call i32 @function_2eb7()
  ret i32 %v0_2ee3
}

define i32 @function_2ee5() local_unnamed_addr {
dec_label_pc_2ee5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ef0() local_unnamed_addr {
dec_label_pc_2ef0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2ef0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2ef0 = add i32 %v0_2ef0, -1994644412
  %v2_2ef0 = inttoptr i32 %v1_2ef0 to i32*
  %v3_2ef0 = load i32, i32* %v2_2ef0, align 4
  %v4_2ef0 = sub i32 %v3_2ef0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2ef0, i32* %v2_2ef0, align 4
  %v0_2ef6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ef6
}

define i32 @function_2ef7() local_unnamed_addr {
dec_label_pc_2ef7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2eff(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eff:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f07() local_unnamed_addr {
dec_label_pc_2f07:
  %v0_2f07 = call i32 @function_2ec9()
  ret i32 %v0_2f07
}

define i32 @function_2f09() local_unnamed_addr {
dec_label_pc_2f09:
  %v0_2f09 = call i32 @function_2ee5()
  ret i32 %v0_2f09
}

define i32 @function_2f0b() local_unnamed_addr {
dec_label_pc_2f0b:
  %v0_2f10 = call i32 @function_2ef7()
  ret i32 %v0_2f10
}

define i32 @function_2f12() local_unnamed_addr {
dec_label_pc_2f12:
  %v1_2f14 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2f14
}

define i32 @function_2f16() local_unnamed_addr {
dec_label_pc_2f16:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f21() local_unnamed_addr {
dec_label_pc_2f21:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2f21 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2f21 = add i32 %v0_2f21, -1994644412
  %v2_2f21 = inttoptr i32 %v1_2f21 to i32*
  %v3_2f21 = load i32, i32* %v2_2f21, align 4
  %v4_2f21 = sub i32 %v3_2f21, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2f21, i32* %v2_2f21, align 4
  %v0_2f27 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f27
}

define i32 @function_2f28() local_unnamed_addr {
dec_label_pc_2f28:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f30() local_unnamed_addr {
dec_label_pc_2f30:
  %v1_2f30 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2f30
}

define i32 @function_2f32() local_unnamed_addr {
dec_label_pc_2f32:
  %v0_2f32 = call i32 @function_2f16()
  ret i32 %v0_2f32
}

define i32 @function_2f34() local_unnamed_addr {
dec_label_pc_2f34:
  %v0_2f36 = call i32 @function_2f28()
  ret i32 %v0_2f36
}

define i32 @function_2f38() local_unnamed_addr {
dec_label_pc_2f38:
  %v1_2f40 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2f40
}

define i32 @function_2f42() local_unnamed_addr {
dec_label_pc_2f42:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f4d() local_unnamed_addr {
dec_label_pc_2f4d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2f4d = load i32, i32* %ebx.global-to-local, align 4
  %v1_2f4d = add i32 %v0_2f4d, -1994644412
  %v2_2f4d = inttoptr i32 %v1_2f4d to i32*
  %v3_2f4d = load i32, i32* %v2_2f4d, align 4
  %v4_2f4d = sub i32 %v3_2f4d, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2f4d, i32* %v2_2f4d, align 4
  %v0_2f53 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f53
}

define i32 @function_2f54() local_unnamed_addr {
dec_label_pc_2f54:
  %v0_2f54 = load i32, i32* @esi, align 4
  %v1_2f5c = call i32 @function_2eff(i32 %v0_2f54)
  ret i32 %v1_2f5c
}

define i32 @function_2f5e() local_unnamed_addr {
dec_label_pc_2f5e:
  %v0_2f5e = call i32 @function_2f42()
  ret i32 %v0_2f5e
}

define i32 @function_2f60() local_unnamed_addr {
dec_label_pc_2f60:
  %v0_2f62 = call i32 @function_2f54()
  ret i32 %v0_2f62
}

define i32 @function_2f64() local_unnamed_addr {
dec_label_pc_2f64:
  %v1_2f66 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2f66
}

define i32 @function_2f68() local_unnamed_addr {
dec_label_pc_2f68:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f73() local_unnamed_addr {
dec_label_pc_2f73:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2f73 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2f73 = add i32 %v0_2f73, -1994644412
  %v2_2f73 = inttoptr i32 %v1_2f73 to i32*
  %v3_2f73 = load i32, i32* %v2_2f73, align 4
  %v4_2f73 = sub i32 %v3_2f73, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2f73, i32* %v2_2f73, align 4
  %v0_2f79 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f79
}

define i32 @function_2f7a() local_unnamed_addr {
dec_label_pc_2f7a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f82() local_unnamed_addr {
dec_label_pc_2f82:
  %v1_2f82 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2f82
}

define i32 @function_2f87() local_unnamed_addr {
dec_label_pc_2f87:
  %v0_2f87 = call i32 @function_2f68()
  ret i32 %v0_2f87
}

define i32 @function_2f89() local_unnamed_addr {
dec_label_pc_2f89:
  %v0_2f90 = call i32 @function_2f7a()
  ret i32 %v0_2f90
}

define i32 @function_2f92() local_unnamed_addr {
dec_label_pc_2f92:
  %v1_2f94 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2f94
}

define i32 @function_2f99() local_unnamed_addr {
dec_label_pc_2f99:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fa4() local_unnamed_addr {
dec_label_pc_2fa4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2fa4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2fa4 = add i32 %v0_2fa4, -1994644412
  %v2_2fa4 = inttoptr i32 %v1_2fa4 to i32*
  %v3_2fa4 = load i32, i32* %v2_2fa4, align 4
  %v4_2fa4 = sub i32 %v3_2fa4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2fa4, i32* %v2_2fa4, align 4
  %v0_2faa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2faa
}

define i32 @function_2fab() local_unnamed_addr {
dec_label_pc_2fab:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fb3() local_unnamed_addr {
dec_label_pc_2fb3:
  %v1_2fb3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2fb3
}

define i32 @function_2fb8() local_unnamed_addr {
dec_label_pc_2fb8:
  %v0_2fb8 = call i32 @function_2f99()
  ret i32 %v0_2fb8
}

define i32 @function_2fba() local_unnamed_addr {
dec_label_pc_2fba:
  %v0_2fc0 = call i32 @function_2fab()
  ret i32 %v0_2fc0
}

define i32 @function_2fc2() local_unnamed_addr {
dec_label_pc_2fc2:
  %v1_2fc4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2fc4
}

define i32 @function_2fc9() local_unnamed_addr {
dec_label_pc_2fc9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fd4() local_unnamed_addr {
dec_label_pc_2fd4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2fd4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2fd4 = add i32 %v0_2fd4, -1994644412
  %v2_2fd4 = inttoptr i32 %v1_2fd4 to i32*
  %v3_2fd4 = load i32, i32* %v2_2fd4, align 4
  %v4_2fd4 = sub i32 %v3_2fd4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2fd4, i32* %v2_2fd4, align 4
  %v0_2fda = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2fda
}

define i32 @function_2fdb() local_unnamed_addr {
dec_label_pc_2fdb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fe3() local_unnamed_addr {
dec_label_pc_2fe3:
  %v1_2fe3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2fe3
}

define i32 @function_2fe8() local_unnamed_addr {
dec_label_pc_2fe8:
  %v0_2fe8 = call i32 @function_2fc9()
  ret i32 %v0_2fe8
}

define i32 @function_2fea() local_unnamed_addr {
dec_label_pc_2fea:
  %v0_2ff0 = call i32 @function_2fdb()
  ret i32 %v0_2ff0
}

define i32 @function_2ff2() local_unnamed_addr {
dec_label_pc_2ff2:
  %v1_2ff4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_2ff4
}

define i32 @function_2ff9() local_unnamed_addr {
dec_label_pc_2ff9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3004() local_unnamed_addr {
dec_label_pc_3004:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3004 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3004 = add i32 %v0_3004, -1994644412
  %v2_3004 = inttoptr i32 %v1_3004 to i32*
  %v3_3004 = load i32, i32* %v2_3004, align 4
  %v4_3004 = sub i32 %v3_3004, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3004, i32* %v2_3004, align 4
  %v0_300a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_300a
}

define i32 @function_300b() local_unnamed_addr {
dec_label_pc_300b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3013() local_unnamed_addr {
dec_label_pc_3013:
  %v1_3013 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3013
}

define i32 @function_3018() local_unnamed_addr {
dec_label_pc_3018:
  %v0_3018 = call i32 @function_2ff9()
  ret i32 %v0_3018
}

define i32 @function_301a() local_unnamed_addr {
dec_label_pc_301a:
  %v0_3020 = call i32 @function_300b()
  ret i32 %v0_3020
}

define i32 @function_3022() local_unnamed_addr {
dec_label_pc_3022:
  %v1_3024 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3024
}

define i32 @function_3029() local_unnamed_addr {
dec_label_pc_3029:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3034() local_unnamed_addr {
dec_label_pc_3034:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3034 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3034 = add i32 %v0_3034, -1994644412
  %v2_3034 = inttoptr i32 %v1_3034 to i32*
  %v3_3034 = load i32, i32* %v2_3034, align 4
  %v4_3034 = sub i32 %v3_3034, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3034, i32* %v2_3034, align 4
  %v0_303a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_303a
}

define i32 @function_303b() local_unnamed_addr {
dec_label_pc_303b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3043() local_unnamed_addr {
dec_label_pc_3043:
  %v1_3043 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3043
}

define i32 @function_3048() local_unnamed_addr {
dec_label_pc_3048:
  %v0_3048 = call i32 @function_3029()
  ret i32 %v0_3048
}

define i32 @function_304a() local_unnamed_addr {
dec_label_pc_304a:
  %v0_3050 = call i32 @function_303b()
  ret i32 %v0_3050
}

define i32 @function_3052() local_unnamed_addr {
dec_label_pc_3052:
  %v1_3054 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3054
}

define i32 @function_3059() local_unnamed_addr {
dec_label_pc_3059:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3064() local_unnamed_addr {
dec_label_pc_3064:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3064 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3064 = add i32 %v0_3064, -1994644412
  %v2_3064 = inttoptr i32 %v1_3064 to i32*
  %v3_3064 = load i32, i32* %v2_3064, align 4
  %v4_3064 = sub i32 %v3_3064, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3064, i32* %v2_3064, align 4
  %v0_306a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_306a
}

define i32 @function_306b() local_unnamed_addr {
dec_label_pc_306b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3073() local_unnamed_addr {
dec_label_pc_3073:
  %v1_3073 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3073
}

define i32 @function_3078() local_unnamed_addr {
dec_label_pc_3078:
  %v0_3078 = call i32 @function_3059()
  ret i32 %v0_3078
}

define i32 @function_307a() local_unnamed_addr {
dec_label_pc_307a:
  %v0_3080 = call i32 @function_306b()
  ret i32 %v0_3080
}

define i32 @function_3082() local_unnamed_addr {
dec_label_pc_3082:
  %v1_3084 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3084
}

define i32 @function_3089() local_unnamed_addr {
dec_label_pc_3089:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3094() local_unnamed_addr {
dec_label_pc_3094:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3094 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3094 = add i32 %v0_3094, -1994644412
  %v2_3094 = inttoptr i32 %v1_3094 to i32*
  %v3_3094 = load i32, i32* %v2_3094, align 4
  %v4_3094 = sub i32 %v3_3094, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3094, i32* %v2_3094, align 4
  %v0_309a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_309a
}

define i32 @function_309b() local_unnamed_addr {
dec_label_pc_309b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30a3() local_unnamed_addr {
dec_label_pc_30a3:
  %v1_30a3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_30a3
}

define i32 @function_30a8() local_unnamed_addr {
dec_label_pc_30a8:
  %v0_30a8 = call i32 @function_3089()
  ret i32 %v0_30a8
}

define i32 @function_30aa() local_unnamed_addr {
dec_label_pc_30aa:
  %v0_30b0 = call i32 @function_309b()
  ret i32 %v0_30b0
}

define i32 @function_30b2() local_unnamed_addr {
dec_label_pc_30b2:
  %v1_30b4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_30b4
}

define i32 @function_30b9() local_unnamed_addr {
dec_label_pc_30b9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30c4() local_unnamed_addr {
dec_label_pc_30c4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_30c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_30c4 = add i32 %v0_30c4, -1994644412
  %v2_30c4 = inttoptr i32 %v1_30c4 to i32*
  %v3_30c4 = load i32, i32* %v2_30c4, align 4
  %v4_30c4 = sub i32 %v3_30c4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_30c4, i32* %v2_30c4, align 4
  %v0_30ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_30ca
}

define i32 @function_30cb() local_unnamed_addr {
dec_label_pc_30cb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30d3() local_unnamed_addr {
dec_label_pc_30d3:
  %v1_30d3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_30d3
}

define i32 @function_30d8() local_unnamed_addr {
dec_label_pc_30d8:
  %v0_30d8 = call i32 @function_30b9()
  ret i32 %v0_30d8
}

define i32 @function_30da() local_unnamed_addr {
dec_label_pc_30da:
  %v0_30e0 = call i32 @function_30cb()
  ret i32 %v0_30e0
}

define i32 @function_30e2() local_unnamed_addr {
dec_label_pc_30e2:
  %v1_30e4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_30e4
}

define i32 @function_30e9() local_unnamed_addr {
dec_label_pc_30e9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30f4() local_unnamed_addr {
dec_label_pc_30f4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_30f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_30f4 = add i32 %v0_30f4, -1994644412
  %v2_30f4 = inttoptr i32 %v1_30f4 to i32*
  %v3_30f4 = load i32, i32* %v2_30f4, align 4
  %v4_30f4 = sub i32 %v3_30f4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_30f4, i32* %v2_30f4, align 4
  %v0_30fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_30fa
}

define i32 @function_30fb() local_unnamed_addr {
dec_label_pc_30fb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3103() local_unnamed_addr {
dec_label_pc_3103:
  %v1_3103 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3103
}

define i32 @function_3108() local_unnamed_addr {
dec_label_pc_3108:
  %v0_3108 = call i32 @function_30e9()
  ret i32 %v0_3108
}

define i32 @function_310a() local_unnamed_addr {
dec_label_pc_310a:
  %v0_3110 = call i32 @function_30fb()
  ret i32 %v0_3110
}

define i32 @function_3112() local_unnamed_addr {
dec_label_pc_3112:
  %v1_3114 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3114
}

define i32 @function_3119() local_unnamed_addr {
dec_label_pc_3119:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3124() local_unnamed_addr {
dec_label_pc_3124:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3124 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3124 = add i32 %v0_3124, -1994644412
  %v2_3124 = inttoptr i32 %v1_3124 to i32*
  %v3_3124 = load i32, i32* %v2_3124, align 4
  %v4_3124 = sub i32 %v3_3124, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3124, i32* %v2_3124, align 4
  %v0_312a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_312a
}

define i32 @function_312b() local_unnamed_addr {
dec_label_pc_312b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3133() local_unnamed_addr {
dec_label_pc_3133:
  %v1_3133 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3133
}

define i32 @function_3138() local_unnamed_addr {
dec_label_pc_3138:
  %v0_3138 = call i32 @function_3119()
  ret i32 %v0_3138
}

define i32 @function_313a() local_unnamed_addr {
dec_label_pc_313a:
  %v0_3140 = call i32 @function_312b()
  ret i32 %v0_3140
}

define i32 @function_3142() local_unnamed_addr {
dec_label_pc_3142:
  %v1_3144 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3144
}

define i32 @function_3149() local_unnamed_addr {
dec_label_pc_3149:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3154() local_unnamed_addr {
dec_label_pc_3154:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3154 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3154 = add i32 %v0_3154, -1994644412
  %v2_3154 = inttoptr i32 %v1_3154 to i32*
  %v3_3154 = load i32, i32* %v2_3154, align 4
  %v4_3154 = sub i32 %v3_3154, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3154, i32* %v2_3154, align 4
  %v0_315a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_315a
}

define i32 @function_315b() local_unnamed_addr {
dec_label_pc_315b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3163() local_unnamed_addr {
dec_label_pc_3163:
  %v1_3163 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3163
}

define i32 @function_3168() local_unnamed_addr {
dec_label_pc_3168:
  %v0_3168 = call i32 @function_3149()
  ret i32 %v0_3168
}

define i32 @function_316a() local_unnamed_addr {
dec_label_pc_316a:
  %v0_3170 = call i32 @function_315b()
  ret i32 %v0_3170
}

define i32 @function_3172() local_unnamed_addr {
dec_label_pc_3172:
  %v1_3174 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3174
}

define i32 @function_3179() local_unnamed_addr {
dec_label_pc_3179:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3184() local_unnamed_addr {
dec_label_pc_3184:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3184 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3184 = add i32 %v0_3184, -1994644412
  %v2_3184 = inttoptr i32 %v1_3184 to i32*
  %v3_3184 = load i32, i32* %v2_3184, align 4
  %v4_3184 = sub i32 %v3_3184, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3184, i32* %v2_3184, align 4
  %v0_318a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_318a
}

define i32 @function_318b() local_unnamed_addr {
dec_label_pc_318b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3193() local_unnamed_addr {
dec_label_pc_3193:
  %v1_3193 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3193
}

define i32 @function_3198() local_unnamed_addr {
dec_label_pc_3198:
  %v0_3198 = call i32 @function_3179()
  ret i32 %v0_3198
}

define i32 @function_319a() local_unnamed_addr {
dec_label_pc_319a:
  %v0_31a0 = call i32 @function_318b()
  ret i32 %v0_31a0
}

define i32 @function_31a2() local_unnamed_addr {
dec_label_pc_31a2:
  %v1_31a4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_31a4
}

define i32 @function_31a9() local_unnamed_addr {
dec_label_pc_31a9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31b4() local_unnamed_addr {
dec_label_pc_31b4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_31b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_31b4 = add i32 %v0_31b4, -1994644412
  %v2_31b4 = inttoptr i32 %v1_31b4 to i32*
  %v3_31b4 = load i32, i32* %v2_31b4, align 4
  %v4_31b4 = sub i32 %v3_31b4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_31b4, i32* %v2_31b4, align 4
  %v0_31ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_31ba
}

define i32 @function_31bb() local_unnamed_addr {
dec_label_pc_31bb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31c3() local_unnamed_addr {
dec_label_pc_31c3:
  %v1_31c3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_31c3
}

define i32 @function_31c8() local_unnamed_addr {
dec_label_pc_31c8:
  %v0_31c8 = call i32 @function_31a9()
  ret i32 %v0_31c8
}

define i32 @function_31ca() local_unnamed_addr {
dec_label_pc_31ca:
  %v0_31d0 = call i32 @function_31bb()
  ret i32 %v0_31d0
}

define i32 @function_31d2() local_unnamed_addr {
dec_label_pc_31d2:
  %v1_31d4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_31d4
}

define i32 @function_31d9() local_unnamed_addr {
dec_label_pc_31d9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31e4() local_unnamed_addr {
dec_label_pc_31e4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_31e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_31e4 = add i32 %v0_31e4, -1994644412
  %v2_31e4 = inttoptr i32 %v1_31e4 to i32*
  %v3_31e4 = load i32, i32* %v2_31e4, align 4
  %v4_31e4 = sub i32 %v3_31e4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_31e4, i32* %v2_31e4, align 4
  %v0_31ea = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_31ea
}

define i32 @function_31eb() local_unnamed_addr {
dec_label_pc_31eb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31f3() local_unnamed_addr {
dec_label_pc_31f3:
  %v1_31f3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_31f3
}

define i32 @function_31f8() local_unnamed_addr {
dec_label_pc_31f8:
  %v0_31f8 = call i32 @function_31d9()
  ret i32 %v0_31f8
}

define i32 @function_31fa() local_unnamed_addr {
dec_label_pc_31fa:
  %v0_3200 = call i32 @function_31eb()
  ret i32 %v0_3200
}

define i32 @function_3202() local_unnamed_addr {
dec_label_pc_3202:
  %v1_3204 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3204
}

define i32 @function_3209() local_unnamed_addr {
dec_label_pc_3209:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3214() local_unnamed_addr {
dec_label_pc_3214:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3214 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3214 = add i32 %v0_3214, -1994644412
  %v2_3214 = inttoptr i32 %v1_3214 to i32*
  %v3_3214 = load i32, i32* %v2_3214, align 4
  %v4_3214 = sub i32 %v3_3214, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3214, i32* %v2_3214, align 4
  %v0_321a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_321a
}

define i32 @function_321b() local_unnamed_addr {
dec_label_pc_321b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3223() local_unnamed_addr {
dec_label_pc_3223:
  %v1_3223 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3223
}

define i32 @function_3228() local_unnamed_addr {
dec_label_pc_3228:
  %v0_3228 = call i32 @function_3209()
  ret i32 %v0_3228
}

define i32 @function_322a() local_unnamed_addr {
dec_label_pc_322a:
  %v0_3230 = call i32 @function_321b()
  ret i32 %v0_3230
}

define i32 @function_3232() local_unnamed_addr {
dec_label_pc_3232:
  %v1_3234 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3234
}

define i32 @function_3239() local_unnamed_addr {
dec_label_pc_3239:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3244() local_unnamed_addr {
dec_label_pc_3244:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3244 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3244 = add i32 %v0_3244, -1994644412
  %v2_3244 = inttoptr i32 %v1_3244 to i32*
  %v3_3244 = load i32, i32* %v2_3244, align 4
  %v4_3244 = sub i32 %v3_3244, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3244, i32* %v2_3244, align 4
  %v0_324a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_324a
}

define i32 @function_324b() local_unnamed_addr {
dec_label_pc_324b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3253() local_unnamed_addr {
dec_label_pc_3253:
  %v1_3253 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3253
}

define i32 @function_3258() local_unnamed_addr {
dec_label_pc_3258:
  %v0_3258 = call i32 @function_3239()
  ret i32 %v0_3258
}

define i32 @function_325a() local_unnamed_addr {
dec_label_pc_325a:
  %v0_3260 = call i32 @function_324b()
  ret i32 %v0_3260
}

define i32 @function_3262() local_unnamed_addr {
dec_label_pc_3262:
  %v1_3264 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3264
}

define i32 @function_3269() local_unnamed_addr {
dec_label_pc_3269:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3274() local_unnamed_addr {
dec_label_pc_3274:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3274 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3274 = add i32 %v0_3274, -1994644412
  %v2_3274 = inttoptr i32 %v1_3274 to i32*
  %v3_3274 = load i32, i32* %v2_3274, align 4
  %v4_3274 = sub i32 %v3_3274, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3274, i32* %v2_3274, align 4
  %v0_327a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_327a
}

define i32 @function_327b() local_unnamed_addr {
dec_label_pc_327b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3283() local_unnamed_addr {
dec_label_pc_3283:
  %v1_3283 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3283
}

define i32 @function_3288() local_unnamed_addr {
dec_label_pc_3288:
  %v0_3288 = call i32 @function_3269()
  ret i32 %v0_3288
}

define i32 @function_328a() local_unnamed_addr {
dec_label_pc_328a:
  %v0_3290 = call i32 @function_327b()
  ret i32 %v0_3290
}

define i32 @function_3292() local_unnamed_addr {
dec_label_pc_3292:
  %v1_3294 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3294
}

define i32 @function_3299() local_unnamed_addr {
dec_label_pc_3299:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32a4() local_unnamed_addr {
dec_label_pc_32a4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_32a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_32a4 = add i32 %v0_32a4, -1994644412
  %v2_32a4 = inttoptr i32 %v1_32a4 to i32*
  %v3_32a4 = load i32, i32* %v2_32a4, align 4
  %v4_32a4 = sub i32 %v3_32a4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_32a4, i32* %v2_32a4, align 4
  %v0_32aa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_32aa
}

define i32 @function_32ab() local_unnamed_addr {
dec_label_pc_32ab:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32b3() local_unnamed_addr {
dec_label_pc_32b3:
  %v1_32b3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_32b3
}

define i32 @function_32b8() local_unnamed_addr {
dec_label_pc_32b8:
  %v0_32b8 = call i32 @function_3299()
  ret i32 %v0_32b8
}

define i32 @function_32ba() local_unnamed_addr {
dec_label_pc_32ba:
  %v0_32c0 = call i32 @function_32ab()
  ret i32 %v0_32c0
}

define i32 @function_32c2() local_unnamed_addr {
dec_label_pc_32c2:
  %v1_32c4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_32c4
}

define i32 @function_32c9() local_unnamed_addr {
dec_label_pc_32c9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32d4() local_unnamed_addr {
dec_label_pc_32d4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_32d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_32d4 = add i32 %v0_32d4, -1994644412
  %v2_32d4 = inttoptr i32 %v1_32d4 to i32*
  %v3_32d4 = load i32, i32* %v2_32d4, align 4
  %v4_32d4 = sub i32 %v3_32d4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_32d4, i32* %v2_32d4, align 4
  %v0_32da = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_32da
}

define i32 @function_32db() local_unnamed_addr {
dec_label_pc_32db:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32e3() local_unnamed_addr {
dec_label_pc_32e3:
  %v1_32e3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_32e3
}

define i32 @function_32e8() local_unnamed_addr {
dec_label_pc_32e8:
  %v0_32e8 = call i32 @function_32c9()
  ret i32 %v0_32e8
}

define i32 @function_32ea() local_unnamed_addr {
dec_label_pc_32ea:
  %v0_32f0 = call i32 @function_32db()
  ret i32 %v0_32f0
}

define i32 @function_32f2() local_unnamed_addr {
dec_label_pc_32f2:
  %v1_32f4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_32f4
}

define i32 @function_32f9() local_unnamed_addr {
dec_label_pc_32f9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3304() local_unnamed_addr {
dec_label_pc_3304:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3304 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3304 = add i32 %v0_3304, -1994644412
  %v2_3304 = inttoptr i32 %v1_3304 to i32*
  %v3_3304 = load i32, i32* %v2_3304, align 4
  %v4_3304 = sub i32 %v3_3304, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3304, i32* %v2_3304, align 4
  %v0_330a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_330a
}

define i32 @function_330b() local_unnamed_addr {
dec_label_pc_330b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3313() local_unnamed_addr {
dec_label_pc_3313:
  %v1_3313 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3313
}

define i32 @function_3318() local_unnamed_addr {
dec_label_pc_3318:
  %v0_3318 = call i32 @function_32f9()
  ret i32 %v0_3318
}

define i32 @function_331a() local_unnamed_addr {
dec_label_pc_331a:
  %v0_3320 = call i32 @function_330b()
  ret i32 %v0_3320
}

define i32 @function_3322() local_unnamed_addr {
dec_label_pc_3322:
  %v1_3324 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3324
}

define i32 @function_3329() local_unnamed_addr {
dec_label_pc_3329:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3334() local_unnamed_addr {
dec_label_pc_3334:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3334 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3334 = add i32 %v0_3334, -1994644412
  %v2_3334 = inttoptr i32 %v1_3334 to i32*
  %v3_3334 = load i32, i32* %v2_3334, align 4
  %v4_3334 = sub i32 %v3_3334, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3334, i32* %v2_3334, align 4
  %v0_333a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_333a
}

define i32 @function_333b() local_unnamed_addr {
dec_label_pc_333b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3343() local_unnamed_addr {
dec_label_pc_3343:
  %v1_3343 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3343
}

define i32 @function_3348() local_unnamed_addr {
dec_label_pc_3348:
  %v0_3348 = call i32 @function_3329()
  ret i32 %v0_3348
}

define i32 @function_334a() local_unnamed_addr {
dec_label_pc_334a:
  %v0_3350 = call i32 @function_333b()
  ret i32 %v0_3350
}

define i32 @function_3352() local_unnamed_addr {
dec_label_pc_3352:
  %v1_3354 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3354
}

define i32 @function_3359() local_unnamed_addr {
dec_label_pc_3359:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3364() local_unnamed_addr {
dec_label_pc_3364:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3364 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3364 = add i32 %v0_3364, -1994644412
  %v2_3364 = inttoptr i32 %v1_3364 to i32*
  %v3_3364 = load i32, i32* %v2_3364, align 4
  %v4_3364 = sub i32 %v3_3364, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3364, i32* %v2_3364, align 4
  %v0_336a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_336a
}

define i32 @function_336b() local_unnamed_addr {
dec_label_pc_336b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3373() local_unnamed_addr {
dec_label_pc_3373:
  %v1_3373 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3373
}

define i32 @function_3378() local_unnamed_addr {
dec_label_pc_3378:
  %v0_3378 = call i32 @function_3359()
  ret i32 %v0_3378
}

define i32 @function_337a() local_unnamed_addr {
dec_label_pc_337a:
  %v0_3380 = call i32 @function_336b()
  ret i32 %v0_3380
}

define i32 @function_3382() local_unnamed_addr {
dec_label_pc_3382:
  %v1_3384 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3384
}

define i32 @function_3389() local_unnamed_addr {
dec_label_pc_3389:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3394() local_unnamed_addr {
dec_label_pc_3394:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3394 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3394 = add i32 %v0_3394, -1994644412
  %v2_3394 = inttoptr i32 %v1_3394 to i32*
  %v3_3394 = load i32, i32* %v2_3394, align 4
  %v4_3394 = sub i32 %v3_3394, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3394, i32* %v2_3394, align 4
  %v0_339a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_339a
}

define i32 @function_339b() local_unnamed_addr {
dec_label_pc_339b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33a3() local_unnamed_addr {
dec_label_pc_33a3:
  %v1_33a3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_33a3
}

define i32 @function_33a8() local_unnamed_addr {
dec_label_pc_33a8:
  %v0_33a8 = call i32 @function_3389()
  ret i32 %v0_33a8
}

define i32 @function_33aa() local_unnamed_addr {
dec_label_pc_33aa:
  %v0_33b0 = call i32 @function_339b()
  ret i32 %v0_33b0
}

define i32 @function_33b2() local_unnamed_addr {
dec_label_pc_33b2:
  %v1_33b4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_33b4
}

define i32 @function_33b9() local_unnamed_addr {
dec_label_pc_33b9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33c4() local_unnamed_addr {
dec_label_pc_33c4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_33c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_33c4 = add i32 %v0_33c4, -1994644412
  %v2_33c4 = inttoptr i32 %v1_33c4 to i32*
  %v3_33c4 = load i32, i32* %v2_33c4, align 4
  %v4_33c4 = sub i32 %v3_33c4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_33c4, i32* %v2_33c4, align 4
  %v0_33ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_33ca
}

define i32 @function_33cb() local_unnamed_addr {
dec_label_pc_33cb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33d3() local_unnamed_addr {
dec_label_pc_33d3:
  %v1_33d3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_33d3
}

define i32 @function_33d8() local_unnamed_addr {
dec_label_pc_33d8:
  %v0_33d8 = call i32 @function_33b9()
  ret i32 %v0_33d8
}

define i32 @function_33da() local_unnamed_addr {
dec_label_pc_33da:
  %v0_33e0 = call i32 @function_33cb()
  ret i32 %v0_33e0
}

define i32 @function_33e2() local_unnamed_addr {
dec_label_pc_33e2:
  %v1_33e4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_33e4
}

define i32 @function_33e9() local_unnamed_addr {
dec_label_pc_33e9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33f4() local_unnamed_addr {
dec_label_pc_33f4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_33f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_33f4 = add i32 %v0_33f4, -1994644412
  %v2_33f4 = inttoptr i32 %v1_33f4 to i32*
  %v3_33f4 = load i32, i32* %v2_33f4, align 4
  %v4_33f4 = sub i32 %v3_33f4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_33f4, i32* %v2_33f4, align 4
  %v0_33fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_33fa
}

define i32 @function_33fb() local_unnamed_addr {
dec_label_pc_33fb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3403() local_unnamed_addr {
dec_label_pc_3403:
  %v1_3403 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3403
}

define i32 @function_3408() local_unnamed_addr {
dec_label_pc_3408:
  %v0_3408 = call i32 @function_33e9()
  ret i32 %v0_3408
}

define i32 @function_340a() local_unnamed_addr {
dec_label_pc_340a:
  %v0_3410 = call i32 @function_33fb()
  ret i32 %v0_3410
}

define i32 @function_3412() local_unnamed_addr {
dec_label_pc_3412:
  %v1_3414 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3414
}

define i32 @function_3419() local_unnamed_addr {
dec_label_pc_3419:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3424() local_unnamed_addr {
dec_label_pc_3424:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3424 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3424 = add i32 %v0_3424, -1994644412
  %v2_3424 = inttoptr i32 %v1_3424 to i32*
  %v3_3424 = load i32, i32* %v2_3424, align 4
  %v4_3424 = sub i32 %v3_3424, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3424, i32* %v2_3424, align 4
  %v0_342a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_342a
}

define i32 @function_342b() local_unnamed_addr {
dec_label_pc_342b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3433() local_unnamed_addr {
dec_label_pc_3433:
  %v1_3433 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3433
}

define i32 @function_3438() local_unnamed_addr {
dec_label_pc_3438:
  %v0_3438 = call i32 @function_3419()
  ret i32 %v0_3438
}

define i32 @function_343a() local_unnamed_addr {
dec_label_pc_343a:
  %v0_3440 = call i32 @function_342b()
  ret i32 %v0_3440
}

define i32 @function_3442() local_unnamed_addr {
dec_label_pc_3442:
  %v1_3444 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3444
}

define i32 @function_3449() local_unnamed_addr {
dec_label_pc_3449:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3454() local_unnamed_addr {
dec_label_pc_3454:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3454 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3454 = add i32 %v0_3454, -1994644412
  %v2_3454 = inttoptr i32 %v1_3454 to i32*
  %v3_3454 = load i32, i32* %v2_3454, align 4
  %v4_3454 = sub i32 %v3_3454, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3454, i32* %v2_3454, align 4
  %v0_345a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_345a
}

define i32 @function_345b() local_unnamed_addr {
dec_label_pc_345b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3463() local_unnamed_addr {
dec_label_pc_3463:
  %v1_3463 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3463
}

define i32 @function_3468() local_unnamed_addr {
dec_label_pc_3468:
  %v0_3468 = call i32 @function_3449()
  ret i32 %v0_3468
}

define i32 @function_346a() local_unnamed_addr {
dec_label_pc_346a:
  %v0_3470 = call i32 @function_345b()
  ret i32 %v0_3470
}

define i32 @function_3472() local_unnamed_addr {
dec_label_pc_3472:
  %v1_3474 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3474
}

define i32 @function_3479() local_unnamed_addr {
dec_label_pc_3479:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3484() local_unnamed_addr {
dec_label_pc_3484:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3484 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3484 = add i32 %v0_3484, -1994644412
  %v2_3484 = inttoptr i32 %v1_3484 to i32*
  %v3_3484 = load i32, i32* %v2_3484, align 4
  %v4_3484 = sub i32 %v3_3484, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3484, i32* %v2_3484, align 4
  %v0_348a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_348a
}

define i32 @function_348b() local_unnamed_addr {
dec_label_pc_348b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3493() local_unnamed_addr {
dec_label_pc_3493:
  %v1_3493 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3493
}

define i32 @function_3498() local_unnamed_addr {
dec_label_pc_3498:
  %v0_3498 = call i32 @function_3479()
  ret i32 %v0_3498
}

define i32 @function_349a() local_unnamed_addr {
dec_label_pc_349a:
  %v0_34a0 = call i32 @function_348b()
  ret i32 %v0_34a0
}

define i32 @function_34a2() local_unnamed_addr {
dec_label_pc_34a2:
  %v1_34a4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_34a4
}

define i32 @function_34a9() local_unnamed_addr {
dec_label_pc_34a9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34b4() local_unnamed_addr {
dec_label_pc_34b4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_34b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_34b4 = add i32 %v0_34b4, -1994644412
  %v2_34b4 = inttoptr i32 %v1_34b4 to i32*
  %v3_34b4 = load i32, i32* %v2_34b4, align 4
  %v4_34b4 = sub i32 %v3_34b4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_34b4, i32* %v2_34b4, align 4
  %v0_34ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_34ba
}

define i32 @function_34bb() local_unnamed_addr {
dec_label_pc_34bb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34c3() local_unnamed_addr {
dec_label_pc_34c3:
  %v1_34c3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_34c3
}

define i32 @function_34c8() local_unnamed_addr {
dec_label_pc_34c8:
  %v0_34c8 = call i32 @function_34a9()
  ret i32 %v0_34c8
}

define i32 @function_34ca() local_unnamed_addr {
dec_label_pc_34ca:
  %v0_34d0 = call i32 @function_34bb()
  ret i32 %v0_34d0
}

define i32 @function_34d2() local_unnamed_addr {
dec_label_pc_34d2:
  %v1_34d4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_34d4
}

define i32 @function_34d9() local_unnamed_addr {
dec_label_pc_34d9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34e4() local_unnamed_addr {
dec_label_pc_34e4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_34e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_34e4 = add i32 %v0_34e4, -1994644412
  %v2_34e4 = inttoptr i32 %v1_34e4 to i32*
  %v3_34e4 = load i32, i32* %v2_34e4, align 4
  %v4_34e4 = sub i32 %v3_34e4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_34e4, i32* %v2_34e4, align 4
  %v0_34ea = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_34ea
}

define i32 @function_34eb() local_unnamed_addr {
dec_label_pc_34eb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34f3() local_unnamed_addr {
dec_label_pc_34f3:
  %v1_34f3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_34f3
}

define i32 @function_34f8() local_unnamed_addr {
dec_label_pc_34f8:
  %v0_34f8 = call i32 @function_34d9()
  ret i32 %v0_34f8
}

define i32 @function_34fa() local_unnamed_addr {
dec_label_pc_34fa:
  %v0_3500 = call i32 @function_34eb()
  ret i32 %v0_3500
}

define i32 @function_3502() local_unnamed_addr {
dec_label_pc_3502:
  %v1_3504 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3504
}

define i32 @function_3509() local_unnamed_addr {
dec_label_pc_3509:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3514() local_unnamed_addr {
dec_label_pc_3514:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3514 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3514 = add i32 %v0_3514, -1994644412
  %v2_3514 = inttoptr i32 %v1_3514 to i32*
  %v3_3514 = load i32, i32* %v2_3514, align 4
  %v4_3514 = sub i32 %v3_3514, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3514, i32* %v2_3514, align 4
  %v0_351a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_351a
}

define i32 @function_351b() local_unnamed_addr {
dec_label_pc_351b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3523() local_unnamed_addr {
dec_label_pc_3523:
  %v1_3523 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3523
}

define i32 @function_3528() local_unnamed_addr {
dec_label_pc_3528:
  %v0_3528 = call i32 @function_3509()
  ret i32 %v0_3528
}

define i32 @function_352a() local_unnamed_addr {
dec_label_pc_352a:
  %v0_3530 = call i32 @function_351b()
  ret i32 %v0_3530
}

define i32 @function_3532() local_unnamed_addr {
dec_label_pc_3532:
  %v1_3534 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3534
}

define i32 @function_3539() local_unnamed_addr {
dec_label_pc_3539:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3544() local_unnamed_addr {
dec_label_pc_3544:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3544 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3544 = add i32 %v0_3544, -1994644412
  %v2_3544 = inttoptr i32 %v1_3544 to i32*
  %v3_3544 = load i32, i32* %v2_3544, align 4
  %v4_3544 = sub i32 %v3_3544, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3544, i32* %v2_3544, align 4
  %v0_354a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_354a
}

define i32 @function_354b() local_unnamed_addr {
dec_label_pc_354b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3553() local_unnamed_addr {
dec_label_pc_3553:
  %v1_3553 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3553
}

define i32 @function_3558() local_unnamed_addr {
dec_label_pc_3558:
  %v0_3558 = call i32 @function_3539()
  ret i32 %v0_3558
}

define i32 @function_355a() local_unnamed_addr {
dec_label_pc_355a:
  %v0_3560 = call i32 @function_354b()
  ret i32 %v0_3560
}

define i32 @function_3562() local_unnamed_addr {
dec_label_pc_3562:
  %v1_3564 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3564
}

define i32 @function_3569() local_unnamed_addr {
dec_label_pc_3569:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3574() local_unnamed_addr {
dec_label_pc_3574:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3574 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3574 = add i32 %v0_3574, -1994644412
  %v2_3574 = inttoptr i32 %v1_3574 to i32*
  %v3_3574 = load i32, i32* %v2_3574, align 4
  %v4_3574 = sub i32 %v3_3574, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3574, i32* %v2_3574, align 4
  %v0_357a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_357a
}

define i32 @function_357b() local_unnamed_addr {
dec_label_pc_357b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3583() local_unnamed_addr {
dec_label_pc_3583:
  %v1_3583 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3583
}

define i32 @function_3588() local_unnamed_addr {
dec_label_pc_3588:
  %v0_3588 = call i32 @function_3569()
  ret i32 %v0_3588
}

define i32 @function_358a() local_unnamed_addr {
dec_label_pc_358a:
  %v0_3590 = call i32 @function_357b()
  ret i32 %v0_3590
}

define i32 @function_3592() local_unnamed_addr {
dec_label_pc_3592:
  %v1_3594 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3594
}

define i32 @function_3599() local_unnamed_addr {
dec_label_pc_3599:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35a4() local_unnamed_addr {
dec_label_pc_35a4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_35a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_35a4 = add i32 %v0_35a4, -1994644412
  %v2_35a4 = inttoptr i32 %v1_35a4 to i32*
  %v3_35a4 = load i32, i32* %v2_35a4, align 4
  %v4_35a4 = sub i32 %v3_35a4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_35a4, i32* %v2_35a4, align 4
  %v0_35aa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35aa
}

define i32 @function_35ab() local_unnamed_addr {
dec_label_pc_35ab:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35b3() local_unnamed_addr {
dec_label_pc_35b3:
  %v1_35b3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_35b3
}

define i32 @function_35b8() local_unnamed_addr {
dec_label_pc_35b8:
  %v0_35b8 = call i32 @function_3599()
  ret i32 %v0_35b8
}

define i32 @function_35ba() local_unnamed_addr {
dec_label_pc_35ba:
  %v0_35c0 = call i32 @function_35ab()
  ret i32 %v0_35c0
}

define i32 @function_35c2() local_unnamed_addr {
dec_label_pc_35c2:
  %v1_35c4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_35c4
}

define i32 @function_35c9() local_unnamed_addr {
dec_label_pc_35c9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35d4() local_unnamed_addr {
dec_label_pc_35d4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_35d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_35d4 = add i32 %v0_35d4, -1994644412
  %v2_35d4 = inttoptr i32 %v1_35d4 to i32*
  %v3_35d4 = load i32, i32* %v2_35d4, align 4
  %v4_35d4 = sub i32 %v3_35d4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_35d4, i32* %v2_35d4, align 4
  %v0_35da = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35da
}

define i32 @function_35db() local_unnamed_addr {
dec_label_pc_35db:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35e3() local_unnamed_addr {
dec_label_pc_35e3:
  %v1_35e3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_35e3
}

define i32 @function_35e8() local_unnamed_addr {
dec_label_pc_35e8:
  %v0_35e8 = call i32 @function_35c9()
  ret i32 %v0_35e8
}

define i32 @function_35ea() local_unnamed_addr {
dec_label_pc_35ea:
  %v0_35f0 = call i32 @function_35db()
  ret i32 %v0_35f0
}

define i32 @function_35f2() local_unnamed_addr {
dec_label_pc_35f2:
  %v1_35f4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_35f4
}

define i32 @function_35f9() local_unnamed_addr {
dec_label_pc_35f9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3604() local_unnamed_addr {
dec_label_pc_3604:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3604 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3604 = add i32 %v0_3604, -1994644412
  %v2_3604 = inttoptr i32 %v1_3604 to i32*
  %v3_3604 = load i32, i32* %v2_3604, align 4
  %v4_3604 = sub i32 %v3_3604, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3604, i32* %v2_3604, align 4
  %v0_360a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_360a
}

define i32 @function_360b() local_unnamed_addr {
dec_label_pc_360b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3613() local_unnamed_addr {
dec_label_pc_3613:
  %v1_3613 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3613
}

define i32 @function_3618() local_unnamed_addr {
dec_label_pc_3618:
  %v0_3618 = call i32 @function_35f9()
  ret i32 %v0_3618
}

define i32 @function_361a() local_unnamed_addr {
dec_label_pc_361a:
  %v0_3620 = call i32 @function_360b()
  ret i32 %v0_3620
}

define i32 @function_3622() local_unnamed_addr {
dec_label_pc_3622:
  %v1_3624 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3624
}

define i32 @function_3629() local_unnamed_addr {
dec_label_pc_3629:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3634() local_unnamed_addr {
dec_label_pc_3634:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3634 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3634 = add i32 %v0_3634, -1994644412
  %v2_3634 = inttoptr i32 %v1_3634 to i32*
  %v3_3634 = load i32, i32* %v2_3634, align 4
  %v4_3634 = sub i32 %v3_3634, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3634, i32* %v2_3634, align 4
  %v0_363a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_363a
}

define i32 @function_363b() local_unnamed_addr {
dec_label_pc_363b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3643() local_unnamed_addr {
dec_label_pc_3643:
  %v1_3643 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3643
}

define i32 @function_3648() local_unnamed_addr {
dec_label_pc_3648:
  %v0_3648 = call i32 @function_3629()
  ret i32 %v0_3648
}

define i32 @function_364a() local_unnamed_addr {
dec_label_pc_364a:
  %v0_3650 = call i32 @function_363b()
  ret i32 %v0_3650
}

define i32 @function_3652() local_unnamed_addr {
dec_label_pc_3652:
  %v1_3654 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3654
}

define i32 @function_3659() local_unnamed_addr {
dec_label_pc_3659:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3664() local_unnamed_addr {
dec_label_pc_3664:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3664 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3664 = add i32 %v0_3664, -1994644412
  %v2_3664 = inttoptr i32 %v1_3664 to i32*
  %v3_3664 = load i32, i32* %v2_3664, align 4
  %v4_3664 = sub i32 %v3_3664, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3664, i32* %v2_3664, align 4
  %v0_366a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_366a
}

define i32 @function_366b() local_unnamed_addr {
dec_label_pc_366b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3673() local_unnamed_addr {
dec_label_pc_3673:
  %v1_3673 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3673
}

define i32 @function_3678() local_unnamed_addr {
dec_label_pc_3678:
  %v0_3678 = call i32 @function_3659()
  ret i32 %v0_3678
}

define i32 @function_367a() local_unnamed_addr {
dec_label_pc_367a:
  %v0_3680 = call i32 @function_366b()
  ret i32 %v0_3680
}

define i32 @function_3682() local_unnamed_addr {
dec_label_pc_3682:
  %v1_3684 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3684
}

define i32 @function_3689() local_unnamed_addr {
dec_label_pc_3689:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3694() local_unnamed_addr {
dec_label_pc_3694:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3694 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3694 = add i32 %v0_3694, -1994644412
  %v2_3694 = inttoptr i32 %v1_3694 to i32*
  %v3_3694 = load i32, i32* %v2_3694, align 4
  %v4_3694 = sub i32 %v3_3694, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3694, i32* %v2_3694, align 4
  %v0_369a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_369a
}

define i32 @function_369b() local_unnamed_addr {
dec_label_pc_369b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36a3() local_unnamed_addr {
dec_label_pc_36a3:
  %v1_36a3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_36a3
}

define i32 @function_36a8() local_unnamed_addr {
dec_label_pc_36a8:
  %v0_36a8 = call i32 @function_3689()
  ret i32 %v0_36a8
}

define i32 @function_36aa() local_unnamed_addr {
dec_label_pc_36aa:
  %v0_36b0 = call i32 @function_369b()
  ret i32 %v0_36b0
}

define i32 @function_36b2() local_unnamed_addr {
dec_label_pc_36b2:
  %v1_36b4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_36b4
}

define i32 @function_36b9() local_unnamed_addr {
dec_label_pc_36b9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36c4() local_unnamed_addr {
dec_label_pc_36c4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_36c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_36c4 = add i32 %v0_36c4, -1994644412
  %v2_36c4 = inttoptr i32 %v1_36c4 to i32*
  %v3_36c4 = load i32, i32* %v2_36c4, align 4
  %v4_36c4 = sub i32 %v3_36c4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_36c4, i32* %v2_36c4, align 4
  %v0_36ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_36ca
}

define i32 @function_36cb() local_unnamed_addr {
dec_label_pc_36cb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36d3() local_unnamed_addr {
dec_label_pc_36d3:
  %v1_36d3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_36d3
}

define i32 @function_36d8() local_unnamed_addr {
dec_label_pc_36d8:
  %v0_36d8 = call i32 @function_36b9()
  ret i32 %v0_36d8
}

define i32 @function_36da() local_unnamed_addr {
dec_label_pc_36da:
  %v0_36e0 = call i32 @function_36cb()
  ret i32 %v0_36e0
}

define i32 @function_36e2() local_unnamed_addr {
dec_label_pc_36e2:
  %v1_36e4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_36e4
}

define i32 @function_36e9() local_unnamed_addr {
dec_label_pc_36e9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36f4() local_unnamed_addr {
dec_label_pc_36f4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_36f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_36f4 = add i32 %v0_36f4, -1994644412
  %v2_36f4 = inttoptr i32 %v1_36f4 to i32*
  %v3_36f4 = load i32, i32* %v2_36f4, align 4
  %v4_36f4 = sub i32 %v3_36f4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_36f4, i32* %v2_36f4, align 4
  %v0_36fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_36fa
}

define i32 @function_36fb() local_unnamed_addr {
dec_label_pc_36fb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3703() local_unnamed_addr {
dec_label_pc_3703:
  %v1_3703 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3703
}

define i32 @function_3708() local_unnamed_addr {
dec_label_pc_3708:
  %v0_3708 = call i32 @function_36e9()
  ret i32 %v0_3708
}

define i32 @function_370a() local_unnamed_addr {
dec_label_pc_370a:
  %v0_3710 = call i32 @function_36fb()
  ret i32 %v0_3710
}

define i32 @function_3712() local_unnamed_addr {
dec_label_pc_3712:
  %v1_3714 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3714
}

define i32 @function_3719() local_unnamed_addr {
dec_label_pc_3719:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3724() local_unnamed_addr {
dec_label_pc_3724:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3724 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3724 = add i32 %v0_3724, -1994644412
  %v2_3724 = inttoptr i32 %v1_3724 to i32*
  %v3_3724 = load i32, i32* %v2_3724, align 4
  %v4_3724 = sub i32 %v3_3724, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3724, i32* %v2_3724, align 4
  %v0_372a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_372a
}

define i32 @function_372b() local_unnamed_addr {
dec_label_pc_372b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3733() local_unnamed_addr {
dec_label_pc_3733:
  %v1_3733 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3733
}

define i32 @function_3738() local_unnamed_addr {
dec_label_pc_3738:
  %v0_3738 = call i32 @function_3719()
  ret i32 %v0_3738
}

define i32 @function_373a() local_unnamed_addr {
dec_label_pc_373a:
  %v0_3740 = call i32 @function_372b()
  ret i32 %v0_3740
}

define i32 @function_3742() local_unnamed_addr {
dec_label_pc_3742:
  %v1_3744 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3744
}

define i32 @function_3749() local_unnamed_addr {
dec_label_pc_3749:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3754() local_unnamed_addr {
dec_label_pc_3754:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3754 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3754 = add i32 %v0_3754, -1994644412
  %v2_3754 = inttoptr i32 %v1_3754 to i32*
  %v3_3754 = load i32, i32* %v2_3754, align 4
  %v4_3754 = sub i32 %v3_3754, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3754, i32* %v2_3754, align 4
  %v0_375a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_375a
}

define i32 @function_375b() local_unnamed_addr {
dec_label_pc_375b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3763() local_unnamed_addr {
dec_label_pc_3763:
  %v1_3763 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3763
}

define i32 @function_3768() local_unnamed_addr {
dec_label_pc_3768:
  %v0_3768 = call i32 @function_3749()
  ret i32 %v0_3768
}

define i32 @function_376a() local_unnamed_addr {
dec_label_pc_376a:
  %v0_3770 = call i32 @function_375b()
  ret i32 %v0_3770
}

define i32 @function_3772() local_unnamed_addr {
dec_label_pc_3772:
  %v1_3774 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3774
}

define i32 @function_3779() local_unnamed_addr {
dec_label_pc_3779:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3784() local_unnamed_addr {
dec_label_pc_3784:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3784 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3784 = add i32 %v0_3784, -1994644412
  %v2_3784 = inttoptr i32 %v1_3784 to i32*
  %v3_3784 = load i32, i32* %v2_3784, align 4
  %v4_3784 = sub i32 %v3_3784, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3784, i32* %v2_3784, align 4
  %v0_378a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_378a
}

define i32 @function_378b() local_unnamed_addr {
dec_label_pc_378b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3793() local_unnamed_addr {
dec_label_pc_3793:
  %v1_3793 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3793
}

define i32 @function_3798() local_unnamed_addr {
dec_label_pc_3798:
  %v0_3798 = call i32 @function_3779()
  ret i32 %v0_3798
}

define i32 @function_379a() local_unnamed_addr {
dec_label_pc_379a:
  %v0_37a0 = call i32 @function_378b()
  ret i32 %v0_37a0
}

define i32 @function_37a2() local_unnamed_addr {
dec_label_pc_37a2:
  %v1_37a4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_37a4
}

define i32 @function_37a9() local_unnamed_addr {
dec_label_pc_37a9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37b4() local_unnamed_addr {
dec_label_pc_37b4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_37b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_37b4 = add i32 %v0_37b4, -1994644412
  %v2_37b4 = inttoptr i32 %v1_37b4 to i32*
  %v3_37b4 = load i32, i32* %v2_37b4, align 4
  %v4_37b4 = sub i32 %v3_37b4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_37b4, i32* %v2_37b4, align 4
  %v0_37ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_37ba
}

define i32 @function_37bb() local_unnamed_addr {
dec_label_pc_37bb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37c3() local_unnamed_addr {
dec_label_pc_37c3:
  %v1_37c3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_37c3
}

define i32 @function_37c8() local_unnamed_addr {
dec_label_pc_37c8:
  %v0_37c8 = call i32 @function_37a9()
  ret i32 %v0_37c8
}

define i32 @function_37ca() local_unnamed_addr {
dec_label_pc_37ca:
  %v0_37d0 = call i32 @function_37bb()
  ret i32 %v0_37d0
}

define i32 @function_37d2() local_unnamed_addr {
dec_label_pc_37d2:
  %v1_37d4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_37d4
}

define i32 @function_37d9() local_unnamed_addr {
dec_label_pc_37d9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37e4() local_unnamed_addr {
dec_label_pc_37e4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_37e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_37e4 = add i32 %v0_37e4, -1994644412
  %v2_37e4 = inttoptr i32 %v1_37e4 to i32*
  %v3_37e4 = load i32, i32* %v2_37e4, align 4
  %v4_37e4 = sub i32 %v3_37e4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_37e4, i32* %v2_37e4, align 4
  %v0_37ea = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_37ea
}

define i32 @function_37eb() local_unnamed_addr {
dec_label_pc_37eb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37f3() local_unnamed_addr {
dec_label_pc_37f3:
  %v1_37f3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_37f3
}

define i32 @function_37f8() local_unnamed_addr {
dec_label_pc_37f8:
  %v0_37f8 = call i32 @function_37d9()
  ret i32 %v0_37f8
}

define i32 @function_37fa() local_unnamed_addr {
dec_label_pc_37fa:
  %v0_3800 = call i32 @function_37eb()
  ret i32 %v0_3800
}

define i32 @function_3802() local_unnamed_addr {
dec_label_pc_3802:
  %v1_3804 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3804
}

define i32 @function_3809() local_unnamed_addr {
dec_label_pc_3809:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3814() local_unnamed_addr {
dec_label_pc_3814:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3814 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3814 = add i32 %v0_3814, -1994644412
  %v2_3814 = inttoptr i32 %v1_3814 to i32*
  %v3_3814 = load i32, i32* %v2_3814, align 4
  %v4_3814 = sub i32 %v3_3814, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3814, i32* %v2_3814, align 4
  %v0_381a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_381a
}

define i32 @function_381b() local_unnamed_addr {
dec_label_pc_381b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3823() local_unnamed_addr {
dec_label_pc_3823:
  %v1_3823 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3823
}

define i32 @function_3828() local_unnamed_addr {
dec_label_pc_3828:
  %v0_3828 = call i32 @function_3809()
  ret i32 %v0_3828
}

define i32 @function_382a() local_unnamed_addr {
dec_label_pc_382a:
  %v0_3830 = call i32 @function_381b()
  ret i32 %v0_3830
}

define i32 @function_3832() local_unnamed_addr {
dec_label_pc_3832:
  %v1_3834 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3834
}

define i32 @function_3839() local_unnamed_addr {
dec_label_pc_3839:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3844() local_unnamed_addr {
dec_label_pc_3844:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3844 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3844 = add i32 %v0_3844, -1994644412
  %v2_3844 = inttoptr i32 %v1_3844 to i32*
  %v3_3844 = load i32, i32* %v2_3844, align 4
  %v4_3844 = sub i32 %v3_3844, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3844, i32* %v2_3844, align 4
  %v0_384a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_384a
}

define i32 @function_384b() local_unnamed_addr {
dec_label_pc_384b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3853() local_unnamed_addr {
dec_label_pc_3853:
  %v1_3853 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3853
}

define i32 @function_3858() local_unnamed_addr {
dec_label_pc_3858:
  %v0_3858 = call i32 @function_3839()
  ret i32 %v0_3858
}

define i32 @function_385a() local_unnamed_addr {
dec_label_pc_385a:
  %v0_3860 = call i32 @function_384b()
  ret i32 %v0_3860
}

define i32 @function_3862() local_unnamed_addr {
dec_label_pc_3862:
  %v1_3864 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3864
}

define i32 @function_3869() local_unnamed_addr {
dec_label_pc_3869:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3874() local_unnamed_addr {
dec_label_pc_3874:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3874 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3874 = add i32 %v0_3874, -1994644412
  %v2_3874 = inttoptr i32 %v1_3874 to i32*
  %v3_3874 = load i32, i32* %v2_3874, align 4
  %v4_3874 = sub i32 %v3_3874, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3874, i32* %v2_3874, align 4
  %v0_387a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_387a
}

define i32 @function_387b() local_unnamed_addr {
dec_label_pc_387b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3883() local_unnamed_addr {
dec_label_pc_3883:
  %v1_3883 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3883
}

define i32 @function_3888() local_unnamed_addr {
dec_label_pc_3888:
  %v0_3888 = call i32 @function_3869()
  ret i32 %v0_3888
}

define i32 @function_388a() local_unnamed_addr {
dec_label_pc_388a:
  %v0_3890 = call i32 @function_387b()
  ret i32 %v0_3890
}

define i32 @function_3892() local_unnamed_addr {
dec_label_pc_3892:
  %v1_3894 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3894
}

define i32 @function_3899() local_unnamed_addr {
dec_label_pc_3899:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38a4() local_unnamed_addr {
dec_label_pc_38a4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_38a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_38a4 = add i32 %v0_38a4, -1994644412
  %v2_38a4 = inttoptr i32 %v1_38a4 to i32*
  %v3_38a4 = load i32, i32* %v2_38a4, align 4
  %v4_38a4 = sub i32 %v3_38a4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_38a4, i32* %v2_38a4, align 4
  %v0_38aa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_38aa
}

define i32 @function_38ab() local_unnamed_addr {
dec_label_pc_38ab:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38b3() local_unnamed_addr {
dec_label_pc_38b3:
  %v1_38b3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_38b3
}

define i32 @function_38b8() local_unnamed_addr {
dec_label_pc_38b8:
  %v0_38b8 = call i32 @function_3899()
  ret i32 %v0_38b8
}

define i32 @function_38ba() local_unnamed_addr {
dec_label_pc_38ba:
  %v0_38c0 = call i32 @function_38ab()
  ret i32 %v0_38c0
}

define i32 @function_38c2() local_unnamed_addr {
dec_label_pc_38c2:
  %v1_38c4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_38c4
}

define i32 @function_38c9() local_unnamed_addr {
dec_label_pc_38c9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38d4() local_unnamed_addr {
dec_label_pc_38d4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_38d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_38d4 = add i32 %v0_38d4, -1994644412
  %v2_38d4 = inttoptr i32 %v1_38d4 to i32*
  %v3_38d4 = load i32, i32* %v2_38d4, align 4
  %v4_38d4 = sub i32 %v3_38d4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_38d4, i32* %v2_38d4, align 4
  %v0_38da = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_38da
}

define i32 @function_38db() local_unnamed_addr {
dec_label_pc_38db:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38e3() local_unnamed_addr {
dec_label_pc_38e3:
  %v1_38e3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_38e3
}

define i32 @function_38e8() local_unnamed_addr {
dec_label_pc_38e8:
  %v0_38e8 = call i32 @function_38c9()
  ret i32 %v0_38e8
}

define i32 @function_38ea() local_unnamed_addr {
dec_label_pc_38ea:
  %v0_38f0 = call i32 @function_38db()
  ret i32 %v0_38f0
}

define i32 @function_38f2() local_unnamed_addr {
dec_label_pc_38f2:
  %v1_38f4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_38f4
}

define i32 @function_38f9() local_unnamed_addr {
dec_label_pc_38f9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3904() local_unnamed_addr {
dec_label_pc_3904:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3904 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3904 = add i32 %v0_3904, -1994644412
  %v2_3904 = inttoptr i32 %v1_3904 to i32*
  %v3_3904 = load i32, i32* %v2_3904, align 4
  %v4_3904 = sub i32 %v3_3904, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3904, i32* %v2_3904, align 4
  %v0_390a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_390a
}

define i32 @function_390b() local_unnamed_addr {
dec_label_pc_390b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3913() local_unnamed_addr {
dec_label_pc_3913:
  %v1_3913 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3913
}

define i32 @function_3918() local_unnamed_addr {
dec_label_pc_3918:
  %v0_3918 = call i32 @function_38f9()
  ret i32 %v0_3918
}

define i32 @function_391a() local_unnamed_addr {
dec_label_pc_391a:
  %v0_3920 = call i32 @function_390b()
  ret i32 %v0_3920
}

define i32 @function_3922() local_unnamed_addr {
dec_label_pc_3922:
  %v1_3924 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3924
}

define i32 @function_3929() local_unnamed_addr {
dec_label_pc_3929:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3934() local_unnamed_addr {
dec_label_pc_3934:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3934 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3934 = add i32 %v0_3934, -1994644412
  %v2_3934 = inttoptr i32 %v1_3934 to i32*
  %v3_3934 = load i32, i32* %v2_3934, align 4
  %v4_3934 = sub i32 %v3_3934, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3934, i32* %v2_3934, align 4
  %v0_393a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_393a
}

define i32 @function_393b() local_unnamed_addr {
dec_label_pc_393b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3943() local_unnamed_addr {
dec_label_pc_3943:
  %v1_3943 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3943
}

define i32 @function_3948() local_unnamed_addr {
dec_label_pc_3948:
  %v0_3948 = call i32 @function_3929()
  ret i32 %v0_3948
}

define i32 @function_394a() local_unnamed_addr {
dec_label_pc_394a:
  %v0_3950 = call i32 @function_393b()
  ret i32 %v0_3950
}

define i32 @function_3952() local_unnamed_addr {
dec_label_pc_3952:
  %v1_3954 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3954
}

define i32 @function_3959() local_unnamed_addr {
dec_label_pc_3959:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3964() local_unnamed_addr {
dec_label_pc_3964:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3964 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3964 = add i32 %v0_3964, -1994644412
  %v2_3964 = inttoptr i32 %v1_3964 to i32*
  %v3_3964 = load i32, i32* %v2_3964, align 4
  %v4_3964 = sub i32 %v3_3964, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3964, i32* %v2_3964, align 4
  %v0_396a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_396a
}

define i32 @function_396b() local_unnamed_addr {
dec_label_pc_396b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3973() local_unnamed_addr {
dec_label_pc_3973:
  %v1_3973 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3973
}

define i32 @function_3978() local_unnamed_addr {
dec_label_pc_3978:
  %v0_3978 = call i32 @function_3959()
  ret i32 %v0_3978
}

define i32 @function_397a() local_unnamed_addr {
dec_label_pc_397a:
  %v0_3980 = call i32 @function_396b()
  ret i32 %v0_3980
}

define i32 @function_3982() local_unnamed_addr {
dec_label_pc_3982:
  %v1_3984 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3984
}

define i32 @function_3989() local_unnamed_addr {
dec_label_pc_3989:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3994() local_unnamed_addr {
dec_label_pc_3994:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3994 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3994 = add i32 %v0_3994, -1994644412
  %v2_3994 = inttoptr i32 %v1_3994 to i32*
  %v3_3994 = load i32, i32* %v2_3994, align 4
  %v4_3994 = sub i32 %v3_3994, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3994, i32* %v2_3994, align 4
  %v0_399a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_399a
}

define i32 @function_399b() local_unnamed_addr {
dec_label_pc_399b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_39a3() local_unnamed_addr {
dec_label_pc_39a3:
  %v1_39a3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_39a3
}

define i32 @function_39a8() local_unnamed_addr {
dec_label_pc_39a8:
  %v0_39a8 = call i32 @function_3989()
  ret i32 %v0_39a8
}

define i32 @function_39aa() local_unnamed_addr {
dec_label_pc_39aa:
  %v0_39b0 = call i32 @function_399b()
  ret i32 %v0_39b0
}

define i32 @function_39b2() local_unnamed_addr {
dec_label_pc_39b2:
  %v1_39b4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_39b4
}

define i32 @function_39b9() local_unnamed_addr {
dec_label_pc_39b9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_39c4() local_unnamed_addr {
dec_label_pc_39c4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_39c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_39c4 = add i32 %v0_39c4, -1994644412
  %v2_39c4 = inttoptr i32 %v1_39c4 to i32*
  %v3_39c4 = load i32, i32* %v2_39c4, align 4
  %v4_39c4 = sub i32 %v3_39c4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_39c4, i32* %v2_39c4, align 4
  %v0_39ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_39ca
}

define i32 @function_39cb() local_unnamed_addr {
dec_label_pc_39cb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_39d3() local_unnamed_addr {
dec_label_pc_39d3:
  %v1_39d3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_39d3
}

define i32 @function_39d8() local_unnamed_addr {
dec_label_pc_39d8:
  %v0_39d8 = call i32 @function_39b9()
  ret i32 %v0_39d8
}

define i32 @function_39da() local_unnamed_addr {
dec_label_pc_39da:
  %v0_39e0 = call i32 @function_39cb()
  ret i32 %v0_39e0
}

define i32 @function_39e2() local_unnamed_addr {
dec_label_pc_39e2:
  %v1_39e4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_39e4
}

define i32 @function_39e9() local_unnamed_addr {
dec_label_pc_39e9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_39f4() local_unnamed_addr {
dec_label_pc_39f4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_39f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_39f4 = add i32 %v0_39f4, -1994644412
  %v2_39f4 = inttoptr i32 %v1_39f4 to i32*
  %v3_39f4 = load i32, i32* %v2_39f4, align 4
  %v4_39f4 = sub i32 %v3_39f4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_39f4, i32* %v2_39f4, align 4
  %v0_39fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_39fa
}

define i32 @function_39fb() local_unnamed_addr {
dec_label_pc_39fb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a03() local_unnamed_addr {
dec_label_pc_3a03:
  %v1_3a03 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3a03
}

define i32 @function_3a08() local_unnamed_addr {
dec_label_pc_3a08:
  %v0_3a08 = call i32 @function_39e9()
  ret i32 %v0_3a08
}

define i32 @function_3a0a() local_unnamed_addr {
dec_label_pc_3a0a:
  %v0_3a10 = call i32 @function_39fb()
  ret i32 %v0_3a10
}

define i32 @function_3a12() local_unnamed_addr {
dec_label_pc_3a12:
  %v1_3a14 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3a14
}

define i32 @function_3a19() local_unnamed_addr {
dec_label_pc_3a19:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a24() local_unnamed_addr {
dec_label_pc_3a24:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3a24 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3a24 = add i32 %v0_3a24, -1994644412
  %v2_3a24 = inttoptr i32 %v1_3a24 to i32*
  %v3_3a24 = load i32, i32* %v2_3a24, align 4
  %v4_3a24 = sub i32 %v3_3a24, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3a24, i32* %v2_3a24, align 4
  %v0_3a2a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a2a
}

define i32 @function_3a2b() local_unnamed_addr {
dec_label_pc_3a2b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a33() local_unnamed_addr {
dec_label_pc_3a33:
  %v1_3a33 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3a33
}

define i32 @function_3a38() local_unnamed_addr {
dec_label_pc_3a38:
  %v0_3a38 = call i32 @function_3a19()
  ret i32 %v0_3a38
}

define i32 @function_3a3a() local_unnamed_addr {
dec_label_pc_3a3a:
  %v0_3a40 = call i32 @function_3a2b()
  ret i32 %v0_3a40
}

define i32 @function_3a42() local_unnamed_addr {
dec_label_pc_3a42:
  %v1_3a44 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3a44
}

define i32 @function_3a49() local_unnamed_addr {
dec_label_pc_3a49:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a54() local_unnamed_addr {
dec_label_pc_3a54:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3a54 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3a54 = add i32 %v0_3a54, -1994644412
  %v2_3a54 = inttoptr i32 %v1_3a54 to i32*
  %v3_3a54 = load i32, i32* %v2_3a54, align 4
  %v4_3a54 = sub i32 %v3_3a54, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3a54, i32* %v2_3a54, align 4
  %v0_3a5a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a5a
}

define i32 @function_3a5b() local_unnamed_addr {
dec_label_pc_3a5b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a63() local_unnamed_addr {
dec_label_pc_3a63:
  %v1_3a63 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3a63
}

define i32 @function_3a68() local_unnamed_addr {
dec_label_pc_3a68:
  %v0_3a68 = call i32 @function_3a49()
  ret i32 %v0_3a68
}

define i32 @function_3a6a() local_unnamed_addr {
dec_label_pc_3a6a:
  %v0_3a70 = call i32 @function_3a5b()
  ret i32 %v0_3a70
}

define i32 @function_3a72() local_unnamed_addr {
dec_label_pc_3a72:
  %v1_3a74 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3a74
}

define i32 @function_3a79() local_unnamed_addr {
dec_label_pc_3a79:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a84() local_unnamed_addr {
dec_label_pc_3a84:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3a84 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3a84 = add i32 %v0_3a84, -1994644412
  %v2_3a84 = inttoptr i32 %v1_3a84 to i32*
  %v3_3a84 = load i32, i32* %v2_3a84, align 4
  %v4_3a84 = sub i32 %v3_3a84, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3a84, i32* %v2_3a84, align 4
  %v0_3a8a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a8a
}

define i32 @function_3a8b() local_unnamed_addr {
dec_label_pc_3a8b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a93() local_unnamed_addr {
dec_label_pc_3a93:
  %v1_3a93 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3a93
}

define i32 @function_3a98() local_unnamed_addr {
dec_label_pc_3a98:
  %v0_3a98 = call i32 @function_3a79()
  ret i32 %v0_3a98
}

define i32 @function_3a9a() local_unnamed_addr {
dec_label_pc_3a9a:
  %v0_3aa0 = call i32 @function_3a8b()
  ret i32 %v0_3aa0
}

define i32 @function_3aa2() local_unnamed_addr {
dec_label_pc_3aa2:
  %v1_3aa4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3aa4
}

define i32 @function_3aa9() local_unnamed_addr {
dec_label_pc_3aa9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3ab4() local_unnamed_addr {
dec_label_pc_3ab4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3ab4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3ab4 = add i32 %v0_3ab4, -1994644412
  %v2_3ab4 = inttoptr i32 %v1_3ab4 to i32*
  %v3_3ab4 = load i32, i32* %v2_3ab4, align 4
  %v4_3ab4 = sub i32 %v3_3ab4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3ab4, i32* %v2_3ab4, align 4
  %v0_3aba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3aba
}

define i32 @function_3abb() local_unnamed_addr {
dec_label_pc_3abb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3ac3() local_unnamed_addr {
dec_label_pc_3ac3:
  %v1_3ac3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3ac3
}

define i32 @function_3ac8() local_unnamed_addr {
dec_label_pc_3ac8:
  %v0_3ac8 = call i32 @function_3aa9()
  ret i32 %v0_3ac8
}

define i32 @function_3aca() local_unnamed_addr {
dec_label_pc_3aca:
  %v0_3ad0 = call i32 @function_3abb()
  ret i32 %v0_3ad0
}

define i32 @function_3ad2() local_unnamed_addr {
dec_label_pc_3ad2:
  %v1_3ad4 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3ad4
}

define i32 @function_3ad9() local_unnamed_addr {
dec_label_pc_3ad9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3ae4() local_unnamed_addr {
dec_label_pc_3ae4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3ae4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3ae4 = add i32 %v0_3ae4, -1994644412
  %v2_3ae4 = inttoptr i32 %v1_3ae4 to i32*
  %v3_3ae4 = load i32, i32* %v2_3ae4, align 4
  %v4_3ae4 = sub i32 %v3_3ae4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3ae4, i32* %v2_3ae4, align 4
  %v0_3aea = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3aea
}

define i32 @function_3aeb() local_unnamed_addr {
dec_label_pc_3aeb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3af3() local_unnamed_addr {
dec_label_pc_3af3:
  %v1_3af3 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3af3
}

define i32 @function_3af8() local_unnamed_addr {
dec_label_pc_3af8:
  %v0_3af8 = call i32 @function_3ad9()
  ret i32 %v0_3af8
}

define i32 @function_3afa() local_unnamed_addr {
dec_label_pc_3afa:
  %v0_3b00 = call i32 @function_3aeb()
  ret i32 %v0_3b00
}

define i32 @function_3b02() local_unnamed_addr {
dec_label_pc_3b02:
  %v1_3b04 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3b04
}

define i32 @function_3b09() local_unnamed_addr {
dec_label_pc_3b09:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3b14() local_unnamed_addr {
dec_label_pc_3b14:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3b14 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3b14 = add i32 %v0_3b14, -1994644412
  %v2_3b14 = inttoptr i32 %v1_3b14 to i32*
  %v3_3b14 = load i32, i32* %v2_3b14, align 4
  %v4_3b14 = sub i32 %v3_3b14, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_3b14, i32* %v2_3b14, align 4
  %v0_3b1a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b1a
}

define i32 @function_3b1b() local_unnamed_addr {
dec_label_pc_3b1b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3b23() local_unnamed_addr {
dec_label_pc_3b23:
  %v1_3b23 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3b23
}

define i32 @function_3b28() local_unnamed_addr {
dec_label_pc_3b28:
  %v0_3b28 = call i32 @function_3b09()
  ret i32 %v0_3b28
}

define i32 @function_3b2a() local_unnamed_addr {
dec_label_pc_3b2a:
  %v0_3b30 = call i32 @function_3b1b()
  ret i32 %v0_3b30
}

define i32 @function_3b32() local_unnamed_addr {
dec_label_pc_3b32:
  %v1_3b34 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3b34
}

define i32 @function_3b39() local_unnamed_addr {
dec_label_pc_3b39:
  %v1_3b40 = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3b40
}

define i32 @function_3b46() local_unnamed_addr {
dec_label_pc_3b46:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b46 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b46
}

define i32 @function_3b47(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b47:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3b4f() local_unnamed_addr {
dec_label_pc_3b4f:
  %v1_3b4f = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3b4f
}

define i32 @function_3b54() local_unnamed_addr {
dec_label_pc_3b54:
  %v0_3b54 = load i32, i32* @ebx, align 4
  %v1_3b66 = call i32 @function_3b47(i32 %v0_3b54)
  ret i32 %v1_3b66
}

define i32 @function_3b68() local_unnamed_addr {
dec_label_pc_3b68:
  %v0_3b68 = call i32 @function_3b54()
  ret i32 %v0_3b68
}

define i32 @function_3b6a() local_unnamed_addr {
dec_label_pc_3b6a:
  %v1_3b6c = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3b6c
}

define i32 @function_3b72() local_unnamed_addr {
dec_label_pc_3b72:
  %eax.global-to-local = alloca i32, align 4
  %v0_3b72 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3b72
}

define i32 @function_3b73(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b73:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3b7b() local_unnamed_addr {
dec_label_pc_3b7b:
  %v1_3b7b = call i32 @function_2eff(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_3b7b

; uselistorder directives
  uselistorder i32 (i32)* @function_2eff, { 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_3b80() local_unnamed_addr {
dec_label_pc_3b80:
  %v0_3b80 = load i32, i32* @ebx, align 4
  %v1_3b92 = call i32 @function_3b73(i32 %v0_3b80)
  ret i32 %v1_3b92
}

define i32 @function_3b94() local_unnamed_addr {
dec_label_pc_3b94:
  %v0_3b94 = call i32 @function_3b80()
  ret i32 %v0_3b94
}

define i1 @InitWarning(i32 %str) local_unnamed_addr {
dec_label_pc_3ba0:
  ret i1 false
}

define i32 @function_3bf9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3bf9:
  %v1_3c02 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3c02 = icmp eq i32 %v1_3c02, %arg1
  %v1_3c09 = icmp eq i1 %v3_3c02, false
  br i1 %v1_3c09, label %dec_label_pc_3c11, label %dec_label_pc_3c0b

dec_label_pc_3c0b:                                ; preds = %dec_label_pc_3bf9
  ret i32 ptrtoint (i8** @global_var_1.3274 to i32)

dec_label_pc_3c11:                                ; preds = %dec_label_pc_3bf9
  ret i32 ptrtoint (i8** @global_var_1.3274 to i32)
}

define i1 @InitError(i32 %str) local_unnamed_addr {
dec_label_pc_3c50:
  %stack_var_-24 = alloca i32, align 4
  %v2_3c5b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_3c5b, i32* @ebx, align 4
  ret i1 false
}

define i32 @function_3ca8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3ca8:
  %eax.global-to-local = alloca i32, align 4
  %v0_3cb1 = load i32, i32* %eax.global-to-local, align 4
  %v4_3cb1 = add i32 %v0_3cb1, 20
  %v14_3cb1 = icmp eq i32 %v4_3cb1, 0
  store i32 %v4_3cb1, i32* %eax.global-to-local, align 4
  %v1_3cb6 = icmp eq i1 %v14_3cb1, false
  br i1 %v1_3cb6, label %dec_label_pc_3cbe, label %dec_label_pc_3cb8

dec_label_pc_3cb8:                                ; preds = %dec_label_pc_3ca8
  ret i32 %v4_3cb1

dec_label_pc_3cbe:                                ; preds = %dec_label_pc_3ca8
  ret i32 %v4_3cb1

; uselistorder directives
  uselistorder i32 %v4_3cb1, { 1, 0, 2, 3 }
}

define i1 @Bind(i32 %addr, i32 %flags) local_unnamed_addr {
dec_label_pc_3d00:
  %v0_3d07 = load i32, i32* @eax, align 4
  store i32 %v0_3d07, i32* @edi, align 4
  %v0_3d09 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  %v0_3d15 = load i32, i32* @edx, align 4
  %v2_3d15 = urem i32 %v0_3d15, 2
  %v3_3d15 = icmp eq i32 %v2_3d15, 0
  br i1 %v3_3d15, label %bb, label %dec_label_pc_3d28

bb:                                               ; preds = %dec_label_pc_3d00
  %v2_3d26 = call i32 @function_3d78(i32 %v0_3d09)
  %phitmp = urem i32 %v2_3d26, 2
  %phitmp3 = icmp ne i32 %phitmp, 0
  br label %dec_label_pc_3d28

dec_label_pc_3d28:                                ; preds = %bb, %dec_label_pc_3d00
  %v3_3d38 = phi i1 [ %phitmp3, %bb ], [ false, %dec_label_pc_3d00 ]
  ret i1 %v3_3d38
}

define i32 @function_3d4b() local_unnamed_addr {
dec_label_pc_3d4b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3d52(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3d52:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3d52 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3d52 = add i32 %v0_3d52, 1696343124
  %v2_3d52 = inttoptr i32 %v1_3d52 to i32*
  %v3_3d52 = load i32, i32* %v2_3d52, align 4
  %v4_3d52 = add i32 %v3_3d52, -1
  store i32 %v4_3d52, i32* %v2_3d52, align 4
  %v0_3d58 = load i32, i32* %edx.global-to-local, align 4
  %v1_3d58 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3d58 = xor i32 %v1_3d58, %v0_3d58
  %v3_3d58 = icmp eq i32 %v2_3d58, 0
  store i32 %v2_3d58, i32* %edx.global-to-local, align 4
  %v0_3d5e = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_3d5e, i32* @eax, align 4
  %v1_3d60 = icmp eq i1 %v3_3d58, false
  br i1 %v1_3d60, label %bb, label %dec_label_pc_3d62

bb:                                               ; preds = %dec_label_pc_3d52
  %v2_3d60 = call i32 @function_3da3()
  br label %dec_label_pc_3d62

dec_label_pc_3d62:                                ; preds = %bb, %dec_label_pc_3d52
  %v0_3d75 = phi i32 [ %v2_3d60, %bb ], [ %v0_3d5e, %dec_label_pc_3d52 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_3d75
}

define i32 @function_3d78(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d78:
  %v6_3d7b = load i32, i32* @eax, align 4
  ret i32 %v6_3d7b
}

define i32 @function_3d81() local_unnamed_addr {
dec_label_pc_3d81:
  %v0_3d81 = load i32, i32* @eax, align 4
  %v2_3d81 = mul i32 %v0_3d81, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_3d81 = add i32 %v0_3d81, -1595159179
  %v4_3d81 = add i32 %v3_3d81, %v2_3d81
  %v5_3d81 = inttoptr i32 %v4_3d81 to i32*
  %v6_3d81 = load i32, i32* %v5_3d81, align 4
  %v7_3d81 = add i32 %v6_3d81, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v7_3d81, i32* %v5_3d81, align 4
  %v0_3d90 = call i32 @function_3d4b()
  ret i32 %v0_3d90

; uselistorder directives
  uselistorder i32 %v0_3d81, { 1, 0 }
}

define i32 @function_3d98() local_unnamed_addr {
dec_label_pc_3d98:
  %ebx.global-to-local = alloca i32, align 4
  %v0_3d98 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_3d98, i32* @eax, align 4
  %v1_3d9a = call i1 @InitError(i32 ptrtoint (i32* @0 to i32))
  %v3_3d9a = sext i1 %v1_3d9a to i32
  store i32 %v3_3d9a, i32* @eax, align 4
  %v0_3da1 = call i32 @function_3d4b()
  ret i32 %v0_3da1

; uselistorder directives
  uselistorder i32 ()* @function_3d4b, { 1, 0 }
}

define i32 @function_3da3() local_unnamed_addr {
dec_label_pc_3da3:
  %v0_3da8 = load i32, i32* @eax, align 4
  ret i32 %v0_3da8
}

define i1 @_Z8AppInit2RN5boost12thread_groupE(i32 %threadGroup) local_unnamed_addr {
dec_label_pc_3dc0:
  %tmp104 = urem i32 %threadGroup, 2
  %tmp105 = icmp ne i32 %tmp104, 0
  ret i1 %tmp105
}

define i32 @function_3eeb() local_unnamed_addr {
dec_label_pc_3eeb:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3eeb = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_3eeb, i32* @eax, align 4
  %v1_3eed = call i1 @InitError(i32 ptrtoint (i32* @0 to i32))
  %v3_3eed = sext i1 %v1_3eed to i32
  %v0_3ef4 = load i32, i32* @ebx, align 4
  %v0_3efc = load i32, i32* %ebp.global-to-local, align 4
  %v1_3efc = add i32 %v0_3efc, -28
  %v2_3efc = inttoptr i32 %v1_3efc to i32*
  %v3_3efc = load i32, i32* %v2_3efc, align 4
  %v1_3eff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3eff = icmp eq i32 %v1_3eff, %v3_3efc
  store i32 %v3_3eed, i32* @eax, align 4
  %v1_3f08 = icmp eq i1 %v3_3eff, false
  br i1 %v1_3f08, label %bb, label %dec_label_pc_3f0e

bb:                                               ; preds = %dec_label_pc_3eeb
  %v3_3f08 = call i32 @function_6eb0(i32 %v0_3ef4)
  %v0_3f0e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_3f0e

dec_label_pc_3f0e:                                ; preds = %bb, %dec_label_pc_3eeb
  %v0_3f15 = phi i32 [ %v3_3f08, %bb ], [ %v3_3eed, %dec_label_pc_3eeb ]
  %v0_3f0e = phi i32 [ %v0_3f0e.pre, %bb ], [ %v0_3efc, %dec_label_pc_3eeb ]
  %v1_3f0e = add i32 %v0_3f0e, -12
  %v1_3f11 = inttoptr i32 %v1_3f0e to i32*
  %v2_3f11 = load i32, i32* %v1_3f11, align 4
  store i32 %v2_3f11, i32* %ebx.global-to-local, align 4
  %v1_3f14 = inttoptr i32 %v0_3f0e to i32*
  %v2_3f14 = load i32, i32* %v1_3f14, align 4
  store i32 %v2_3f14, i32* %ebp.global-to-local, align 4
  ret i32 %v0_3f15

; uselistorder directives
  uselistorder i32 %v0_3f0e, { 1, 0 }
}

define i32 @function_3fd6() local_unnamed_addr {
dec_label_pc_3fd6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4046() local_unnamed_addr {
dec_label_pc_4046:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4226(i32 %arg1) local_unnamed_addr {
dec_label_pc_4226:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_42f3() local_unnamed_addr {
dec_label_pc_42f3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_430e() local_unnamed_addr {
dec_label_pc_430e:
  %v0_430e = call i32 @function_f8a0f8a0()
  ret i32 %v0_430e
}

define i32 @function_43fe() local_unnamed_addr {
dec_label_pc_43fe:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_43fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_43fe = add i32 %v0_43fe, -565115
  %v2_43fe = inttoptr i32 %v1_43fe to i8*
  %v3_43fe = load i8, i8* %v2_43fe, align 1
  %v4_43fe = load i32, i32* %ecx.global-to-local, align 4
  %v5_43fe = trunc i32 %v4_43fe to i8
  %v6_43fe = add i8 %v5_43fe, %v3_43fe
  store i8 %v6_43fe, i8* %v2_43fe, align 1
  %v1_4404 = call i32 @function_8dfffffffce8()
  ret i32 %v1_4404
}

define i32 @function_4495(i16 %arg1) local_unnamed_addr {
dec_label_pc_4495:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4495 = load i32, i32* %ebp.global-to-local, align 4
  %v1_4495 = add i32 %v0_4495, -305275
  %v2_4495 = inttoptr i32 %v1_4495 to i32*
  %v3_4495 = load i32, i32* %v2_4495, align 4
  %v4_4495 = sub i32 %v3_4495, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_4495, i32* %v2_4495, align 4
  %v0_449b = load i32, i32* %ecx.global-to-local, align 4
  %v1_449b = add i32 %v0_449b, -955767740
  %v2_449b = inttoptr i32 %v1_449b to i32*
  %v3_449b = load i32, i32* %v2_449b, align 4
  %v4_449b = sub i32 %v3_449b, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_449b, i32* %v2_449b, align 4
  %v0_44a2 = load i32, i32* %eax.global-to-local, align 4
  %v11_44a2 = and i32 %v0_44a2, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_44a2, i32* %eax.global-to-local, align 4
  ret i32 %v11_44a2

; uselistorder directives
  uselistorder i32 %v11_44a2, { 1, 0 }
}

define i32 @function_4501() local_unnamed_addr {
dec_label_pc_4501:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_451c() local_unnamed_addr {
dec_label_pc_451c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4622() local_unnamed_addr {
dec_label_pc_4622:
  %eax.global-to-local = alloca i32, align 4
  %v2_4622 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_4622
}

define i32 @function_462f() local_unnamed_addr {
dec_label_pc_462f:
  %eax.global-to-local = alloca i32, align 4
  %v0_462f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_462f
}

define i32 @function_46af() local_unnamed_addr {
dec_label_pc_46af:
  %ebp.global-to-local = alloca i32, align 4
  %v0_46af = load i32, i32* %ebp.global-to-local, align 4
  %v1_46af = add i32 %v0_46af, -1185
  ret i32 %v1_46af
}

define i32 @function_4777() local_unnamed_addr {
dec_label_pc_4777:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_4777 = load i32, i32* %eax.global-to-local, align 4
  %v1_4777 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_4777, i32* %ebp.global-to-local, align 4
  %v10_4778 = and i32 %v1_4777, or (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 -256)
  store i32 %v10_4778, i32* %eax.global-to-local, align 4
  %v0_477a = load i32, i32* %ebx.global-to-local, align 4
  %v1_477a = add i32 %v0_477a, -507771
  %v2_477a = inttoptr i32 %v1_477a to i8*
  %v3_477a = load i8, i8* %v2_477a, align 1
  %v4_477a = load i32, i32* %ecx.global-to-local, align 4
  %v5_477a = trunc i32 %v4_477a to i8
  %v6_477a = add i8 %v5_477a, %v3_477a
  store i8 %v6_477a, i8* %v2_477a, align 1
  %v0_4780 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4780 = add i32 %v0_4780, -506731
  %v2_4780 = inttoptr i32 %v1_4780 to i32*
  %v3_4780 = load i32, i32* %v2_4780, align 4
  %v4_4780 = sub i32 %v3_4780, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_4780, i32* %v2_4780, align 4
  %v0_4786 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4786
}

define i32 @function_485d() local_unnamed_addr {
dec_label_pc_485d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_485d = load i32, i32* %ebx.global-to-local, align 4
  %v1_485d = add i32 %v0_485d, -507771
  %v2_485d = inttoptr i32 %v1_485d to i8*
  %v3_485d = load i8, i8* %v2_485d, align 1
  %v4_485d = load i32, i32* %ecx.global-to-local, align 4
  %v5_485d = trunc i32 %v4_485d to i8
  %v6_485d = add i8 %v5_485d, %v3_485d
  store i8 %v6_485d, i8* %v2_485d, align 1
  %v0_4863 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4863 = add i32 %v0_4863, -506731
  %v2_4863 = inttoptr i32 %v1_4863 to i32*
  %v3_4863 = load i32, i32* %v2_4863, align 4
  %v4_4863 = sub i32 %v3_4863, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_4863, i32* %v2_4863, align 4
  %v0_4869 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4869
}

define i32 @function_4875() local_unnamed_addr {
dec_label_pc_4875:
  %ebp.global-to-local = alloca i32, align 4
  %v0_4875 = load i32, i32* %ebp.global-to-local, align 4
  %v1_4875 = add i32 %v0_4875, -1179
  ret i32 %v1_4875
}

define i32 @function_48b7() local_unnamed_addr {
dec_label_pc_48b7:
  %v0_48b7 = load i32, i32* @ebp, align 4
  %v1_48b7 = add i32 %v0_48b7, -1175
  ret i32 %v1_48b7
}

define i32 @function_496a() local_unnamed_addr {
dec_label_pc_496a:
  %eax.global-to-local = alloca i32, align 4
  %v0_496a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_496a
}

define i32 @function_49e5() local_unnamed_addr {
dec_label_pc_49e5:
  %eax.global-to-local = alloca i32, align 4
  %v0_49e5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_49e5
}

define i32 @function_4a95(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4a95:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4bd6() local_unnamed_addr {
dec_label_pc_4bd6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4c66() local_unnamed_addr {
dec_label_pc_4c66:
  %eax.global-to-local = alloca i32, align 4
  %v0_4c66 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4c66
}

define i32 @function_4c87() local_unnamed_addr {
dec_label_pc_4c87:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4d7c() local_unnamed_addr {
dec_label_pc_4d7c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4ea0() local_unnamed_addr {
dec_label_pc_4ea0:
  %st0.global-to-local = alloca x86_fp80, align 4
  %v1_4ea0 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_4ea0 = fsub x86_fp80 %v1_4ea0, %v1_4ea0
  store x86_fp80 %v3_4ea0, x86_fp80* %st0.global-to-local, align 4
  %v0_4ea2 = call i32 @function_c7ffffb4()
  ret i32 %v0_4ea2
}

define i32 @function_4f15() local_unnamed_addr {
dec_label_pc_4f15:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4f48() local_unnamed_addr {
dec_label_pc_4f48:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f48 = load i32, i32* %eax.global-to-local, align 4
  %v2_4f48 = add i32 %v0_4f48, 188
  %v2_4f4f = and i32 %v2_4f48, zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32)
  %v2_4f75 = add nuw nsw i32 %v2_4f4f, 173
  %v16_4f75 = and i32 %v2_4f75, 253
  %v18_4f75 = and i32 %v0_4f48, -256
  %v19_4f75 = or i32 %v16_4f75, %v18_4f75
  store i32 %v19_4f75, i32* %eax.global-to-local, align 4
  ret i32 %v19_4f75

; uselistorder directives
  uselistorder i32 %v0_4f48, { 1, 0 }
}

define i32 @function_4fb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_4fb8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_502f() local_unnamed_addr {
dec_label_pc_502f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_503d() local_unnamed_addr {
dec_label_pc_503d:
  %v0_503d = call i32 @function_52d7()
  ret i32 %v0_503d
}

define i32 @function_5078() local_unnamed_addr {
dec_label_pc_5078:
  %ebx.global-to-local = alloca i32, align 4
  %v0_5078 = load i32, i32* %ebx.global-to-local, align 4
  %v1_5080 = call i32 @function_4226(i32 %v0_5078)
  ret i32 %v1_5080
}

define i32 @function_5088() local_unnamed_addr {
dec_label_pc_5088:
  %v0_508f = call i32 @function_42f3()
  ret i32 %v0_508f
}

define i32 @function_50a8() local_unnamed_addr {
dec_label_pc_50a8:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_50a8 = add i32 %tmp91, -2208
  %v2_50a8 = inttoptr i32 %v1_50a8 to i32*
  %v3_50a8 = load i32, i32* %v2_50a8, align 4
  %v1_50ae = sub i32 %v3_50a8, ptrtoint (i32* @global_var_96.3308 to i32)
  ret i32 %v1_50ae
}

define i32 @function_50c0() local_unnamed_addr {
dec_label_pc_50c0:
  %ebp.global-to-local = alloca i32, align 4
  %v0_50c0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_50c0 = add i32 %v0_50c0, -1211
  ret i32 %v1_50c0
}

define i32 @function_510f() local_unnamed_addr {
dec_label_pc_510f:
  %tmp94 = call i32 @__decompiler_undefined_function_0()
  %v4_5111 = trunc i32 %tmp94 to i8
  %v5_5111 = icmp eq i8 %v4_5111, 0
  br i1 %v5_5111, label %bb, label %dec_label_pc_5119

bb:                                               ; preds = %dec_label_pc_510f
  %v1_5113 = call i32 @function_4046()
  store i32 %v1_5113, i32* @eax, align 4
  br label %dec_label_pc_5119

dec_label_pc_5119:                                ; preds = %bb, %dec_label_pc_510f
  %v0_5119 = call i32 @function_3fd6()
  ret i32 %v0_5119
}

define i32 @function_51b4() local_unnamed_addr {
dec_label_pc_51b4:
  %v0_51b4 = call i32 @function_48b7()
  ret i32 %v0_51b4
}

define i32 @function_51c0() local_unnamed_addr {
dec_label_pc_51c0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_525e() local_unnamed_addr {
dec_label_pc_525e:
  %v0_525e = call i32 @function_451c()
  ret i32 %v0_525e
}

define i32 @function_52c2() local_unnamed_addr {
dec_label_pc_52c2:
  %v0_52c2 = call i32 @function_c68a52c6()
  ret i32 %v0_52c2
}

define i32 @function_52d7() local_unnamed_addr {
dec_label_pc_52d7:
  %v3_52dd = load i32, i32* @eax, align 4
  ret i32 %v3_52dd
}

define i32 @function_52e5() local_unnamed_addr {
dec_label_pc_52e5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_52f3() local_unnamed_addr {
dec_label_pc_52f3:
  %eax.global-to-local = alloca i32, align 4
  %v0_52f3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_52f3
}

define i32 @function_52f8() local_unnamed_addr {
dec_label_pc_52f8:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_52f8 = load i32, i32* %ecx.global-to-local, align 4
  %v0_52fc = load i32, i32* %edx.global-to-local, align 4
  %v0_5300 = load i32, i32* @eax, align 4
  %v1_5308 = icmp eq i32 %v0_5300, 0
  %v1_530a = zext i1 %v1_5308 to i8
  %v2_530a = load i32, i32* %ebp.global-to-local, align 4
  %v3_530a = add i32 %v2_530a, -2192
  %v4_530a = inttoptr i32 %v3_530a to i8*
  store i8 %v1_530a, i8* %v4_530a, align 1
  %v3_5311 = call i32 @function_4a95(i32 %v0_5300, i32 %v0_52fc, i32 %v0_52f8)
  ret i32 %v3_5311
}

define i32 @function_5335() local_unnamed_addr {
dec_label_pc_5335:
  %v0_5335 = call i32 @function_c68a5339()
  ret i32 %v0_5335
}

define i32 @function_5342() local_unnamed_addr {
dec_label_pc_5342:
  %v0_5342 = call i32 @function_52e5()
  ret i32 %v0_5342
}

define i32 @function_5400() local_unnamed_addr {
dec_label_pc_5400:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_548f() local_unnamed_addr {
dec_label_pc_548f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_54a7() local_unnamed_addr {
dec_label_pc_54a7:
  %v0_54a7 = call i32 @function_52e5()
  ret i32 %v0_54a7

; uselistorder directives
  uselistorder i32 ()* @function_52e5, { 1, 0 }
}

define i32 @function_5506() local_unnamed_addr {
dec_label_pc_5506:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_55ce() local_unnamed_addr {
dec_label_pc_55ce:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5631(i32 %arg1) local_unnamed_addr {
dec_label_pc_5631:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v12_5636 = and i32 %arg1, 1024
  %v22_5636 = icmp ne i32 %v12_5636, 0
  %v2_5637 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_5637 = zext i8 %v2_5637 to i32
  %v4_5637 = load i32, i32* %eax.global-to-local, align 4
  %v5_5637 = and i32 %v4_5637, -256
  %v6_5637 = or i32 %v5_5637, %v3_5637
  store i32 %v6_5637, i32* %eax.global-to-local, align 4
  %v7_5637 = load i32, i32* %esi.global-to-local, align 4
  %v9_5637 = select i1 %v22_5636, i32 -1, i32 ptrtoint (i8** @global_var_1.3274 to i32)
  %v10_5637 = add i32 %v7_5637, %v9_5637
  store i32 %v10_5637, i32* %esi.global-to-local, align 4
  ret i32 %v6_5637
}

define i32 @function_568e() local_unnamed_addr {
dec_label_pc_568e:
  %v1_568e = call i32 @function_4fb8(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_568e
}

define i32 @function_5693() local_unnamed_addr {
dec_label_pc_5693:
  %eax.global-to-local = alloca i32, align 4
  %v3_5697 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_5697
}

define i32 @function_5757() local_unnamed_addr {
dec_label_pc_5757:
  %eax.global-to-local = alloca i32, align 4
  %v0_5757 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5757
}

define i32 @function_5765() local_unnamed_addr {
dec_label_pc_5765:
  %v0_5765 = call i32 @function_4c87()
  ret i32 %v0_5765
}

define i32 @function_5797() local_unnamed_addr {
dec_label_pc_5797:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_5797 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5797 = add i32 %v0_5797, -1980354105
  %v2_5797 = inttoptr i32 %v1_5797 to i32*
  %v3_5797 = load i32, i32* %v2_5797, align 4
  %v4_5797 = sub i32 %v3_5797, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5797, i32* %v2_5797, align 4
  %v0_579d = load i32, i32* %eax.global-to-local, align 4
  %v2_579d = load i1, i1* %cf.global-to-local, align 1
  %v3_579d = zext i1 %v2_579d to i32
  %v4_579d = add i32 %v0_579d, 220
  %v5_579d = add i32 %v4_579d, %v3_579d
  %v31_579d = urem i32 %v5_579d, 256
  %v33_579d = and i32 %v0_579d, -256
  %v34_579d = or i32 %v31_579d, %v33_579d
  store i32 %v34_579d, i32* @eax, align 4
  %v0_57a4 = load i32, i32* %edi.global-to-local, align 4
  %v4_57a6 = trunc i32 %v0_57a4 to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_57a6 = icmp eq i8 %v4_57a6, 0
  br i1 %v5_57a6, label %bb, label %dec_label_pc_57ae

bb:                                               ; preds = %dec_label_pc_5797
  %v2_57a8 = call i32 @function_4fb8(i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_57a8, i32* @eax, align 4
  br label %dec_label_pc_57ae

dec_label_pc_57ae:                                ; preds = %bb, %dec_label_pc_5797
  %v0_57ae = call i32 @function_5506()
  store i32 %v0_57ae, i32* %eax.global-to-local, align 4
  ret i32 %v0_57ae

; uselistorder directives
  uselistorder i32 %v0_579d, { 1, 0 }
}

define i32 @function_57b3() local_unnamed_addr {
dec_label_pc_57b3:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_5836() local_unnamed_addr {
dec_label_pc_5836:
  %v0_5836 = call i32 @function_502f()
  ret i32 %v0_5836
}

define i32 @function_58a4() local_unnamed_addr {
dec_label_pc_58a4:
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_58a7 = add i32 %tmp91, -1788
  store i32 %v1_58a7, i32* @eax, align 4
  %v1_58ad = call i1 @InitError(i32 ptrtoint (i32* @0 to i32))
  %v0_58b4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_58b4 = add i32 %v0_58b4, -1788
  store i32 %v1_58b4, i32* @eax, align 4
  %v0_58ba = call i32 @function_548f()
  ret i32 %v0_58ba
}

define i32 @function_5928() local_unnamed_addr {
dec_label_pc_5928:
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_592b = add i32 %tmp91, -1768
  store i32 %v1_592b, i32* @eax, align 4
  %v1_5931 = call i1 @InitError(i32 ptrtoint (i32* @0 to i32))
  %v0_5938 = load i32, i32* %ebp.global-to-local, align 4
  %v1_5938 = add i32 %v0_5938, -1768
  store i32 %v1_5938, i32* @eax, align 4
  %v0_593e = call i32 @function_548f()
  ret i32 %v0_593e

; uselistorder directives
  uselistorder i32 ()* @function_548f, { 1, 0 }
}

define i32 @function_5968() local_unnamed_addr {
dec_label_pc_5968:
  %v0_5968 = call i32 @function_4d7c()
  ret i32 %v0_5968
}

define i32 @function_59ab() local_unnamed_addr {
dec_label_pc_59ab:
  %v0_59ab = call i32 @function_4bd6()
  ret i32 %v0_59ab
}

define i32 @function_59c4() local_unnamed_addr {
dec_label_pc_59c4:
  %eax.global-to-local = alloca i32, align 4
  %v0_59c4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_59c4
}

define i32 @function_59d3() local_unnamed_addr {
dec_label_pc_59d3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_59ee() local_unnamed_addr {
dec_label_pc_59ee:
  %eax.global-to-local = alloca i32, align 4
  %v0_59ee = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_59ee
}

define i32 @function_5b41() local_unnamed_addr {
dec_label_pc_5b41:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5b41 = load i32, i32* @ebx, align 4
  %v1_5b41 = add i32 %v0_5b41, -410475
  %v2_5b41 = inttoptr i32 %v1_5b41 to i32*
  %v3_5b41 = load i32, i32* %v2_5b41, align 4
  %v4_5b41 = sub i32 %v3_5b41, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5b41, i32* %v2_5b41, align 4
  %v0_5b47 = load i32, i32* @ebp, align 4
  %v1_5b47 = add i32 %v0_5b47, 813961170
  %v2_5b47 = inttoptr i32 %v1_5b47 to i32*
  %v3_5b47 = load i32, i32* %v2_5b47, align 4
  %v4_5b47 = add i32 %v3_5b47, 1
  store i32 %v4_5b47, i32* %v2_5b47, align 4
  %v0_5b4d = load i32, i32* %eax.global-to-local, align 4
  %v5_5b4d = mul i32 %v0_5b4d, 2
  %v20_5b4d = and i32 %v5_5b4d, 254
  %v22_5b4d = and i32 %v0_5b4d, -256
  %v23_5b4d = or i32 %v20_5b4d, %v22_5b4d
  store i32 %v23_5b4d, i32* %eax.global-to-local, align 4
  %v0_5b4f = load i32, i32* @ebp, align 4
  %v1_5b4f = add i32 %v0_5b4f, -410491
  %v2_5b4f = inttoptr i32 %v1_5b4f to i8*
  %v3_5b4f = load i8, i8* %v2_5b4f, align 1
  %v4_5b4f = load i32, i32* %ecx.global-to-local, align 4
  %v5_5b4f = trunc i32 %v4_5b4f to i8
  %v6_5b4f = add i8 %v5_5b4f, %v3_5b4f
  store i8 %v6_5b4f, i8* %v2_5b4f, align 1
  %v0_5b55 = load i32, i32* @ebp, align 4
  %v1_5b55 = add i32 %v0_5b55, -558963
  %v2_5b55 = inttoptr i32 %v1_5b55 to i32*
  %v3_5b55 = load i32, i32* %v2_5b55, align 4
  %v4_5b55 = sub i32 %v3_5b55, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5b55, i32* %v2_5b55, align 4
  %v0_5b5b = load i32, i32* %ecx.global-to-local, align 4
  %v1_5b5b = add i32 %v0_5b5b, -1995955132
  %v2_5b5b = inttoptr i32 %v1_5b5b to i32*
  %v3_5b5b = load i32, i32* %v2_5b5b, align 4
  %v4_5b5b = inttoptr i32 %v3_5b5b to i8*
  %v6_5b5b = sub i32 %v3_5b5b, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v6_5b5b, i32* %v2_5b5b, align 4
  %v7_5b61 = icmp slt i8* %v4_5b5b, bitcast (i8** @global_var_1.3274 to i8*)
  br i1 %v7_5b61, label %dec_label_pc_5b87, label %dec_label_pc_5b63

dec_label_pc_5b63:                                ; preds = %dec_label_pc_5b41
  %v0_5b63 = load i32, i32* %eax.global-to-local, align 4
  %v2_5b63 = add i32 %v0_5b63, zext (i8 ptrtoint (i8* @global_var_89.3286 to i8) to i32)
  %v2_5b65 = and i32 %v2_5b63, 219
  %v10_5b65 = and i32 %v0_5b63, -256
  %v8_5b65 = or i32 %v2_5b65, %v10_5b65
  %v11_5b65 = or i32 %v8_5b65, 36
  store i32 %v11_5b65, i32* %eax.global-to-local, align 4
  %v0_5b67 = call i32 @_ZNSt8_Rb_treeI7NetworkS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_()
  store i32 %v0_5b67, i32* %eax.global-to-local, align 4
  %v0_5b6c = load i32, i32* @ebp, align 4
  %v1_5b6c = add i32 %v0_5b6c, -2188
  %v2_5b6c = inttoptr i32 %v1_5b6c to i32*
  %v3_5b6c = load i32, i32* %v2_5b6c, align 4
  store i32 %v3_5b6c, i32* %eax.global-to-local, align 4
  ret i32 %v3_5b6c

dec_label_pc_5b87:                                ; preds = %dec_label_pc_5b41
  %v0_5b87 = load i32, i32* @ebx, align 4
  %v1_5b87 = add i32 %v0_5b87, -550763
  %v2_5b87 = inttoptr i32 %v1_5b87 to i8*
  %v3_5b87 = load i8, i8* %v2_5b87, align 1
  %v4_5b87 = or i8 %v3_5b87, ptrtoint (i8* @global_var_ff.3305 to i8)
  store i8 %v4_5b87, i8* %v2_5b87, align 1
  store i32 0, i32* @ebx, align 4
  %v0_5b90 = load i32, i32* @edx, align 4
  %v1_5b90 = icmp eq i32 %v0_5b90, 0
  br i1 %v1_5b90, label %dec_label_pc_5b87.dec_label_pc_5bbe_crit_edge, label %dec_label_pc_5b94

dec_label_pc_5b87.dec_label_pc_5bbe_crit_edge:    ; preds = %dec_label_pc_5b87
  %v3_5bc6.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_5bbe

dec_label_pc_5b94:                                ; preds = %dec_label_pc_5b87
  store i32 %v0_5b90, i32* %eax.global-to-local, align 4
  %v0_5b96 = load i32, i32* @ebp, align 4
  %v1_5b96 = add i32 %v0_5b96, -2156
  store i32 %v1_5b96, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_5ba7

dec_label_pc_5b9e:                                ; preds = %dec_label_pc_5ba7
  store i32 %v0_5ba7, i32* %ecx.global-to-local, align 4
  %v1_5ba0 = add i32 %v0_5ba7, 8
  br label %dec_label_pc_5ba3

dec_label_pc_5ba3:                                ; preds = %dec_label_pc_5b9e, %dec_label_pc_5bac
  %v0_5bb9 = phi i32 [ %v0_5ba7, %dec_label_pc_5b9e ], [ %v0_5bb14, %dec_label_pc_5bac ]
  %storemerge.in.in = phi i32 [ %v1_5ba0, %dec_label_pc_5b9e ], [ %v1_5bac, %dec_label_pc_5bac ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_5ba3 = icmp eq i32 %storemerge, 0
  br i1 %v1_5ba3, label %dec_label_pc_5bb1, label %dec_label_pc_5ba7

dec_label_pc_5ba7:                                ; preds = %dec_label_pc_5ba3, %dec_label_pc_5b94
  %v0_5bb14 = phi i32 [ %v0_5bb9, %dec_label_pc_5ba3 ], [ %v1_5b96, %dec_label_pc_5b94 ]
  %v0_5ba7 = phi i32 [ %storemerge, %dec_label_pc_5ba3 ], [ %v0_5b90, %dec_label_pc_5b94 ]
  %v1_5ba7 = add i32 %v0_5ba7, 16
  %v2_5ba7 = inttoptr i32 %v1_5ba7 to i32*
  %v3_5ba7 = load i32, i32* %v2_5ba7, align 4
  %v5_5baa = icmp slt i32 %v3_5ba7, 0
  br i1 %v5_5baa, label %dec_label_pc_5bac, label %dec_label_pc_5b9e

dec_label_pc_5bac:                                ; preds = %dec_label_pc_5ba7
  %v1_5bac = add i32 %v0_5ba7, 12
  br label %dec_label_pc_5ba3

dec_label_pc_5bb1:                                ; preds = %dec_label_pc_5ba3
  %v2_5bb1 = add i32 %v0_5b96, -2200
  %v3_5bb1 = inttoptr i32 %v2_5bb1 to i32*
  %v4_5bb1 = load i32, i32* %v3_5bb1, align 4
  %v15_5bb1 = icmp eq i32 %v0_5bb9, %v4_5bb1
  br i1 %v15_5bb1, label %dec_label_pc_5bbe, label %dec_label_pc_5bb9

dec_label_pc_5bb9:                                ; preds = %dec_label_pc_5bb1
  %v1_5bb9 = add i32 %v0_5bb9, 16
  %v2_5bb9 = inttoptr i32 %v1_5bb9 to i32*
  %v3_5bb9 = load i32, i32* %v2_5bb9, align 4
  %v7_5bbc = icmp sgt i32 %v3_5bb9, 0
  br i1 %v7_5bbc, label %dec_label_pc_5bbe, label %bb

bb:                                               ; preds = %dec_label_pc_5bb9
  %v8_5bbc = call i32 @function_5bd1()
  store i32 %v8_5bbc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_5bbe

dec_label_pc_5bbe:                                ; preds = %dec_label_pc_5b87.dec_label_pc_5bbe_crit_edge, %dec_label_pc_5bb9, %bb, %dec_label_pc_5bb1
  %v3_5bc6 = phi i32 [ %v3_5bc6.pre, %dec_label_pc_5b87.dec_label_pc_5bbe_crit_edge ], [ 0, %dec_label_pc_5bb9 ], [ %v8_5bbc, %bb ], [ 0, %dec_label_pc_5bb1 ]
  ret i32 %v3_5bc6

; uselistorder directives
  uselistorder i32 %v0_5ba7, { 4, 1, 2, 3, 0 }
  uselistorder i32 %v0_5bb9, { 1, 0, 2 }
  uselistorder i32 %v0_5b63, { 1, 0 }
  uselistorder i32 %v3_5b5b, { 1, 0 }
  uselistorder i32 %v0_5b4d, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 6, 3, 4, 5, 7, 8, 9 }
  uselistorder label %dec_label_pc_5bbe, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_5ba3, { 1, 0 }
}

define i32 @function_5bd1() local_unnamed_addr {
dec_label_pc_5bd1:
  %v0_5bd1 = load i32, i32* @ebx, align 4
  %v1_5bd1 = add i32 %v0_5bd1, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_5bd1, i32* @ebx, align 4
  %v0_5bd9 = load i32, i32* @edx, align 4
  %v0_5bdd = load i32, i32* @edi, align 4
  %v2_5be0 = call i32 @_ZNSt8_Rb_treeI7NetworkS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 %v0_5bdd, i32 %v0_5bd9)
  ret i32 %v2_5be0
}

define i32 @function_5c9c() local_unnamed_addr {
dec_label_pc_5c9c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_5c9c = load i32, i32* %ebx.global-to-local, align 4
  %v1_5c9c = add i32 %v0_5c9c, -84859
  %v2_5c9c = inttoptr i32 %v1_5c9c to i32*
  %v3_5c9c = load i32, i32* %v2_5c9c, align 4
  %v4_5c9c = sub i32 %v3_5c9c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5c9c, i32* %v2_5c9c, align 4
  %v0_5ca2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5ca2 = add i32 %v0_5ca2, -89467
  %v2_5ca2 = inttoptr i32 %v1_5ca2 to i32*
  %v3_5ca2 = load i32, i32* %v2_5ca2, align 4
  %v4_5ca2 = sub i32 %v3_5ca2, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5ca2, i32* %v2_5ca2, align 4
  %v0_5ca8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_5ca8 = add i32 %v0_5ca8, -83835
  %v2_5ca8 = inttoptr i32 %v1_5ca8 to i32*
  %v3_5ca8 = load i32, i32* %v2_5ca8, align 4
  %v4_5ca8 = sub i32 %v3_5ca8, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5ca8, i32* %v2_5ca8, align 4
  %v0_5cae = load i32, i32* %ecx.global-to-local, align 4
  %v1_5cae = add i32 %v0_5cae, -88443
  %v2_5cae = inttoptr i32 %v1_5cae to i32*
  %v3_5cae = load i32, i32* %v2_5cae, align 4
  %v4_5cae = sub i32 %v3_5cae, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5cae, i32* %v2_5cae, align 4
  %v0_5cb4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_5cb4 = add i32 %v0_5cb4, -82811
  %v2_5cb4 = inttoptr i32 %v1_5cb4 to i32*
  %v3_5cb4 = load i32, i32* %v2_5cb4, align 4
  %v4_5cb4 = sub i32 %v3_5cb4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5cb4, i32* %v2_5cb4, align 4
  %v0_5cba = load i32, i32* %ecx.global-to-local, align 4
  %v1_5cba = add i32 %v0_5cba, -87419
  %v2_5cba = inttoptr i32 %v1_5cba to i32*
  %v3_5cba = load i32, i32* %v2_5cba, align 4
  %v4_5cba = sub i32 %v3_5cba, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5cba, i32* %v2_5cba, align 4
  %v2_5cc0 = load i32, i32* %edi.global-to-local, align 4
  %v3_5cc0 = sub i32 %v2_5cc0, ptrtoint (i8** @global_var_1.3274 to i32)
  %v18_5cc0 = inttoptr i32 %v2_5cc0 to i32*
  store i32 %v3_5cc0, i32* %v18_5cc0, align 4
  %v0_5cc2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_5cc2 = and i32 %v0_5cc2, -65281
  %v2_5cc2 = or i32 %v1_5cc2, 34048
  store i32 %v2_5cc2, i32* %ebx.global-to-local, align 4
  %v11_5cc4 = load i32, i32* %edx.global-to-local, align 4
  %v13_5cc4 = and i32 %v11_5cc4, -65281
  store i32 %v13_5cc4, i32* %edx.global-to-local, align 4
  %v0_5cc7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5cc7
}

define i32 @function_5d63() local_unnamed_addr {
dec_label_pc_5d63:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5d7b() local_unnamed_addr {
dec_label_pc_5d7b:
  %v1_5d7b = call i32 @function_4fb8(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_5d7b
}

define i32 @function_5dec() local_unnamed_addr {
dec_label_pc_5dec:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_5dec = load i32, i32* @ebx, align 4
  %v1_5dec = add i32 %v0_5dec, -550779
  %v2_5dec = inttoptr i32 %v1_5dec to i32*
  %v3_5dec = load i32, i32* %v2_5dec, align 4
  %v4_5dec = sub i32 %v3_5dec, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_5dec, i32* %v2_5dec, align 4
  %v0_5df2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_5df2 = add i32 %v0_5df2, 1149838396
  %v2_5df2 = inttoptr i32 %v1_5df2 to i32*
  %v3_5df2 = load i32, i32* %v2_5df2, align 4
  %v4_5df2 = add i32 %v3_5df2, -1
  store i32 %v4_5df2, i32* %v2_5df2, align 4
  %v0_5df8 = load i32, i32* %eax.global-to-local, align 4
  %v11_5df8 = and i32 %v0_5df8, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_5df8, i32* %eax.global-to-local, align 4
  %v2_5dfa = call i32 @_ZNSt8_Rb_treeI7NetworkS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_5dfa, i32* @eax, align 4
  %v1_5dff = call i32 @function_4fb8(i32 ptrtoint (i32* @0 to i32))
  store i32 %v1_5dff, i32* %eax.global-to-local, align 4
  ret i32 %v1_5dff
}

define i32 @function_5e18() local_unnamed_addr {
dec_label_pc_5e18:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5e8c() local_unnamed_addr {
dec_label_pc_5e8c:
  %eax.global-to-local = alloca i32, align 4
  %v0_5e8c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5e8c
}

define i32 @function_5f0d() local_unnamed_addr {
dec_label_pc_5f0d:
  %eax.global-to-local = alloca i32, align 4
  %v0_5f0d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5f0d
}

define i32 @function_5f63() local_unnamed_addr {
dec_label_pc_5f63:
  %eax.global-to-local = alloca i32, align 4
  %v0_5f63 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5f63
}

define i32 @function_5f7b(i16 %arg1) local_unnamed_addr {
dec_label_pc_5f7b:
  %eax.global-to-local = alloca i32, align 4
  %v6_5f7b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_5f7b
}

define i32 @function_5f91() local_unnamed_addr {
dec_label_pc_5f91:
  %eax.global-to-local = alloca i32, align 4
  %v0_5f91 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5f91
}

define i32 @function_5f99() local_unnamed_addr {
dec_label_pc_5f99:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6011() local_unnamed_addr {
dec_label_pc_6011:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_6011 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6011 = add i32 %v0_6011, -259455764
  %v2_6011 = inttoptr i32 %v1_6011 to i32*
  %v3_6011 = load i32, i32* %v2_6011, align 4
  %v4_6011 = add i32 %v3_6011, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_6011, i32* %v2_6011, align 4
  %v1_6017 = call i1 @InitError(i32 ptrtoint (i32* @0 to i32))
  %v0_601e = load i32, i32* %ebp.global-to-local, align 4
  %v1_601e = add i32 %v0_601e, -1540
  store i32 %v1_601e, i32* @eax, align 4
  %v0_6024 = call i32 @function_5d63()
  ret i32 %v0_6024
}

define i32 @function_6029() local_unnamed_addr {
dec_label_pc_6029:
  %ebp.global-to-local = alloca i32, align 4
  %v0_6029 = load i32, i32* %ebp.global-to-local, align 4
  %v1_6029 = add i32 %v0_6029, -1628
  %v3_603a = call i32 @_Z1_PKc(i32 %v1_6029, i32 ptrtoint ([35 x i8]* @global_var_c0a8.3311 to i32))
  %v0_6042 = load i32, i32* @ebx, align 4
  store i32 %v0_6042, i32* @eax, align 4
  %v1_6044 = call i1 @InitError(i32 %v1_6029)
  %v3_6044 = sext i1 %v1_6044 to i32
  store i32 %v3_6044, i32* @eax, align 4
  %v0_604b = load i32, i32* @ebx, align 4
  %v1_6053 = call i32 @function_4fb8(i32 %v0_604b)
  ret i32 %v1_6053
}

define i32 @function_60bf() local_unnamed_addr {
dec_label_pc_60bf:
  %v0_60bf = call i32 @function_55ce()
  ret i32 %v0_60bf
}

define i32 @function_60c6() local_unnamed_addr {
dec_label_pc_60c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_60c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_60c6
}

define i32 @function_60e9(i16 %arg1) local_unnamed_addr {
dec_label_pc_60e9:
  %eax.global-to-local = alloca i32, align 4
  %v6_60e9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_60e9
}

define i32 @function_6101() local_unnamed_addr {
dec_label_pc_6101:
  %eax.global-to-local = alloca i32, align 4
  %v0_6101 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6101
}

define i32 @function_6286() local_unnamed_addr {
dec_label_pc_6286:
  %eax.global-to-local = alloca i32, align 4
  %v0_6286 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6286
}

define i32 @function_62dd() local_unnamed_addr {
dec_label_pc_62dd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_62dd = load i32, i32* %ecx.global-to-local, align 4
  %v3_62dd = sub i32 %v2_62dd, ptrtoint (i8** @global_var_1.3274 to i32)
  %v18_62dd = inttoptr i32 %v2_62dd to i32*
  store i32 %v3_62dd, i32* %v18_62dd, align 4
  %v0_62df = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_62df
}

define i32 @function_62f9() local_unnamed_addr {
dec_label_pc_62f9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_63d9() local_unnamed_addr {
dec_label_pc_63d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_63d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_63d9
}

define i32 @function_63ea() local_unnamed_addr {
dec_label_pc_63ea:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp91
}

define i32 @function_6440() local_unnamed_addr {
dec_label_pc_6440:
  %eax.global-to-local = alloca i32, align 4
  %v0_6440 = load i32, i32* %eax.global-to-local, align 4
  %v11_6440 = and i32 %v0_6440, or (i32 zext (i8 ptrtoint (i8* @global_var_83.3312 to i8) to i32), i32 -256)
  store i32 %v11_6440, i32* %eax.global-to-local, align 4
  ret i32 %v11_6440

; uselistorder directives
  uselistorder i32 %v11_6440, { 1, 0 }
}

define i32 @function_64de() local_unnamed_addr {
dec_label_pc_64de:
  %eax.global-to-local = alloca i32, align 4
  %v0_64de = load i32, i32* %eax.global-to-local, align 4
  %v11_64de = and i32 %v0_64de, or (i32 zext (i8 ptrtoint (i8* @global_var_83.3312 to i8) to i32), i32 -256)
  store i32 %v11_64de, i32* %eax.global-to-local, align 4
  ret i32 %v11_64de

; uselistorder directives
  uselistorder i32 %v11_64de, { 1, 0 }
}

define i32 @function_65fb() local_unnamed_addr {
dec_label_pc_65fb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_663f(i16 %arg1) local_unnamed_addr {
dec_label_pc_663f:
  %eax.global-to-local = alloca i32, align 4
  %v0_663f = load i32, i32* %eax.global-to-local, align 4
  %v11_663f = and i32 %v0_663f, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_663f, i32* %eax.global-to-local, align 4
  ret i32 %v11_663f

; uselistorder directives
  uselistorder i32 %v11_663f, { 1, 0 }
}

define i32 @function_6683() local_unnamed_addr {
dec_label_pc_6683:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6694() local_unnamed_addr {
dec_label_pc_6694:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_66d4() local_unnamed_addr {
dec_label_pc_66d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_66d4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_66d4
}

define i32 @function_6752() local_unnamed_addr {
dec_label_pc_6752:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6776() local_unnamed_addr {
dec_label_pc_6776:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_682f() local_unnamed_addr {
dec_label_pc_682f:
  %eax.global-to-local = alloca i32, align 4
  %v3_682f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_682f
}

define i32 @function_683c() local_unnamed_addr {
dec_label_pc_683c:
  %eax.global-to-local = alloca i32, align 4
  %v0_683c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_683c
}

define i32 @function_6875() local_unnamed_addr {
dec_label_pc_6875:
  %eax.global-to-local = alloca i32, align 4
  %v0_6875 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6875
}

define i32 @function_68ae() local_unnamed_addr {
dec_label_pc_68ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_68ae = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_68ae
}

define i32 @function_68ec() local_unnamed_addr {
dec_label_pc_68ec:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_690f() local_unnamed_addr {
dec_label_pc_690f:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_694d() local_unnamed_addr {
dec_label_pc_694d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6955() local_unnamed_addr {
dec_label_pc_6955:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_698b() local_unnamed_addr {
dec_label_pc_698b:
  %eax.global-to-local = alloca i32, align 4
  %v0_698b = load i32, i32* %eax.global-to-local, align 4
  %v2_698b = add i32 %v0_698b, zext (i8 ptrtoint (i32* @global_var_80.3314 to i8) to i32)
  %v15_698b = and i32 %v2_698b, 255
  %v17_698b = and i32 %v0_698b, -256
  %v18_698b = or i32 %v15_698b, %v17_698b
  store i32 %v18_698b, i32* %eax.global-to-local, align 4
  ret i32 %v18_698b

; uselistorder directives
  uselistorder i32 %v0_698b, { 1, 0 }
}

define i32 @function_6a50() local_unnamed_addr {
dec_label_pc_6a50:
  %v0_6a50 = call i32 @function_6776()
  ret i32 %v0_6a50
}

define i32 @function_6b33() local_unnamed_addr {
dec_label_pc_6b33:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_6b33 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6b33 = add i32 %v0_6b33, -563067
  %v2_6b33 = inttoptr i32 %v1_6b33 to i32*
  %v3_6b33 = load i32, i32* %v2_6b33, align 4
  %v4_6b33 = add i32 %v3_6b33, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_6b33, i32* %v2_6b33, align 4
  %v2_6b39 = load i32, i32* %ecx.global-to-local, align 4
  %v3_6b39 = add i32 %v2_6b39, ptrtoint (i8** @global_var_1.3274 to i32)
  %v18_6b39 = inttoptr i32 %v2_6b39 to i32*
  store i32 %v3_6b39, i32* %v18_6b39, align 4
  %v0_6b3b = load i32, i32* %ebp.global-to-local, align 4
  %v1_6b3b = add i32 %v0_6b3b, -2200
  %v2_6b3b = inttoptr i32 %v1_6b3b to i32*
  %v3_6b3b = load i32, i32* %v2_6b3b, align 4
  %v12_6b3b = icmp eq i32 %v3_6b3b, 10000
  br i1 %v12_6b3b, label %bb, label %dec_label_pc_6b4b

bb:                                               ; preds = %dec_label_pc_6b33
  %v1_6b45 = call i32 @function_6694()
  store i32 %v1_6b45, i32* @eax, align 4
  %v0_6b4b.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_6b4b

dec_label_pc_6b4b:                                ; preds = %bb, %dec_label_pc_6b33
  %v0_6b4b = phi i32 [ %v0_6b4b.pre, %bb ], [ %v0_6b3b, %dec_label_pc_6b33 ]
  %v1_6b4b = add i32 %v0_6b4b, -2192
  %v2_6b4b = inttoptr i32 %v1_6b4b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_6b4b, align 1
  %v0_6b52 = call i32 @function_65fb()
  ret i32 %v0_6b52

; uselistorder directives
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
}

define i32 @function_6b9e() local_unnamed_addr {
dec_label_pc_6b9e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6bbe() local_unnamed_addr {
dec_label_pc_6bbe:
  %v1_6bbe = call i32 @function_4fb8(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_6bbe
}

define i32 @function_6bc3() local_unnamed_addr {
dec_label_pc_6bc3:
  %eax.global-to-local = alloca i32, align 4
  %v3_6bc9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_6bc9
}

define i32 @function_6bd1() local_unnamed_addr {
dec_label_pc_6bd1:
  %eax.global-to-local = alloca i32, align 4
  %v0_6bd1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6bd1
}

define i32 @function_6bd6() local_unnamed_addr {
dec_label_pc_6bd6:
  %ebp.global-to-local = alloca i32, align 4
  %v0_6bd6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_6bd6 = add i32 %v0_6bd6, -1164
  ret i32 %v1_6bd6
}

define i32 @function_6c17() local_unnamed_addr {
dec_label_pc_6c17:
  %eax.global-to-local = alloca i32, align 4
  %v0_6c17 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6c17
}

define i32 @function_6c1c() local_unnamed_addr {
dec_label_pc_6c1c:
  %ebp.global-to-local = alloca i32, align 4
  %v0_6c1c = load i32, i32* %ebp.global-to-local, align 4
  %v1_6c1c = add i32 %v0_6c1c, -1165
  ret i32 %v1_6c1c
}

define i32 @function_6c5b() local_unnamed_addr {
dec_label_pc_6c5b:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_6c5b = add i32 %tmp91, 1887815360
  %v2_6c5b = inttoptr i32 %v1_6c5b to i32*
  %v3_6c5b = load i32, i32* %v2_6c5b, align 4
  %v4_6c5b = add i32 %v3_6c5b, 1
  store i32 %v4_6c5b, i32* %v2_6c5b, align 4
  %v0_6c61 = load i32, i32* %edi.global-to-local, align 4
  %v1_6c61 = load i32, i32* %eax.global-to-local, align 4
  %v2_6c61 = zext i32 %v1_6c61 to i64
  %v3_6c61 = load i32, i32* %edx.global-to-local, align 4
  %v4_6c61 = zext i32 %v3_6c61 to i64
  %v5_6c61 = shl i64 %v4_6c61, ptrtoint (i32* @global_var_20.3279 to i64)
  %v6_6c61 = or i64 %v5_6c61, %v2_6c61
  %v7_6c61 = zext i32 %v0_6c61 to i64
  %v8_6c61 = sdiv i64 %v6_6c61, %v7_6c61
  %v9_6c61 = trunc i64 %v8_6c61 to i32
  store i32 %v9_6c61, i32* %eax.global-to-local, align 4
  %v10_6c61 = srem i64 %v6_6c61, %v7_6c61
  %v11_6c61 = trunc i64 %v10_6c61 to i32
  store i32 %v11_6c61, i32* %edx.global-to-local, align 4
  %v1_6c63 = inttoptr i32 %v9_6c61 to i32*
  %v2_6c63 = load i32, i32* %v1_6c63, align 4
  %v3_6c63 = add i32 %v2_6c63, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v3_6c63, i32* %v1_6c63, align 4
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %edi.global-to-local, align 4
  %v0_6c70 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6c70
}

define i32 @function_6ca6() local_unnamed_addr {
dec_label_pc_6ca6:
  %v0_6ca6 = call i32 @function_694d()
  ret i32 %v0_6ca6
}

define i32 @function_6cab() local_unnamed_addr {
dec_label_pc_6cab:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_6cab = add i32 %tmp91, -2208
  %v2_6cab = inttoptr i32 %v1_6cab to i32*
  store i32 524288, i32* %v2_6cab, align 4
  %v0_6cba = call i32 @function_6752()
  ret i32 %v0_6cba
}

define i32 @function_6d10() local_unnamed_addr {
dec_label_pc_6d10:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_6d10 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6d10 = add i32 %v0_6d10, -76667
  %v2_6d10 = inttoptr i32 %v1_6d10 to i32*
  %v3_6d10 = load i32, i32* %v2_6d10, align 4
  %v4_6d10 = sub i32 %v3_6d10, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_6d10, i32* %v2_6d10, align 4
  %v0_6d16 = load i32, i32* %ecx.global-to-local, align 4
  %v1_6d16 = add i32 %v0_6d16, -2054609892
  %v2_6d16 = inttoptr i32 %v1_6d16 to i32*
  %v3_6d16 = load i32, i32* %v2_6d16, align 4
  %v4_6d16 = sub i32 %v3_6d16, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_6d16, i32* %v2_6d16, align 4
  %v0_6d1c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6d1c
}

define i32 @function_6d34(i16 %arg1) local_unnamed_addr {
dec_label_pc_6d34:
  %eax.global-to-local = alloca i32, align 4
  %v6_6d34 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_6d34
}

define i32 @function_6d4a() local_unnamed_addr {
dec_label_pc_6d4a:
  %eax.global-to-local = alloca i32, align 4
  %v0_6d4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6d4a
}

define i32 @function_6d57() local_unnamed_addr {
dec_label_pc_6d57:
  %v0_6d57 = call i32 @function_5f99()
  ret i32 %v0_6d57
}

define i32 @function_6d98() local_unnamed_addr {
dec_label_pc_6d98:
  %ebx.global-to-local = alloca i32, align 4
  %v0_6d98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_6d98 = add i32 %v0_6d98, -125238036
  %v2_6d98 = inttoptr i32 %v1_6d98 to i32*
  %v3_6d98 = load i32, i32* %v2_6d98, align 4
  %v4_6d98 = add i32 %v3_6d98, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_6d98, i32* %v2_6d98, align 4
  %v1_6d9e = call i1 @InitError(i32 ptrtoint (i32* @0 to i32))
  %v3_6d9e = sext i1 %v1_6d9e to i32
  store i32 %v3_6d9e, i32* @eax, align 4
  %v0_6da3 = call i32 @function_6b9e()
  ret i32 %v0_6da3
}

define i32 @function_6e0f() local_unnamed_addr {
dec_label_pc_6e0f:
  %eax.global-to-local = alloca i32, align 4
  %v0_6e0f = load i32, i32* %eax.global-to-local, align 4
  %v2_6e0f = add i32 %v0_6e0f, zext (i8 ptrtoint (i32* @global_var_18.3278 to i8) to i32)
  %v16_6e0f = and i32 %v2_6e0f, 255
  %v18_6e0f = and i32 %v0_6e0f, -256
  %v19_6e0f = or i32 %v16_6e0f, %v18_6e0f
  store i32 %v19_6e0f, i32* %eax.global-to-local, align 4
  ret i32 %v19_6e0f

; uselistorder directives
  uselistorder i32 %v0_6e0f, { 1, 0 }
}

define i32 @function_6e37() local_unnamed_addr {
dec_label_pc_6e37:
  %v0_6e37 = call i32 @function_694d()
  ret i32 %v0_6e37
}

define i32 @function_6e9e() local_unnamed_addr {
dec_label_pc_6e9e:
  %ebx.global-to-local = alloca i32, align 4
  %v0_6e9e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_6e9e, i32* @edx, align 4
  %v2_6ea2 = call i1 @Bind(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v4_6ea2 = sext i1 %v2_6ea2 to i32
  store i32 %v4_6ea2, i32* @eax, align 4
  %v1_6ea9 = load i32, i32* @edi, align 4
  %v2_6ea9 = or i32 %v1_6ea9, %v4_6ea2
  store i32 %v2_6ea9, i32* %ebx.global-to-local, align 4
  %v0_6eab = call i32 @function_62f9()
  ret i32 %v0_6eab
}

define i32 @function_6eb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_6eb0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6ef4() local_unnamed_addr {
dec_label_pc_6ef4:
  %eax.global-to-local = alloca i32, align 4
  %v0_6ef4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6ef4
}

define i32 @function_6eff() local_unnamed_addr {
dec_label_pc_6eff:
  %v0_6eff = call i32 @function_5e18()
  ret i32 %v0_6eff
}

define i32 @function_6f04() local_unnamed_addr {
dec_label_pc_6f04:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f10() local_unnamed_addr {
dec_label_pc_6f10:
  %v0_6f10 = load i32, i32* @eax, align 4
  ret i32 %v0_6f10
}

define i32 @function_6f20() local_unnamed_addr {
dec_label_pc_6f20:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f2e() local_unnamed_addr {
dec_label_pc_6f2e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f3c() local_unnamed_addr {
dec_label_pc_6f3c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f52() local_unnamed_addr {
dec_label_pc_6f52:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f5e() local_unnamed_addr {
dec_label_pc_6f5e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f66() local_unnamed_addr {
dec_label_pc_6f66:
  %v0_6f66 = call i32 @function_6f2e()
  ret i32 %v0_6f66
}

define i32 @function_6f68() local_unnamed_addr {
dec_label_pc_6f68:
  %v0_6f6a = call i32 @function_6f5e()
  ret i32 %v0_6f6a
}

define i32 @function_6f6c() local_unnamed_addr {
dec_label_pc_6f6c:
  %v0_6f70 = call i32 @function_6f20()
  ret i32 %v0_6f70
}

define i32 @function_6f72() local_unnamed_addr {
dec_label_pc_6f72:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f74() local_unnamed_addr {
dec_label_pc_6f74:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f7e() local_unnamed_addr {
dec_label_pc_6f7e:
  %eax.global-to-local = alloca i32, align 4
  %v0_6f7e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6f7e
}

define i32 @function_6f80() local_unnamed_addr {
dec_label_pc_6f80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f81() local_unnamed_addr {
dec_label_pc_6f81:
  %eax.global-to-local = alloca i32, align 4
  %v0_6f81 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6f81
}

define i32 @function_6f82() local_unnamed_addr {
dec_label_pc_6f82:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f90() local_unnamed_addr {
dec_label_pc_6f90:
  %eax.global-to-local = alloca i32, align 4
  %v0_6f90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6f90
}

define i32 @function_6f92() local_unnamed_addr {
dec_label_pc_6f92:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6f93() local_unnamed_addr {
dec_label_pc_6f93:
  %eax.global-to-local = alloca i32, align 4
  %v0_6f93 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6f93
}

define i32 @function_6f9c() local_unnamed_addr {
dec_label_pc_6f9c:
  %v0_6f9c = call i32 @function_6f82()
  ret i32 %v0_6f9c
}

define i32 @function_6fa0() local_unnamed_addr {
dec_label_pc_6fa0:
  %v0_6fa0 = call i32 @function_6f80()
  ret i32 %v0_6fa0
}

define i32 @function_6fa2() local_unnamed_addr {
dec_label_pc_6fa2:
  %v0_6fa2 = call i32 @function_6f72()
  ret i32 %v0_6fa2
}

define i32 @function_6fa4() local_unnamed_addr {
dec_label_pc_6fa4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6fae() local_unnamed_addr {
dec_label_pc_6fae:
  %v0_6fb0 = call i32 @function_6f72()
  ret i32 %v0_6fb0
}

define i32 @function_6fb2() local_unnamed_addr {
dec_label_pc_6fb2:
  %v0_6fb8 = call i32 @function_6f72()
  ret i32 %v0_6fb8
}

define i32 @function_6fba() local_unnamed_addr {
dec_label_pc_6fba:
  %v0_6fc2 = call i32 @function_6f74()
  ret i32 %v0_6fc2
}

define i32 @function_6fc4() local_unnamed_addr {
dec_label_pc_6fc4:
  %v0_6fc4 = call i32 @function_6f04()
  ret i32 %v0_6fc4
}

define i32 @function_6fe5() local_unnamed_addr {
dec_label_pc_6fe5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6fe6() local_unnamed_addr {
dec_label_pc_6fe6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_6fe7 = load i32, i32* %edx.global-to-local, align 4
  %v1_6fe7 = lshr i32 %v0_6fe7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_6fe7 = trunc i32 %v1_6fe7 to i8
  %v3_6fe7 = load i32, i32* %ebx.global-to-local, align 4
  %v4_6fe7 = load i32, i32* %esi.global-to-local, align 4
  %v5_6fe7 = mul i32 %v4_6fe7, ptrtoint (i8** @global_var_1.3274 to i32)
  %v6_6fe7 = add i32 %v3_6fe7, -119
  %v7_6fe7 = add i32 %v6_6fe7, %v5_6fe7
  %v8_6fe7 = inttoptr i32 %v7_6fe7 to i8*
  %v9_6fe7 = load i8, i8* %v8_6fe7, align 1
  %v10_6fe7 = add i8 %v9_6fe7, %v2_6fe7
  %v25_6fe7 = zext i8 %v10_6fe7 to i32
  %v27_6fe7 = mul nuw nsw i32 %v25_6fe7, 256
  %v28_6fe7 = and i32 %v0_6fe7, -65281
  %v29_6fe7 = or i32 %v27_6fe7, %v28_6fe7
  store i32 %v29_6fe7, i32* %edx.global-to-local, align 4
  %v0_6feb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6feb
}

define i32 @function_6fec() local_unnamed_addr {
dec_label_pc_6fec:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6ffa() local_unnamed_addr {
dec_label_pc_6ffa:
  %v0_6ffa = call i32 @function_6f82()
  ret i32 %v0_6ffa
}

define i32 @function_700b() local_unnamed_addr {
dec_label_pc_700b:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_700f = add i32 %tmp91, -1660
  %v2_7015 = add i32 %tmp91, -2188
  %v3_7015 = inttoptr i32 %v2_7015 to i32*
  store i32 %v1_700f, i32* %v3_7015, align 4
  %v0_701b = call i32 @function_6fe5()
  ret i32 %v0_701b

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_7067() local_unnamed_addr {
dec_label_pc_7067:
  %v0_7067 = call i32 @function_6955()
  ret i32 %v0_7067
}

define i32 @function_7078() local_unnamed_addr {
dec_label_pc_7078:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_7078 = add i32 %tmp91, -1660
  %v2_7082 = add i32 %tmp91, -2188
  %v3_7082 = inttoptr i32 %v2_7082 to i32*
  store i32 %v1_7078, i32* %v3_7082, align 4
  %v0_7088 = call i32 @function_6fe5()
  ret i32 %v0_7088

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_708d() local_unnamed_addr {
dec_label_pc_708d:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_708d = add i32 %tmp91, -1660
  %v2_7093 = add i32 %tmp91, -2188
  %v3_7093 = inttoptr i32 %v2_7093 to i32*
  store i32 %v1_708d, i32* %v3_7093, align 4
  %v0_7099 = call i32 @function_6fe5()
  ret i32 %v0_7099

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_70a5() local_unnamed_addr {
dec_label_pc_70a5:
  %eax.global-to-local = alloca i32, align 4
  %v0_70a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_70a5
}

define i32 @function_70ae() local_unnamed_addr {
dec_label_pc_70ae:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_70b3() local_unnamed_addr {
dec_label_pc_70b3:
  %v0_70b3 = call i32 @function_6fec()
  ret i32 %v0_70b3
}

define i32 @function_70b8() local_unnamed_addr {
dec_label_pc_70b8:
  %v0_70c0 = call i32 @function_70ae()
  ret i32 %v0_70c0
}

define i32 @function_70c3() local_unnamed_addr {
dec_label_pc_70c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_70c3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_70c3
}

define i32 @function_70d2() local_unnamed_addr {
dec_label_pc_70d2:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_70d2 = add i32 %tmp91, -1660
  %v2_70d8 = add i32 %tmp91, -2188
  %v3_70d8 = inttoptr i32 %v2_70d8 to i32*
  store i32 %v1_70d2, i32* %v3_70d8, align 4
  %v0_70de = call i32 @function_6fec()
  ret i32 %v0_70de

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_70e3() local_unnamed_addr {
dec_label_pc_70e3:
  %eax.global-to-local = alloca i32, align 4
  %v0_70e3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_70e3
}

define i32 @function_70e8() local_unnamed_addr {
dec_label_pc_70e8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_70e9() local_unnamed_addr {
dec_label_pc_70e9:
  %eax.global-to-local = alloca i32, align 4
  %v0_70e9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_70e9
}

define i32 @function_70f2() local_unnamed_addr {
dec_label_pc_70f2:
  %ebx.global-to-local = alloca i32, align 4
  %v0_70f2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_70f2, i32* @eax, align 4
  %v0_70f4 = call i32 @function_6f80()
  ret i32 %v0_70f4
}

define i32 @function_70f9() local_unnamed_addr {
dec_label_pc_70f9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7105() local_unnamed_addr {
dec_label_pc_7105:
  %v0_7109 = call i32 @function_6fe5()
  ret i32 %v0_7109
}

define i32 @function_710e() local_unnamed_addr {
dec_label_pc_710e:
  %v0_710e = call i32 @function_6f10()
  ret i32 %v0_710e
}

define i32 @function_7113() local_unnamed_addr {
dec_label_pc_7113:
  %v0_7113 = call i32 @function_6f04()
  ret i32 %v0_7113
}

define i32 @function_7120() local_unnamed_addr {
dec_label_pc_7120:
  %v0_7120 = call i32 @function_6f10()
  ret i32 %v0_7120
}

define i32 @function_7130() local_unnamed_addr {
dec_label_pc_7130:
  %v0_7130 = call i32 @function_6f04()
  ret i32 %v0_7130
}

define i32 @function_7136() local_unnamed_addr {
dec_label_pc_7136:
  %eax.global-to-local = alloca i32, align 4
  %v0_7136 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7136
}

define i32 @function_7145() local_unnamed_addr {
dec_label_pc_7145:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_714d() local_unnamed_addr {
dec_label_pc_714d:
  %v0_714d = call i32 @function_6f82()
  ret i32 %v0_714d
}

define i32 @function_7152() local_unnamed_addr {
dec_label_pc_7152:
  %v0_7154 = call i32 @function_7145()
  ret i32 %v0_7154
}

define i32 @function_7156() local_unnamed_addr {
dec_label_pc_7156:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7158() local_unnamed_addr {
dec_label_pc_7158:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7162() local_unnamed_addr {
dec_label_pc_7162:
  %v0_7162 = call i32 @function_6f82()
  ret i32 %v0_7162
}

define i32 @function_7169() local_unnamed_addr {
dec_label_pc_7169:
  %eax.global-to-local = alloca i32, align 4
  %v0_7169 = load i32, i32* %eax.global-to-local, align 4
  %v11_7169 = and i32 %v0_7169, -80
  store i32 %v11_7169, i32* %eax.global-to-local, align 4
  ret i32 %v11_7169

; uselistorder directives
  uselistorder i32 %v11_7169, { 1, 0 }
}

define i32 @function_7175() local_unnamed_addr {
dec_label_pc_7175:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7183() local_unnamed_addr {
dec_label_pc_7183:
  %v0_7183 = load i32, i32* @ebp, align 4
  %v1_7183 = add i32 %v0_7183, -1472
  ret i32 %v1_7183
}

define i32 @function_7191() local_unnamed_addr {
dec_label_pc_7191:
  %v1_7191 = call i32 @function_4fb8(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_7191

; uselistorder directives
  uselistorder i32 (i32)* @function_4fb8, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_71ab() local_unnamed_addr {
dec_label_pc_71ab:
  %eax.global-to-local = alloca i32, align 4
  %v0_71ab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_71ab
}

define i32 @function_71ac() local_unnamed_addr {
dec_label_pc_71ac:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_71b4() local_unnamed_addr {
dec_label_pc_71b4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_71bc() local_unnamed_addr {
dec_label_pc_71bc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_71ca() local_unnamed_addr {
dec_label_pc_71ca:
  %v0_71ca = call i32 @function_6fec()
  ret i32 %v0_71ca

; uselistorder directives
  uselistorder i32 ()* @function_6fec, { 2, 1, 0 }
}

define i32 @function_71cf() local_unnamed_addr {
dec_label_pc_71cf:
  %v0_71d1 = call i32 @function_71ac()
  ret i32 %v0_71d1
}

define i32 @function_71d3() local_unnamed_addr {
dec_label_pc_71d3:
  %v0_71d5 = call i32 @function_71b4()
  ret i32 %v0_71d5
}

define i32 @function_71d7() local_unnamed_addr {
dec_label_pc_71d7:
  %v0_71d9 = call i32 @function_71bc()
  ret i32 %v0_71d9
}

define i32 @function_71e0() local_unnamed_addr {
dec_label_pc_71e0:
  %eax.global-to-local = alloca i32, align 4
  %v0_71e0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_71e0
}

define i32 @function_71e5() local_unnamed_addr {
dec_label_pc_71e5:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_71e5 = add i32 %tmp91, -2188
  %v2_71e5 = inttoptr i32 %v1_71e5 to i32*
  %v3_71e5 = load i32, i32* %v2_71e5, align 4
  store i32 %v3_71e5, i32* @eax, align 4
  %v1_71eb = call i1 @InitError(i32 ptrtoint (i32* @0 to i32))
  %v3_71eb = sext i1 %v1_71eb to i32
  store i32 %v3_71eb, i32* @eax, align 4
  %v0_71f2 = call i32 @function_7175()
  ret i32 %v0_71f2
}

define i32 @function_71fe() local_unnamed_addr {
dec_label_pc_71fe:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7208() local_unnamed_addr {
dec_label_pc_7208:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7216() local_unnamed_addr {
dec_label_pc_7216:
  %eax.global-to-local = alloca i32, align 4
  %v0_7216 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7216
}

define i32 @function_721b() local_unnamed_addr {
dec_label_pc_721b:
  %v0_721d = call i32 @function_71fe()
  ret i32 %v0_721d
}

define i32 @function_721f() local_unnamed_addr {
dec_label_pc_721f:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_723a(i16 %arg1) local_unnamed_addr {
dec_label_pc_723a:
  %eax.global-to-local = alloca i32, align 4
  %v6_723a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_723a
}

define i32 @function_724d() local_unnamed_addr {
dec_label_pc_724d:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v2_724d = add i32 %tmp91, -2188
  %v3_724d = inttoptr i32 %v2_724d to i32*
  %v0_7253 = call i32 @function_7175()
  ret i32 %v0_7253

; uselistorder directives
  uselistorder i32 ()* @function_7175, { 1, 0 }
}

define i32 @function_7258() local_unnamed_addr {
dec_label_pc_7258:
  %v0_7258 = call i32 @function_6f10()
  ret i32 %v0_7258
}

define i32 @function_7269() local_unnamed_addr {
dec_label_pc_7269:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_7269 = add i32 %tmp91, -1660
  %v2_7273 = add i32 %tmp91, -2188
  %v3_7273 = inttoptr i32 %v2_7273 to i32*
  store i32 %v1_7269, i32* %v3_7273, align 4
  %v0_7279 = call i32 @function_6fe5()
  ret i32 %v0_7279

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_7288() local_unnamed_addr {
dec_label_pc_7288:
  %v0_728a = call i32 @function_6f6c()
  ret i32 %v0_728a
}

define i32 @function_728f() local_unnamed_addr {
dec_label_pc_728f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_729b() local_unnamed_addr {
dec_label_pc_729b:
  %v0_729b = call i32 @function_6f20()
  ret i32 %v0_729b
}

define i32 @function_72a2() local_unnamed_addr {
dec_label_pc_72a2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_72b1() local_unnamed_addr {
dec_label_pc_72b1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_72b1 = load i32, i32* @ebx, align 4
  %v1_72b1 = add i32 %v0_72b1, -550779
  %v2_72b1 = inttoptr i32 %v1_72b1 to i32*
  %v3_72b1 = load i32, i32* %v2_72b1, align 4
  %v4_72b1 = sub i32 %v3_72b1, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_72b1, i32* %v2_72b1, align 4
  %v0_72b7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_72b7 = add i32 %v0_72b7, 1149838396
  %v2_72b7 = inttoptr i32 %v1_72b7 to i32*
  %v3_72b7 = load i32, i32* %v2_72b7, align 4
  %v4_72b7 = add i32 %v3_72b7, -1
  store i32 %v4_72b7, i32* %v2_72b7, align 4
  %v0_72bd = load i32, i32* %eax.global-to-local, align 4
  %v11_72bd = and i32 %v0_72bd, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_72bd, i32* %eax.global-to-local, align 4
  %v2_72bf = call i32 @_ZNSt8_Rb_treeI7NetworkS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_72bf, i32* %eax.global-to-local, align 4
  ret i32 %v2_72bf

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZNSt8_Rb_treeI7NetworkS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E, { 2, 1, 0 }
}

define i32 @function_72c9() local_unnamed_addr {
dec_label_pc_72c9:
  %eax.global-to-local = alloca i32, align 4
  %v0_72c9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_72c9
}

define i32 @function_72d7() local_unnamed_addr {
dec_label_pc_72d7:
  %v0_72d7 = call i32 @function_72a2()
  ret i32 %v0_72d7
}

define i32 @function_72d9() local_unnamed_addr {
dec_label_pc_72d9:
  %v0_72d9 = call i32 @function_6f10()
  ret i32 %v0_72d9
}

define i32 @function_72de() local_unnamed_addr {
dec_label_pc_72de:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_72e8() local_unnamed_addr {
dec_label_pc_72e8:
  %v0_72e8 = load i32, i32* @esi, align 4
  store i32 %v0_72e8, i32* @eax, align 4
  %v0_72ec = call i32 @function_6f3c()
  ret i32 %v0_72ec
}

define i32 @function_72f1() local_unnamed_addr {
dec_label_pc_72f1:
  %eax.global-to-local = alloca i32, align 4
  %v0_72f1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_72f1
}

define i32 @function_72f4() local_unnamed_addr {
dec_label_pc_72f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_72f4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_72f4
}

define i32 @function_7303() local_unnamed_addr {
dec_label_pc_7303:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_730b() local_unnamed_addr {
dec_label_pc_730b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7319() local_unnamed_addr {
dec_label_pc_7319:
  %eax.global-to-local = alloca i32, align 4
  %v0_7319 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7319
}

define i32 @function_732a() local_unnamed_addr {
dec_label_pc_732a:
  %v0_732a = call i32 @function_7303()
  ret i32 %v0_732a
}

define i32 @function_7336() local_unnamed_addr {
dec_label_pc_7336:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_733e() local_unnamed_addr {
dec_label_pc_733e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7346() local_unnamed_addr {
dec_label_pc_7346:
  %v0_7348 = call i32 @function_7336()
  ret i32 %v0_7348
}

define i32 @function_7356() local_unnamed_addr {
dec_label_pc_7356:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_735e() local_unnamed_addr {
dec_label_pc_735e:
  %v0_735e = call i32 @function_6f20()
  ret i32 %v0_735e
}

define i32 @function_7363() local_unnamed_addr {
dec_label_pc_7363:
  %v0_7365 = call i32 @function_7356()
  ret i32 %v0_7365
}

define i32 @function_7370() local_unnamed_addr {
dec_label_pc_7370:
  %v0_7370 = call i32 @function_6f10()
  ret i32 %v0_7370
}

define i32 @function_7375() local_unnamed_addr {
dec_label_pc_7375:
  %v0_7375 = call i32 @function_6f04()
  ret i32 %v0_7375
}

define i32 @function_7380() local_unnamed_addr {
dec_label_pc_7380:
  %v0_7380 = call i32 @function_6f10()
  ret i32 %v0_7380
}

define i32 @function_7390() local_unnamed_addr {
dec_label_pc_7390:
  %v0_7390 = call i32 @function_6f04()
  ret i32 %v0_7390
}

define i32 @function_7395() local_unnamed_addr {
dec_label_pc_7395:
  %ebp.global-to-local = alloca i32, align 4
  %v0_7395 = load i32, i32* %ebp.global-to-local, align 4
  %v1_7395 = add i32 %v0_7395, -1504
  %v3_73a6 = call i32 @_Z1_PKc(i32 %v1_7395, i32 ptrtoint ([62 x i8]* @global_var_c148.3316 to i32))
  %v0_73ac = load i32, i32* @ebx, align 4
  store i32 %v0_73ac, i32* @eax, align 4
  %v1_73ae = call i1 @InitError(i32 %v3_73a6)
  %v3_73ae = sext i1 %v1_73ae to i32
  ret i32 %v3_73ae

; uselistorder directives
  uselistorder i1 (i32)* @InitError, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_73b8() local_unnamed_addr {
dec_label_pc_73b8:
  %v0_73b8 = call i32 @function_6f04()
  ret i32 %v0_73b8
}

define i32 @function_73c0() local_unnamed_addr {
dec_label_pc_73c0:
  %v0_73c0 = call i32 @function_6f72()
  ret i32 %v0_73c0
}

define i32 @function_73d0() local_unnamed_addr {
dec_label_pc_73d0:
  %v0_73d0 = call i32 @function_6f04()
  ret i32 %v0_73d0
}

define i32 @function_73e0() local_unnamed_addr {
dec_label_pc_73e0:
  %v0_73e0 = call i32 @function_6f10()
  ret i32 %v0_73e0
}

define i32 @function_73e6() local_unnamed_addr {
dec_label_pc_73e6:
  %eax.global-to-local = alloca i32, align 4
  %v0_73e6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_73e6
}

define i32 @function_73e7() local_unnamed_addr {
dec_label_pc_73e7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_73f5() local_unnamed_addr {
dec_label_pc_73f5:
  %eax.global-to-local = alloca i32, align 4
  %v0_73f5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_73f5
}

define i32 @function_73fb() local_unnamed_addr {
dec_label_pc_73fb:
  %v0_73fb = call i32 @function_893c7401()
  ret i32 %v0_73fb
}

define i32 @function_740f() local_unnamed_addr {
dec_label_pc_740f:
  %v0_740f = call i32 @function_7158()
  ret i32 %v0_740f
}

define i32 @function_7424() local_unnamed_addr {
dec_label_pc_7424:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7432() local_unnamed_addr {
dec_label_pc_7432:
  %v0_7432 = call i32 @function_7158()
  ret i32 %v0_7432

; uselistorder directives
  uselistorder i32 ()* @function_7158, { 1, 0 }
}

define i32 @function_7437() local_unnamed_addr {
dec_label_pc_7437:
  %v0_7439 = call i32 @function_7424()
  ret i32 %v0_7439
}

define i32 @function_747a() local_unnamed_addr {
dec_label_pc_747a:
  %v0_747a = call i32 @function_6683()
  ret i32 %v0_747a
}

define i32 @function_747f() local_unnamed_addr {
dec_label_pc_747f:
  %v0_747f = call i32 @function_70f9()
  ret i32 %v0_747f
}

define i32 @function_7490() local_unnamed_addr {
dec_label_pc_7490:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_7494 = add i32 %tmp91, -1660
  %v2_749a = add i32 %tmp91, -2188
  %v3_749a = inttoptr i32 %v2_749a to i32*
  store i32 %v1_7494, i32* %v3_749a, align 4
  %v0_74a0 = call i32 @function_6fe5()
  ret i32 %v0_74a0

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_74a5() local_unnamed_addr {
dec_label_pc_74a5:
  %eax.global-to-local = alloca i32, align 4
  %v0_74a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_74a5
}

define i32 @function_75b9() local_unnamed_addr {
dec_label_pc_75b9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_75b9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_75bb = load i32, i32* %eax.global-to-local, align 4
  %v4_75bb = mul i32 %v1_75bb, %v2_75b9
  %v9_75bb = and i32 %v4_75bb, 65535
  %v11_75bb = and i32 %v1_75bb, -65536
  %v12_75bb = or i32 %v9_75bb, %v11_75bb
  store i32 %v12_75bb, i32* %eax.global-to-local, align 4
  ret i32 %v12_75bb

; uselistorder directives
  uselistorder i32 %v1_75bb, { 1, 0 }
}

define i32 @function_75c8() local_unnamed_addr {
dec_label_pc_75c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_75c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_75c8
}

define i32 @function_762a() local_unnamed_addr {
dec_label_pc_762a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7640() local_unnamed_addr {
dec_label_pc_7640:
  %eax.global-to-local = alloca i32, align 4
  %v0_7640 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7640
}

define i32 @function_764a(i32 %arg1) local_unnamed_addr {
dec_label_pc_764a:
  %eax.global-to-local = alloca i32, align 4
  %v0_764d = load i32, i32* %eax.global-to-local, align 4
  %v11_764d = and i32 %v0_764d, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_764d, i32* %eax.global-to-local, align 4
  ret i32 %v11_764d

; uselistorder directives
  uselistorder i32 %v11_764d, { 1, 0 }
}

define i32 @function_7674() local_unnamed_addr {
dec_label_pc_7674:
  %v0_7674 = call i32 @function_694d()
  ret i32 %v0_7674

; uselistorder directives
  uselistorder i32 ()* @function_694d, { 2, 1, 0 }
}

define i32 @function_7684() local_unnamed_addr {
dec_label_pc_7684:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_7684 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7684 = add i32 %v0_7684, -1980069392
  %v2_7684 = inttoptr i32 %v1_7684 to i32*
  %v3_7684 = load i32, i32* %v2_7684, align 4
  %v4_7684 = sub i32 %v3_7684, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_7684, i32* %v2_7684, align 4
  %v0_768a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_768a
}

define i32 @function_769b() local_unnamed_addr {
dec_label_pc_769b:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_769b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_769b, i32* @eax, align 4
  %v0_769f = load i32, i32* %ebp.global-to-local, align 4
  %v1_769f = add i32 %v0_769f, -1660
  %v2_76a5 = add i32 %v0_769f, -2188
  %v3_76a5 = inttoptr i32 %v2_76a5 to i32*
  store i32 %v1_769f, i32* %v3_76a5, align 4
  %v0_76ab = call i32 @function_6fe5()
  ret i32 %v0_76ab
}

define i32 @function_76b0() local_unnamed_addr {
dec_label_pc_76b0:
  %v0_76b0 = call i32 @function_70f9()
  ret i32 %v0_76b0
}

define i32 @function_76ba() local_unnamed_addr {
dec_label_pc_76ba:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_76ba = add i32 %tmp91, -351075
  %v2_76ba = inttoptr i32 %v1_76ba to i32*
  %v3_76ba = load i32, i32* %v2_76ba, align 4
  %v4_76ba = sub i32 %v3_76ba, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_76ba, i32* %v2_76ba, align 4
  %v0_76c0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_76c0 = add i32 %v0_76c0, -955767740
  %v2_76c0 = inttoptr i32 %v1_76c0 to i32*
  %v3_76c0 = load i32, i32* %v2_76c0, align 4
  %v4_76c0 = sub i32 %v3_76c0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_76c0, i32* %v2_76c0, align 4
  %v0_76c7 = load i32, i32* %eax.global-to-local, align 4
  %v11_76c7 = and i32 %v0_76c7, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_76c7, i32* %eax.global-to-local, align 4
  ret i32 %v11_76c7

; uselistorder directives
  uselistorder i32 %v11_76c7, { 1, 0 }
}

define i32 @function_76ee() local_unnamed_addr {
dec_label_pc_76ee:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_76ee = add i32 %tmp91, -1719398410
  %v2_76ee = inttoptr i32 %v1_76ee to i32*
  %v3_76ee = load i32, i32* %v2_76ee, align 4
  %v4_76ee = add i32 %v3_76ee, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_76ee, i32* %v2_76ee, align 4
  %v0_76f4 = load i32, i32* %eax.global-to-local, align 4
  %v4_76f4 = mul i32 %v0_76f4, 2
  store i32 %v4_76f4, i32* %eax.global-to-local, align 4
  %v0_76f6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_76f6 = add i32 %v0_76f6, -292219
  %v2_76f6 = inttoptr i32 %v1_76f6 to i8*
  %v3_76f6 = load i8, i8* %v2_76f6, align 1
  %v4_76f6 = load i32, i32* %ecx.global-to-local, align 4
  %v5_76f6 = trunc i32 %v4_76f6 to i8
  %v6_76f6 = add i8 %v5_76f6, %v3_76f6
  store i8 %v6_76f6, i8* %v2_76f6, align 1
  %v0_76fc = load i32, i32* %ebp.global-to-local, align 4
  %v1_76fc = add i32 %v0_76fc, -350051
  %v2_76fc = inttoptr i32 %v1_76fc to i32*
  %v3_76fc = load i32, i32* %v2_76fc, align 4
  %v4_76fc = sub i32 %v3_76fc, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_76fc, i32* %v2_76fc, align 4
  %v0_7702 = load i32, i32* %ecx.global-to-local, align 4
  %v1_7702 = add i32 %v0_7702, -955767740
  %v2_7702 = inttoptr i32 %v1_7702 to i32*
  %v3_7702 = load i32, i32* %v2_7702, align 4
  %v4_7702 = sub i32 %v3_7702, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_7702, i32* %v2_7702, align 4
  %v0_7709 = load i32, i32* %eax.global-to-local, align 4
  %v11_7709 = and i32 %v0_7709, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_7709, i32* %eax.global-to-local, align 4
  ret i32 %v11_7709

; uselistorder directives
  uselistorder i32 %v11_7709, { 1, 0 }
}

define i32 @function_781d() local_unnamed_addr {
dec_label_pc_781d:
  %eax.global-to-local = alloca i32, align 4
  %v0_781d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_781d
}

define i32 @function_7a0a() local_unnamed_addr {
dec_label_pc_7a0a:
  %eax.global-to-local = alloca i32, align 4
  %v0_7a0a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7a0a
}

define i32 @function_7a1b() local_unnamed_addr {
dec_label_pc_7a1b:
  %eax.global-to-local = alloca i32, align 4
  %v7_7a1b = load i32, i32* %eax.global-to-local, align 4
  %v11_7a22 = and i32 %v7_7a1b, or (i32 zext (i8 ptrtoint (i32* @global_var_dc.3318 to i8) to i32), i32 -256)
  store i32 %v11_7a22, i32* %eax.global-to-local, align 4
  ret i32 %v11_7a22

; uselistorder directives
  uselistorder i32 %v11_7a22, { 1, 0 }
}

define i32 @function_7a40() local_unnamed_addr {
dec_label_pc_7a40:
  %v0_7a40 = call i32 @function_7183()
  ret i32 %v0_7a40
}

define i32 @function_7a45() local_unnamed_addr {
dec_label_pc_7a45:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7a4f() local_unnamed_addr {
dec_label_pc_7a4f:
  %v0_7a51 = call i32 @function_6f80()
  ret i32 %v0_7a51
}

define i32 @function_7a56() local_unnamed_addr {
dec_label_pc_7a56:
  %v0_7a56 = call i32 @function_6f80()
  ret i32 %v0_7a56
}

define i32 @function_7a5c() local_unnamed_addr {
dec_label_pc_7a5c:
  %eax.global-to-local = alloca i32, align 4
  %v0_7a5c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7a5c
}

define i32 @function_7a5d() local_unnamed_addr {
dec_label_pc_7a5d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7a6b() local_unnamed_addr {
dec_label_pc_7a6b:
  %v0_7a6b = call i32 @function_6f82()
  ret i32 %v0_7a6b
}

define i32 @function_7a70() local_unnamed_addr {
dec_label_pc_7a70:
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_7a72 = add i32 %tmp91, -564
  %v1_7a7b = inttoptr i32 %v1_7a72 to i32*
  %v2_7a7b = call i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %v1_7a7b)
  %v0_7a80 = load i32, i32* %ebp.global-to-local, align 4
  %v1_7a80 = add i32 %v0_7a80, -576
  %v1_7a89 = inttoptr i32 %v1_7a80 to i32*
  %v2_7a89 = call i32 @_ZNSt6vectorI12CTransactionSaIS0_EED1Ev(i32* %v1_7a89)
  store i32 %v2_7a89, i32* @eax, align 4
  %v0_7a8e = call i32 @function_7a5d()
  ret i32 %v0_7a8e
}

define i32 @function_7b00() local_unnamed_addr {
dec_label_pc_7b00:
  %eax.global-to-local = alloca i32, align 4
  %v0_7b00 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7b00
}

define i32 @function_7f74() local_unnamed_addr {
dec_label_pc_7f74:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7f7c() local_unnamed_addr {
dec_label_pc_7f7c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7fa7() local_unnamed_addr {
dec_label_pc_7fa7:
  %eax.global-to-local = alloca i32, align 4
  %v0_7fa7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7fa7
}

define i32 @function_7fc8() local_unnamed_addr {
dec_label_pc_7fc8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7fd9() local_unnamed_addr {
dec_label_pc_7fd9:
  %eax.global-to-local = alloca i32, align 4
  %v0_7fd9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7fd9
}

define i32 @function_806c() local_unnamed_addr {
dec_label_pc_806c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_806c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_806c = load i32, i32* %eax.global-to-local, align 4
  %v4_806c = trunc i32 %v3_806c to i8
  %v5_806c = add i8 %v4_806c, %v2_806c
  %v21_806c = inttoptr i32 %v3_806c to i8*
  store i8 %v5_806c, i8* %v21_806c, align 1
  %v2_806e = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_806e = load i32, i32* %ecx.global-to-local, align 4
  %v4_806e = trunc i32 %v3_806e to i8
  %v5_806e = add i8 %v4_806e, %v2_806e
  %v20_806e = load i32, i32* %edi.global-to-local, align 4
  %v21_806e = inttoptr i32 %v20_806e to i8*
  store i8 %v5_806e, i8* %v21_806e, align 1
  %v0_8070 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8070 = add i32 %v0_8070, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_8070, i32* %ebp.global-to-local, align 4
  %v0_8071 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8071
}

define i32 @function_807f() local_unnamed_addr {
dec_label_pc_807f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_807f = load i32, i32* %ecx.global-to-local, align 4
  %v1_807f = add i32 %v0_807f, 970336718
  %v2_807f = inttoptr i32 %v1_807f to i8*
  %v3_807f = load i8, i8* %v2_807f, align 1
  %v5_807f = trunc i32 %v0_807f to i8
  %v6_807f = add i8 %v3_807f, %v5_807f
  store i8 %v6_807f, i8* %v2_807f, align 1
  %v2_8085 = load i32, i32* %edi.global-to-local, align 4
  %v3_8085 = udiv i32 %v2_8085, 2
  %v4_8085 = shl i32 %v2_8085, 31
  %v5_8085 = or i32 %v3_8085, %v4_8085
  %v7_8085 = inttoptr i32 %v2_8085 to i32*
  store i32 %v5_8085, i32* %v7_8085, align 4
  %v0_8087 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8087 = add i32 %v0_8087, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_8087, i32* %ebp.global-to-local, align 4
  %v0_8088 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8088

; uselistorder directives
  uselistorder i32 %v2_8085, { 1, 2, 0 }
}

define i32 @function_8189() local_unnamed_addr {
dec_label_pc_8189:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8189 = load i32, i32* %ebx.global-to-local, align 4
  %v1_818a = call i32 @function_958d818f(i32 %v0_8189)
  ret i32 %v1_818a
}

define i32 @function_81a5() local_unnamed_addr {
dec_label_pc_81a5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8236() local_unnamed_addr {
dec_label_pc_8236:
  %eax.global-to-local = alloca i32, align 4
  %v0_8236 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8236
}

define i32 @function_8293() local_unnamed_addr {
dec_label_pc_8293:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_837e() local_unnamed_addr {
dec_label_pc_837e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_837e = add i32 %tmp91, -1972
  store i32 %v1_837e, i32* %eax.global-to-local, align 4
  %v2_8384 = inttoptr i32 %v1_837e to i32*
  store i32 0, i32* %v2_8384, align 4
  %v0_838e = load i32, i32* %ebp.global-to-local, align 4
  %v1_838e = add i32 %v0_838e, -1968
  %v2_838e = inttoptr i32 %v1_838e to i32*
  store i32 0, i32* %v2_838e, align 4
  %v3_8398 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_8398
}

define i32 @function_8472() local_unnamed_addr {
dec_label_pc_8472:
  %v0_8472 = load i32, i32* @ebp, align 4
  %v1_8472 = add i32 %v0_8472, -2044
  %v0_8478 = load i32, i32* @esi, align 4
  %v1_8478 = add i32 %v0_8478, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_8478 = inttoptr i32 %v1_8478 to i32*
  %v3_8478 = load i32, i32* %v2_8478, align 4
  store i32 %v3_8478, i32* @edi, align 4
  %v2_847b = add i32 %v0_8472, -2208
  %v3_847b = inttoptr i32 %v2_847b to i32*
  store i32 %v1_8472, i32* %v3_847b, align 4
  %v0_8483 = call i32 @function_84bc()
  ret i32 %v0_8483
}

define i32 @function_8488() local_unnamed_addr {
dec_label_pc_8488:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_849a() local_unnamed_addr {
dec_label_pc_849a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_84a3() local_unnamed_addr {
dec_label_pc_84a3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_84bc() local_unnamed_addr {
dec_label_pc_84bc:
  %v0_84bc = load i32, i32* @edi, align 4
  %v1_84bc = load i32, i32* @esi, align 4
  %v12_84bc = icmp eq i32 %v0_84bc, %v1_84bc
  br i1 %v12_84bc, label %bb, label %dec_label_pc_84c4

bb:                                               ; preds = %dec_label_pc_84bc
  %v1_84be = call i32 @function_8556()
  br label %dec_label_pc_84c4

dec_label_pc_84c4:                                ; preds = %bb, %dec_label_pc_84bc
  %v0_84c4 = load i32, i32* @ebp, align 4
  %v1_84c4 = add i32 %v0_84c4, -2188
  %v2_84c4 = inttoptr i32 %v1_84c4 to i32*
  %v3_84c4 = load i32, i32* %v2_84c4, align 4
  ret i32 %v3_84c4
}

define i32 @function_84d6() local_unnamed_addr {
dec_label_pc_84d6:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_84dc = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_84dc, i32* @eax, align 4
  call void @"path<std::basic_string<char> >"(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i8* bitcast (i32* @0 to i8*))
  %v0_84e3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_84e3 = add i32 %v0_84e3, -2040
  %v2_84e3 = inttoptr i32 %v1_84e3 to i32*
  %v3_84e3 = load i32, i32* %v2_84e3, align 4
  store i32 %v3_84e3, i32* @eax, align 4
  %v2_84e9 = add i32 %v0_84e3, -2036
  %v3_84e9 = inttoptr i32 %v2_84e9 to i32*
  %v4_84e9 = load i32, i32* %v3_84e9, align 4
  %v15_84e9 = icmp eq i32 %v3_84e3, %v4_84e9
  br i1 %v15_84e9, label %dec_label_pc_84f9, label %dec_label_pc_84f1

dec_label_pc_84f1:                                ; preds = %dec_label_pc_84d6
  %v1_84f1 = icmp eq i32 %v3_84e3, 0
  %v1_84f3 = icmp eq i1 %v1_84f1, false
  br i1 %v1_84f3, label %bb, label %dec_label_pc_84f5

bb:                                               ; preds = %dec_label_pc_84f1
  %v2_84f3 = call i32 @function_8488()
  br label %dec_label_pc_84f5

dec_label_pc_84f5:                                ; preds = %bb, %dec_label_pc_84f1
  store i32 0, i32* @eax, align 4
  %v0_84f7 = call i32 @function_849a()
  ret i32 %v0_84f7

dec_label_pc_84f9:                                ; preds = %dec_label_pc_84d6
  %v1_84f9 = add i32 %v0_84e3, -2208
  %v2_84f9 = inttoptr i32 %v1_84f9 to i32*
  %v3_84f9 = load i32, i32* %v2_84f9, align 4
  %v0_84ff = load i32, i32* %ebx.global-to-local, align 4
  %v3_850a = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(i32 %v3_84f9, i32 %v3_84e3, i32 %v0_84ff)
  store i32 %v3_850a, i32* @eax, align 4
  %v0_850f = call i32 @function_84a3()
  ret i32 %v0_850f

; uselistorder directives
  uselistorder i32 %v3_84e3, { 2, 1, 0, 3 }
}

define i32 @function_8512() local_unnamed_addr {
dec_label_pc_8512:
  %eax.global-to-local = alloca i32, align 4
  %v0_8512 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8512
}

define i32 @function_8513() local_unnamed_addr {
dec_label_pc_8513:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8522() local_unnamed_addr {
dec_label_pc_8522:
  %ecx.global-to-local = alloca i32, align 4
  %v0_8522 = load i32, i32* @ebx, align 4
  %v1_8522 = add i32 %v0_8522, -565059
  %v2_8522 = inttoptr i32 %v1_8522 to i32*
  %v3_8522 = load i32, i32* %v2_8522, align 4
  %v4_8522 = sub i32 %v3_8522, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_8522, i32* %v2_8522, align 4
  %v0_8528 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8528 = add i32 %v0_8528, 607947251
  %v2_8528 = inttoptr i32 %v1_8528 to i32*
  %v3_8528 = load i32, i32* %v2_8528, align 4
  %v4_8528 = add i32 %v3_8528, -1
  store i32 %v4_8528, i32* %v2_8528, align 4
  %v2_852e = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* nonnull @0)
  store i32 %v2_852e, i32* @eax, align 4
  %v0_8533 = call i32 @function_6f82()
  ret i32 %v0_8533
}

define i32 @function_8542() local_unnamed_addr {
dec_label_pc_8542:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_8544 = add i32 %tmp91, -2044
  %v2_854c = add i32 %tmp91, -2208
  %v3_854c = inttoptr i32 %v2_854c to i32*
  store i32 %v1_8544, i32* %v3_854c, align 4
  %v0_8552 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8552

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_8554() local_unnamed_addr {
dec_label_pc_8554:
  %eax.global-to-local = alloca i32, align 4
  %v0_8554 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8554
}

define i32 @function_8556() local_unnamed_addr {
dec_label_pc_8556:
  %v0_8556 = load i32, i32* @ebp, align 4
  %v1_8556 = add i32 %v0_8556, -2208
  %v2_8556 = inttoptr i32 %v1_8556 to i32*
  %v3_8556 = load i32, i32* %v2_8556, align 4
  %v1_855c = add i32 %v0_8556, -2032
  store i32 %v1_855c, i32* @edi, align 4
  %v3_8569 = inttoptr i32 %v1_855c to i32*
  %v4_8569 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EEC1ERKS4_(i32* %v3_8569, i32 %v3_8556)
  %v0_856e = load i32, i32* @edi, align 4
  %v0_8572 = load i32, i32* @ebp, align 4
  %v1_8572 = add i32 %v0_8572, -2008
  store i32 %v1_8572, i32* @edi, align 4
  %v3_857b = inttoptr i32 %v1_8572 to i32*
  %v4_857b = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EEC1ERKS4_(i32* %v3_857b, i32 %v0_856e)
  %v0_8580 = load i32, i32* @ebp, align 4
  %v1_8580 = add i32 %v0_8580, -2020
  %v0_8586 = load i32, i32* @edi, align 4
  %v3_858d = inttoptr i32 %v1_8580 to i32*
  %v4_858d = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EEC1ERKS4_(i32* %v3_858d, i32 %v0_8586)
  %v0_8592 = load i32, i32* @ebp, align 4
  %v1_8592 = add i32 %v0_8592, -1996
  %v0_8598 = load i32, i32* @ebx, align 4
  %v3_859f = inttoptr i32 %v1_8592 to i32*
  %v4_859f = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EEC1ERKS4_(i32* %v3_859f, i32 %v0_8598)
  %v0_85a4 = load i32, i32* @ebx, align 4
  %v0_85a7 = load i32, i32* @ebp, align 4
  %v1_85a7 = add i32 %v0_85a7, -2092
  store i32 %v1_85a7, i32* @ebx, align 4
  %v1_85ad = inttoptr i32 %v0_85a4 to i32*
  %v2_85ad = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_85ad)
  %v0_85b2 = load i32, i32* @ebp, align 4
  %v1_85b2 = add i32 %v0_85b2, -2096
  %v2_85b2 = inttoptr i32 %v1_85b2 to i32*
  store i32 1040, i32* %v2_85b2, align 4
  %v0_85bc = load i32, i32* @esi, align 4
  %v0_85c0 = load i32, i32* @ebx, align 4
  %v3_85c3 = inttoptr i32 %v0_85c0 to i32*
  %v4_85c3 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EEC1ERKS4_(i32* %v3_85c3, i32 %v0_85bc)
  %v0_85c8 = load i32, i32* @esi, align 4
  %v1_85cb = inttoptr i32 %v0_85c8 to i32*
  %v2_85cb = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_85cb)
  %v0_85d0 = load i32, i32* @edi, align 4
  %v1_85d3 = inttoptr i32 %v0_85d0 to i32*
  %v2_85d3 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_85d3)
  %v0_85d8 = load i32, i32* @ebp, align 4
  %v1_85d8 = add i32 %v0_85d8, -2204
  %v2_85d8 = inttoptr i32 %v1_85d8 to i32*
  %v3_85d8 = load i32, i32* %v2_85d8, align 4
  %v1_85de = add i32 %v0_85d8, -2096
  %tmp7 = inttoptr i32 %v1_85de to i32*
  %v4_85eb = call i32 @_ZN5boost12thread_group13create_threadINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEEEPNS_6threadET_(i32 %v3_85d8, i32* %tmp7)
  %v0_85f0 = load i32, i32* @ebx, align 4
  %v0_85f3 = load i32, i32* @ebp, align 4
  %v1_85f3 = add i32 %v0_85f3, -1280
  store i32 %v1_85f3, i32* @ebx, align 4
  %v1_85f9 = inttoptr i32 %v0_85f0 to i32*
  %v2_85f9 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_85f9)
  %v0_85fe = load i32, i32* @ebp, align 4
  %v1_85fe = add i32 %v0_85fe, -2032
  %v1_8607 = inttoptr i32 %v1_85fe to i32*
  %v2_8607 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_8607)
  %v0_8614 = load i32, i32* @ebx, align 4
  %v3_8617 = call i32 @_Z1_PKc(i32 %v0_8614, i32 ptrtoint ([21 x i8]* @global_var_a5b6.3319 to i32))
  %v0_861d = load i32, i32* @ebx, align 4
  %v3_8628 = call i32 @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_(i32 ptrtoint ([26 x i8]* @global_var_9724.3320 to i32), i32 %v0_861d)
  ret i32 %v3_8628

; uselistorder directives
  uselistorder i32 (i32, i32)* @_Z1_PKc, { 3, 2, 1, 0 }
}

define i32 @function_8659() local_unnamed_addr {
dec_label_pc_8659:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_8719() local_unnamed_addr {
dec_label_pc_8719:
  %v0_8719 = load i32, i32* @ebp, align 4
  %v1_8719 = add i32 %v0_8719, -2208
  %v2_8719 = inttoptr i32 %v1_8719 to i32*
  %v3_8719 = load i32, i32* %v2_8719, align 4
  store i32 %v3_8719, i32* @edi, align 4
  %v1_8722 = inttoptr i32 %v3_8719 to i32*
  %v2_8722 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_8722)
  %v0_8727 = call i32 @function_7183()
  ret i32 %v0_8727

; uselistorder directives
  uselistorder i32 -2208, { 5, 2, 0, 1, 3, 4, 6 }
}

define i32 @function_872c() local_unnamed_addr {
dec_label_pc_872c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_872c = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_872c, i32* @esi, align 4
  %v0_872e = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_872c, i32* @ebx, align 4
  %v1_8733 = inttoptr i32 %v0_872e to i32*
  %v2_8733 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_8733)
  store i32 %v2_8733, i32* %eax.global-to-local, align 4
  %v0_8738 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8738 = add i32 %v0_8738, -2032
  %v0_873e = load i32, i32* @ebx, align 4
  store i32 %v0_873e, i32* @esi, align 4
  %v1_8743 = inttoptr i32 %v1_8738 to i32*
  %v2_8743 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_8743)
  store i32 %v2_8743, i32* %eax.global-to-local, align 4
  ret i32 %v2_8743
}

define i32 @function_874d() local_unnamed_addr {
dec_label_pc_874d:
  %eax.global-to-local = alloca i32, align 4
  %v0_874d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_874d, i32* @ebx, align 4
  %v0_874f = load i32, i32* @esi, align 4
  %v1_8752 = inttoptr i32 %v0_874f to i32*
  %v2_8752 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_8752)
  store i32 %v2_8752, i32* %eax.global-to-local, align 4
  %v0_8757 = load i32, i32* @edi, align 4
  %v1_875a = inttoptr i32 %v0_8757 to i32*
  %v2_875a = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_875a)
  store i32 %v2_875a, i32* %eax.global-to-local, align 4
  ret i32 %v2_875a
}

define i32 @function_8761() local_unnamed_addr {
dec_label_pc_8761:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_8761 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8761, i32* @esi, align 4
  %v0_8763 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8761, i32* @ebx, align 4
  %v1_8768 = inttoptr i32 %v0_8763 to i32*
  %v2_8768 = call i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %v1_8768)
  store i32 %v2_8768, i32* %eax.global-to-local, align 4
  ret i32 %v2_8768

; uselistorder directives
  uselistorder i32 (i32*)* @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev, { 0, 1, 2, 3, 4, 11, 6, 7, 8, 9, 10, 5 }
}

define i32 @function_876f() local_unnamed_addr {
dec_label_pc_876f:
  %eax.global-to-local = alloca i32, align 4
  %v0_876f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_876f
}

define i32 @function_8773() local_unnamed_addr {
dec_label_pc_8773:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_877d() local_unnamed_addr {
dec_label_pc_877d:
  %eax.global-to-local = alloca i32, align 4
  %v0_877d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_877d
}

define i32 @function_8782() local_unnamed_addr {
dec_label_pc_8782:
  %v0_8782 = call i32 @function_8773()
  ret i32 %v0_8782
}

define i32 @function_8784() local_unnamed_addr {
dec_label_pc_8784:
  %v0_8784 = call i32 @function_8773()
  ret i32 %v0_8784
}

define i32 @function_8794() local_unnamed_addr {
dec_label_pc_8794:
  %eax.global-to-local = alloca i32, align 4
  %v0_8794 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8794
}

define i32 @function_879b(i16 %arg1) local_unnamed_addr {
dec_label_pc_879b:
  %eax.global-to-local = alloca i32, align 4
  %v0_879b = load i32, i32* %eax.global-to-local, align 4
  %v2_879b = add i32 %v0_879b, 36
  %v16_879b = and i32 %v2_879b, 255
  %v18_879b = and i32 %v0_879b, -256
  %v19_879b = or i32 %v16_879b, %v18_879b
  store i32 %v19_879b, i32* %eax.global-to-local, align 4
  ret i32 %v19_879b

; uselistorder directives
  uselistorder i32 %v0_879b, { 1, 0 }
}

define i32 @function_87be() local_unnamed_addr {
dec_label_pc_87be:
  %eax.global-to-local = alloca i32, align 4
  %v0_87be = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_87be
}

define i32 @function_87d9() local_unnamed_addr {
dec_label_pc_87d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_87d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_87d9
}

define i32 @function_87f4() local_unnamed_addr {
dec_label_pc_87f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_87f4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_87f4
}

define i32 @function_889f(i16 %arg1) local_unnamed_addr {
dec_label_pc_889f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_889f = load i32, i32* %eax.global-to-local, align 4
  %v2_889f = load i32, i32* %ecx.global-to-local, align 4
  %v3_889f = lshr i32 %v2_889f, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_889f = add i32 %v3_889f, %v0_889f
  %v20_889f = and i32 %v5_889f, 255
  %v22_889f = and i32 %v0_889f, -256
  %v23_889f = or i32 %v20_889f, %v22_889f
  store i32 %v23_889f, i32* %eax.global-to-local, align 4
  ret i32 %v23_889f

; uselistorder directives
  uselistorder i32 %v0_889f, { 1, 0 }
}

define i32 @function_88ac() local_unnamed_addr {
dec_label_pc_88ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_88ac = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_88ac
}

define i32 @function_88b9() local_unnamed_addr {
dec_label_pc_88b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_88b9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_88b9
}

define i32 @function_88ed() local_unnamed_addr {
dec_label_pc_88ed:
  %eax.global-to-local = alloca i32, align 4
  %v0_88ed = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_88ed
}

define i32 @function_89cb() local_unnamed_addr {
dec_label_pc_89cb:
  %v0_89cb = call i32 @function_8513()
  ret i32 %v0_89cb
}

define i32 @function_89d8() local_unnamed_addr {
dec_label_pc_89d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_89d8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_89d8
}

define i32 @function_89e7() local_unnamed_addr {
dec_label_pc_89e7:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_89e7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_89e7 = add i32 %v0_89e7, -566139
  %v2_89e7 = inttoptr i32 %v1_89e7 to i32*
  %v3_89e7 = load i32, i32* %v2_89e7, align 4
  %v4_89e7 = sub i32 %v3_89e7, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_89e7, i32* %v2_89e7, align 4
  %v0_89ed = load i32, i32* %ecx.global-to-local, align 4
  %v1_89ed = add i32 %v0_89ed, 605850054
  %v2_89ed = inttoptr i32 %v1_89ed to i32*
  %v3_89ed = load i32, i32* %v2_89ed, align 4
  %v4_89ed = add i32 %v3_89ed, -1
  store i32 %v4_89ed, i32* %v2_89ed, align 4
  %v0_89f3 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_89f3, i32* %ebx.global-to-local, align 4
  %v2_89f5 = call i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* nonnull @0)
  %v0_89fa = load i32, i32* %edi.global-to-local, align 4
  %v1_89fd = call i32 @_ZN9CWalletDBD1Ev(i32 %v0_89fa)
  store i32 %v1_89fd, i32* @eax, align 4
  %v0_8a02 = call i32 @function_6f82()
  ret i32 %v0_8a02
}

define i32 @function_8a07() local_unnamed_addr {
dec_label_pc_8a07:
  %eax.global-to-local = alloca i32, align 4
  %v0_8a07 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8a07
}

define i32 @function_8a10() local_unnamed_addr {
dec_label_pc_8a10:
  %v0_8a10 = call i32 @function_7156()
  ret i32 %v0_8a10
}

define i32 @function_8a15() local_unnamed_addr {
dec_label_pc_8a15:
  %v0_8a15 = call i32 @function_6f80()
  ret i32 %v0_8a15
}

define i32 @function_8a5b() local_unnamed_addr {
dec_label_pc_8a5b:
  %v0_8a5b = call i32 @function_81a5()
  ret i32 %v0_8a5b
}

define i32 @function_8a6a() local_unnamed_addr {
dec_label_pc_8a6a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8a78() local_unnamed_addr {
dec_label_pc_8a78:
  %v0_8a7a = call i32 @function_6f80()
  ret i32 %v0_8a7a
}

define i32 @function_8a7f() local_unnamed_addr {
dec_label_pc_8a7f:
  %v0_8a81 = call i32 @function_8a6a()
  ret i32 %v0_8a81
}

define i32 @function_8a83() local_unnamed_addr {
dec_label_pc_8a83:
  %v0_8a83 = call i32 @function_7156()
  ret i32 %v0_8a83
}

define i32 @function_8ac1() local_unnamed_addr {
dec_label_pc_8ac1:
  %eax.global-to-local = alloca i32, align 4
  %v0_8ac1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8ac1
}

define i32 @function_8ac9() local_unnamed_addr {
dec_label_pc_8ac9:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_1 = alloca i32, align 4
  %v0_8ac9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8ac9 = add i32 %v0_8ac9, -1568337957
  %v2_8ac9 = inttoptr i32 %v1_8ac9 to i32*
  %v3_8ac9 = load i32, i32* %v2_8ac9, align 4
  %v4_8ac9 = add i32 %v3_8ac9, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_8ac9, i32* %v2_8ac9, align 4
  %v2_8acf = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_8acf = load i32, i32* %eax.global-to-local, align 4
  %v4_8acf = trunc i32 %v3_8acf to i8
  %v5_8acf = add i8 %v4_8acf, %v2_8acf
  %v21_8acf = inttoptr i32 %v3_8acf to i8*
  store i8 %v5_8acf, i8* %v21_8acf, align 1
  %v0_8ad1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8ad1 = lshr i32 %v0_8ad1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_8ad1 = load i32, i32* %eax.global-to-local, align 4
  %v5_8ad1 = add i32 %v1_8ad1, %v3_8ad1
  %v20_8ad1 = urem i32 %v5_8ad1, 256
  %v22_8ad1 = shl i32 %v20_8ad1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_8ad1 = and i32 %v0_8ad1, -65281
  %v24_8ad1 = or i32 %v22_8ad1, %v23_8ad1
  store i32 %v24_8ad1, i32* %ebx.global-to-local, align 4
  %v15_8ad3 = ptrtoint i32* %stack_var_1 to i32
  %v11_8ad4 = and i32 %v3_8ad1, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_8ad4, i32* @eax, align 4
  %v12_8ad6 = load i32, i32* %ecx.global-to-local, align 4
  %v14_8ad6 = load i32, i32* %edx.global-to-local, align 4
  %v22_8ad6 = load i32, i32* %esi.global-to-local, align 4
  %v24_8ad6 = load i32, i32* %edi.global-to-local, align 4
  %v7_8ad7 = call i32 @function_4c70000(i32 %v24_8ad6, i32 %v22_8ad6, i32 %v15_8ad3, i32 %v24_8ad1, i32 %v14_8ad6, i32 %v12_8ad6, i32 %v11_8ad4)
  store i32 %v7_8ad7, i32* %eax.global-to-local, align 4
  ret i32 %v7_8ad7

; uselistorder directives
  uselistorder i32 %v11_8ad4, { 1, 0 }
}

define i32 @function_8ae5() local_unnamed_addr {
dec_label_pc_8ae5:
  %eax.global-to-local = alloca i32, align 4
  %v0_8ae5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8ae5
}

define i32 @function_8af6() local_unnamed_addr {
dec_label_pc_8af6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_1 = alloca i32, align 4
  %v2_8af6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_8af6 = load i32, i32* %eax.global-to-local, align 4
  %v4_8af6 = trunc i32 %v3_8af6 to i8
  %v5_8af6 = or i8 %v4_8af6, %v2_8af6
  %v12_8af6 = inttoptr i32 %v3_8af6 to i8*
  store i8 %v5_8af6, i8* %v12_8af6, align 1
  %v2_8af8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_8af8 = load i32, i32* %eax.global-to-local, align 4
  %v4_8af8 = trunc i32 %v3_8af8 to i8
  %v5_8af8 = add i8 %v4_8af8, %v2_8af8
  %v21_8af8 = inttoptr i32 %v3_8af8 to i8*
  store i8 %v5_8af8, i8* %v21_8af8, align 1
  %v0_8afa = load i32, i32* %ebx.global-to-local, align 4
  %v1_8afa = lshr i32 %v0_8afa, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_8afa = load i32, i32* %eax.global-to-local, align 4
  %v5_8afa = add i32 %v1_8afa, %v3_8afa
  %v20_8afa = urem i32 %v5_8afa, 256
  %v22_8afa = shl i32 %v20_8afa, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_8afa = and i32 %v0_8afa, -65281
  %v24_8afa = or i32 %v22_8afa, %v23_8afa
  store i32 %v24_8afa, i32* %ebx.global-to-local, align 4
  %v15_8afc = ptrtoint i32* %stack_var_1 to i32
  %v11_8afd = and i32 %v3_8afa, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_8afd, i32* @eax, align 4
  %v12_8aff = load i32, i32* %ecx.global-to-local, align 4
  %v14_8aff = load i32, i32* %edx.global-to-local, align 4
  %v22_8aff = load i32, i32* %esi.global-to-local, align 4
  %v24_8aff = load i32, i32* %edi.global-to-local, align 4
  %v7_8b00 = call i32 @function_4890000(i32 %v24_8aff, i32 %v22_8aff, i32 %v15_8afc, i32 %v24_8afa, i32 %v14_8aff, i32 %v12_8aff, i32 %v11_8afd)
  store i32 %v7_8b00, i32* %eax.global-to-local, align 4
  ret i32 %v7_8b00

; uselistorder directives
  uselistorder i32 %v11_8afd, { 1, 0 }
}

define i32 @function_8b10() local_unnamed_addr {
dec_label_pc_8b10:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8b5d() local_unnamed_addr {
dec_label_pc_8b5d:
  %eax.global-to-local = alloca i32, align 4
  %v0_8b5d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8b5d
}

define i32 @function_8b6f() local_unnamed_addr {
dec_label_pc_8b6f:
  %v0_8b6f = call i32 @function_7fc8()
  ret i32 %v0_8b6f
}

define i32 @function_8b84() local_unnamed_addr {
dec_label_pc_8b84:
  %v0_8b84 = call i32 @function_8b10()
  ret i32 %v0_8b84
}

define i32 @function_8b86() local_unnamed_addr {
dec_label_pc_8b86:
  %v0_8b86 = call i32 @function_70e8()
  ret i32 %v0_8b86
}

define i32 @function_8b90() local_unnamed_addr {
dec_label_pc_8b90:
  %v0_8b90 = call i32 @function_6f80()
  ret i32 %v0_8b90
}

define i32 @function_8b95() local_unnamed_addr {
dec_label_pc_8b95:
  %v0_8b97 = load i32, i32* @ebx, align 4
  %v1_8b9c = inttoptr i32 %v0_8b97 to i32*
  %v2_8b9c = call i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %v1_8b9c)
  store i32 %v2_8b9c, i32* @eax, align 4
  %v0_8ba1 = call i32 @function_6f82()
  ret i32 %v0_8ba1
}

define i32 @function_8ba6() local_unnamed_addr {
dec_label_pc_8ba6:
  %v0_8ba6 = call i32 @function_7156()
  ret i32 %v0_8ba6
}

define i32 @function_8bb0() local_unnamed_addr {
dec_label_pc_8bb0:
  %v0_8bb0 = call i32 @function_7a45()
  ret i32 %v0_8bb0
}

define i32 @function_8bc0() local_unnamed_addr {
dec_label_pc_8bc0:
  %v0_8bc0 = call i32 @function_6f92()
  ret i32 %v0_8bc0
}

define i32 @function_8bd0() local_unnamed_addr {
dec_label_pc_8bd0:
  %v0_8bd0 = call i32 @function_7a45()
  ret i32 %v0_8bd0

; uselistorder directives
  uselistorder i32 ()* @function_7a45, { 1, 0 }
}

define i32 @function_8be0() local_unnamed_addr {
dec_label_pc_8be0:
  %v0_8be0 = call i32 @function_6f80()
  ret i32 %v0_8be0
}

define i32 @function_8bf0() local_unnamed_addr {
dec_label_pc_8bf0:
  %v0_8bf0 = call i32 @function_7156()
  ret i32 %v0_8bf0
}

define i32 @function_8c00() local_unnamed_addr {
dec_label_pc_8c00:
  %v0_8c00 = call i32 @function_8b95()
  ret i32 %v0_8c00
}

define i32 @function_8c02() local_unnamed_addr {
dec_label_pc_8c02:
  %v0_8c02 = load i32, i32* @eax, align 4
  ret i32 %v0_8c02
}

define i32 @function_8c10() local_unnamed_addr {
dec_label_pc_8c10:
  %v0_8c10 = call i32 @function_8773()
  ret i32 %v0_8c10
}

define i32 @function_8c15() local_unnamed_addr {
dec_label_pc_8c15:
  %v0_8c15 = call i32 @function_8773()
  ret i32 %v0_8c15

; uselistorder directives
  uselistorder i32 ()* @function_8773, { 3, 2, 1, 0 }
}

define i32 @function_8c20() local_unnamed_addr {
dec_label_pc_8c20:
  %v0_8c20 = call i32 @function_8c02()
  ret i32 %v0_8c20
}

define i32 @function_8c24() local_unnamed_addr {
dec_label_pc_8c24:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8c5c() local_unnamed_addr {
dec_label_pc_8c5c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8c66() local_unnamed_addr {
dec_label_pc_8c66:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8c74() local_unnamed_addr {
dec_label_pc_8c74:
  %v0_8c74 = call i32 @function_6f82()
  ret i32 %v0_8c74
}

define i32 @function_8c79() local_unnamed_addr {
dec_label_pc_8c79:
  %v0_8c7b = call i32 @function_8c5c()
  ret i32 %v0_8c7b
}

define i32 @function_8c7d() local_unnamed_addr {
dec_label_pc_8c7d:
  %v0_8c80 = call i32 @function_8c66()
  ret i32 %v0_8c80
}

define i32 @function_8c82() local_unnamed_addr {
dec_label_pc_8c82:
  %v0_8c82 = call i32 @function_7156()
  ret i32 %v0_8c82
}

define i32 @function_8c90() local_unnamed_addr {
dec_label_pc_8c90:
  %eax.global-to-local = alloca i32, align 4
  %v0_8c90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8c90
}

define i32 @function_8ca0() local_unnamed_addr {
dec_label_pc_8ca0:
  %eax.global-to-local = alloca i32, align 4
  %v0_8ca0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8ca0
}

define i32 @function_8cb0() local_unnamed_addr {
dec_label_pc_8cb0:
  %eax.global-to-local = alloca i32, align 4
  %v0_8cb0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8cb0
}

define i32 @function_8cc0() local_unnamed_addr {
dec_label_pc_8cc0:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_8cc0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8cc0 = add i32 %v0_8cc0, -1913615878
  %v2_8cc0 = inttoptr i32 %v1_8cc0 to i32*
  %v3_8cc0 = load i32, i32* %v2_8cc0, align 4
  %v4_8cc0 = sub i32 %v3_8cc0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_8cc0, i32* %v2_8cc0, align 4
  %v0_8ccb = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_8ccb, i32* inttoptr (i32 -3848 to i32*), align 8
  %v0_8cd1 = call i32 @function_6fe5()
  ret i32 %v0_8cd1

; uselistorder directives
  uselistorder i32 ()* @function_6fe5, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_8cd6() local_unnamed_addr {
dec_label_pc_8cd6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8cd8() local_unnamed_addr {
dec_label_pc_8cd8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8ce0() local_unnamed_addr {
dec_label_pc_8ce0:
  %v0_8ce2 = call i32 @function_6f82()
  ret i32 %v0_8ce2
}

define i32 @function_8ce7() local_unnamed_addr {
dec_label_pc_8ce7:
  %v0_8ce7 = load i32, i32* @eax, align 4
  store i32 %v0_8ce7, i32* @edi, align 4
  %v0_8ce9 = call i32 @function_8ce0()
  ret i32 %v0_8ce9
}

define i32 @function_8d25() local_unnamed_addr {
dec_label_pc_8d25:
  %v0_8d25 = call i32 @function_762a()
  ret i32 %v0_8d25
}

define i32 @function_8d2a() local_unnamed_addr {
dec_label_pc_8d2a:
  %v0_8d2a = call i32 @function_7156()
  ret i32 %v0_8d2a
}

define i32 @function_8d39() local_unnamed_addr {
dec_label_pc_8d39:
  %v0_8d39 = call i32 @function_8cd8()
  ret i32 %v0_8d39
}

define i32 @function_8d3b() local_unnamed_addr {
dec_label_pc_8d3b:
  %v0_8d3b = call i32 @function_8cd6()
  ret i32 %v0_8d3b
}

define i32 @function_8d3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_8d3e:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v10_8d3f = load i32, i32* %edx.global-to-local, align 4
  %v11_8d3f = and i32 %v10_8d3f, -256
  store i32 %v11_8d3f, i32* %edx.global-to-local, align 4
  %v0_8d42 = load i32, i32* %edi.global-to-local, align 4
  %v1_8d42 = add i32 %v0_8d42, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_8d42, i32* %edi.global-to-local, align 4
  %v0_8d45 = load i32, i32* %eax.global-to-local, align 4
  %v11_8d45 = and i32 %v0_8d45, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_8d45, i32* %eax.global-to-local, align 4
  ret i32 %v11_8d45

; uselistorder directives
  uselistorder i32 %v11_8d45, { 1, 0 }
}

define i32 @function_8ddf() local_unnamed_addr {
dec_label_pc_8ddf:
  %v0_8ddf = call i32 @function_7183()
  ret i32 %v0_8ddf

; uselistorder directives
  uselistorder i32 ()* @function_7183, { 2, 0, 1 }
}

define i32 @function_8ded() local_unnamed_addr {
dec_label_pc_8ded:
  %eax.global-to-local = alloca i32, align 4
  %v0_8ded = load i32, i32* %eax.global-to-local, align 4
  %v2_8ded = add i32 %v0_8ded, 180
  %v16_8ded = and i32 %v2_8ded, 255
  %v18_8ded = and i32 %v0_8ded, -256
  %v19_8ded = or i32 %v16_8ded, %v18_8ded
  store i32 %v19_8ded, i32* %eax.global-to-local, align 4
  ret i32 %v19_8ded

; uselistorder directives
  uselistorder i32 %v0_8ded, { 1, 0 }
}

define i32 @function_8e1d() local_unnamed_addr {
dec_label_pc_8e1d:
  %v0_8e1d = call i32 @function_7f74()
  ret i32 %v0_8e1d
}

define i32 @function_8e22() local_unnamed_addr {
dec_label_pc_8e22:
  %v0_8e22 = call i32 @function_7156()
  ret i32 %v0_8e22
}

define i32 @function_8e30() local_unnamed_addr {
dec_label_pc_8e30:
  %v0_8e30 = call i32 @function_7156()
  ret i32 %v0_8e30
}

define i32 @function_8e40() local_unnamed_addr {
dec_label_pc_8e40:
  %v0_8e40 = call i32 @function_7156()
  ret i32 %v0_8e40
}

define i32 @function_8e50() local_unnamed_addr {
dec_label_pc_8e50:
  %v0_8e50 = call i32 @function_7156()
  ret i32 %v0_8e50
}

define i32 @function_8e5e() local_unnamed_addr {
dec_label_pc_8e5e:
  %eax.global-to-local = alloca i32, align 4
  %v0_8e5e = load i32, i32* %eax.global-to-local, align 4
  %v2_8e5e = add i32 %v0_8e5e, 44
  %v16_8e5e = and i32 %v2_8e5e, 255
  %v18_8e5e = and i32 %v0_8e5e, -256
  %v19_8e5e = or i32 %v16_8e5e, %v18_8e5e
  store i32 %v19_8e5e, i32* %eax.global-to-local, align 4
  ret i32 %v19_8e5e

; uselistorder directives
  uselistorder i32 %v0_8e5e, { 1, 0 }
}

define i32 @function_8e85() local_unnamed_addr {
dec_label_pc_8e85:
  %v0_8e85 = call i32 @function_7f7c()
  ret i32 %v0_8e85
}

define i32 @function_8e93() local_unnamed_addr {
dec_label_pc_8e93:
  %eax.global-to-local = alloca i32, align 4
  %v0_8e93 = load i32, i32* %eax.global-to-local, align 4
  %v16_8e93 = and i32 %v0_8e93, or (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 -256)
  store i32 %v16_8e93, i32* %eax.global-to-local, align 4
  ret i32 %v16_8e93

; uselistorder directives
  uselistorder i32 %v16_8e93, { 1, 0 }
}

define i32 @function_8ec3() local_unnamed_addr {
dec_label_pc_8ec3:
  %v0_8ec3 = call i32 @function_7f74()
  ret i32 %v0_8ec3

; uselistorder directives
  uselistorder i32 ()* @function_7f74, { 1, 0 }
}

define i32 @function_8ecf() local_unnamed_addr {
dec_label_pc_8ecf:
  %eax.global-to-local = alloca i32, align 4
  %v0_8ecf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8ecf
}

define i32 @function_8ed8() local_unnamed_addr {
dec_label_pc_8ed8:
  %v0_8ed8 = call i32 @function_6f82()
  ret i32 %v0_8ed8

; uselistorder directives
  uselistorder i32 ()* @function_6f82, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_8edd() local_unnamed_addr {
dec_label_pc_8edd:
  %v0_8edd = call i32 @function_7156()
  ret i32 %v0_8edd

; uselistorder directives
  uselistorder i32 ()* @function_7156, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_8eee() local_unnamed_addr {
dec_label_pc_8eee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8f00() local_unnamed_addr {
dec_label_pc_8f00:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8f0e() local_unnamed_addr {
dec_label_pc_8f0e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8f33() local_unnamed_addr {
dec_label_pc_8f33:
  %ecx.global-to-local = alloca i32, align 4
  %v2_8f33 = load i32, i32* @eax, align 4
  %v4_8f33 = mul i32 %v2_8f33, 2
  %v21_8f33 = inttoptr i32 %v2_8f33 to i32*
  store i32 %v4_8f33, i32* %v21_8f33, align 4
  %v0_8f35 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8f35 = add i32 %v0_8f35, -756538364
  %v2_8f35 = inttoptr i32 %v1_8f35 to i8*
  %v3_8f35 = load i8, i8* %v2_8f35, align 1
  %v5_8f35 = trunc i32 %v0_8f35 to i8
  %v6_8f35 = add i8 %v3_8f35, %v5_8f35
  store i8 %v6_8f35, i8* %v2_8f35, align 1
  %v0_8f3b = call i32 @function_838b0000()
  ret i32 %v0_8f3b

; uselistorder directives
  uselistorder i32 %v2_8f33, { 1, 0 }
}

define i32 @function_8f43(i32 %arg1) local_unnamed_addr {
dec_label_pc_8f43:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8f43 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8f43 = add i32 %v0_8f43, -1929108412
  %v2_8f43 = inttoptr i32 %v1_8f43 to i8*
  %v3_8f43 = load i8, i8* %v2_8f43, align 1
  %v5_8f43 = trunc i32 %v0_8f43 to i8
  %v6_8f43 = add i8 %v3_8f43, %v5_8f43
  %v11_8f43 = icmp ult i8 %v6_8f43, %v3_8f43
  store i1 %v11_8f43, i1* %cf.global-to-local, align 1
  store i8 %v6_8f43, i8* %v2_8f43, align 1
  %v0_8f49 = load i32, i32* %eax.global-to-local, align 4
  %v1_8f49 = add i32 %v0_8f49, -1996488703
  %v2_8f49 = inttoptr i32 %v1_8f49 to i32*
  %v3_8f49 = load i32, i32* %v2_8f49, align 4
  %v4_8f49 = load i1, i1* %cf.global-to-local, align 1
  %v5_8f49 = zext i1 %v4_8f49 to i32
  %v6_8f49 = add i32 %v3_8f49, ptrtoint (i16** @global_var_4.3276 to i32)
  %v7_8f49 = add i32 %v6_8f49, %v5_8f49
  store i32 %v7_8f49, i32* %v2_8f49, align 4
  %v0_8f50 = load i32, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_8f50 = and i32 %v0_8f50, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_8f50, i32* @eax, align 4
  %v0_8f53 = call i32 @function_838b0000()
  store i32 %v0_8f53, i32* %eax.global-to-local, align 4
  ret i32 %v0_8f53

; uselistorder directives
  uselistorder i32 ()* @function_838b0000, { 1, 0 }
}

define i32 @function_8f7a() local_unnamed_addr {
dec_label_pc_8f7a:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_8f7a = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_8f7a, i32* %stack_var_-4, align 4
  %v2_8f7b = load i32, i32* @eax, align 4
  %v4_8f7b = mul i32 %v2_8f7b, 2
  %v21_8f7b = inttoptr i32 %v2_8f7b to i32*
  store i32 %v4_8f7b, i32* %v21_8f7b, align 4
  %v0_8f7d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8f7d = add i32 %v0_8f7d, -1696062460
  %v2_8f7d = inttoptr i32 %v1_8f7d to i8*
  %v3_8f7d = load i8, i8* %v2_8f7d, align 1
  %v5_8f7d = trunc i32 %v0_8f7d to i8
  %v6_8f7d = add i8 %v3_8f7d, %v5_8f7d
  store i8 %v6_8f7d, i8* %v2_8f7d, align 1
  %v0_8f83 = load i32, i32* %stack_var_-4, align 4
  %v1_8f83 = call i32 @function_838b8f88(i32 %v0_8f83)
  ret i32 %v1_8f83

; uselistorder directives
  uselistorder i32 %v2_8f7b, { 1, 0 }
}

define i32 @function_8f88() local_unnamed_addr {
dec_label_pc_8f88:
  %ecx.global-to-local = alloca i32, align 4
  %v2_8f89 = load i32, i32* @eax, align 4
  %v4_8f89 = mul i32 %v2_8f89, 2
  %v21_8f89 = inttoptr i32 %v2_8f89 to i32*
  store i32 %v4_8f89, i32* %v21_8f89, align 4
  %v0_8f8b = load i32, i32* %ecx.global-to-local, align 4
  %v1_8f8b = add i32 %v0_8f8b, -1929108412
  %v2_8f8b = inttoptr i32 %v1_8f8b to i8*
  %v3_8f8b = load i8, i8* %v2_8f8b, align 1
  %v5_8f8b = trunc i32 %v0_8f8b to i8
  %v6_8f8b = add i8 %v3_8f8b, %v5_8f8b
  store i8 %v6_8f8b, i8* %v2_8f8b, align 1
  %v0_8f91 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8f95 = add i32 %v0_8f91, 585638916
  %v2_8f95 = inttoptr i32 %v1_8f95 to i8*
  %v3_8f95 = load i8, i8* %v2_8f95, align 1
  %v5_8f95 = trunc i32 %v0_8f91 to i8
  %v6_8f95 = add i8 %v3_8f95, %v5_8f95
  store i8 %v6_8f95, i8* %v2_8f95, align 1
  %v0_8f9b = call i32 @function_838b8fa0()
  ret i32 %v0_8f9b

; uselistorder directives
  uselistorder i32 %v0_8f91, { 1, 0 }
  uselistorder i32 %v2_8f89, { 1, 0 }
}

define i32 @function_8fbd() local_unnamed_addr {
dec_label_pc_8fbd:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8fbd = load i32, i32* %ebx.global-to-local, align 4
  %v1_8fbd = add i32 %v0_8fbd, -565067
  %v2_8fbd = inttoptr i32 %v1_8fbd to i32*
  %v3_8fbd = load i32, i32* %v2_8fbd, align 4
  %v4_8fbd = sub i32 %v3_8fbd, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_8fbd, i32* %v2_8fbd, align 4
  %v0_8fc3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8fc3 = add i32 %v0_8fc3, -24566732
  %v2_8fc3 = inttoptr i32 %v1_8fc3 to i32*
  %v3_8fc3 = load i32, i32* %v2_8fc3, align 4
  %v4_8fc3 = sub i32 %v3_8fc3, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_8fc3, i32* %v2_8fc3, align 4
  %v0_8fc9 = call i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev()
  %v0_8fce = load i32, i32* @ebx, align 4
  %v1_8fd1 = call i32 @_ZN15CCryptoKeyStoreD1Ev(i32 %v0_8fce)
  store i32 %v1_8fd1, i32* @eax, align 4
  %v0_8fd6 = call i32 @function_8c5c()
  ret i32 %v0_8fd6

; uselistorder directives
  uselistorder i32 ()* @function_8c5c, { 1, 0 }
}

define i32 @function_8fe0() local_unnamed_addr {
dec_label_pc_8fe0:
  %v0_8fe0 = call i32 @function_8eee()
  ret i32 %v0_8fe0
}

define i32 @function_900b() local_unnamed_addr {
dec_label_pc_900b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_900b = load i32, i32* %ecx.global-to-local, align 4
  %v1_900b = add i32 %v0_900b, 612616184
  %v2_900b = inttoptr i32 %v1_900b to i32*
  %v3_900b = load i32, i32* %v2_900b, align 4
  %v4_900b = add i32 %v3_900b, -1
  store i32 %v4_900b, i32* %v2_900b, align 4
  %v0_9011 = load i32, i32* %eax.global-to-local, align 4
  %v5_9011 = mul i32 %v0_9011, 2
  %v20_9011 = and i32 %v5_9011, 254
  %v22_9011 = and i32 %v0_9011, -256
  %v23_9011 = or i32 %v20_9011, %v22_9011
  store i32 %v23_9011, i32* %eax.global-to-local, align 4
  %v1_9013 = inttoptr i32 %v23_9011 to i8*
  %v2_9013 = load i8, i8* %v1_9013, align 2
  %v3_9013 = load i32, i32* %ecx.global-to-local, align 4
  %v4_9013 = lshr i32 %v3_9013, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_9013 = trunc i32 %v4_9013 to i8
  %v6_9013 = add i8 %v5_9013, %v2_9013
  store i8 %v6_9013, i8* %v1_9013, align 2
  %v0_9015 = load i32, i32* %eax.global-to-local, align 4
  %v1_9015 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_9015, i32* %edx.global-to-local, align 4
  %v4_9016 = add i32 %v1_9015, %v0_9015
  store i32 %v4_9016, i32* @eax, align 4
  %v0_9020 = call i32 @function_8f0e()
  store i32 %v0_9020, i32* %eax.global-to-local, align 4
  ret i32 %v0_9020

; uselistorder directives
  uselistorder i32 %v0_9011, { 1, 0 }
}

define i32 @function_902c() local_unnamed_addr {
dec_label_pc_902c:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp92
}

define i32 @function_9030() local_unnamed_addr {
dec_label_pc_9030:
  %v0_9030 = call i32 @function_6f80()
  ret i32 %v0_9030

; uselistorder directives
  uselistorder i32 ()* @function_6f80, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_9035() local_unnamed_addr {
dec_label_pc_9035:
  ret i32 ptrtoint (i32* @global_var_41.3324 to i32)
}

define i32 @function_903f() local_unnamed_addr {
dec_label_pc_903f:
  %v0_9041 = load i32, i32* @ebx, align 4
  %v1_9041 = add i32 %v0_9041, 560
  %v1_904a = inttoptr i32 %v1_9041 to i32*
  %v2_904a = call i32 @_ZN5boost8signals26signalIFvP7CWalletRK7uint25610ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS8_EENSD_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEED1Ev(i32* %v1_904a)
  store i32 %v2_904a, i32* @eax, align 4
  %v0_904f = call i32 @function_8f00()
  ret i32 %v0_904f
}

define i32 @function_9069() local_unnamed_addr {
dec_label_pc_9069:
  %eax.global-to-local = alloca i32, align 4
  %v0_9069 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9069
}

define i32 @function_908e() local_unnamed_addr {
dec_label_pc_908e:
  %v0_908e = call i32 @function_8c24()
  ret i32 %v0_908e
}

define i32 @function_90a0() local_unnamed_addr {
dec_label_pc_90a0:
  %v0_90a0 = call i32 @function_8c24()
  ret i32 %v0_90a0

; uselistorder directives
  uselistorder i32 ()* @function_8c24, { 1, 0 }
}

define i32 @function_90a5() local_unnamed_addr {
dec_label_pc_90a5:
  %eax.global-to-local = alloca i32, align 4
  %v0_90a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_90a5
}

define i32 @function_90b5() local_unnamed_addr {
dec_label_pc_90b5:
  %v0_90b7 = call i32 @function_8eee()
  ret i32 %v0_90b7

; uselistorder directives
  uselistorder i32 ()* @function_8eee, { 1, 0 }
}

define i32 @function_90bc() local_unnamed_addr {
dec_label_pc_90bc:
  %v0_90bc = load i32, i32* @eax, align 4
  ret i32 %v0_90bc
}

define i32 @function_90d3() local_unnamed_addr {
dec_label_pc_90d3:
  %v0_90d5 = call i32 @function_90bc()
  ret i32 %v0_90d5
}

define i32 @function_90d7() local_unnamed_addr {
dec_label_pc_90d7:
  %v0_90d7 = call i32 @function_6f10()
  ret i32 %v0_90d7
}

define i32 @function_90df() local_unnamed_addr {
dec_label_pc_90df:
  %eax.global-to-local = alloca i32, align 4
  %v0_90df = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_90df
}

define i32 @function_90e4() local_unnamed_addr {
dec_label_pc_90e4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_90ec() local_unnamed_addr {
dec_label_pc_90ec:
  %eax.global-to-local = alloca i32, align 4
  %v0_90ec = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_90ec
}

define i32 @function_90f1() local_unnamed_addr {
dec_label_pc_90f1:
  %v0_90f1 = call i32 @function_6f10()
  ret i32 %v0_90f1
}

define i32 @function_90f6() local_unnamed_addr {
dec_label_pc_90f6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_90f7() local_unnamed_addr {
dec_label_pc_90f7:
  %eax.global-to-local = alloca i32, align 4
  %v0_90f7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_90f7
}

define i32 @function_9106() local_unnamed_addr {
dec_label_pc_9106:
  %v0_9106 = call i32 @function_90e4()
  ret i32 %v0_9106
}

define i32 @function_9108() local_unnamed_addr {
dec_label_pc_9108:
  %v0_9108 = call i32 @function_90f6()
  ret i32 %v0_9108
}

define i32 @function_910a() local_unnamed_addr {
dec_label_pc_910a:
  %v0_9110 = call i32 @function_90e4()
  ret i32 %v0_9110
}

define i32 @function_9112() local_unnamed_addr {
dec_label_pc_9112:
  %v0_9112 = call i32 @function_728f()
  ret i32 %v0_9112
}

define i32 @function_9117() local_unnamed_addr {
dec_label_pc_9117:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9123() local_unnamed_addr {
dec_label_pc_9123:
  %v0_9123 = call i32 @function_6f3c()
  ret i32 %v0_9123

; uselistorder directives
  uselistorder i32 ()* @function_6f3c, { 1, 0 }
}

define i32 @function_9128() local_unnamed_addr {
dec_label_pc_9128:
  %v0_9128 = call i32 @function_9117()
  ret i32 %v0_9128
}

define i32 @function_912b() local_unnamed_addr {
dec_label_pc_912b:
  %eax.global-to-local = alloca i32, align 4
  %v0_912b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_912b
}

define i32 @function_9138() local_unnamed_addr {
dec_label_pc_9138:
  %v0_9138 = call i32 @function_6f20()
  ret i32 %v0_9138
}

define i32 @function_913d() local_unnamed_addr {
dec_label_pc_913d:
  %v0_913d = call i32 @function_6f6c()
  ret i32 %v0_913d

; uselistorder directives
  uselistorder i32 ()* @function_6f6c, { 1, 0 }
}

define i32 @function_9152() local_unnamed_addr {
dec_label_pc_9152:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_915c() local_unnamed_addr {
dec_label_pc_915c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9164() local_unnamed_addr {
dec_label_pc_9164:
  %ebx.global-to-local = alloca i32, align 4
  %v0_9164 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_9164, i32* @eax, align 4
  %v0_9166 = call i32 @function_6f10()
  ret i32 %v0_9166
}

define i32 @function_916b() local_unnamed_addr {
dec_label_pc_916b:
  %v0_916d = call i32 @function_9152()
  ret i32 %v0_916d
}

define i32 @function_916f() local_unnamed_addr {
dec_label_pc_916f:
  %v0_9171 = call i32 @function_915c()
  ret i32 %v0_9171
}

define i32 @function_9173() local_unnamed_addr {
dec_label_pc_9173:
  %v0_9175 = call i32 @function_7303()
  ret i32 %v0_9175

; uselistorder directives
  uselistorder i32 ()* @function_7303, { 1, 0 }
}

define i32 @function_917b() local_unnamed_addr {
dec_label_pc_917b:
  %v0_917b = call i32 @function_768d01()
  ret i32 %v0_917b
}

define i32 @function_9190() local_unnamed_addr {
dec_label_pc_9190:
  %v0_9190 = call i32 @function_4f15()
  ret i32 %v0_9190
}

define i32 @function_91a1() local_unnamed_addr {
dec_label_pc_91a1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_91a9() local_unnamed_addr {
dec_label_pc_91a9:
  %v0_91a9 = call i32 @function_730b()
  ret i32 %v0_91a9
}

define i32 @function_91ae() local_unnamed_addr {
dec_label_pc_91ae:
  %v0_91b0 = call i32 @function_91a1()
  ret i32 %v0_91b0
}

define i32 @function_91b2() local_unnamed_addr {
dec_label_pc_91b2:
  %v0_91b2 = call i32 @function_728f()
  ret i32 %v0_91b2

; uselistorder directives
  uselistorder i32 ()* @function_728f, { 1, 0 }
}

define i32 @function_91c1() local_unnamed_addr {
dec_label_pc_91c1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_91cb() local_unnamed_addr {
dec_label_pc_91cb:
  %v0_91cb = call i32 @function_6f2e()
  ret i32 %v0_91cb
}

define i32 @function_91d0() local_unnamed_addr {
dec_label_pc_91d0:
  %v0_91d2 = call i32 @function_91c1()
  ret i32 %v0_91d2
}

define i32 @function_91d4() local_unnamed_addr {
dec_label_pc_91d4:
  %v0_91d6 = call i32 @function_6f2e()
  ret i32 %v0_91d6
}

define i32 @function_91db() local_unnamed_addr {
dec_label_pc_91db:
  %v0_91e0 = call i32 @function_730b()
  ret i32 %v0_91e0

; uselistorder directives
  uselistorder i32 ()* @function_730b, { 1, 0 }
}

define i32 @function_91e5() local_unnamed_addr {
dec_label_pc_91e5:
  %v0_91e5 = call i32 @function_6f72()
  ret i32 %v0_91e5
}

define i32 @function_91f0() local_unnamed_addr {
dec_label_pc_91f0:
  %v0_91f0 = call i32 @function_6fa4()
  ret i32 %v0_91f0
}

define i32 @function_91f5() local_unnamed_addr {
dec_label_pc_91f5:
  %v0_9200 = call i32 @function_6f72()
  ret i32 %v0_9200
}

define i32 @function_9205() local_unnamed_addr {
dec_label_pc_9205:
  %v0_920d = call i32 @function_6f74()
  ret i32 %v0_920d
}

define i32 @function_9212() local_unnamed_addr {
dec_label_pc_9212:
  %v0_9212 = call i32 @function_6f72()
  ret i32 %v0_9212
}

define i32 @function_9217() local_unnamed_addr {
dec_label_pc_9217:
  %v0_9217 = call i32 @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_.part.1733()
  store i32 %v0_9217, i32* @eax, align 4
  %v0_9220 = call i32 @function_6f10()
  ret i32 %v0_9220
}

define i32 @function_922c() local_unnamed_addr {
dec_label_pc_922c:
  %eax.global-to-local = alloca i32, align 4
  %v0_922c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_922c
}

define i32 @function_9235() local_unnamed_addr {
dec_label_pc_9235:
  %eax.global-to-local = alloca i32, align 4
  %v0_9235 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9235
}

define i32 @function_9246() local_unnamed_addr {
dec_label_pc_9246:
  %eax.global-to-local = alloca i32, align 4
  %v0_9246 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9246
}

define i32 @function_924b() local_unnamed_addr {
dec_label_pc_924b:
  %v0_924b = call i32 @function_6f04()
  ret i32 %v0_924b
}

define i32 @function_9250() local_unnamed_addr {
dec_label_pc_9250:
  %v0_9250 = call i32 @function_6f10()
  ret i32 %v0_9250
}

define i32 @function_9255() local_unnamed_addr {
dec_label_pc_9255:
  %v0_9260 = call i32 @function_7208()
  ret i32 %v0_9260
}

define i32 @function_9265() local_unnamed_addr {
dec_label_pc_9265:
  %v0_9265 = call i32 @function_70f9()
  ret i32 %v0_9265

; uselistorder directives
  uselistorder i32 ()* @function_70f9, { 2, 1, 0 }
}

define i32 @function_926b() local_unnamed_addr {
dec_label_pc_926b:
  %eax.global-to-local = alloca i32, align 4
  %v0_926b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_926b
}

define i32 @function_9274() local_unnamed_addr {
dec_label_pc_9274:
  %v0_927a = call i32 @function_90e4()
  ret i32 %v0_927a
}

define i32 @function_927f() local_unnamed_addr {
dec_label_pc_927f:
  %v0_9281 = call i32 @function_9274()
  ret i32 %v0_9281
}

define i32 @function_9293() local_unnamed_addr {
dec_label_pc_9293:
  %v0_9293 = call i32 @function_9152()
  ret i32 %v0_9293

; uselistorder directives
  uselistorder i32 ()* @function_9152, { 1, 0 }
}

define i32 @function_9298() local_unnamed_addr {
dec_label_pc_9298:
  %v0_9298 = call i32 @function_916b()
  ret i32 %v0_9298
}

define i32 @function_92a0() local_unnamed_addr {
dec_label_pc_92a0:
  %v0_92a0 = call i32 @function_916f()
  ret i32 %v0_92a0
}

define i32 @function_92b0() local_unnamed_addr {
dec_label_pc_92b0:
  %v0_92b0 = call i32 @function_6f10()
  ret i32 %v0_92b0
}

define i32 @function_92c5() local_unnamed_addr {
dec_label_pc_92c5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_92cd() local_unnamed_addr {
dec_label_pc_92cd:
  %v0_92cd = call i32 @function_72a2()
  ret i32 %v0_92cd

; uselistorder directives
  uselistorder i32 ()* @function_72a2, { 1, 0 }
}

define i32 @function_92d2() local_unnamed_addr {
dec_label_pc_92d2:
  %v0_92d4 = call i32 @function_92c5()
  ret i32 %v0_92d4
}

define i32 @function_92e0() local_unnamed_addr {
dec_label_pc_92e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_92ea() local_unnamed_addr {
dec_label_pc_92ea:
  %v0_92ea = call i32 @function_73e7()
  ret i32 %v0_92ea
}

define i32 @function_92ef() local_unnamed_addr {
dec_label_pc_92ef:
  %v0_92f1 = call i32 @function_92e0()
  ret i32 %v0_92f1
}

define i32 @function_92f3() local_unnamed_addr {
dec_label_pc_92f3:
  %v0_92f3 = call i32 @function_6f04()
  ret i32 %v0_92f3
}

define i32 @function_9300() local_unnamed_addr {
dec_label_pc_9300:
  %v0_9300 = call i32 @function_6f10()
  ret i32 %v0_9300
}

define i32 @function_9315() local_unnamed_addr {
dec_label_pc_9315:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_931f() local_unnamed_addr {
dec_label_pc_931f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9327() local_unnamed_addr {
dec_label_pc_9327:
  %ebx.global-to-local = alloca i32, align 4
  %v0_9327 = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_9327
}

define i32 @function_932e() local_unnamed_addr {
dec_label_pc_932e:
  %v0_9330 = call i32 @function_9315()
  ret i32 %v0_9330
}

define i32 @function_9342() local_unnamed_addr {
dec_label_pc_9342:
  %v0_9342 = call i32 @function_9315()
  ret i32 %v0_9342
}

define i32 @function_9344() local_unnamed_addr {
dec_label_pc_9344:
  %v0_9344 = call i32 @function_932e()
  ret i32 %v0_9344
}

define i32 @function_9346() local_unnamed_addr {
dec_label_pc_9346:
  %v0_9350 = call i32 @function_931f()
  ret i32 %v0_9350
}

define i32 @function_9352() local_unnamed_addr {
dec_label_pc_9352:
  %eax.global-to-local = alloca i32, align 4
  %v0_9352 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9352
}

define i32 @function_9367() local_unnamed_addr {
dec_label_pc_9367:
  %v0_9367 = call i32 @function_9315()
  ret i32 %v0_9367

; uselistorder directives
  uselistorder i32 ()* @function_9315, { 2, 1, 0 }
}

define i32 @function_9369() local_unnamed_addr {
dec_label_pc_9369:
  %v0_9369 = call i32 @function_932e()
  ret i32 %v0_9369

; uselistorder directives
  uselistorder i32 ()* @function_932e, { 1, 0 }
}

define i32 @function_9370() local_unnamed_addr {
dec_label_pc_9370:
  %v0_9370 = call i32 @function_9346()
  ret i32 %v0_9370
}

define i32 @function_9372() local_unnamed_addr {
dec_label_pc_9372:
  %eax.global-to-local = alloca i32, align 4
  %v0_9372 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9372
}

define i32 @function_9383() local_unnamed_addr {
dec_label_pc_9383:
  %v0_9383 = call i32 @function_90e4()
  ret i32 %v0_9383

; uselistorder directives
  uselistorder i32 ()* @function_90e4, { 3, 2, 1, 0 }
}

define i32 @function_9388() local_unnamed_addr {
dec_label_pc_9388:
  %v0_9388 = call i32 @function_910a()
  ret i32 %v0_9388
}

define i32 @function_9390() local_unnamed_addr {
dec_label_pc_9390:
  %v0_9390 = call i32 @function_6f72()
  ret i32 %v0_9390
}

define i32 @function_93a0() local_unnamed_addr {
dec_label_pc_93a0:
  %v0_93a0 = call i32 @function_6f72()
  ret i32 %v0_93a0
}

define i32 @function_93b0() local_unnamed_addr {
dec_label_pc_93b0:
  %v0_93b0 = call i32 @function_6f10()
  ret i32 %v0_93b0
}

define i32 @function_93c0() local_unnamed_addr {
dec_label_pc_93c0:
  %v0_93c0 = call i32 @function_6f72()
  ret i32 %v0_93c0

; uselistorder directives
  uselistorder i32 ()* @function_6f72, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_93d0() local_unnamed_addr {
dec_label_pc_93d0:
  %v0_93d0 = call i32 @function_9117()
  ret i32 %v0_93d0
}

define i32 @function_93e5() local_unnamed_addr {
dec_label_pc_93e5:
  %v0_93e5 = call i32 @function_6f74()
  ret i32 %v0_93e5

; uselistorder directives
  uselistorder i32 ()* @function_6f74, { 2, 1, 0 }
}

define i32 @function_93ea() local_unnamed_addr {
dec_label_pc_93ea:
  %v0_93ea = call i32 @function_6f04()
  ret i32 %v0_93ea

; uselistorder directives
  uselistorder i32 ()* @function_6f04, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_93f0() local_unnamed_addr {
dec_label_pc_93f0:
  %v0_93f0 = call i32 @function_6f10()
  ret i32 %v0_93f0

; uselistorder directives
  uselistorder i32 ()* @function_6f10, { 15, 14, 13, 12, 11, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_9401() local_unnamed_addr {
dec_label_pc_9401:
  %v0_9401 = call i32 @function_6f20()
  ret i32 %v0_9401

; uselistorder directives
  uselistorder i32 ()* @function_6f20, { 4, 3, 2, 1, 0 }
}

define i32 @function_9406() local_unnamed_addr {
dec_label_pc_9406:
  %edx.global-to-local = alloca i32, align 4
  %v0_9406 = load i32, i32* %edx.global-to-local, align 4
  %v1_9406 = add i32 %v0_9406, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_9406 = inttoptr i32 %v1_9406 to i32*
  %v3_9406 = load i32, i32* %v2_9406, align 4
  store i32 %v3_9406, i32* @eax, align 4
  %v0_9409 = call i32 @function_59d3()
  ret i32 %v0_9409
}

define i32 @function_9410() local_unnamed_addr {
dec_label_pc_9410:
  %v0_9410 = call i32 @function_9346()
  ret i32 %v0_9410
}

define i32 @function_9415() local_unnamed_addr {
dec_label_pc_9415:
  %eax.global-to-local = alloca i32, align 4
  %v0_9415 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9415
}

define i32 @function_9420() local_unnamed_addr {
dec_label_pc_9420:
  %v0_9420 = call i32 @function_72de()
  ret i32 %v0_9420
}

define i32 @function_9430() local_unnamed_addr {
dec_label_pc_9430:
  %eax.global-to-local = alloca i32, align 4
  %v0_9430 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9430
}

define i32 @function_9440() local_unnamed_addr {
dec_label_pc_9440:
  %v0_9440 = call i32 @function_72de()
  ret i32 %v0_9440
}

define i32 @function_9450() local_unnamed_addr {
dec_label_pc_9450:
  %eax.global-to-local = alloca i32, align 4
  %v0_9450 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9450
}

define i32 @function_9460() local_unnamed_addr {
dec_label_pc_9460:
  %v0_9460 = call i32 @function_72de()
  ret i32 %v0_9460
}

define i32 @function_9470() local_unnamed_addr {
dec_label_pc_9470:
  %eax.global-to-local = alloca i32, align 4
  %v0_9470 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9470
}

define i32 @function_9480() local_unnamed_addr {
dec_label_pc_9480:
  %v0_9480 = call i32 @function_72de()
  ret i32 %v0_9480
}

define i32 @function_9490() local_unnamed_addr {
dec_label_pc_9490:
  %eax.global-to-local = alloca i32, align 4
  %v0_9490 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9490
}

define i32 @function_94a0() local_unnamed_addr {
dec_label_pc_94a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_94a0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_94a0
}

define i32 @function_94b0() local_unnamed_addr {
dec_label_pc_94b0:
  %v0_94b0 = call i32 @function_72de()
  ret i32 %v0_94b0
}

define i32 @function_94ca() local_unnamed_addr {
dec_label_pc_94ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_94ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_94ca
}

define i32 @function_94cb() local_unnamed_addr {
dec_label_pc_94cb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_94d3() local_unnamed_addr {
dec_label_pc_94d3:
  %v0_94d3 = call i32 @function_931f()
  ret i32 %v0_94d3

; uselistorder directives
  uselistorder i32 ()* @function_931f, { 1, 0 }
}

define i32 @function_94d9() local_unnamed_addr {
dec_label_pc_94d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_94d9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_94d9
}

define i32 @function_94e2() local_unnamed_addr {
dec_label_pc_94e2:
  %v0_94e2 = call i32 @function_6f2e()
  ret i32 %v0_94e2

; uselistorder directives
  uselistorder i32 ()* @function_6f2e, { 3, 2, 1, 0 }
}

define i32 @function_94e7() local_unnamed_addr {
dec_label_pc_94e7:
  %v0_94e7 = call i32 @function_6f68()
  ret i32 %v0_94e7
}

define i32 @function_94ee() local_unnamed_addr {
dec_label_pc_94ee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_94f8() local_unnamed_addr {
dec_label_pc_94f8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9506() local_unnamed_addr {
dec_label_pc_9506:
  %v0_9506 = call i32 @function_6f5e()
  ret i32 %v0_9506
}

define i32 @function_950b() local_unnamed_addr {
dec_label_pc_950b:
  %v0_950b = call i32 @function_9346()
  ret i32 %v0_950b

; uselistorder directives
  uselistorder i32 ()* @function_9346, { 2, 1, 0 }
}

define i32 @function_9510() local_unnamed_addr {
dec_label_pc_9510:
  %v0_9512 = call i32 @function_94cb()
  ret i32 %v0_9512
}

define i32 @function_9514() local_unnamed_addr {
dec_label_pc_9514:
  %v0_9514 = call i32 @function_6f52()
  ret i32 %v0_9514
}

define i32 @function_9525() local_unnamed_addr {
dec_label_pc_9525:
  %v0_9525 = call i32 @function_94f8()
  ret i32 %v0_9525
}

define i32 @function_9527() local_unnamed_addr {
dec_label_pc_9527:
  %v0_9527 = call i32 @function_72de()
  ret i32 %v0_9527
}

define i32 @function_9530() local_unnamed_addr {
dec_label_pc_9530:
  %eax.global-to-local = alloca i32, align 4
  %v0_9530 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9530
}

define i32 @function_9540() local_unnamed_addr {
dec_label_pc_9540:
  %eax.global-to-local = alloca i32, align 4
  %v0_9540 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9540
}

define i32 @function_9550() local_unnamed_addr {
dec_label_pc_9550:
  %v0_9550 = call i32 @function_72de()
  ret i32 %v0_9550
}

define i32 @function_9565() local_unnamed_addr {
dec_label_pc_9565:
  %v0_9567 = call i32 @function_6f68()
  ret i32 %v0_9567
}

define i32 @function_956c() local_unnamed_addr {
dec_label_pc_956c:
  %v0_9572 = call i32 @function_6f68()
  ret i32 %v0_9572

; uselistorder directives
  uselistorder i32 ()* @function_6f68, { 2, 1, 0 }
}

define i32 @function_9577() local_unnamed_addr {
dec_label_pc_9577:
  %v0_957f = call i32 @function_6f5e()
  ret i32 %v0_957f

; uselistorder directives
  uselistorder i32 ()* @function_6f5e, { 2, 1, 0 }
}

define i32 @function_9584() local_unnamed_addr {
dec_label_pc_9584:
  %v0_9584 = call i32 @function_9117()
  ret i32 %v0_9584

; uselistorder directives
  uselistorder i32 ()* @function_9117, { 2, 1, 0 }
}

define i32 @function_9589() local_unnamed_addr {
dec_label_pc_9589:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_959b() local_unnamed_addr {
dec_label_pc_959b:
  %v0_959b = call i32 @function_9589()
  ret i32 %v0_959b
}

define i32 @function_95a0() local_unnamed_addr {
dec_label_pc_95a0:
  %v0_95a0 = call i32 @function_9589()
  ret i32 %v0_95a0
}

define i32 @function_95a2() local_unnamed_addr {
dec_label_pc_95a2:
  %v0_95a2 = call i32 @function_9589()
  ret i32 %v0_95a2
}

define i32 @function_95a4() local_unnamed_addr {
dec_label_pc_95a4:
  %v0_95a4 = call i32 @function_9589()
  ret i32 %v0_95a4
}

define i32 @function_95b0() local_unnamed_addr {
dec_label_pc_95b0:
  %v0_95b0 = call i32 @function_9589()
  ret i32 %v0_95b0
}

define i32 @function_95b2() local_unnamed_addr {
dec_label_pc_95b2:
  %v0_95b2 = call i32 @function_9589()
  ret i32 %v0_95b2
}

define i32 @function_95b4() local_unnamed_addr {
dec_label_pc_95b4:
  %v0_95b4 = call i32 @function_9589()
  ret i32 %v0_95b4
}

define i32 @function_95c0() local_unnamed_addr {
dec_label_pc_95c0:
  %v0_95c0 = call i32 @function_9589()
  ret i32 %v0_95c0
}

define i32 @function_95c2() local_unnamed_addr {
dec_label_pc_95c2:
  %v0_95c4 = call i32 @function_733e()
  ret i32 %v0_95c4
}

define i32 @function_95d0() local_unnamed_addr {
dec_label_pc_95d0:
  %v0_95d0 = call i32 @function_9589()
  ret i32 %v0_95d0
}

define i32 @function_95ed() local_unnamed_addr {
dec_label_pc_95ed:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_95ed = load i32, i32* %ecx.global-to-local, align 4
  %v1_95ed = add i32 %v0_95ed, -370349117
  %v2_95ed = inttoptr i32 %v1_95ed to i32*
  %v3_95ed = load i32, i32* %v2_95ed, align 4
  %v4_95ed = sub i32 %v3_95ed, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_95ed, i32* %v2_95ed, align 4
  %v0_95f6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_95f6 = add i32 %v0_95f6, 649367031
  %v2_95f6 = inttoptr i32 %v1_95f6 to i32*
  %v3_95f6 = load i32, i32* %v2_95f6, align 4
  %v4_95f6 = add i32 %v3_95f6, -1
  store i32 %v4_95f6, i32* %v2_95f6, align 4
  %v2_95fc = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_95fc = load i32, i32* %eax.global-to-local, align 4
  %v4_95fc = trunc i32 %v3_95fc to i8
  %v5_95fc = add i8 %v4_95fc, %v2_95fc
  %v21_95fc = inttoptr i32 %v3_95fc to i8*
  store i8 %v5_95fc, i8* %v21_95fc, align 1
  %v2_95fe = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_95fe = load i32, i32* %eax.global-to-local, align 4
  %v4_95fe = trunc i32 %v3_95fe to i8
  %v5_95fe = add i8 %v4_95fe, %v2_95fe
  %v21_95fe = inttoptr i32 %v3_95fe to i8*
  store i8 %v5_95fe, i8* %v21_95fe, align 1
  %v0_9600 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9600
}

define i32 @function_9605() local_unnamed_addr {
dec_label_pc_9605:
  %eax.global-to-local = alloca i32, align 4
  %v0_9605 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9605
}

define i32 @function_9610() local_unnamed_addr {
dec_label_pc_9610:
  %v0_9610 = call i32 @function_9589()
  ret i32 %v0_9610
}

define i32 @function_9620() local_unnamed_addr {
dec_label_pc_9620:
  %v0_9620 = call i32 @function_9589()
  ret i32 %v0_9620

; uselistorder directives
  uselistorder i32 ()* @function_9589, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_9630() local_unnamed_addr {
dec_label_pc_9630:
  %eax.global-to-local = alloca i32, align 4
  %v0_9630 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9630
}

define i32 @function_964e() local_unnamed_addr {
dec_label_pc_964e:
  %v0_964e = call i32 @function_72e8()
  ret i32 %v0_964e
}

define i32 @function_9653() local_unnamed_addr {
dec_label_pc_9653:
  %v0_9653 = call i32 @function_72de()
  ret i32 %v0_9653
}

define i32 @function_9660() local_unnamed_addr {
dec_label_pc_9660:
  %eax.global-to-local = alloca i32, align 4
  %v0_9660 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9660
}

define i32 @function_9670() local_unnamed_addr {
dec_label_pc_9670:
  %v0_9670 = call i32 @function_72de()
  ret i32 %v0_9670
}

define i32 @function_9680() local_unnamed_addr {
dec_label_pc_9680:
  %eax.global-to-local = alloca i32, align 4
  %v0_9680 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9680
}

define i32 @function_9690() local_unnamed_addr {
dec_label_pc_9690:
  %v0_9690 = call i32 @function_72de()
  ret i32 %v0_9690

; uselistorder directives
  uselistorder i32 ()* @function_72de, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_96a0() local_unnamed_addr {
dec_label_pc_96a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_96a0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_96a0
}

define i32 @function_96b3() local_unnamed_addr {
dec_label_pc_96b3:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_96b3 = add i32 %tmp91, -2212
  %v2_96b3 = inttoptr i32 %v1_96b3 to i32*
  %v3_96b3 = load i32, i32* %v2_96b3, align 4
  store i32 %v3_96b3, i32* @eax, align 4
  %v0_96bb = call i32 @function_94ee()
  ret i32 %v0_96bb
}

define i32 @function_96d0() local_unnamed_addr {
dec_label_pc_96d0:
  %v0_96d0 = call i32 @function_94ee()
  ret i32 %v0_96d0

; uselistorder directives
  uselistorder i32 ()* @function_94ee, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev() local_unnamed_addr {
dec_label_pc_96e0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_96e1(i32* %arg1) local_unnamed_addr {
dec_label_pc_96e1:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_96e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_96e2 = load i1, i1* %cf.global-to-local, align 1
  %v3_96e2 = zext i1 %v2_96e2 to i32
  %v4_96e2 = add i32 %v0_96e2, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_65.3326 to i8) to i32))
  %v5_96e2 = add i32 %v4_96e2, %v3_96e2
  %v31_96e2 = urem i32 %v5_96e2, 256
  %v33_96e2 = and i32 %v0_96e2, -256
  %v34_96e2 = or i32 %v31_96e2, %v33_96e2
  store i32 %v34_96e2, i32* %eax.global-to-local, align 4
  %v0_96e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %arg1, align 4
  store i32 %v0_96e4, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 false, label %dec_label_pc_970a, label %dec_label_pc_9706

dec_label_pc_9706:                                ; preds = %dec_label_pc_96e1
  %v0_9706 = load i32, i32* @esp, align 4
  %v5_9706 = icmp ugt i32 %v0_9706, -29
  store i1 %v5_9706, i1* %cf.global-to-local, align 1
  ret i32 0

dec_label_pc_970a:                                ; preds = %dec_label_pc_96e1
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_96e2, { 1, 0 }
}

define i32 @_ZNK5boost10lock_error4whatEv() {
dec_label_pc_a690:
  br i1 false, label %dec_label_pc_a6b5, label %dec_label_pc_a6b1

dec_label_pc_a6b1:                                ; preds = %dec_label_pc_a690
  ret i32 ptrtoint ([18 x i8]* @global_var_970f.3328 to i32)

dec_label_pc_a6b5:                                ; preds = %dec_label_pc_a690
  ret i32 ptrtoint ([18 x i8]* @global_var_970f.3328 to i32)
}

define i32 @_ZNK5boost21thread_resource_error4whatEv() {
dec_label_pc_a6c0:
  br i1 false, label %dec_label_pc_a6e5, label %dec_label_pc_a6e1

dec_label_pc_a6e1:                                ; preds = %dec_label_pc_a6c0
  ret i32 ptrtoint ([29 x i8]* @global_var_9721.3329 to i32)

dec_label_pc_a6e5:                                ; preds = %dec_label_pc_a6c0
  ret i32 ptrtoint ([29 x i8]* @global_var_9721.3329 to i32)
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_a6f0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a71a, label %dec_label_pc_a716

dec_label_pc_a716:                                ; preds = %dec_label_pc_a6f0
  ret i32 0

dec_label_pc_a71a:                                ; preds = %dec_label_pc_a6f0
  ret i32 0
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_a720:
  %v1_a734 = icmp eq i32* %arg1, null
  br i1 %v1_a734, label %dec_label_pc_a758, label %dec_label_pc_a738

dec_label_pc_a738:                                ; preds = %dec_label_pc_a720
  br i1 false, label %dec_label_pc_a769, label %dec_label_pc_a745

dec_label_pc_a745:                                ; preds = %dec_label_pc_a738
  %v2_a745 = load i32, i32* %arg1, align 4
  %v1_a74b = add i32 %v2_a745, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_a74b = inttoptr i32 %v1_a74b to i32*
  %v3_a74b = load i32, i32* %v2_a74b, align 4
  ret i32 %v3_a74b

dec_label_pc_a758:                                ; preds = %dec_label_pc_a720
  br i1 false, label %dec_label_pc_a769, label %dec_label_pc_a765

dec_label_pc_a765:                                ; preds = %dec_label_pc_a758
  ret i32 0

dec_label_pc_a769:                                ; preds = %dec_label_pc_a758, %dec_label_pc_a738
  ret i32 undef
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_a780:
  store i32 ptrtoint (i32* @global_var_2a6a8.3331 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a7aa, label %dec_label_pc_a7a6

dec_label_pc_a7a6:                                ; preds = %dec_label_pc_a780
  ret i32 0

dec_label_pc_a7aa:                                ; preds = %dec_label_pc_a780
  ret i32 0
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a7b0:
  %eax.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %arg1, align 4
  %v2_a7ce = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_a7ce = inttoptr i32 %v2_a7ce to i32*
  store i32 %arg2, i32* %v3_a7ce, align 4
  br i1 false, label %dec_label_pc_a7e4, label %dec_label_pc_a7de

dec_label_pc_a7de:                                ; preds = %dec_label_pc_a7b0
  %v0_a7e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a7e1

dec_label_pc_a7e4:                                ; preds = %dec_label_pc_a7b0
  ret i32 undef
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a7f0:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %v1_a82b = add i32 %arg3, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_a82b = inttoptr i32 %v1_a82b to i32*
  %v3_a82b = load i32, i32* %v2_a82b, align 4
  %v15_a82b = icmp eq i32 %v3_a82b, %tmp106
  br i1 %v15_a82b, label %dec_label_pc_a848, label %dec_label_pc_a834

dec_label_pc_a834:                                ; preds = %dec_label_pc_a848, %dec_label_pc_a7f0
  %v0_a84f = phi i32 [ %v1_a84a, %dec_label_pc_a848 ], [ 0, %dec_label_pc_a7f0 ]
  %v1_a838 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_a838 = icmp eq i32 %v1_a838, %tmp98
  %v1_a83f = icmp eq i1 %v3_a838, false
  br i1 %v1_a83f, label %dec_label_pc_a84f, label %dec_label_pc_a841

dec_label_pc_a841:                                ; preds = %dec_label_pc_a834
  ret i32 %v0_a84f

dec_label_pc_a848:                                ; preds = %dec_label_pc_a7f0
  %v1_a848 = inttoptr i32 %arg3 to i32*
  %v2_a848 = load i32, i32* %v1_a848, align 4
  %v14_a848 = icmp eq i32 %v2_a848, %tmp99
  %v1_a84a = zext i1 %v14_a848 to i32
  br label %dec_label_pc_a834

dec_label_pc_a84f:                                ; preds = %dec_label_pc_a834
  ret i32 %v0_a84f
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a860:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v0_a860 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_a87c = add i32 %tmp102, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_a87c = inttoptr i32 %v1_a87c to i32*
  %v3_a87c = load i32, i32* %v2_a87c, align 4
  %v15_a87c = icmp eq i32 %v3_a87c, %arg1
  br i1 %v15_a87c, label %dec_label_pc_a898, label %dec_label_pc_a881

dec_label_pc_a881:                                ; preds = %dec_label_pc_a898, %dec_label_pc_a860
  %v0_a89f = phi i32 [ %v1_a89a, %dec_label_pc_a898 ], [ 0, %dec_label_pc_a860 ]
  br i1 false, label %dec_label_pc_a89f, label %dec_label_pc_a88e

dec_label_pc_a88e:                                ; preds = %dec_label_pc_a881
  store i32 %v0_a860, i32* %ebx.global-to-local, align 4
  ret i32 %v0_a89f

dec_label_pc_a898:                                ; preds = %dec_label_pc_a860
  %v2_a898 = load i32, i32* %arg2, align 4
  %v14_a898 = icmp eq i32 %v2_a898, %arg3
  %v1_a89a = zext i1 %v14_a898 to i32
  br label %dec_label_pc_a881

dec_label_pc_a89f:                                ; preds = %dec_label_pc_a881
  ret i32 %v0_a89f

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @_ZN5boost8signals211signal_baseD1Ev(i32* %arg1) {
dec_label_pc_a8b0:
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_a8da, label %dec_label_pc_a8d6

dec_label_pc_a8d6:                                ; preds = %dec_label_pc_a8b0
  ret i32 0

dec_label_pc_a8da:                                ; preds = %dec_label_pc_a8b0
  ret i32 0
}

define i32 @_ZNK5boost8signals214no_slots_error4whatEv() {
dec_label_pc_c590:
  br i1 false, label %dec_label_pc_c5b5, label %dec_label_pc_c5b1

dec_label_pc_c5b1:                                ; preds = %dec_label_pc_c590
  ret i32 ptrtoint ([32 x i8]* @global_var_a8e0.3333 to i32)

dec_label_pc_c5b5:                                ; preds = %dec_label_pc_c590
  ret i32 ptrtoint ([32 x i8]* @global_var_a8e0.3333 to i32)
}

define i32 @_ZNK5boost12interprocess22interprocess_exception4whatEv(i32 %arg1) {
dec_label_pc_c5c0:
  %v1_c5d3 = add i32 %arg1, 12
  %v2_c5d3 = inttoptr i32 %v1_c5d3 to i32*
  %v3_c5d3 = load i32, i32* %v2_c5d3, align 4
  br i1 false, label %dec_label_pc_c5e7, label %dec_label_pc_c5e3

dec_label_pc_c5e3:                                ; preds = %dec_label_pc_c5c0
  ret i32 %v3_c5d3

dec_label_pc_c5e7:                                ; preds = %dec_label_pc_c5c0
  ret i32 %v3_c5d3
}

define i32 @_ZNK5boost15optional_detail13optional_baseISsE14is_initializedEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_c5f0:
  %v2_c603 = load i8, i8* %arg1, align 1
  %v3_c603 = zext i8 %v2_c603 to i32
  br i1 false, label %dec_label_pc_c617, label %dec_label_pc_c613

dec_label_pc_c613:                                ; preds = %dec_label_pc_c5f0
  ret i32 %v3_c603

dec_label_pc_c617:                                ; preds = %dec_label_pc_c5f0
  ret i32 %v3_c603
}

define i32 @_ZNK5boost15optional_detail13optional_baseIbE14is_initializedEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_c620:
  %v2_c633 = load i8, i8* %arg1, align 1
  %v3_c633 = zext i8 %v2_c633 to i32
  br i1 false, label %dec_label_pc_c647, label %dec_label_pc_c643

dec_label_pc_c643:                                ; preds = %dec_label_pc_c620
  ret i32 %v3_c633

dec_label_pc_c647:                                ; preds = %dec_label_pc_c620
  ret i32 %v3_c633
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c650:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c67a, label %dec_label_pc_c676

dec_label_pc_c676:                                ; preds = %dec_label_pc_c650
  ret i32 0

dec_label_pc_c67a:                                ; preds = %dec_label_pc_c650
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c680:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c6aa, label %dec_label_pc_c6a6

dec_label_pc_c6a6:                                ; preds = %dec_label_pc_c680
  ret i32 0

dec_label_pc_c6aa:                                ; preds = %dec_label_pc_c680
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot0IvNS_8functionIFvvEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c6b0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c6da, label %dec_label_pc_c6d6

dec_label_pc_c6d6:                                ; preds = %dec_label_pc_c6b0
  ret i32 0

dec_label_pc_c6da:                                ; preds = %dec_label_pc_c6b0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueISsEEED1Ev(i32* %arg1) {
dec_label_pc_c6e0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c70a, label %dec_label_pc_c706

dec_label_pc_c706:                                ; preds = %dec_label_pc_c6e0
  ret i32 0

dec_label_pc_c70a:                                ; preds = %dec_label_pc_c6e0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c710:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c73a, label %dec_label_pc_c736

dec_label_pc_c736:                                ; preds = %dec_label_pc_c710
  ret i32 0

dec_label_pc_c73a:                                ; preds = %dec_label_pc_c710
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c740:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c76a, label %dec_label_pc_c766

dec_label_pc_c766:                                ; preds = %dec_label_pc_c740
  ret i32 0

dec_label_pc_c76a:                                ; preds = %dec_label_pc_c740
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c770:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c79a, label %dec_label_pc_c796

dec_label_pc_c796:                                ; preds = %dec_label_pc_c770
  ret i32 0

dec_label_pc_c79a:                                ; preds = %dec_label_pc_c770
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals210last_valueIbEEED1Ev(i32* %arg1) {
dec_label_pc_c7a0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c7ca, label %dec_label_pc_c7c6

dec_label_pc_c7c6:                                ; preds = %dec_label_pc_c7a0
  ret i32 0

dec_label_pc_c7ca:                                ; preds = %dec_label_pc_c7a0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c7d0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c7fa, label %dec_label_pc_c7f6

dec_label_pc_c7f6:                                ; preds = %dec_label_pc_c7d0
  ret i32 0

dec_label_pc_c7fa:                                ; preds = %dec_label_pc_c7d0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP7CWalletRK7uint25610ChangeTypeNS_8functionIFvSG_SJ_SK_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c800:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c82a, label %dec_label_pc_c826

dec_label_pc_c826:                                ; preds = %dec_label_pc_c800
  ret i32 0

dec_label_pc_c82a:                                ; preds = %dec_label_pc_c800
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EERKSsb10ChangeTypeNS_8functionIFvSG_SP_SR_bSS_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c830:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c85a, label %dec_label_pc_c856

dec_label_pc_c856:                                ; preds = %dec_label_pc_c830
  ret i32 0

dec_label_pc_c85a:                                ; preds = %dec_label_pc_c830
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEED1Ev(i32* %arg1) {
dec_label_pc_c860:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c88a, label %dec_label_pc_c886

dec_label_pc_c886:                                ; preds = %dec_label_pc_c860
  ret i32 0

dec_label_pc_c88a:                                ; preds = %dec_label_pc_c860
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c890:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c8ba, label %dec_label_pc_c8b6

dec_label_pc_c8b6:                                ; preds = %dec_label_pc_c890
  ret i32 0

dec_label_pc_c8ba:                                ; preds = %dec_label_pc_c890
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvRKSsENS3_5list1INS_17reference_wrapperISsEEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c8c0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c8ea, label %dec_label_pc_c8e6

dec_label_pc_c8e6:                                ; preds = %dec_label_pc_c8c0
  ret i32 0

dec_label_pc_c8ea:                                ; preds = %dec_label_pc_c8c0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS7_EEENS3_5list1INS3_5valueIS9_EEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_c8f0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c91a, label %dec_label_pc_c916

dec_label_pc_c916:                                ; preds = %dec_label_pc_c8f0
  ret i32 0

dec_label_pc_c91a:                                ; preds = %dec_label_pc_c8f0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataIPFvvEEEED1Ev(i32* %arg1) {
dec_label_pc_c920:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c94a, label %dec_label_pc_c946

dec_label_pc_c946:                                ; preds = %dec_label_pc_c920
  ret i32 0

dec_label_pc_c94a:                                ; preds = %dec_label_pc_c920
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_c950:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c97a, label %dec_label_pc_c976

dec_label_pc_c976:                                ; preds = %dec_label_pc_c950
  ret i32 0

dec_label_pc_c97a:                                ; preds = %dec_label_pc_c950
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_c980:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c9aa, label %dec_label_pc_c9a6

dec_label_pc_c9a6:                                ; preds = %dec_label_pc_c980
  ret i32 0

dec_label_pc_c9aa:                                ; preds = %dec_label_pc_c980
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_c9b0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_c9da, label %dec_label_pc_c9d6

dec_label_pc_c9d6:                                ; preds = %dec_label_pc_c9b0
  ret i32 0

dec_label_pc_c9da:                                ; preds = %dec_label_pc_c9b0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_c9e0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_ca0a, label %dec_label_pc_ca06

dec_label_pc_ca06:                                ; preds = %dec_label_pc_c9e0
  ret i32 0

dec_label_pc_ca0a:                                ; preds = %dec_label_pc_c9e0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_ca10:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_ca3a, label %dec_label_pc_ca36

dec_label_pc_ca36:                                ; preds = %dec_label_pc_ca10
  ret i32 0

dec_label_pc_ca3a:                                ; preds = %dec_label_pc_ca10
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_ca40:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_ca6a, label %dec_label_pc_ca66

dec_label_pc_ca66:                                ; preds = %dec_label_pc_ca40
  ret i32 0

dec_label_pc_ca6a:                                ; preds = %dec_label_pc_ca40
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_ca70:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_ca9a, label %dec_label_pc_ca96

dec_label_pc_ca96:                                ; preds = %dec_label_pc_ca70
  ret i32 0

dec_label_pc_ca9a:                                ; preds = %dec_label_pc_ca70
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S9_SA_EEENSF_IFvRKNS2_10connectionES6_S9_SA_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_caa0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_caca, label %dec_label_pc_cac6

dec_label_pc_cac6:                                ; preds = %dec_label_pc_caa0
  ret i32 0

dec_label_pc_caca:                                ; preds = %dec_label_pc_caa0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_SF_SH_bSI_EEENSN_IFvRKNS2_10connectionES6_SF_SH_bSI_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_cad0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cafa, label %dec_label_pc_caf6

dec_label_pc_caf6:                                ; preds = %dec_label_pc_cad0
  ret i32 0

dec_label_pc_cafa:                                ; preds = %dec_label_pc_cad0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_cb00:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cb2a, label %dec_label_pc_cb26

dec_label_pc_cb26:                                ; preds = %dec_label_pc_cb00
  ret i32 0

dec_label_pc_cb2a:                                ; preds = %dec_label_pc_cb00
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cb30:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cb5a, label %dec_label_pc_cb56

dec_label_pc_cb56:                                ; preds = %dec_label_pc_cb30
  ret i32 0

dec_label_pc_cb5a:                                ; preds = %dec_label_pc_cb30
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cb60:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cb8a, label %dec_label_pc_cb86

dec_label_pc_cb86:                                ; preds = %dec_label_pc_cb60
  ret i32 0

dec_label_pc_cb8a:                                ; preds = %dec_label_pc_cb60
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cb90:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cbba, label %dec_label_pc_cbb6

dec_label_pc_cbb6:                                ; preds = %dec_label_pc_cb90
  ret i32 0

dec_label_pc_cbba:                                ; preds = %dec_label_pc_cb90
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cbc0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cbea, label %dec_label_pc_cbe6

dec_label_pc_cbe6:                                ; preds = %dec_label_pc_cbc0
  ret i32 0

dec_label_pc_cbea:                                ; preds = %dec_label_pc_cbc0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cbf0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cc1a, label %dec_label_pc_cc16

dec_label_pc_cc16:                                ; preds = %dec_label_pc_cbf0
  ret i32 0

dec_label_pc_cc1a:                                ; preds = %dec_label_pc_cbf0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cc20:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cc4a, label %dec_label_pc_cc46

dec_label_pc_cc46:                                ; preds = %dec_label_pc_cc20
  ret i32 0

dec_label_pc_cc4a:                                ; preds = %dec_label_pc_cc20
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cc50:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cc7a, label %dec_label_pc_cc76

dec_label_pc_cc76:                                ; preds = %dec_label_pc_cc50
  ret i32 0

dec_label_pc_cc7a:                                ; preds = %dec_label_pc_cc50
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S9_SA_EEENSF_IFvRKNS2_10connectionES6_S9_SA_EEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cc80:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_ccaa, label %dec_label_pc_cca6

dec_label_pc_cca6:                                ; preds = %dec_label_pc_cc80
  ret i32 0

dec_label_pc_ccaa:                                ; preds = %dec_label_pc_cc80
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_SF_SH_bSI_EEENSN_IFvRKNS2_10connectionES6_SF_SH_bSI_EEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_ccb0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_ccda, label %dec_label_pc_ccd6

dec_label_pc_ccd6:                                ; preds = %dec_label_pc_ccb0
  ret i32 0

dec_label_pc_ccda:                                ; preds = %dec_label_pc_ccb0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEED1Ev(i32* %arg1) {
dec_label_pc_cce0:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cd0a, label %dec_label_pc_cd06

dec_label_pc_cd06:                                ; preds = %dec_label_pc_cce0
  ret i32 0

dec_label_pc_cd0a:                                ; preds = %dec_label_pc_cce0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32* %arg1) {
dec_label_pc_cd10:
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_cd3a, label %dec_label_pc_cd36

dec_label_pc_cd36:                                ; preds = %dec_label_pc_cd10
  ret i32 0

dec_label_pc_cd3a:                                ; preds = %dec_label_pc_cd10
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_cd40:
  br i1 false, label %dec_label_pc_cd60, label %dec_label_pc_cd5c

dec_label_pc_cd5c:                                ; preds = %dec_label_pc_cd40
  ret i32 0

dec_label_pc_cd60:                                ; preds = %dec_label_pc_cd40
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_cd70:
  br i1 false, label %dec_label_pc_cd90, label %dec_label_pc_cd8c

dec_label_pc_cd8c:                                ; preds = %dec_label_pc_cd70
  ret i32 0

dec_label_pc_cd90:                                ; preds = %dec_label_pc_cd70
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot0IvNS_8functionIFvvEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_cda0:
  br i1 false, label %dec_label_pc_cdc0, label %dec_label_pc_cdbc

dec_label_pc_cdbc:                                ; preds = %dec_label_pc_cda0
  ret i32 0

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cda0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueISsEEE11get_deleterERKSt9type_info() {
dec_label_pc_cdd0:
  br i1 false, label %dec_label_pc_cdf0, label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cdd0
  ret i32 0

dec_label_pc_cdf0:                                ; preds = %dec_label_pc_cdd0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_ce00:
  br i1 false, label %dec_label_pc_ce20, label %dec_label_pc_ce1c

dec_label_pc_ce1c:                                ; preds = %dec_label_pc_ce00
  ret i32 0

dec_label_pc_ce20:                                ; preds = %dec_label_pc_ce00
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_ce30:
  br i1 false, label %dec_label_pc_ce50, label %dec_label_pc_ce4c

dec_label_pc_ce4c:                                ; preds = %dec_label_pc_ce30
  ret i32 0

dec_label_pc_ce50:                                ; preds = %dec_label_pc_ce30
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_ce60:
  br i1 false, label %dec_label_pc_ce80, label %dec_label_pc_ce7c

dec_label_pc_ce7c:                                ; preds = %dec_label_pc_ce60
  ret i32 0

dec_label_pc_ce80:                                ; preds = %dec_label_pc_ce60
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals210last_valueIbEEE11get_deleterERKSt9type_info() {
dec_label_pc_ce90:
  br i1 false, label %dec_label_pc_ceb0, label %dec_label_pc_ceac

dec_label_pc_ceac:                                ; preds = %dec_label_pc_ce90
  ret i32 0

dec_label_pc_ceb0:                                ; preds = %dec_label_pc_ce90
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_cec0:
  br i1 false, label %dec_label_pc_cee0, label %dec_label_pc_cedc

dec_label_pc_cedc:                                ; preds = %dec_label_pc_cec0
  ret i32 0

dec_label_pc_cee0:                                ; preds = %dec_label_pc_cec0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP7CWalletRK7uint25610ChangeTypeNS_8functionIFvSG_SJ_SK_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_cef0:
  br i1 false, label %dec_label_pc_cf10, label %dec_label_pc_cf0c

dec_label_pc_cf0c:                                ; preds = %dec_label_pc_cef0
  ret i32 0

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cef0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EERKSsb10ChangeTypeNS_8functionIFvSG_SP_SR_bSS_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_cf20:
  br i1 false, label %dec_label_pc_cf40, label %dec_label_pc_cf3c

dec_label_pc_cf3c:                                ; preds = %dec_label_pc_cf20
  ret i32 0

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf20
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEE11get_deleterERKSt9type_info() {
dec_label_pc_cf50:
  br i1 false, label %dec_label_pc_cf70, label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf50
  ret i32 0

dec_label_pc_cf70:                                ; preds = %dec_label_pc_cf50
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_cf80:
  br i1 false, label %dec_label_pc_cfa0, label %dec_label_pc_cf9c

dec_label_pc_cf9c:                                ; preds = %dec_label_pc_cf80
  ret i32 0

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf80
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvRKSsENS3_5list1INS_17reference_wrapperISsEEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_cfb0:
  %v1_cfc3 = add i32 %arg1, 12
  %v2_cfc3 = inttoptr i32 %v1_cfc3 to i32*
  %v3_cfc3 = load i32, i32* %v2_cfc3, align 4
  %v1_cfc6 = icmp eq i32 %v3_cfc3, 0
  br i1 %v1_cfc6, label %dec_label_pc_cfe8, label %dec_label_pc_cfca

dec_label_pc_cfca:                                ; preds = %dec_label_pc_cfb0
  br i1 false, label %dec_label_pc_cff9, label %dec_label_pc_cfd7

dec_label_pc_cfd7:                                ; preds = %dec_label_pc_cfca
  %v1_cfd7 = inttoptr i32 %v3_cfc3 to i32*
  %v2_cfd7 = load i32, i32* %v1_cfd7, align 4
  %v1_cfdd = add i32 %v2_cfd7, 4
  %v2_cfdd = inttoptr i32 %v1_cfdd to i32*
  %v3_cfdd = load i32, i32* %v2_cfdd, align 4
  ret i32 %v3_cfdd

dec_label_pc_cfe8:                                ; preds = %dec_label_pc_cfb0
  br i1 false, label %dec_label_pc_cff9, label %dec_label_pc_cff5

dec_label_pc_cff5:                                ; preds = %dec_label_pc_cfe8
  ret i32 0

dec_label_pc_cff9:                                ; preds = %dec_label_pc_cfe8, %dec_label_pc_cfca
  ret i32 undef
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvRKSsENS3_5list1INS_17reference_wrapperISsEEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d010:
  br i1 false, label %dec_label_pc_d030, label %dec_label_pc_d02c

dec_label_pc_d02c:                                ; preds = %dec_label_pc_d010
  ret i32 0

dec_label_pc_d030:                                ; preds = %dec_label_pc_d010
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS7_EEENS3_5list1INS3_5valueIS9_EEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_d040:
  %v1_d053 = add i32 %arg1, 12
  %v2_d053 = inttoptr i32 %v1_d053 to i32*
  %v3_d053 = load i32, i32* %v2_d053, align 4
  %v1_d056 = icmp eq i32 %v3_d053, 0
  br i1 %v1_d056, label %dec_label_pc_d078, label %dec_label_pc_d05a

dec_label_pc_d05a:                                ; preds = %dec_label_pc_d040
  br i1 false, label %dec_label_pc_d089, label %dec_label_pc_d067

dec_label_pc_d067:                                ; preds = %dec_label_pc_d05a
  %v1_d067 = inttoptr i32 %v3_d053 to i32*
  %v2_d067 = load i32, i32* %v1_d067, align 4
  %v1_d06d = add i32 %v2_d067, 4
  %v2_d06d = inttoptr i32 %v1_d06d to i32*
  %v3_d06d = load i32, i32* %v2_d06d, align 4
  ret i32 %v3_d06d

dec_label_pc_d078:                                ; preds = %dec_label_pc_d040
  br i1 false, label %dec_label_pc_d089, label %dec_label_pc_d085

dec_label_pc_d085:                                ; preds = %dec_label_pc_d078
  ret i32 0

dec_label_pc_d089:                                ; preds = %dec_label_pc_d078, %dec_label_pc_d05a
  ret i32 undef
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS7_EEENS3_5list1INS3_5valueIS9_EEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d0a0:
  br i1 false, label %dec_label_pc_d0c0, label %dec_label_pc_d0bc

dec_label_pc_d0bc:                                ; preds = %dec_label_pc_d0a0
  ret i32 0

dec_label_pc_d0c0:                                ; preds = %dec_label_pc_d0a0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataIPFvvEEEE7disposeEv(i32 %arg1) {
dec_label_pc_d0d0:
  %v1_d0e3 = add i32 %arg1, 12
  %v2_d0e3 = inttoptr i32 %v1_d0e3 to i32*
  %v3_d0e3 = load i32, i32* %v2_d0e3, align 4
  %v1_d0e6 = icmp eq i32 %v3_d0e3, 0
  br i1 %v1_d0e6, label %dec_label_pc_d108, label %dec_label_pc_d0ea

dec_label_pc_d0ea:                                ; preds = %dec_label_pc_d0d0
  br i1 false, label %dec_label_pc_d119, label %dec_label_pc_d0f7

dec_label_pc_d0f7:                                ; preds = %dec_label_pc_d0ea
  %v1_d0f7 = inttoptr i32 %v3_d0e3 to i32*
  %v2_d0f7 = load i32, i32* %v1_d0f7, align 4
  %v1_d0fd = add i32 %v2_d0f7, 4
  %v2_d0fd = inttoptr i32 %v1_d0fd to i32*
  %v3_d0fd = load i32, i32* %v2_d0fd, align 4
  ret i32 %v3_d0fd

dec_label_pc_d108:                                ; preds = %dec_label_pc_d0d0
  br i1 false, label %dec_label_pc_d119, label %dec_label_pc_d115

dec_label_pc_d115:                                ; preds = %dec_label_pc_d108
  ret i32 0

dec_label_pc_d119:                                ; preds = %dec_label_pc_d108, %dec_label_pc_d0ea
  ret i32 undef
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataIPFvvEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d130:
  br i1 false, label %dec_label_pc_d150, label %dec_label_pc_d14c

dec_label_pc_d14c:                                ; preds = %dec_label_pc_d130
  ret i32 0

dec_label_pc_d150:                                ; preds = %dec_label_pc_d130
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d160:
  br i1 false, label %dec_label_pc_d180, label %dec_label_pc_d17c

dec_label_pc_d17c:                                ; preds = %dec_label_pc_d160
  ret i32 0

dec_label_pc_d180:                                ; preds = %dec_label_pc_d160
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d190:
  br i1 false, label %dec_label_pc_d1b0, label %dec_label_pc_d1ac

dec_label_pc_d1ac:                                ; preds = %dec_label_pc_d190
  ret i32 0

dec_label_pc_d1b0:                                ; preds = %dec_label_pc_d190
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d1c0:
  br i1 false, label %dec_label_pc_d1e0, label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1c0
  ret i32 0

dec_label_pc_d1e0:                                ; preds = %dec_label_pc_d1c0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d1f0:
  br i1 false, label %dec_label_pc_d210, label %dec_label_pc_d20c

dec_label_pc_d20c:                                ; preds = %dec_label_pc_d1f0
  ret i32 0

dec_label_pc_d210:                                ; preds = %dec_label_pc_d1f0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d220:
  br i1 false, label %dec_label_pc_d240, label %dec_label_pc_d23c

dec_label_pc_d23c:                                ; preds = %dec_label_pc_d220
  ret i32 0

dec_label_pc_d240:                                ; preds = %dec_label_pc_d220
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d250:
  br i1 false, label %dec_label_pc_d270, label %dec_label_pc_d26c

dec_label_pc_d26c:                                ; preds = %dec_label_pc_d250
  ret i32 0

dec_label_pc_d270:                                ; preds = %dec_label_pc_d250
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d280:
  br i1 false, label %dec_label_pc_d2a0, label %dec_label_pc_d29c

dec_label_pc_d29c:                                ; preds = %dec_label_pc_d280
  ret i32 0

dec_label_pc_d2a0:                                ; preds = %dec_label_pc_d280
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S9_SA_EEENSF_IFvRKNS2_10connectionES6_S9_SA_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d2b0:
  br i1 false, label %dec_label_pc_d2d0, label %dec_label_pc_d2cc

dec_label_pc_d2cc:                                ; preds = %dec_label_pc_d2b0
  ret i32 0

dec_label_pc_d2d0:                                ; preds = %dec_label_pc_d2b0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_SF_SH_bSI_EEENSN_IFvRKNS2_10connectionES6_SF_SH_bSI_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d2e0:
  br i1 false, label %dec_label_pc_d300, label %dec_label_pc_d2fc

dec_label_pc_d2fc:                                ; preds = %dec_label_pc_d2e0
  ret i32 0

dec_label_pc_d300:                                ; preds = %dec_label_pc_d2e0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_d310:
  br i1 false, label %dec_label_pc_d330, label %dec_label_pc_d32c

dec_label_pc_d32c:                                ; preds = %dec_label_pc_d310
  ret i32 0

dec_label_pc_d330:                                ; preds = %dec_label_pc_d310
  ret i32 0
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvRKSsENS2_5list1INS_17reference_wrapperISsEEEEEEE3runEv(i32 %arg1) {
dec_label_pc_d340:
  br i1 false, label %dec_label_pc_d376, label %dec_label_pc_d361

dec_label_pc_d361:                                ; preds = %dec_label_pc_d340
  %v1_d36b = add i32 %arg1, 260
  %v2_d36b = inttoptr i32 %v1_d36b to i32*
  %v3_d36b = load i32, i32* %v2_d36b, align 4
  ret i32 %v3_d36b

dec_label_pc_d376:                                ; preds = %dec_label_pc_d340
  ret i32 %arg1
}

define i32 @_ZN5boost6detail11thread_dataIPFvvEE3runEv(i32 %arg1) {
dec_label_pc_d380:
  br i1 false, label %dec_label_pc_d3ac, label %dec_label_pc_d3a1

dec_label_pc_d3a1:                                ; preds = %dec_label_pc_d380
  %v1_d3a1 = add i32 %arg1, 260
  %v2_d3a1 = inttoptr i32 %v1_d3a1 to i32*
  %v3_d3a1 = load i32, i32* %v2_d3a1, align 4
  ret i32 %v3_d3a1

dec_label_pc_d3ac:                                ; preds = %dec_label_pc_d380
  ret i32 %arg1
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d3c0:
  br i1 false, label %dec_label_pc_d3e0, label %dec_label_pc_d3dc

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d3c0
  ret i32 0

dec_label_pc_d3e0:                                ; preds = %dec_label_pc_d3c0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d3f0:
  br i1 false, label %dec_label_pc_d410, label %dec_label_pc_d40c

dec_label_pc_d40c:                                ; preds = %dec_label_pc_d3f0
  ret i32 0

dec_label_pc_d410:                                ; preds = %dec_label_pc_d3f0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d420:
  br i1 false, label %dec_label_pc_d440, label %dec_label_pc_d43c

dec_label_pc_d43c:                                ; preds = %dec_label_pc_d420
  ret i32 0

dec_label_pc_d440:                                ; preds = %dec_label_pc_d420
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d450:
  br i1 false, label %dec_label_pc_d470, label %dec_label_pc_d46c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d450
  ret i32 0

dec_label_pc_d470:                                ; preds = %dec_label_pc_d450
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d480:
  br i1 false, label %dec_label_pc_d4a0, label %dec_label_pc_d49c

dec_label_pc_d49c:                                ; preds = %dec_label_pc_d480
  ret i32 0

dec_label_pc_d4a0:                                ; preds = %dec_label_pc_d480
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d4b0:
  br i1 false, label %dec_label_pc_d4d0, label %dec_label_pc_d4cc

dec_label_pc_d4cc:                                ; preds = %dec_label_pc_d4b0
  ret i32 0

dec_label_pc_d4d0:                                ; preds = %dec_label_pc_d4b0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d4e0:
  br i1 false, label %dec_label_pc_d500, label %dec_label_pc_d4fc

dec_label_pc_d4fc:                                ; preds = %dec_label_pc_d4e0
  ret i32 0

dec_label_pc_d500:                                ; preds = %dec_label_pc_d4e0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S9_SA_EEENSF_IFvRKNS2_10connectionES6_S9_SA_EEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d510:
  br i1 false, label %dec_label_pc_d530, label %dec_label_pc_d52c

dec_label_pc_d52c:                                ; preds = %dec_label_pc_d510
  ret i32 0

dec_label_pc_d530:                                ; preds = %dec_label_pc_d510
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_SF_SH_bSI_EEENSN_IFvRKNS2_10connectionES6_SF_SH_bSI_EEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d540:
  br i1 false, label %dec_label_pc_d560, label %dec_label_pc_d55c

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d540
  ret i32 0

dec_label_pc_d560:                                ; preds = %dec_label_pc_d540
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEE11get_deleterERKSt9type_info() {
dec_label_pc_d570:
  br i1 false, label %dec_label_pc_d590, label %dec_label_pc_d58c

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d570
  ret i32 0

dec_label_pc_d590:                                ; preds = %dec_label_pc_d570
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_d5a0:
  %v1_d5b3 = add i32 %arg1, 12
  %v2_d5b3 = inttoptr i32 %v1_d5b3 to i32*
  %v3_d5b3 = load i32, i32* %v2_d5b3, align 4
  %v1_d5b6 = icmp eq i32 %v3_d5b3, 0
  br i1 %v1_d5b6, label %dec_label_pc_d5d8, label %dec_label_pc_d5ba

dec_label_pc_d5ba:                                ; preds = %dec_label_pc_d5a0
  br i1 false, label %dec_label_pc_d5e9, label %dec_label_pc_d5c7

dec_label_pc_d5c7:                                ; preds = %dec_label_pc_d5ba
  %v1_d5c7 = inttoptr i32 %v3_d5b3 to i32*
  %v2_d5c7 = load i32, i32* %v1_d5c7, align 4
  %v1_d5cd = add i32 %v2_d5c7, 4
  %v2_d5cd = inttoptr i32 %v1_d5cd to i32*
  %v3_d5cd = load i32, i32* %v2_d5cd, align 4
  ret i32 %v3_d5cd

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d5a0
  br i1 false, label %dec_label_pc_d5e9, label %dec_label_pc_d5e5

dec_label_pc_d5e5:                                ; preds = %dec_label_pc_d5d8
  ret i32 0

dec_label_pc_d5e9:                                ; preds = %dec_label_pc_d5d8, %dec_label_pc_d5ba
  ret i32 undef
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info() {
dec_label_pc_d600:
  br i1 false, label %dec_label_pc_d620, label %dec_label_pc_d61c

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d600
  ret i32 0

dec_label_pc_d620:                                ; preds = %dec_label_pc_d600
  ret i32 0
}

define i32 @_ZNK5boost8signals27signal3IvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S6_S7_EEENSC_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d630:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d648 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d648 = inttoptr i32 %v1_d648 to i32*
  %v3_d648 = load i32, i32* %v2_d648, align 4
  %v1_d64b = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d64b = inttoptr i32 %v1_d64b to i32*
  %v3_d64b = load i32, i32* %v2_d64b, align 4
  store i32 %v3_d648, i32* %arg1, align 4
  %v1_d650 = icmp eq i32 %v3_d64b, 0
  %v1_d652 = load i32, i32* %eax.global-to-local, align 4
  %v2_d652 = add i32 %v1_d652, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d652 = inttoptr i32 %v2_d652 to i32*
  store i32 %v3_d64b, i32* %v3_d652, align 4
  br i1 %v1_d650, label %dec_label_pc_d65b, label %dec_label_pc_d657

dec_label_pc_d657:                                ; preds = %dec_label_pc_d630
  %v1_d657 = add i32 %v3_d64b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d657 = inttoptr i32 %v1_d657 to i32*
  %v3_d657 = load i32, i32* %v2_d657, align 4
  %v4_d657 = add i32 %v3_d657, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d657, i32* %v2_d657, align 4
  br label %dec_label_pc_d65b

dec_label_pc_d65b:                                ; preds = %dec_label_pc_d657, %dec_label_pc_d630
  br i1 false, label %dec_label_pc_d66e, label %dec_label_pc_d668

dec_label_pc_d668:                                ; preds = %dec_label_pc_d65b
  %v0_d66b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d66b

dec_label_pc_d66e:                                ; preds = %dec_label_pc_d65b
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_SD_SF_bSG_EEENSL_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d680:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d698 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d698 = inttoptr i32 %v1_d698 to i32*
  %v3_d698 = load i32, i32* %v2_d698, align 4
  %v1_d69b = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d69b = inttoptr i32 %v1_d69b to i32*
  %v3_d69b = load i32, i32* %v2_d69b, align 4
  store i32 %v3_d698, i32* %arg1, align 4
  %v1_d6a0 = icmp eq i32 %v3_d69b, 0
  %v1_d6a2 = load i32, i32* %eax.global-to-local, align 4
  %v2_d6a2 = add i32 %v1_d6a2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d6a2 = inttoptr i32 %v2_d6a2 to i32*
  store i32 %v3_d69b, i32* %v3_d6a2, align 4
  br i1 %v1_d6a0, label %dec_label_pc_d6ab, label %dec_label_pc_d6a7

dec_label_pc_d6a7:                                ; preds = %dec_label_pc_d680
  %v1_d6a7 = add i32 %v3_d69b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d6a7 = inttoptr i32 %v1_d6a7 to i32*
  %v3_d6a7 = load i32, i32* %v2_d6a7, align 4
  %v4_d6a7 = add i32 %v3_d6a7, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d6a7, i32* %v2_d6a7, align 4
  br label %dec_label_pc_d6ab

dec_label_pc_d6ab:                                ; preds = %dec_label_pc_d6a7, %dec_label_pc_d680
  br i1 false, label %dec_label_pc_d6be, label %dec_label_pc_d6b8

dec_label_pc_d6b8:                                ; preds = %dec_label_pc_d6ab
  %v0_d6bb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d6bb

dec_label_pc_d6be:                                ; preds = %dec_label_pc_d6ab
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d6d0:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d6e8 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d6e8 = inttoptr i32 %v1_d6e8 to i32*
  %v3_d6e8 = load i32, i32* %v2_d6e8, align 4
  %v1_d6eb = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d6eb = inttoptr i32 %v1_d6eb to i32*
  %v3_d6eb = load i32, i32* %v2_d6eb, align 4
  store i32 %v3_d6e8, i32* %arg1, align 4
  %v1_d6f0 = icmp eq i32 %v3_d6eb, 0
  %v1_d6f2 = load i32, i32* %eax.global-to-local, align 4
  %v2_d6f2 = add i32 %v1_d6f2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d6f2 = inttoptr i32 %v2_d6f2 to i32*
  store i32 %v3_d6eb, i32* %v3_d6f2, align 4
  br i1 %v1_d6f0, label %dec_label_pc_d6fb, label %dec_label_pc_d6f7

dec_label_pc_d6f7:                                ; preds = %dec_label_pc_d6d0
  %v1_d6f7 = add i32 %v3_d6eb, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d6f7 = inttoptr i32 %v1_d6f7 to i32*
  %v3_d6f7 = load i32, i32* %v2_d6f7, align 4
  %v4_d6f7 = add i32 %v3_d6f7, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d6f7, i32* %v2_d6f7, align 4
  br label %dec_label_pc_d6fb

dec_label_pc_d6fb:                                ; preds = %dec_label_pc_d6f7, %dec_label_pc_d6d0
  br i1 false, label %dec_label_pc_d70e, label %dec_label_pc_d708

dec_label_pc_d708:                                ; preds = %dec_label_pc_d6fb
  %v0_d70b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d70b

dec_label_pc_d70e:                                ; preds = %dec_label_pc_d6fb
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal1IviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS6_IFvRKNS0_10connectionEiEEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d720:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d738 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d738 = inttoptr i32 %v1_d738 to i32*
  %v3_d738 = load i32, i32* %v2_d738, align 4
  %v1_d73b = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d73b = inttoptr i32 %v1_d73b to i32*
  %v3_d73b = load i32, i32* %v2_d73b, align 4
  store i32 %v3_d738, i32* %arg1, align 4
  %v1_d740 = icmp eq i32 %v3_d73b, 0
  %v1_d742 = load i32, i32* %eax.global-to-local, align 4
  %v2_d742 = add i32 %v1_d742, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d742 = inttoptr i32 %v2_d742 to i32*
  store i32 %v3_d73b, i32* %v3_d742, align 4
  br i1 %v1_d740, label %dec_label_pc_d74b, label %dec_label_pc_d747

dec_label_pc_d747:                                ; preds = %dec_label_pc_d720
  %v1_d747 = add i32 %v3_d73b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d747 = inttoptr i32 %v1_d747 to i32*
  %v3_d747 = load i32, i32* %v2_d747, align 4
  %v4_d747 = add i32 %v3_d747, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d747, i32* %v2_d747, align 4
  br label %dec_label_pc_d74b

dec_label_pc_d74b:                                ; preds = %dec_label_pc_d747, %dec_label_pc_d720
  br i1 false, label %dec_label_pc_d75e, label %dec_label_pc_d758

dec_label_pc_d758:                                ; preds = %dec_label_pc_d74b
  %v0_d75b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d75b

dec_label_pc_d75e:                                ; preds = %dec_label_pc_d74b
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d770:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d788 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d788 = inttoptr i32 %v1_d788 to i32*
  %v3_d788 = load i32, i32* %v2_d788, align 4
  %v1_d78b = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d78b = inttoptr i32 %v1_d78b to i32*
  %v3_d78b = load i32, i32* %v2_d78b, align 4
  store i32 %v3_d788, i32* %arg1, align 4
  %v1_d790 = icmp eq i32 %v3_d78b, 0
  %v1_d792 = load i32, i32* %eax.global-to-local, align 4
  %v2_d792 = add i32 %v1_d792, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d792 = inttoptr i32 %v2_d792 to i32*
  store i32 %v3_d78b, i32* %v3_d792, align 4
  br i1 %v1_d790, label %dec_label_pc_d79b, label %dec_label_pc_d797

dec_label_pc_d797:                                ; preds = %dec_label_pc_d770
  %v1_d797 = add i32 %v3_d78b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d797 = inttoptr i32 %v1_d797 to i32*
  %v3_d797 = load i32, i32* %v2_d797, align 4
  %v4_d797 = add i32 %v3_d797, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d797, i32* %v2_d797, align 4
  br label %dec_label_pc_d79b

dec_label_pc_d79b:                                ; preds = %dec_label_pc_d797, %dec_label_pc_d770
  br i1 false, label %dec_label_pc_d7ae, label %dec_label_pc_d7a8

dec_label_pc_d7a8:                                ; preds = %dec_label_pc_d79b
  %v0_d7ab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d7ab

dec_label_pc_d7ae:                                ; preds = %dec_label_pc_d79b
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d7c0:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d7d8 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d7d8 = inttoptr i32 %v1_d7d8 to i32*
  %v3_d7d8 = load i32, i32* %v2_d7d8, align 4
  %v1_d7db = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d7db = inttoptr i32 %v1_d7db to i32*
  %v3_d7db = load i32, i32* %v2_d7db, align 4
  store i32 %v3_d7d8, i32* %arg1, align 4
  %v1_d7e0 = icmp eq i32 %v3_d7db, 0
  %v1_d7e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_d7e2 = add i32 %v1_d7e2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d7e2 = inttoptr i32 %v2_d7e2 to i32*
  store i32 %v3_d7db, i32* %v3_d7e2, align 4
  br i1 %v1_d7e0, label %dec_label_pc_d7eb, label %dec_label_pc_d7e7

dec_label_pc_d7e7:                                ; preds = %dec_label_pc_d7c0
  %v1_d7e7 = add i32 %v3_d7db, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d7e7 = inttoptr i32 %v1_d7e7 to i32*
  %v3_d7e7 = load i32, i32* %v2_d7e7, align 4
  %v4_d7e7 = add i32 %v3_d7e7, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d7e7, i32* %v2_d7e7, align 4
  br label %dec_label_pc_d7eb

dec_label_pc_d7eb:                                ; preds = %dec_label_pc_d7e7, %dec_label_pc_d7c0
  br i1 false, label %dec_label_pc_d7fe, label %dec_label_pc_d7f8

dec_label_pc_d7f8:                                ; preds = %dec_label_pc_d7eb
  %v0_d7fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d7fb

dec_label_pc_d7fe:                                ; preds = %dec_label_pc_d7eb
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d810:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d828 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d828 = inttoptr i32 %v1_d828 to i32*
  %v3_d828 = load i32, i32* %v2_d828, align 4
  %v1_d82b = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d82b = inttoptr i32 %v1_d82b to i32*
  %v3_d82b = load i32, i32* %v2_d82b, align 4
  store i32 %v3_d828, i32* %arg1, align 4
  %v1_d830 = icmp eq i32 %v3_d82b, 0
  %v1_d832 = load i32, i32* %eax.global-to-local, align 4
  %v2_d832 = add i32 %v1_d832, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d832 = inttoptr i32 %v2_d832 to i32*
  store i32 %v3_d82b, i32* %v3_d832, align 4
  br i1 %v1_d830, label %dec_label_pc_d83b, label %dec_label_pc_d837

dec_label_pc_d837:                                ; preds = %dec_label_pc_d810
  %v1_d837 = add i32 %v3_d82b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d837 = inttoptr i32 %v1_d837 to i32*
  %v3_d837 = load i32, i32* %v2_d837, align 4
  %v4_d837 = add i32 %v3_d837, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d837, i32* %v2_d837, align 4
  br label %dec_label_pc_d83b

dec_label_pc_d83b:                                ; preds = %dec_label_pc_d837, %dec_label_pc_d810
  br i1 false, label %dec_label_pc_d84e, label %dec_label_pc_d848

dec_label_pc_d848:                                ; preds = %dec_label_pc_d83b
  %v0_d84b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d84b

dec_label_pc_d84e:                                ; preds = %dec_label_pc_d83b
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal1IbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS6_IFbRKNS0_10connectionExEEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d860:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d878 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d878 = inttoptr i32 %v1_d878 to i32*
  %v3_d878 = load i32, i32* %v2_d878, align 4
  %v1_d87b = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d87b = inttoptr i32 %v1_d87b to i32*
  %v3_d87b = load i32, i32* %v2_d87b, align 4
  store i32 %v3_d878, i32* %arg1, align 4
  %v1_d880 = icmp eq i32 %v3_d87b, 0
  %v1_d882 = load i32, i32* %eax.global-to-local, align 4
  %v2_d882 = add i32 %v1_d882, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d882 = inttoptr i32 %v2_d882 to i32*
  store i32 %v3_d87b, i32* %v3_d882, align 4
  br i1 %v1_d880, label %dec_label_pc_d88b, label %dec_label_pc_d887

dec_label_pc_d887:                                ; preds = %dec_label_pc_d860
  %v1_d887 = add i32 %v3_d87b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d887 = inttoptr i32 %v1_d887 to i32*
  %v3_d887 = load i32, i32* %v2_d887, align 4
  %v4_d887 = add i32 %v3_d887, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d887, i32* %v2_d887, align 4
  br label %dec_label_pc_d88b

dec_label_pc_d88b:                                ; preds = %dec_label_pc_d887, %dec_label_pc_d860
  br i1 false, label %dec_label_pc_d89e, label %dec_label_pc_d898

dec_label_pc_d898:                                ; preds = %dec_label_pc_d88b
  %v0_d89b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d89b

dec_label_pc_d89e:                                ; preds = %dec_label_pc_d88b
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d8b0:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d8c8 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d8c8 = inttoptr i32 %v1_d8c8 to i32*
  %v3_d8c8 = load i32, i32* %v2_d8c8, align 4
  %v1_d8cb = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d8cb = inttoptr i32 %v1_d8cb to i32*
  %v3_d8cb = load i32, i32* %v2_d8cb, align 4
  store i32 %v3_d8c8, i32* %arg1, align 4
  %v1_d8d0 = icmp eq i32 %v3_d8cb, 0
  %v1_d8d2 = load i32, i32* %eax.global-to-local, align 4
  %v2_d8d2 = add i32 %v1_d8d2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d8d2 = inttoptr i32 %v2_d8d2 to i32*
  store i32 %v3_d8cb, i32* %v3_d8d2, align 4
  br i1 %v1_d8d0, label %dec_label_pc_d8db, label %dec_label_pc_d8d7

dec_label_pc_d8d7:                                ; preds = %dec_label_pc_d8b0
  %v1_d8d7 = add i32 %v3_d8cb, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d8d7 = inttoptr i32 %v1_d8d7 to i32*
  %v3_d8d7 = load i32, i32* %v2_d8d7, align 4
  %v4_d8d7 = add i32 %v3_d8d7, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d8d7, i32* %v2_d8d7, align 4
  br label %dec_label_pc_d8db

dec_label_pc_d8db:                                ; preds = %dec_label_pc_d8d7, %dec_label_pc_d8b0
  br i1 false, label %dec_label_pc_d8ee, label %dec_label_pc_d8e8

dec_label_pc_d8e8:                                ; preds = %dec_label_pc_d8db
  %v0_d8eb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d8eb

dec_label_pc_d8ee:                                ; preds = %dec_label_pc_d8db
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNK5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv(i32* %arg1, i32 %arg2) {
dec_label_pc_d900:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v1_d918 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d918 = inttoptr i32 %v1_d918 to i32*
  %v3_d918 = load i32, i32* %v2_d918, align 4
  %v1_d91b = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_d91b = inttoptr i32 %v1_d91b to i32*
  %v3_d91b = load i32, i32* %v2_d91b, align 4
  store i32 %v3_d918, i32* %arg1, align 4
  %v1_d920 = icmp eq i32 %v3_d91b, 0
  %v1_d922 = load i32, i32* %eax.global-to-local, align 4
  %v2_d922 = add i32 %v1_d922, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_d922 = inttoptr i32 %v2_d922 to i32*
  store i32 %v3_d91b, i32* %v3_d922, align 4
  br i1 %v1_d920, label %dec_label_pc_d92b, label %dec_label_pc_d927

dec_label_pc_d927:                                ; preds = %dec_label_pc_d900
  %v1_d927 = add i32 %v3_d91b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_d927 = inttoptr i32 %v1_d927 to i32*
  %v3_d927 = load i32, i32* %v2_d927, align 4
  %v4_d927 = add i32 %v3_d927, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_d927, i32* %v2_d927, align 4
  br label %dec_label_pc_d92b

dec_label_pc_d92b:                                ; preds = %dec_label_pc_d927, %dec_label_pc_d900
  br i1 false, label %dec_label_pc_d93e, label %dec_label_pc_d938

dec_label_pc_d938:                                ; preds = %dec_label_pc_d92b
  %v0_d93b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d93b

dec_label_pc_d93e:                                ; preds = %dec_label_pc_d92b
  ret i32 undef

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32* %arg1) {
dec_label_pc_d950:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_d950.dec_label_pc_d977_crit_edge

dec_label_pc_d950.dec_label_pc_d977_crit_edge:    ; preds = %dec_label_pc_d950
  %v17_d97b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d977

bb:                                               ; preds = %dec_label_pc_d950
  br label %dec_label_pc_d977

dec_label_pc_d977:                                ; preds = %dec_label_pc_d950.dec_label_pc_d977_crit_edge, %bb
  %v17_d97b = phi i32 [ %v17_d97b.pre, %dec_label_pc_d950.dec_label_pc_d977_crit_edge ], [ undef, %bb ]
  ret i32 %v17_d97b

; uselistorder directives
  uselistorder label %dec_label_pc_d977, { 1, 0 }
}

define i32 @function_d983(i32 %arg1) local_unnamed_addr {
dec_label_pc_d983:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_d990:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_d990.dec_label_pc_d9b7_crit_edge

dec_label_pc_d990.dec_label_pc_d9b7_crit_edge:    ; preds = %dec_label_pc_d990
  %v17_d9bb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d9b7

bb:                                               ; preds = %dec_label_pc_d990
  br label %dec_label_pc_d9b7

dec_label_pc_d9b7:                                ; preds = %dec_label_pc_d990.dec_label_pc_d9b7_crit_edge, %bb
  %v17_d9bb = phi i32 [ %v17_d9bb.pre, %dec_label_pc_d990.dec_label_pc_d9b7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_d9bb

; uselistorder directives
  uselistorder label %dec_label_pc_d9b7, { 1, 0 }
}

define i32 @function_d9c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_d9c3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_SF_SH_bSI_EEENSN_IFvRKNS2_10connectionES6_SF_SH_bSI_EEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_d9d0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_d9d0.dec_label_pc_d9f7_crit_edge

dec_label_pc_d9d0.dec_label_pc_d9f7_crit_edge:    ; preds = %dec_label_pc_d9d0
  %v17_d9fb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d9f7

bb:                                               ; preds = %dec_label_pc_d9d0
  br label %dec_label_pc_d9f7

dec_label_pc_d9f7:                                ; preds = %dec_label_pc_d9d0.dec_label_pc_d9f7_crit_edge, %bb
  %v17_d9fb = phi i32 [ %v17_d9fb.pre, %dec_label_pc_d9d0.dec_label_pc_d9f7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_d9fb

; uselistorder directives
  uselistorder label %dec_label_pc_d9f7, { 1, 0 }
}

define i32 @function_da03(i32 %arg1) local_unnamed_addr {
dec_label_pc_da03:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S9_SA_EEENSF_IFvRKNS2_10connectionES6_S9_SA_EEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_da10:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_da10.dec_label_pc_da37_crit_edge

dec_label_pc_da10.dec_label_pc_da37_crit_edge:    ; preds = %dec_label_pc_da10
  %v17_da3b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_da37

bb:                                               ; preds = %dec_label_pc_da10
  br label %dec_label_pc_da37

dec_label_pc_da37:                                ; preds = %dec_label_pc_da10.dec_label_pc_da37_crit_edge, %bb
  %v17_da3b = phi i32 [ %v17_da3b.pre, %dec_label_pc_da10.dec_label_pc_da37_crit_edge ], [ undef, %bb ]
  ret i32 %v17_da3b

; uselistorder directives
  uselistorder label %dec_label_pc_da37, { 1, 0 }
}

define i32 @function_da43(i32 %arg1) local_unnamed_addr {
dec_label_pc_da43:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_da50:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_da50.dec_label_pc_da77_crit_edge

dec_label_pc_da50.dec_label_pc_da77_crit_edge:    ; preds = %dec_label_pc_da50
  %v17_da7b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_da77

bb:                                               ; preds = %dec_label_pc_da50
  br label %dec_label_pc_da77

dec_label_pc_da77:                                ; preds = %dec_label_pc_da50.dec_label_pc_da77_crit_edge, %bb
  %v17_da7b = phi i32 [ %v17_da7b.pre, %dec_label_pc_da50.dec_label_pc_da77_crit_edge ], [ undef, %bb ]
  ret i32 %v17_da7b

; uselistorder directives
  uselistorder label %dec_label_pc_da77, { 1, 0 }
}

define i32 @function_da83(i32 %arg1) local_unnamed_addr {
dec_label_pc_da83:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_da90:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_da90.dec_label_pc_dab7_crit_edge

dec_label_pc_da90.dec_label_pc_dab7_crit_edge:    ; preds = %dec_label_pc_da90
  %v17_dabb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dab7

bb:                                               ; preds = %dec_label_pc_da90
  br label %dec_label_pc_dab7

dec_label_pc_dab7:                                ; preds = %dec_label_pc_da90.dec_label_pc_dab7_crit_edge, %bb
  %v17_dabb = phi i32 [ %v17_dabb.pre, %dec_label_pc_da90.dec_label_pc_dab7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dabb

; uselistorder directives
  uselistorder label %dec_label_pc_dab7, { 1, 0 }
}

define i32 @function_dac3(i32 %arg1) local_unnamed_addr {
dec_label_pc_dac3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_dad0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dad0.dec_label_pc_daf7_crit_edge

dec_label_pc_dad0.dec_label_pc_daf7_crit_edge:    ; preds = %dec_label_pc_dad0
  %v17_dafb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_daf7

bb:                                               ; preds = %dec_label_pc_dad0
  br label %dec_label_pc_daf7

dec_label_pc_daf7:                                ; preds = %dec_label_pc_dad0.dec_label_pc_daf7_crit_edge, %bb
  %v17_dafb = phi i32 [ %v17_dafb.pre, %dec_label_pc_dad0.dec_label_pc_daf7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dafb

; uselistorder directives
  uselistorder label %dec_label_pc_daf7, { 1, 0 }
}

define i32 @function_db03(i32 %arg1) local_unnamed_addr {
dec_label_pc_db03:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_db10:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_db10.dec_label_pc_db37_crit_edge

dec_label_pc_db10.dec_label_pc_db37_crit_edge:    ; preds = %dec_label_pc_db10
  %v17_db3b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_db37

bb:                                               ; preds = %dec_label_pc_db10
  br label %dec_label_pc_db37

dec_label_pc_db37:                                ; preds = %dec_label_pc_db10.dec_label_pc_db37_crit_edge, %bb
  %v17_db3b = phi i32 [ %v17_db3b.pre, %dec_label_pc_db10.dec_label_pc_db37_crit_edge ], [ undef, %bb ]
  ret i32 %v17_db3b

; uselistorder directives
  uselistorder label %dec_label_pc_db37, { 1, 0 }
}

define i32 @function_db43(i32 %arg1) local_unnamed_addr {
dec_label_pc_db43:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_db50:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_db50.dec_label_pc_db77_crit_edge

dec_label_pc_db50.dec_label_pc_db77_crit_edge:    ; preds = %dec_label_pc_db50
  %v17_db7b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_db77

bb:                                               ; preds = %dec_label_pc_db50
  br label %dec_label_pc_db77

dec_label_pc_db77:                                ; preds = %dec_label_pc_db50.dec_label_pc_db77_crit_edge, %bb
  %v17_db7b = phi i32 [ %v17_db7b.pre, %dec_label_pc_db50.dec_label_pc_db77_crit_edge ], [ undef, %bb ]
  ret i32 %v17_db7b

; uselistorder directives
  uselistorder label %dec_label_pc_db77, { 1, 0 }
}

define i32 @function_db83(i32 %arg1) local_unnamed_addr {
dec_label_pc_db83:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_db90:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_db90.dec_label_pc_dbb7_crit_edge

dec_label_pc_db90.dec_label_pc_dbb7_crit_edge:    ; preds = %dec_label_pc_db90
  %v17_dbbb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dbb7

bb:                                               ; preds = %dec_label_pc_db90
  br label %dec_label_pc_dbb7

dec_label_pc_dbb7:                                ; preds = %dec_label_pc_db90.dec_label_pc_dbb7_crit_edge, %bb
  %v17_dbbb = phi i32 [ %v17_dbbb.pre, %dec_label_pc_db90.dec_label_pc_dbb7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dbbb

; uselistorder directives
  uselistorder label %dec_label_pc_dbb7, { 1, 0 }
}

define i32 @function_dbc3(i32 %arg1) local_unnamed_addr {
dec_label_pc_dbc3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEEEED0Ev(i32* %arg1) {
dec_label_pc_dbd0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dbd0.dec_label_pc_dbf7_crit_edge

dec_label_pc_dbd0.dec_label_pc_dbf7_crit_edge:    ; preds = %dec_label_pc_dbd0
  %v17_dbfb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dbf7

bb:                                               ; preds = %dec_label_pc_dbd0
  br label %dec_label_pc_dbf7

dec_label_pc_dbf7:                                ; preds = %dec_label_pc_dbd0.dec_label_pc_dbf7_crit_edge, %bb
  %v17_dbfb = phi i32 [ %v17_dbfb.pre, %dec_label_pc_dbd0.dec_label_pc_dbf7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dbfb

; uselistorder directives
  uselistorder label %dec_label_pc_dbf7, { 1, 0 }
}

define i32 @function_dc03(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc03:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_dc10:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dc10.dec_label_pc_dc37_crit_edge

dec_label_pc_dc10.dec_label_pc_dc37_crit_edge:    ; preds = %dec_label_pc_dc10
  %v17_dc3b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dc37

bb:                                               ; preds = %dec_label_pc_dc10
  br label %dec_label_pc_dc37

dec_label_pc_dc37:                                ; preds = %dec_label_pc_dc10.dec_label_pc_dc37_crit_edge, %bb
  %v17_dc3b = phi i32 [ %v17_dc3b.pre, %dec_label_pc_dc10.dec_label_pc_dc37_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dc3b

; uselistorder directives
  uselistorder label %dec_label_pc_dc37, { 1, 0 }
}

define i32 @function_dc43(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc43:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_SF_SH_bSI_EEENSN_IFvRKNS2_10connectionES6_SF_SH_bSI_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_dc50:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dc50.dec_label_pc_dc77_crit_edge

dec_label_pc_dc50.dec_label_pc_dc77_crit_edge:    ; preds = %dec_label_pc_dc50
  %v17_dc7b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dc77

bb:                                               ; preds = %dec_label_pc_dc50
  br label %dec_label_pc_dc77

dec_label_pc_dc77:                                ; preds = %dec_label_pc_dc50.dec_label_pc_dc77_crit_edge, %bb
  %v17_dc7b = phi i32 [ %v17_dc7b.pre, %dec_label_pc_dc50.dec_label_pc_dc77_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dc7b

; uselistorder directives
  uselistorder label %dec_label_pc_dc77, { 1, 0 }
}

define i32 @function_dc83(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc83:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S9_SA_EEENSF_IFvRKNS2_10connectionES6_S9_SA_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_dc90:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dc90.dec_label_pc_dcb7_crit_edge

dec_label_pc_dc90.dec_label_pc_dcb7_crit_edge:    ; preds = %dec_label_pc_dc90
  %v17_dcbb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dcb7

bb:                                               ; preds = %dec_label_pc_dc90
  br label %dec_label_pc_dcb7

dec_label_pc_dcb7:                                ; preds = %dec_label_pc_dc90.dec_label_pc_dcb7_crit_edge, %bb
  %v17_dcbb = phi i32 [ %v17_dcbb.pre, %dec_label_pc_dc90.dec_label_pc_dcb7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dcbb

; uselistorder directives
  uselistorder label %dec_label_pc_dcb7, { 1, 0 }
}

define i32 @function_dcc3(i32 %arg1) local_unnamed_addr {
dec_label_pc_dcc3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_dcd0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dcd0.dec_label_pc_dcf7_crit_edge

dec_label_pc_dcd0.dec_label_pc_dcf7_crit_edge:    ; preds = %dec_label_pc_dcd0
  %v17_dcfb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dcf7

bb:                                               ; preds = %dec_label_pc_dcd0
  br label %dec_label_pc_dcf7

dec_label_pc_dcf7:                                ; preds = %dec_label_pc_dcd0.dec_label_pc_dcf7_crit_edge, %bb
  %v17_dcfb = phi i32 [ %v17_dcfb.pre, %dec_label_pc_dcd0.dec_label_pc_dcf7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dcfb

; uselistorder directives
  uselistorder label %dec_label_pc_dcf7, { 1, 0 }
}

define i32 @function_dd03(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd03:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_dd10:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dd10.dec_label_pc_dd37_crit_edge

dec_label_pc_dd10.dec_label_pc_dd37_crit_edge:    ; preds = %dec_label_pc_dd10
  %v17_dd3b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dd37

bb:                                               ; preds = %dec_label_pc_dd10
  br label %dec_label_pc_dd37

dec_label_pc_dd37:                                ; preds = %dec_label_pc_dd10.dec_label_pc_dd37_crit_edge, %bb
  %v17_dd3b = phi i32 [ %v17_dd3b.pre, %dec_label_pc_dd10.dec_label_pc_dd37_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dd3b

; uselistorder directives
  uselistorder label %dec_label_pc_dd37, { 1, 0 }
}

define i32 @function_dd43(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd43:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_dd50:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dd50.dec_label_pc_dd77_crit_edge

dec_label_pc_dd50.dec_label_pc_dd77_crit_edge:    ; preds = %dec_label_pc_dd50
  %v17_dd7b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dd77

bb:                                               ; preds = %dec_label_pc_dd50
  br label %dec_label_pc_dd77

dec_label_pc_dd77:                                ; preds = %dec_label_pc_dd50.dec_label_pc_dd77_crit_edge, %bb
  %v17_dd7b = phi i32 [ %v17_dd7b.pre, %dec_label_pc_dd50.dec_label_pc_dd77_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dd7b

; uselistorder directives
  uselistorder label %dec_label_pc_dd77, { 1, 0 }
}

define i32 @function_dd83(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd83:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_dd90:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dd90.dec_label_pc_ddb7_crit_edge

dec_label_pc_dd90.dec_label_pc_ddb7_crit_edge:    ; preds = %dec_label_pc_dd90
  %v17_ddbb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_ddb7

bb:                                               ; preds = %dec_label_pc_dd90
  br label %dec_label_pc_ddb7

dec_label_pc_ddb7:                                ; preds = %dec_label_pc_dd90.dec_label_pc_ddb7_crit_edge, %bb
  %v17_ddbb = phi i32 [ %v17_ddbb.pre, %dec_label_pc_dd90.dec_label_pc_ddb7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_ddbb

; uselistorder directives
  uselistorder label %dec_label_pc_ddb7, { 1, 0 }
}

define i32 @function_ddc3(i32 %arg1) local_unnamed_addr {
dec_label_pc_ddc3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_ddd0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_ddd0.dec_label_pc_ddf7_crit_edge

dec_label_pc_ddd0.dec_label_pc_ddf7_crit_edge:    ; preds = %dec_label_pc_ddd0
  %v17_ddfb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_ddf7

bb:                                               ; preds = %dec_label_pc_ddd0
  br label %dec_label_pc_ddf7

dec_label_pc_ddf7:                                ; preds = %dec_label_pc_ddd0.dec_label_pc_ddf7_crit_edge, %bb
  %v17_ddfb = phi i32 [ %v17_ddfb.pre, %dec_label_pc_ddd0.dec_label_pc_ddf7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_ddfb

; uselistorder directives
  uselistorder label %dec_label_pc_ddf7, { 1, 0 }
}

define i32 @function_de03(i32 %arg1) local_unnamed_addr {
dec_label_pc_de03:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_de10:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_de10.dec_label_pc_de37_crit_edge

dec_label_pc_de10.dec_label_pc_de37_crit_edge:    ; preds = %dec_label_pc_de10
  %v17_de3b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_de37

bb:                                               ; preds = %dec_label_pc_de10
  br label %dec_label_pc_de37

dec_label_pc_de37:                                ; preds = %dec_label_pc_de10.dec_label_pc_de37_crit_edge, %bb
  %v17_de3b = phi i32 [ %v17_de3b.pre, %dec_label_pc_de10.dec_label_pc_de37_crit_edge ], [ undef, %bb ]
  ret i32 %v17_de3b

; uselistorder directives
  uselistorder label %dec_label_pc_de37, { 1, 0 }
}

define i32 @function_de43(i32 %arg1) local_unnamed_addr {
dec_label_pc_de43:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_de50:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_de50.dec_label_pc_de77_crit_edge

dec_label_pc_de50.dec_label_pc_de77_crit_edge:    ; preds = %dec_label_pc_de50
  %v17_de7b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_de77

bb:                                               ; preds = %dec_label_pc_de50
  br label %dec_label_pc_de77

dec_label_pc_de77:                                ; preds = %dec_label_pc_de50.dec_label_pc_de77_crit_edge, %bb
  %v17_de7b = phi i32 [ %v17_de7b.pre, %dec_label_pc_de50.dec_label_pc_de77_crit_edge ], [ undef, %bb ]
  ret i32 %v17_de7b

; uselistorder directives
  uselistorder label %dec_label_pc_de77, { 1, 0 }
}

define i32 @function_de83(i32 %arg1) local_unnamed_addr {
dec_label_pc_de83:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataIPFvvEEEED0Ev(i32* %arg1) {
dec_label_pc_de90:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_de90.dec_label_pc_deb7_crit_edge

dec_label_pc_de90.dec_label_pc_deb7_crit_edge:    ; preds = %dec_label_pc_de90
  %v17_debb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_deb7

bb:                                               ; preds = %dec_label_pc_de90
  br label %dec_label_pc_deb7

dec_label_pc_deb7:                                ; preds = %dec_label_pc_de90.dec_label_pc_deb7_crit_edge, %bb
  %v17_debb = phi i32 [ %v17_debb.pre, %dec_label_pc_de90.dec_label_pc_deb7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_debb

; uselistorder directives
  uselistorder label %dec_label_pc_deb7, { 1, 0 }
}

define i32 @function_dec3(i32 %arg1) local_unnamed_addr {
dec_label_pc_dec3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS7_EEENS3_5list1INS3_5valueIS9_EEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_ded0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_ded0.dec_label_pc_def7_crit_edge

dec_label_pc_ded0.dec_label_pc_def7_crit_edge:    ; preds = %dec_label_pc_ded0
  %v17_defb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_def7

bb:                                               ; preds = %dec_label_pc_ded0
  br label %dec_label_pc_def7

dec_label_pc_def7:                                ; preds = %dec_label_pc_ded0.dec_label_pc_def7_crit_edge, %bb
  %v17_defb = phi i32 [ %v17_defb.pre, %dec_label_pc_ded0.dec_label_pc_def7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_defb

; uselistorder directives
  uselistorder label %dec_label_pc_def7, { 1, 0 }
}

define i32 @function_df03(i32 %arg1) local_unnamed_addr {
dec_label_pc_df03:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvRKSsENS3_5list1INS_17reference_wrapperISsEEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_df10:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_df10.dec_label_pc_df37_crit_edge

dec_label_pc_df10.dec_label_pc_df37_crit_edge:    ; preds = %dec_label_pc_df10
  %v17_df3b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_df37

bb:                                               ; preds = %dec_label_pc_df10
  br label %dec_label_pc_df37

dec_label_pc_df37:                                ; preds = %dec_label_pc_df10.dec_label_pc_df37_crit_edge, %bb
  %v17_df3b = phi i32 [ %v17_df3b.pre, %dec_label_pc_df10.dec_label_pc_df37_crit_edge ], [ undef, %bb ]
  ret i32 %v17_df3b

; uselistorder directives
  uselistorder label %dec_label_pc_df37, { 1, 0 }
}

define i32 @function_df43(i32 %arg1) local_unnamed_addr {
dec_label_pc_df43:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_df50:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_df50.dec_label_pc_df77_crit_edge

dec_label_pc_df50.dec_label_pc_df77_crit_edge:    ; preds = %dec_label_pc_df50
  %v17_df7b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_df77

bb:                                               ; preds = %dec_label_pc_df50
  br label %dec_label_pc_df77

dec_label_pc_df77:                                ; preds = %dec_label_pc_df50.dec_label_pc_df77_crit_edge, %bb
  %v17_df7b = phi i32 [ %v17_df7b.pre, %dec_label_pc_df50.dec_label_pc_df77_crit_edge ], [ undef, %bb ]
  ret i32 %v17_df7b

; uselistorder directives
  uselistorder label %dec_label_pc_df77, { 1, 0 }
}

define i32 @function_df83(i32 %arg1) local_unnamed_addr {
dec_label_pc_df83:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEED0Ev(i32* %arg1) {
dec_label_pc_df90:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_df90.dec_label_pc_dfb7_crit_edge

dec_label_pc_df90.dec_label_pc_dfb7_crit_edge:    ; preds = %dec_label_pc_df90
  %v17_dfbb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dfb7

bb:                                               ; preds = %dec_label_pc_df90
  br label %dec_label_pc_dfb7

dec_label_pc_dfb7:                                ; preds = %dec_label_pc_df90.dec_label_pc_dfb7_crit_edge, %bb
  %v17_dfbb = phi i32 [ %v17_dfbb.pre, %dec_label_pc_df90.dec_label_pc_dfb7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dfbb

; uselistorder directives
  uselistorder label %dec_label_pc_dfb7, { 1, 0 }
}

define i32 @function_dfc3(i32 %arg1) local_unnamed_addr {
dec_label_pc_dfc3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EERKSsb10ChangeTypeNS_8functionIFvSG_SP_SR_bSS_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_dfd0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_dfd0.dec_label_pc_dff7_crit_edge

dec_label_pc_dfd0.dec_label_pc_dff7_crit_edge:    ; preds = %dec_label_pc_dfd0
  %v17_dffb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dff7

bb:                                               ; preds = %dec_label_pc_dfd0
  br label %dec_label_pc_dff7

dec_label_pc_dff7:                                ; preds = %dec_label_pc_dfd0.dec_label_pc_dff7_crit_edge, %bb
  %v17_dffb = phi i32 [ %v17_dffb.pre, %dec_label_pc_dfd0.dec_label_pc_dff7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_dffb

; uselistorder directives
  uselistorder label %dec_label_pc_dff7, { 1, 0 }
}

define i32 @function_e003(i32 %arg1) local_unnamed_addr {
dec_label_pc_e003:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP7CWalletRK7uint25610ChangeTypeNS_8functionIFvSG_SJ_SK_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e010:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e010.dec_label_pc_e037_crit_edge

dec_label_pc_e010.dec_label_pc_e037_crit_edge:    ; preds = %dec_label_pc_e010
  %v17_e03b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e037

bb:                                               ; preds = %dec_label_pc_e010
  br label %dec_label_pc_e037

dec_label_pc_e037:                                ; preds = %dec_label_pc_e010.dec_label_pc_e037_crit_edge, %bb
  %v17_e03b = phi i32 [ %v17_e03b.pre, %dec_label_pc_e010.dec_label_pc_e037_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e03b

; uselistorder directives
  uselistorder label %dec_label_pc_e037, { 1, 0 }
}

define i32 @function_e043(i32 %arg1) local_unnamed_addr {
dec_label_pc_e043:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e050:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e050.dec_label_pc_e077_crit_edge

dec_label_pc_e050.dec_label_pc_e077_crit_edge:    ; preds = %dec_label_pc_e050
  %v17_e07b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e077

bb:                                               ; preds = %dec_label_pc_e050
  br label %dec_label_pc_e077

dec_label_pc_e077:                                ; preds = %dec_label_pc_e050.dec_label_pc_e077_crit_edge, %bb
  %v17_e07b = phi i32 [ %v17_e07b.pre, %dec_label_pc_e050.dec_label_pc_e077_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e07b

; uselistorder directives
  uselistorder label %dec_label_pc_e077, { 1, 0 }
}

define i32 @function_e083(i32 %arg1) local_unnamed_addr {
dec_label_pc_e083:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals210last_valueIbEEED0Ev(i32* %arg1) {
dec_label_pc_e090:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e090.dec_label_pc_e0b7_crit_edge

dec_label_pc_e090.dec_label_pc_e0b7_crit_edge:    ; preds = %dec_label_pc_e090
  %v17_e0bb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e0b7

bb:                                               ; preds = %dec_label_pc_e090
  br label %dec_label_pc_e0b7

dec_label_pc_e0b7:                                ; preds = %dec_label_pc_e090.dec_label_pc_e0b7_crit_edge, %bb
  %v17_e0bb = phi i32 [ %v17_e0bb.pre, %dec_label_pc_e090.dec_label_pc_e0b7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e0bb

; uselistorder directives
  uselistorder label %dec_label_pc_e0b7, { 1, 0 }
}

define i32 @function_e0c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_e0c3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e0d0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e0d0.dec_label_pc_e0f7_crit_edge

dec_label_pc_e0d0.dec_label_pc_e0f7_crit_edge:    ; preds = %dec_label_pc_e0d0
  %v17_e0fb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e0f7

bb:                                               ; preds = %dec_label_pc_e0d0
  br label %dec_label_pc_e0f7

dec_label_pc_e0f7:                                ; preds = %dec_label_pc_e0d0.dec_label_pc_e0f7_crit_edge, %bb
  %v17_e0fb = phi i32 [ %v17_e0fb.pre, %dec_label_pc_e0d0.dec_label_pc_e0f7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e0fb

; uselistorder directives
  uselistorder label %dec_label_pc_e0f7, { 1, 0 }
}

define i32 @function_e103(i32 %arg1) local_unnamed_addr {
dec_label_pc_e103:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e110:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e110.dec_label_pc_e137_crit_edge

dec_label_pc_e110.dec_label_pc_e137_crit_edge:    ; preds = %dec_label_pc_e110
  %v17_e13b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e137

bb:                                               ; preds = %dec_label_pc_e110
  br label %dec_label_pc_e137

dec_label_pc_e137:                                ; preds = %dec_label_pc_e110.dec_label_pc_e137_crit_edge, %bb
  %v17_e13b = phi i32 [ %v17_e13b.pre, %dec_label_pc_e110.dec_label_pc_e137_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e13b

; uselistorder directives
  uselistorder label %dec_label_pc_e137, { 1, 0 }
}

define i32 @function_e143(i32 %arg1) local_unnamed_addr {
dec_label_pc_e143:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e150:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e150.dec_label_pc_e177_crit_edge

dec_label_pc_e150.dec_label_pc_e177_crit_edge:    ; preds = %dec_label_pc_e150
  %v17_e17b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e177

bb:                                               ; preds = %dec_label_pc_e150
  br label %dec_label_pc_e177

dec_label_pc_e177:                                ; preds = %dec_label_pc_e150.dec_label_pc_e177_crit_edge, %bb
  %v17_e17b = phi i32 [ %v17_e17b.pre, %dec_label_pc_e150.dec_label_pc_e177_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e17b

; uselistorder directives
  uselistorder label %dec_label_pc_e177, { 1, 0 }
}

define i32 @function_e183(i32 %arg1) local_unnamed_addr {
dec_label_pc_e183:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueISsEEED0Ev(i32* %arg1) {
dec_label_pc_e190:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e190.dec_label_pc_e1b7_crit_edge

dec_label_pc_e190.dec_label_pc_e1b7_crit_edge:    ; preds = %dec_label_pc_e190
  %v17_e1bb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e1b7

bb:                                               ; preds = %dec_label_pc_e190
  br label %dec_label_pc_e1b7

dec_label_pc_e1b7:                                ; preds = %dec_label_pc_e190.dec_label_pc_e1b7_crit_edge, %bb
  %v17_e1bb = phi i32 [ %v17_e1bb.pre, %dec_label_pc_e190.dec_label_pc_e1b7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e1bb

; uselistorder directives
  uselistorder label %dec_label_pc_e1b7, { 1, 0 }
}

define i32 @function_e1c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_e1c3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot0IvNS_8functionIFvvEEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e1d0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e1d0.dec_label_pc_e1f7_crit_edge

dec_label_pc_e1d0.dec_label_pc_e1f7_crit_edge:    ; preds = %dec_label_pc_e1d0
  %v17_e1fb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e1f7

bb:                                               ; preds = %dec_label_pc_e1d0
  br label %dec_label_pc_e1f7

dec_label_pc_e1f7:                                ; preds = %dec_label_pc_e1d0.dec_label_pc_e1f7_crit_edge, %bb
  %v17_e1fb = phi i32 [ %v17_e1fb.pre, %dec_label_pc_e1d0.dec_label_pc_e1f7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e1fb

; uselistorder directives
  uselistorder label %dec_label_pc_e1f7, { 1, 0 }
}

define i32 @function_e203(i32 %arg1) local_unnamed_addr {
dec_label_pc_e203:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e210:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e210.dec_label_pc_e237_crit_edge

dec_label_pc_e210.dec_label_pc_e237_crit_edge:    ; preds = %dec_label_pc_e210
  %v17_e23b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e237

bb:                                               ; preds = %dec_label_pc_e210
  br label %dec_label_pc_e237

dec_label_pc_e237:                                ; preds = %dec_label_pc_e210.dec_label_pc_e237_crit_edge, %bb
  %v17_e23b = phi i32 [ %v17_e23b.pre, %dec_label_pc_e210.dec_label_pc_e237_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e23b

; uselistorder directives
  uselistorder label %dec_label_pc_e237, { 1, 0 }
}

define i32 @function_e243(i32 %arg1) local_unnamed_addr {
dec_label_pc_e243:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_e250:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e250.dec_label_pc_e277_crit_edge

dec_label_pc_e250.dec_label_pc_e277_crit_edge:    ; preds = %dec_label_pc_e250
  %v17_e27b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e277

bb:                                               ; preds = %dec_label_pc_e250
  br label %dec_label_pc_e277

dec_label_pc_e277:                                ; preds = %dec_label_pc_e250.dec_label_pc_e277_crit_edge, %bb
  %v17_e27b = phi i32 [ %v17_e27b.pre, %dec_label_pc_e250.dec_label_pc_e277_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e27b

; uselistorder directives
  uselistorder label %dec_label_pc_e277, { 1, 0 }
}

define i32 @function_e283(i32 %arg1) local_unnamed_addr {
dec_label_pc_e283:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e290:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_391c8.3330 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e290.dec_label_pc_e2b7_crit_edge

dec_label_pc_e290.dec_label_pc_e2b7_crit_edge:    ; preds = %dec_label_pc_e290
  %v17_e2bb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e2b7

bb:                                               ; preds = %dec_label_pc_e290
  br label %dec_label_pc_e2b7

dec_label_pc_e2b7:                                ; preds = %dec_label_pc_e290.dec_label_pc_e2b7_crit_edge, %bb
  %v17_e2bb = phi i32 [ %v17_e2bb.pre, %dec_label_pc_e290.dec_label_pc_e2b7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e2bb

; uselistorder directives
  uselistorder label %dec_label_pc_e2b7, { 1, 0 }
}

define i32 @function_e2c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_e2c3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e2d0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e2d0.dec_label_pc_e2f7_crit_edge

dec_label_pc_e2d0.dec_label_pc_e2f7_crit_edge:    ; preds = %dec_label_pc_e2d0
  %v17_e2fb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e2f7

bb:                                               ; preds = %dec_label_pc_e2d0
  br label %dec_label_pc_e2f7

dec_label_pc_e2f7:                                ; preds = %dec_label_pc_e2d0.dec_label_pc_e2f7_crit_edge, %bb
  %v17_e2fb = phi i32 [ %v17_e2fb.pre, %dec_label_pc_e2d0.dec_label_pc_e2f7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e2fb

; uselistorder directives
  uselistorder label %dec_label_pc_e2f7, { 1, 0 }
}

define i32 @function_e303(i32 %arg1) local_unnamed_addr {
dec_label_pc_e303:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e310:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_2a6a8.3331 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e310.dec_label_pc_e337_crit_edge

dec_label_pc_e310.dec_label_pc_e337_crit_edge:    ; preds = %dec_label_pc_e310
  %v17_e33b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e337

bb:                                               ; preds = %dec_label_pc_e310
  br label %dec_label_pc_e337

dec_label_pc_e337:                                ; preds = %dec_label_pc_e310.dec_label_pc_e337_crit_edge, %bb
  %v17_e33b = phi i32 [ %v17_e33b.pre, %dec_label_pc_e310.dec_label_pc_e337_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e33b

; uselistorder directives
  uselistorder label %dec_label_pc_e337, { 1, 0 }
}

define i32 @function_e343(i32 %arg1) local_unnamed_addr {
dec_label_pc_e343:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost8signals211signal_baseD0Ev(i32* %arg1) {
dec_label_pc_e350:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e350.dec_label_pc_e377_crit_edge

dec_label_pc_e350.dec_label_pc_e377_crit_edge:    ; preds = %dec_label_pc_e350
  %v17_e37b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e377

bb:                                               ; preds = %dec_label_pc_e350
  br label %dec_label_pc_e377

dec_label_pc_e377:                                ; preds = %dec_label_pc_e350.dec_label_pc_e377_crit_edge, %bb
  %v17_e37b = phi i32 [ %v17_e37b.pre, %dec_label_pc_e350.dec_label_pc_e377_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e37b

; uselistorder directives
  uselistorder label %dec_label_pc_e377, { 1, 0 }
}

define i32 @function_e383(i32 %arg1) local_unnamed_addr {
dec_label_pc_e383:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e390:
  store i32 %arg1, i32* @eax, align 4
  %tmp110 = icmp ult i32 %arg2, 11
  br i1 %tmp110, label %dec_label_pc_e3ab, label %dec_label_pc_e3c0

dec_label_pc_e3ab:                                ; preds = %dec_label_pc_e390
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_e3b8

bb:                                               ; preds = %dec_label_pc_e3ab
  br label %dec_label_pc_e3b8

dec_label_pc_e3b8:                                ; preds = %bb, %dec_label_pc_e3ab
  ret i32 0

dec_label_pc_e3c0:                                ; preds = %dec_label_pc_e390
  br i1 false, label %bb108, label %dec_label_pc_e3d2

bb108:                                            ; preds = %dec_label_pc_e3c0
  br label %dec_label_pc_e3d2

dec_label_pc_e3d2:                                ; preds = %bb108, %dec_label_pc_e3c0
  ret i32 %arg1
}

define i32 @function_e3de(i32 %arg1) local_unnamed_addr {
dec_label_pc_e3de:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEE7disposeEv(i32 %arg1) {
dec_label_pc_e3f0:
  store i32 %arg1, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_e411

bb:                                               ; preds = %dec_label_pc_e3f0
  br label %dec_label_pc_e411

dec_label_pc_e411:                                ; preds = %bb, %dec_label_pc_e3f0
  %v1_e411 = add i32 %arg1, 12
  %v2_e411 = inttoptr i32 %v1_e411 to i32*
  %v3_e411 = load i32, i32* %v2_e411, align 4
  ret i32 %v3_e411
}

define i32 @function_e420(i32 %arg1) local_unnamed_addr {
dec_label_pc_e420:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals210last_valueIbEEE7disposeEv(i32 %arg1) {
dec_label_pc_e430:
  store i32 %arg1, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_e451

bb:                                               ; preds = %dec_label_pc_e430
  br label %dec_label_pc_e451

dec_label_pc_e451:                                ; preds = %bb, %dec_label_pc_e430
  %v1_e451 = add i32 %arg1, 12
  %v2_e451 = inttoptr i32 %v1_e451 to i32*
  %v3_e451 = load i32, i32* %v2_e451, align 4
  ret i32 %v3_e451
}

define i32 @function_e460(i32 %arg1) local_unnamed_addr {
dec_label_pc_e460:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueISsEEE7disposeEv(i32 %arg1) {
dec_label_pc_e470:
  store i32 %arg1, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_e491

bb:                                               ; preds = %dec_label_pc_e470
  br label %dec_label_pc_e491

dec_label_pc_e491:                                ; preds = %bb, %dec_label_pc_e470
  %v1_e491 = add i32 %arg1, 12
  %v2_e491 = inttoptr i32 %v1_e491 to i32*
  %v3_e491 = load i32, i32* %v2_e491, align 4
  ret i32 %v3_e491
}

define i32 @function_e4a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_e4a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost17bad_function_callD1Ev(i32* %arg1) {
dec_label_pc_e4b0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_e4b0.dec_label_pc_e4d7_crit_edge

dec_label_pc_e4b0.dec_label_pc_e4d7_crit_edge:    ; preds = %dec_label_pc_e4b0
  %v17_e4db.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e4d7

bb:                                               ; preds = %dec_label_pc_e4b0
  br label %dec_label_pc_e4d7

dec_label_pc_e4d7:                                ; preds = %dec_label_pc_e4b0.dec_label_pc_e4d7_crit_edge, %bb
  %v17_e4db = phi i32 [ %v17_e4db.pre, %dec_label_pc_e4b0.dec_label_pc_e4d7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_e4db

; uselistorder directives
  uselistorder label %dec_label_pc_e4d7, { 1, 0 }
}

define i32 @function_e4e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_e4e3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_e4f0:
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2a6d0_type* @global_var_2a6d0.3335 to i32), i32* %arg1, align 4
  %v1_e50a = add i32 %tmp98, 16
  ret i32 %v1_e50a
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_e540:
  %v4_e540 = sub i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v1_e545 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v4_e540)
  ret i32 %v1_e545
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_e550:
  ret i32 0
}

define i32 @function_e572() local_unnamed_addr {
dec_label_pc_e572:
  %eax.global-to-local = alloca i32, align 4
  %v0_e572 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e572
}

define i32 @_ZN5boost16thread_exceptionD1Ev(i32* %arg1) {
dec_label_pc_11060:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_11060.dec_label_pc_11087_crit_edge

dec_label_pc_11060.dec_label_pc_11087_crit_edge:  ; preds = %dec_label_pc_11060
  %v17_1108b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11087

bb:                                               ; preds = %dec_label_pc_11060
  br label %dec_label_pc_11087

dec_label_pc_11087:                               ; preds = %dec_label_pc_11060.dec_label_pc_11087_crit_edge, %bb
  %v17_1108b = phi i32 [ %v17_1108b.pre, %dec_label_pc_11060.dec_label_pc_11087_crit_edge ], [ undef, %bb ]
  ret i32 %v17_1108b

; uselistorder directives
  uselistorder label %dec_label_pc_11087, { 1, 0 }
}

define i32 @function_11093(i32 %arg1) local_unnamed_addr {
dec_label_pc_11093:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost8signals214no_slots_errorD1Ev(i32* %arg1) {
dec_label_pc_110a0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_110a0.dec_label_pc_110c7_crit_edge

dec_label_pc_110a0.dec_label_pc_110c7_crit_edge:  ; preds = %dec_label_pc_110a0
  %v17_110cb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_110c7

bb:                                               ; preds = %dec_label_pc_110a0
  br label %dec_label_pc_110c7

dec_label_pc_110c7:                               ; preds = %dec_label_pc_110a0.dec_label_pc_110c7_crit_edge, %bb
  %v17_110cb = phi i32 [ %v17_110cb.pre, %dec_label_pc_110a0.dec_label_pc_110c7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_110cb

; uselistorder directives
  uselistorder label %dec_label_pc_110c7, { 1, 0 }
}

define i32 @function_110d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_110d3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost12interprocess22interprocess_exceptionD1Ev(i32* %arg1) {
dec_label_pc_110e0:
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_39348_type* @global_var_39348.3338 to i32), i32* %arg1, align 4
  %v1_110fa = add i32 %tmp98, 12
  ret i32 %v1_110fa
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthD1Ev(i32* %arg1) {
dec_label_pc_11130:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_396e8_type* @global_var_396e8.3339 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_11130.dec_label_pc_11157_crit_edge

dec_label_pc_11130.dec_label_pc_11157_crit_edge:  ; preds = %dec_label_pc_11130
  %v17_1115b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11157

bb:                                               ; preds = %dec_label_pc_11130
  br label %dec_label_pc_11157

dec_label_pc_11157:                               ; preds = %dec_label_pc_11130.dec_label_pc_11157_crit_edge, %bb
  %v17_1115b = phi i32 [ %v17_1115b.pre, %dec_label_pc_11130.dec_label_pc_11157_crit_edge ], [ undef, %bb ]
  ret i32 %v17_1115b

; uselistorder directives
  uselistorder label %dec_label_pc_11157, { 1, 0 }
}

define i32 @function_11163(i32 %arg1) local_unnamed_addr {
dec_label_pc_11163:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost9gregorian8bad_yearD1Ev(i32* %arg1) {
dec_label_pc_11170:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_398a8_type* @global_var_398a8.3340 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_11170.dec_label_pc_11197_crit_edge

dec_label_pc_11170.dec_label_pc_11197_crit_edge:  ; preds = %dec_label_pc_11170
  %v17_1119b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11197

bb:                                               ; preds = %dec_label_pc_11170
  br label %dec_label_pc_11197

dec_label_pc_11197:                               ; preds = %dec_label_pc_11170.dec_label_pc_11197_crit_edge, %bb
  %v17_1119b = phi i32 [ %v17_1119b.pre, %dec_label_pc_11170.dec_label_pc_11197_crit_edge ], [ undef, %bb ]
  ret i32 %v17_1119b

; uselistorder directives
  uselistorder label %dec_label_pc_11197, { 1, 0 }
}

define i32 @function_111a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_111a3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost9gregorian9bad_monthD1Ev(i32* %arg1) {
dec_label_pc_111b0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_397c8_type* @global_var_397c8.3341 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_111b0.dec_label_pc_111d7_crit_edge

dec_label_pc_111b0.dec_label_pc_111d7_crit_edge:  ; preds = %dec_label_pc_111b0
  %v17_111db.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_111d7

bb:                                               ; preds = %dec_label_pc_111b0
  br label %dec_label_pc_111d7

dec_label_pc_111d7:                               ; preds = %dec_label_pc_111b0.dec_label_pc_111d7_crit_edge, %bb
  %v17_111db = phi i32 [ %v17_111db.pre, %dec_label_pc_111b0.dec_label_pc_111d7_crit_edge ], [ undef, %bb ]
  ret i32 %v17_111db

; uselistorder directives
  uselistorder label %dec_label_pc_111d7, { 1, 0 }
}

define i32 @function_111e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_111e3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvRKSsENS2_5list1INS_17reference_wrapperISsEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_111f0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39988_type* @global_var_39988.3342 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_111f0.dec_label_pc_11217_crit_edge

dec_label_pc_111f0.dec_label_pc_11217_crit_edge:  ; preds = %dec_label_pc_111f0
  %v17_1121b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11217

bb:                                               ; preds = %dec_label_pc_111f0
  br label %dec_label_pc_11217

dec_label_pc_11217:                               ; preds = %dec_label_pc_111f0.dec_label_pc_11217_crit_edge, %bb
  %v17_1121b = phi i32 [ %v17_1121b.pre, %dec_label_pc_111f0.dec_label_pc_11217_crit_edge ], [ undef, %bb ]
  ret i32 %v17_1121b

; uselistorder directives
  uselistorder label %dec_label_pc_11217, { 1, 0 }
}

define i32 @function_11223(i32 %arg1) local_unnamed_addr {
dec_label_pc_11223:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail11thread_dataIPFvvEED1Ev(i32* %arg1) {
dec_label_pc_11230:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39360_type* @global_var_39360.3343 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_11230.dec_label_pc_11257_crit_edge

dec_label_pc_11230.dec_label_pc_11257_crit_edge:  ; preds = %dec_label_pc_11230
  %v17_1125b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11257

bb:                                               ; preds = %dec_label_pc_11230
  br label %dec_label_pc_11257

dec_label_pc_11257:                               ; preds = %dec_label_pc_11230.dec_label_pc_11257_crit_edge, %bb
  %v17_1125b = phi i32 [ %v17_1125b.pre, %dec_label_pc_11230.dec_label_pc_11257_crit_edge ], [ undef, %bb ]
  ret i32 %v17_1125b

; uselistorder directives
  uselistorder label %dec_label_pc_11257, { 1, 0 }
}

define i32 @function_11263(i32 %arg1) local_unnamed_addr {
dec_label_pc_11263:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.34() local_unnamed_addr {
dec_label_pc_11268:
  ret i32 0
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.35() local_unnamed_addr {
dec_label_pc_1129c:
  ret i32 0
}

define i32 @_ZN5boost5mutex6unlockEv.part.37() local_unnamed_addr {
dec_label_pc_112d0:
  ret i32 0
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEED2Ev.part.38() local_unnamed_addr {
dec_label_pc_11304:
  ret i32 0
}

define i32 @_ZN13CImportingNowC2Ev.isra.117.part.118() local_unnamed_addr {
dec_label_pc_11338:
  ret i32 0
}

define i32 @_ZN13CImportingNowD2Ev.isra.119.part.120() local_unnamed_addr {
dec_label_pc_1136c:
  ret i32 0
}

define i32 @_ZN5boost11filesystem311path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE.part.289() local_unnamed_addr {
dec_label_pc_1139f:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv.isra.350.part.351() local_unnamed_addr {
dec_label_pc_113d2:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEptEv.isra.412.part.413() local_unnamed_addr {
dec_label_pc_11406:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv.isra.420.part.421() local_unnamed_addr {
dec_label_pc_1143a:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.549() local_unnamed_addr {
dec_label_pc_1146e:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSB_jNS_8functionIFbSB_SB_jEEEEENS1_5mutexEEEEptEv.isra.581.part.582() local_unnamed_addr {
dec_label_pc_114a2:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSB_EEEEENS1_5mutexEEEEptEv.isra.586.part.587() local_unnamed_addr {
dec_label_pc_114d6:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv.isra.588.part.589() local_unnamed_addr {
dec_label_pc_1150a:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.600() local_unnamed_addr {
dec_label_pc_1153e:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.607() local_unnamed_addr {
dec_label_pc_11572:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED2Ev.part.726() local_unnamed_addr {
dec_label_pc_115a6:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEED2Ev.part.804() local_unnamed_addr {
dec_label_pc_115da:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED2Ev.part.823() local_unnamed_addr {
dec_label_pc_1160e:
  ret i32 0
}

define i32 @_ZN11CDataStream5writeEPKci.part.857() local_unnamed_addr {
dec_label_pc_11642:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED2Ev.part.906() local_unnamed_addr {
dec_label_pc_11676:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_SD_SF_bSG_EEENSL_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEED2Ev.part.957() local_unnamed_addr {
dec_label_pc_116aa:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal3IvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S6_S7_EEENSC_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEED2Ev.part.968() local_unnamed_addr {
dec_label_pc_116de:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal1IbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS6_IFbRKNS0_10connectionExEEENS0_5mutexEED2Ev.part.992() local_unnamed_addr {
dec_label_pc_11712:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEED2Ev.part.1021() local_unnamed_addr {
dec_label_pc_11746:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal1IviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS6_IFvRKNS0_10connectionEiEEENS0_5mutexEED2Ev.part.1032() local_unnamed_addr {
dec_label_pc_1177a:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED2Ev.part.1043() local_unnamed_addr {
dec_label_pc_117ae:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EEC2Ev.part.1077() local_unnamed_addr {
dec_label_pc_117e2:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE.isra.1336.part.1337() local_unnamed_addr {
dec_label_pc_11816:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5clearEv.part.1338() local_unnamed_addr {
dec_label_pc_1184a:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EED2Ev.part.1340() local_unnamed_addr {
dec_label_pc_1187e:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_.part.1370() local_unnamed_addr {
dec_label_pc_118b2:
  ret i32 0
}

define i32 @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_.part.1733() local_unnamed_addr {
dec_label_pc_118e6:
  ret i32 0
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE8on_errorEttNS0_14violation_enumE.isra.450() local_unnamed_addr {
dec_label_pc_11919:
  %stack_var_-17 = alloca i32, align 4
  %v2_1192d = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_1192d
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE8on_errorEttNS0_14violation_enumE.isra.845() local_unnamed_addr {
dec_label_pc_119a1:
  %stack_var_-17 = alloca i32, align 4
  %v2_119b5 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_119b5
}

define i32 @_ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE8on_errorEttNS0_14violation_enumE.isra.846() local_unnamed_addr {
dec_label_pc_11a29:
  %stack_var_-17 = alloca i32, align 4
  %v2_11a3d = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_11a3d
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev() local_unnamed_addr {
dec_label_pc_11ac0:
  ret i32 0
}

define i32 @function_11adb() local_unnamed_addr {
dec_label_pc_11adb:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_11adb = add i32 %tmp91, -2094959168
  %v2_11adb = inttoptr i32 %v1_11adb to i32*
  %v3_11adb = load i32, i32* %v2_11adb, align 4
  %v4_11adb = add i32 %v3_11adb, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_11adb, i32* %v2_11adb, align 4
  %v0_11ae1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11ae1
}

define i32 @function_11aea(i32 %arg1) local_unnamed_addr {
dec_label_pc_11aea:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_11aea = load i32, i32* %ebp.global-to-local, align 4
  %v1_11aea = add i32 %v0_11aea, -1961069120
  %v2_11aea = inttoptr i32 %v1_11aea to i32*
  %v3_11aea = load i32, i32* %v2_11aea, align 4
  %v4_11aea = add i32 %v3_11aea, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_11aea, i32* %v2_11aea, align 4
  %v0_11af1 = load i32, i32* %eax.global-to-local, align 4
  %v11_11af1 = and i32 %v0_11af1, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_11af1, i32* %eax.global-to-local, align 4
  %v1_11af3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11af3 = xor i32 %v1_11af3, %v11_11af1
  %v3_11af3 = icmp eq i32 %v2_11af3, 0
  store i32 %v2_11af3, i32* %eax.global-to-local, align 4
  %v1_11afa = icmp eq i1 %v3_11af3, false
  br i1 %v1_11afa, label %dec_label_pc_11b06, label %dec_label_pc_11afc

dec_label_pc_11afc:                               ; preds = %dec_label_pc_11aea
  ret i32 %v2_11af3

dec_label_pc_11b06:                               ; preds = %dec_label_pc_11aea
  ret i32 %v2_11af3

; uselistorder directives
  uselistorder i32 %v2_11af3, { 1, 0, 2, 3 }
}

define i32 @function_11b01() local_unnamed_addr {
dec_label_pc_11b01:
  %v0_11b01 = call i32 @function_22dc4()
  ret i32 %v0_11b01
}

define i32 @_ZN5boost12interprocess9file_lockD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_11b30:
  %v2_11b44 = load i32, i32* %arg1, align 4
  %v10_11b46 = icmp eq i32 %v2_11b44, -1
  br i1 %v10_11b46, label %bb, label %dec_label_pc_11b4b

bb:                                               ; preds = %dec_label_pc_11b30
  %v0_11b38 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11b49 = call i32 @function_11b59(i32 %v0_11b38)
  br label %dec_label_pc_11b4b

dec_label_pc_11b4b:                               ; preds = %bb, %dec_label_pc_11b30
  %v0_11b4b = phi i32 [ %v2_11b49, %bb ], [ %v2_11b44, %dec_label_pc_11b30 ]
  ret i32 %v0_11b4b

; uselistorder directives
  uselistorder i32 %v2_11b44, { 1, 0 }
}

define i32 @function_11b59(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b59:
  %v1_11b5d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11b5d = xor i32 %v1_11b5d, %arg1
  %v3_11b5d = icmp eq i32 %v2_11b5d, 0
  %v1_11b64 = icmp eq i1 %v3_11b5d, false
  br i1 %v1_11b64, label %dec_label_pc_11b6b, label %dec_label_pc_11b66

dec_label_pc_11b66:                               ; preds = %dec_label_pc_11b59
  ret i32 %v2_11b5d

dec_label_pc_11b6b:                               ; preds = %dec_label_pc_11b59
  ret i32 %v2_11b5d

; uselistorder directives
  uselistorder i32 %v2_11b5d, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail11thread_dataIPFvvEED0Ev(i32* %arg1) {
dec_label_pc_11b70:
  store i32 ptrtoint (%vtable_39360_type* @global_var_39360.3343 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_39360_type* @global_var_39360.3343 to i32), { 1, 0 }
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvRKSsENS2_5list1INS_17reference_wrapperISsEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_11bc0:
  store i32 ptrtoint (%vtable_39988_type* @global_var_39988.3342 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_39988_type* @global_var_39988.3342 to i32), { 1, 0 }
}

define i32 @_ZN5boost9gregorian9bad_monthD0Ev(i32* %arg1) {
dec_label_pc_11c10:
  store i32 ptrtoint (%vtable_397c8_type* @global_var_397c8.3341 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost9gregorian8bad_yearD0Ev(i32* %arg1) {
dec_label_pc_11c60:
  store i32 ptrtoint (%vtable_398a8_type* @global_var_398a8.3340 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost9gregorian16bad_day_of_monthD0Ev(i32* %arg1) {
dec_label_pc_11cb0:
  store i32 ptrtoint (%vtable_396e8_type* @global_var_396e8.3339 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost8signals214no_slots_errorD0Ev(i32* %arg1) {
dec_label_pc_11d00:
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @function_11d21(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d21:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11d21 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11d21 = add i32 %v0_11d21, 1696343108
  %v2_11d21 = inttoptr i32 %v1_11d21 to i32*
  %v3_11d21 = load i32, i32* %v2_11d21, align 4
  %v4_11d21 = add i32 %v3_11d21, -1
  store i32 %v4_11d21, i32* %v2_11d21, align 4
  %v0_11d27 = load i32, i32* %eax.global-to-local, align 4
  %v1_11d27 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11d27 = xor i32 %v1_11d27, %v0_11d27
  %v3_11d27 = icmp eq i32 %v2_11d27, 0
  store i32 %v2_11d27, i32* %eax.global-to-local, align 4
  %v1_11d2d = icmp eq i1 %v3_11d27, false
  br i1 %v1_11d2d, label %dec_label_pc_11d3c, label %dec_label_pc_11d2f

dec_label_pc_11d2f:                               ; preds = %dec_label_pc_11d21
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d2f, %dec_label_pc_11d21
  ret i32 %v2_11d27
}

define i32 @_ZN5boost17bad_function_callD0Ev(i32* %arg1) {
dec_label_pc_11d50:
  store i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost16thread_exceptionD0Ev(i32* %arg1) {
dec_label_pc_11da0:
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost21thread_resource_errorD1Ev(i32* %arg1) {
dec_label_pc_11df0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_11df0.dec_label_pc_11e17_crit_edge

dec_label_pc_11df0.dec_label_pc_11e17_crit_edge:  ; preds = %dec_label_pc_11df0
  %v17_11e1b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11e17

bb:                                               ; preds = %dec_label_pc_11df0
  br label %dec_label_pc_11e17

dec_label_pc_11e17:                               ; preds = %dec_label_pc_11df0.dec_label_pc_11e17_crit_edge, %bb
  %v17_11e1b = phi i32 [ %v17_11e1b.pre, %dec_label_pc_11df0.dec_label_pc_11e17_crit_edge ], [ undef, %bb ]
  ret i32 %v17_11e1b

; uselistorder directives
  uselistorder label %dec_label_pc_11e17, { 1, 0 }
}

define i32 @function_11e23(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e23:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost10lock_errorD1Ev(i32* %arg1) {
dec_label_pc_11e30:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %arg1, align 4
  br i1 false, label %bb, label %dec_label_pc_11e30.dec_label_pc_11e57_crit_edge

dec_label_pc_11e30.dec_label_pc_11e57_crit_edge:  ; preds = %dec_label_pc_11e30
  %v17_11e5b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11e57

bb:                                               ; preds = %dec_label_pc_11e30
  br label %dec_label_pc_11e57

dec_label_pc_11e57:                               ; preds = %dec_label_pc_11e30.dec_label_pc_11e57_crit_edge, %bb
  %v17_11e5b = phi i32 [ %v17_11e5b.pre, %dec_label_pc_11e30.dec_label_pc_11e57_crit_edge ], [ undef, %bb ]
  ret i32 %v17_11e5b

; uselistorder directives
  uselistorder label %dec_label_pc_11e57, { 1, 0 }
}

define i32 @function_11e63(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e63:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32* %arg1) {
dec_label_pc_11e70:
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_2a6d0_type* @global_var_2a6d0.3335 to i32), i32* %arg1, align 4
  %v1_11e8a = add i32 %tmp98, 16
  ret i32 %v1_11e8a

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_2a6d0_type* @global_var_2a6d0.3335 to i32), { 1, 0 }
}

define i32 @_ZN5boost12interprocess22interprocess_exceptionD0Ev(i32* %arg1) {
dec_label_pc_11ec0:
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_39348_type* @global_var_39348.3338 to i32), i32* %arg1, align 4
  %v1_11eda = add i32 %tmp98, 12
  ret i32 %v1_11eda
}

define i32 @_ZN5boost21thread_resource_errorD0Ev(i32* %arg1) {
dec_label_pc_11f10:
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost10lock_errorD0Ev(i32* %arg1) {
dec_label_pc_11f60:
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11fb0:
  %v4_11fb0 = sub i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v1_11fb5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %v4_11fb0)
  ret i32 %v1_11fb5
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) {
dec_label_pc_11fc0:
  ret i32 0
}

define i32 @function_11fe0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11fe0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_11fe0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11fe0 = add i32 %v0_11fe0, 134268867
  %v2_11fe0 = inttoptr i32 %v1_11fe0 to i32*
  %v3_11fe0 = load i32, i32* %v2_11fe0, align 4
  %v4_11fe0 = add i32 %v3_11fe0, -1
  %v12_11fe0 = icmp eq i32 %v4_11fe0, 0
  store i1 %v12_11fe0, i1* %zf.global-to-local, align 1
  store i32 %v4_11fe0, i32* %v2_11fe0, align 4
  %v3_11fe6 = load i32, i32* %ebx.global-to-local, align 4
  %v4_11fe6 = inttoptr i32 %v3_11fe6 to i32*
  store i32 %arg1, i32* %v4_11fe6, align 4
  %v0_11fe8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11fe8 = add i32 %v0_11fe8, -1065024442
  %v2_11fe8 = inttoptr i32 %v1_11fe8 to i8*
  %v3_11fe8 = load i8, i8* %v2_11fe8, align 1
  %v4_11fe8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_11fe8 = trunc i32 %v4_11fe8 to i8
  %v6_11fe8 = add i8 %v5_11fe8, %v3_11fe8
  %v16_11fe8 = icmp eq i8 %v6_11fe8, 0
  store i1 %v16_11fe8, i1* %zf.global-to-local, align 1
  store i8 %v6_11fe8, i8* %v2_11fe8, align 1
  %v0_11fee = load i32, i32* %eax.global-to-local, align 4
  %v1_11fee = load i32, i32* %ebx.global-to-local, align 4
  %v2_11fee = add i32 %v1_11fee, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_11fee = inttoptr i32 %v2_11fee to i32*
  store i32 %v0_11fee, i32* %v3_11fee, align 4
  %v0_11ff1 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_11ff1, label %dec_label_pc_11ffb, label %dec_label_pc_11ff3

dec_label_pc_11ff3:                               ; preds = %dec_label_pc_11fe0
  br label %dec_label_pc_11ffb

dec_label_pc_11ffb:                               ; preds = %dec_label_pc_11ff3, %dec_label_pc_11fe0
  %v0_11ffb = load i32, i32* %esi.global-to-local, align 4
  %v1_11ffb = add i32 %v0_11ffb, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_11ffb = inttoptr i32 %v1_11ffb to i32*
  %v3_11ffb = load i32, i32* %v2_11ffb, align 4
  store i32 %v3_11ffb, i32* %eax.global-to-local, align 4
  %v1_12002 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12002 = icmp eq i32 %v1_12002, %arg2
  store i1 %v3_12002, i1* %zf.global-to-local, align 1
  %v0_12009 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12009 = inttoptr i32 %v0_12009 to i32*
  store i32 ptrtoint (%vtable_39d88_type* @global_var_39d88.3404 to i32), i32* %v1_12009, align 4
  %v0_1200f = load i32, i32* %eax.global-to-local, align 4
  %v1_1200f = load i32, i32* %ebx.global-to-local, align 4
  %v2_1200f = add i32 %v1_1200f, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1200f = inttoptr i32 %v2_1200f to i32*
  store i32 %v0_1200f, i32* %v3_1200f, align 4
  %v0_12012 = load i32, i32* %esi.global-to-local, align 4
  %v1_12012 = add i32 %v0_12012, 12
  %v2_12012 = inttoptr i32 %v1_12012 to i32*
  %v3_12012 = load i32, i32* %v2_12012, align 4
  store i32 %v3_12012, i32* %eax.global-to-local, align 4
  %v1_12015 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12015 = add i32 %v1_12015, 12
  %v3_12015 = inttoptr i32 %v2_12015 to i32*
  store i32 %v3_12012, i32* %v3_12015, align 4
  %v0_12018 = load i32, i32* %esi.global-to-local, align 4
  %v1_12018 = add i32 %v0_12018, 16
  %v2_12018 = inttoptr i32 %v1_12018 to i32*
  %v3_12018 = load i32, i32* %v2_12018, align 4
  store i32 %v3_12018, i32* %eax.global-to-local, align 4
  %v0_1201b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1201b = add i32 %v0_1201b, 20
  %v2_1201b = inttoptr i32 %v1_1201b to i32*
  store i32 ptrtoint (i32* @global_var_39da0.3405 to i32), i32* %v2_1201b, align 4
  %v0_12022 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12022 = add i32 %v0_12022, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_12022 = inttoptr i32 %v1_12022 to i32*
  store i32 ptrtoint (i32* @global_var_39db4.3406 to i32), i32* %v2_12022, align 4
  %v0_12029 = load i32, i32* %eax.global-to-local, align 4
  %v1_12029 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12029 = add i32 %v1_12029, 16
  %v3_12029 = inttoptr i32 %v2_12029 to i32*
  store i32 %v0_12029, i32* %v3_12029, align 4
  %v0_1202c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1202c = add i32 %v0_1202c, ptrtoint (i32* @global_var_18.3278 to i32)
  store i32 %v1_1202c, i32* %eax.global-to-local, align 4
  %v1_1202f = icmp eq i1 %v3_12002, false
  br i1 %v1_1202f, label %dec_label_pc_12037, label %dec_label_pc_12031

dec_label_pc_12031:                               ; preds = %dec_label_pc_11ffb
  %v0_12031 = load i32, i32* @esp, align 4
  %v10_12031 = icmp eq i32 %v0_12031, -36
  store i1 %v10_12031, i1* %zf.global-to-local, align 1
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v1_1202c

dec_label_pc_12037:                               ; preds = %dec_label_pc_11ffb
  ret i32 %v1_1202c

; uselistorder directives
  uselistorder i32 %v1_1202c, { 1, 0, 2 }
  uselistorder i1 %v3_12002, { 1, 0 }
  uselistorder i32 %v4_11fe0, { 1, 0 }
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12050:
  %v4_12050 = sub i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v1_12055 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv.3264(i32 %v4_12050)
  ret i32 %v1_12055
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv.3264(i32 %arg1) {
dec_label_pc_12060:
  ret i32 0
}

define i32 @function_12080(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12080:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_12080 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12080 = add i32 %v0_12080, -536819773
  %v2_12080 = inttoptr i32 %v1_12080 to i32*
  %v3_12080 = load i32, i32* %v2_12080, align 4
  %v4_12080 = sub i32 %v3_12080, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_12080, i32* %v2_12080, align 4
  %v0_12086 = load i32, i32* %eax.global-to-local, align 4
  %v1_12086 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_12086, i32* %ebx.global-to-local, align 4
  %v4_12087 = add i32 %v1_12086, %v0_12086
  store i32 %v4_12087, i32* %eax.global-to-local, align 4
  %v1_12089 = add i32 %v4_12087, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_12089 = inttoptr i32 %v1_12089 to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_12089, align 4
  %v0_12090 = load i32, i32* %esi.global-to-local, align 4
  %v1_12090 = add i32 %v0_12090, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12090 = inttoptr i32 %v1_12090 to i32*
  %v3_12090 = load i32, i32* %v2_12090, align 4
  store i32 %v3_12090, i32* %eax.global-to-local, align 4
  %v1_12093 = icmp eq i32 %v3_12090, 0
  %v1_12095 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12095 = add i32 %v1_12095, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_12095 = inttoptr i32 %v2_12095 to i32*
  store i32 %v3_12090, i32* %v3_12095, align 4
  br i1 %v1_12093, label %dec_label_pc_120a2, label %dec_label_pc_1209a

dec_label_pc_1209a:                               ; preds = %dec_label_pc_12080
  br label %dec_label_pc_120a2

dec_label_pc_120a2:                               ; preds = %dec_label_pc_1209a, %dec_label_pc_12080
  %v0_120a2 = load i32, i32* %esi.global-to-local, align 4
  %v1_120a2 = add i32 %v0_120a2, 12
  %v2_120a2 = inttoptr i32 %v1_120a2 to i32*
  %v3_120a2 = load i32, i32* %v2_120a2, align 4
  store i32 %v3_120a2, i32* %eax.global-to-local, align 4
  %v1_120a9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_120a9 = icmp eq i32 %v1_120a9, %arg1
  %v0_120b0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_120b0 = add i32 %v0_120b0, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_120b0 = inttoptr i32 %v1_120b0 to i32*
  store i32 ptrtoint (i32* @global_var_394a4.3408 to i32), i32* %v2_120b0, align 4
  %v0_120b7 = load i32, i32* %eax.global-to-local, align 4
  %v1_120b7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_120b7 = add i32 %v1_120b7, 12
  %v3_120b7 = inttoptr i32 %v2_120b7 to i32*
  store i32 %v0_120b7, i32* %v3_120b7, align 4
  %v0_120ba = load i32, i32* %esi.global-to-local, align 4
  %v1_120ba = add i32 %v0_120ba, 16
  %v2_120ba = inttoptr i32 %v1_120ba to i32*
  %v3_120ba = load i32, i32* %v2_120ba, align 4
  store i32 %v3_120ba, i32* %eax.global-to-local, align 4
  %v1_120bd = load i32, i32* %ebx.global-to-local, align 4
  %v2_120bd = add i32 %v1_120bd, 16
  %v3_120bd = inttoptr i32 %v2_120bd to i32*
  store i32 %v3_120ba, i32* %v3_120bd, align 4
  %v0_120c0 = load i32, i32* %esi.global-to-local, align 4
  %v1_120c0 = add i32 %v0_120c0, 20
  %v2_120c0 = inttoptr i32 %v1_120c0 to i32*
  %v3_120c0 = load i32, i32* %v2_120c0, align 4
  store i32 %v3_120c0, i32* %eax.global-to-local, align 4
  %v0_120c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_120c3 = inttoptr i32 %v0_120c3 to i32*
  store i32 ptrtoint (%vtable_39488_type* @global_var_39488.3409 to i32), i32* %v1_120c3, align 4
  %v0_120c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_120c9 = add i32 %v0_120c9, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_120c9 = inttoptr i32 %v1_120c9 to i32*
  store i32 ptrtoint (i32* @global_var_394b4.3410 to i32), i32* %v2_120c9, align 4
  %v0_120d0 = load i32, i32* %eax.global-to-local, align 4
  %v1_120d0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_120d0 = add i32 %v1_120d0, 20
  %v3_120d0 = inttoptr i32 %v2_120d0 to i32*
  store i32 %v0_120d0, i32* %v3_120d0, align 4
  %v0_120d3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_120d3 = add i32 %v0_120d3, ptrtoint (i32* @global_var_18.3278 to i32)
  store i32 %v1_120d3, i32* %eax.global-to-local, align 4
  %v1_120d6 = icmp eq i1 %v3_120a9, false
  br i1 %v1_120d6, label %dec_label_pc_120de, label %dec_label_pc_120d8

dec_label_pc_120d8:                               ; preds = %dec_label_pc_120a2
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_120d3

dec_label_pc_120de:                               ; preds = %dec_label_pc_120a2
  ret i32 %v1_120d3

; uselistorder directives
  uselistorder i32 %v1_120d3, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE5cloneEv.3264, { 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12100:
  %v4_12100 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_12105 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %v4_12100)
  ret i32 %v1_12105
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_12110:
  ret i32 0
}

define i32 @function_12130(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12130:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_12130 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12130 = add i32 %v0_12130, 71732163
  %v2_12130 = inttoptr i32 %v1_12130 to i32*
  %v3_12130 = load i32, i32* %v2_12130, align 4
  %v4_12130 = add i32 %v3_12130, -1
  store i32 %v4_12130, i32* %v2_12130, align 4
  %v0_12136 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12136 = inttoptr i32 %v0_12136 to i32*
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.3411 to i32), i32* %v1_12136, align 4
  %v0_1213c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1213c = add i32 %v0_1213c, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1213c = inttoptr i32 %v1_1213c to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_1213c, align 4
  %v0_12143 = load i32, i32* %eax.global-to-local, align 4
  %v1_12143 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12143 = add i32 %v1_12143, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_12143 = inttoptr i32 %v2_12143 to i32*
  store i32 %v0_12143, i32* %v3_12143, align 4
  %v0_12146 = load i32, i32* %esi.global-to-local, align 4
  %v1_12146 = add i32 %v0_12146, 12
  %v2_12146 = inttoptr i32 %v1_12146 to i32*
  %v3_12146 = load i32, i32* %v2_12146, align 4
  store i32 %v3_12146, i32* %eax.global-to-local, align 4
  %v1_12149 = icmp eq i32 %v3_12146, 0
  %v1_1214b = load i32, i32* %ebx.global-to-local, align 4
  %v2_1214b = add i32 %v1_1214b, 12
  %v3_1214b = inttoptr i32 %v2_1214b to i32*
  store i32 %v3_12146, i32* %v3_1214b, align 4
  br i1 %v1_12149, label %dec_label_pc_12158, label %dec_label_pc_12150

dec_label_pc_12150:                               ; preds = %dec_label_pc_12130
  br label %dec_label_pc_12158

dec_label_pc_12158:                               ; preds = %dec_label_pc_12150, %dec_label_pc_12130
  %v0_12158 = load i32, i32* %esi.global-to-local, align 4
  %v1_12158 = add i32 %v0_12158, 16
  %v2_12158 = inttoptr i32 %v1_12158 to i32*
  %v3_12158 = load i32, i32* %v2_12158, align 4
  store i32 %v3_12158, i32* %eax.global-to-local, align 4
  %v1_1215f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1215f = icmp eq i32 %v1_1215f, %arg1
  %v0_12166 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12166 = add i32 %v0_12166, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12166 = inttoptr i32 %v1_12166 to i32*
  store i32 ptrtoint (i32* @global_var_38f84.3412 to i32), i32* %v2_12166, align 4
  %v0_1216d = load i32, i32* %eax.global-to-local, align 4
  %v1_1216d = load i32, i32* %ebx.global-to-local, align 4
  %v2_1216d = add i32 %v1_1216d, 16
  %v3_1216d = inttoptr i32 %v2_1216d to i32*
  store i32 %v0_1216d, i32* %v3_1216d, align 4
  %v0_12170 = load i32, i32* %esi.global-to-local, align 4
  %v1_12170 = add i32 %v0_12170, 20
  %v2_12170 = inttoptr i32 %v1_12170 to i32*
  %v3_12170 = load i32, i32* %v2_12170, align 4
  store i32 %v3_12170, i32* %eax.global-to-local, align 4
  %v1_12173 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12173 = add i32 %v1_12173, 20
  %v3_12173 = inttoptr i32 %v2_12173 to i32*
  store i32 %v3_12170, i32* %v3_12173, align 4
  %v0_12176 = load i32, i32* %esi.global-to-local, align 4
  %v1_12176 = add i32 %v0_12176, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_12176 = inttoptr i32 %v1_12176 to i32*
  %v3_12176 = load i32, i32* %v2_12176, align 4
  store i32 %v3_12176, i32* %eax.global-to-local, align 4
  %v0_12179 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12179 = inttoptr i32 %v0_12179 to i32*
  store i32 ptrtoint (%vtable_38f68_type* @global_var_38f68.3413 to i32), i32* %v1_12179, align 4
  %v0_1217f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1217f = add i32 %v0_1217f, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_1217f = inttoptr i32 %v1_1217f to i32*
  store i32 ptrtoint (i32* @global_var_38f94.3414 to i32), i32* %v2_1217f, align 4
  %v0_12186 = load i32, i32* %eax.global-to-local, align 4
  %v1_12186 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12186 = add i32 %v1_12186, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_12186 = inttoptr i32 %v2_12186 to i32*
  store i32 %v0_12186, i32* %v3_12186, align 4
  %v0_12189 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12189 = add i32 %v0_12189, ptrtoint (i32* @global_var_1c.3271 to i32)
  store i32 %v1_12189, i32* %eax.global-to-local, align 4
  %v1_1218c = icmp eq i1 %v3_1215f, false
  br i1 %v1_1218c, label %dec_label_pc_12194, label %dec_label_pc_1218e

dec_label_pc_1218e:                               ; preds = %dec_label_pc_12158
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_12189

dec_label_pc_12194:                               ; preds = %dec_label_pc_12158
  ret i32 %v1_12189

; uselistorder directives
  uselistorder i32 %v1_12189, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_121c0:
  %v4_121c0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_121c5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %v4_121c0)
  ret i32 %v1_121c5
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_121d0:
  ret i32 0
}

define i32 @function_121f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_121f0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_121f0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_121f0 = add i32 %v0_121f0, 71732163
  %v2_121f0 = inttoptr i32 %v1_121f0 to i32*
  %v3_121f0 = load i32, i32* %v2_121f0, align 4
  %v4_121f0 = add i32 %v3_121f0, -1
  store i32 %v4_121f0, i32* %v2_121f0, align 4
  %v0_121f6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_121f6 = inttoptr i32 %v0_121f6 to i32*
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %v1_121f6, align 4
  %v0_121fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_121fc = add i32 %v0_121fc, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_121fc = inttoptr i32 %v1_121fc to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_121fc, align 4
  %v0_12203 = load i32, i32* %eax.global-to-local, align 4
  %v1_12203 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12203 = add i32 %v1_12203, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_12203 = inttoptr i32 %v2_12203 to i32*
  store i32 %v0_12203, i32* %v3_12203, align 4
  %v0_12206 = load i32, i32* %esi.global-to-local, align 4
  %v1_12206 = add i32 %v0_12206, 12
  %v2_12206 = inttoptr i32 %v1_12206 to i32*
  %v3_12206 = load i32, i32* %v2_12206, align 4
  store i32 %v3_12206, i32* %eax.global-to-local, align 4
  %v1_12209 = icmp eq i32 %v3_12206, 0
  %v1_1220b = load i32, i32* %ebx.global-to-local, align 4
  %v2_1220b = add i32 %v1_1220b, 12
  %v3_1220b = inttoptr i32 %v2_1220b to i32*
  store i32 %v3_12206, i32* %v3_1220b, align 4
  br i1 %v1_12209, label %dec_label_pc_12218, label %dec_label_pc_12210

dec_label_pc_12210:                               ; preds = %dec_label_pc_121f0
  br label %dec_label_pc_12218

dec_label_pc_12218:                               ; preds = %dec_label_pc_12210, %dec_label_pc_121f0
  %v0_12218 = load i32, i32* %esi.global-to-local, align 4
  %v1_12218 = add i32 %v0_12218, 16
  %v2_12218 = inttoptr i32 %v1_12218 to i32*
  %v3_12218 = load i32, i32* %v2_12218, align 4
  store i32 %v3_12218, i32* %eax.global-to-local, align 4
  %v1_1221f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1221f = icmp eq i32 %v1_1221f, %arg1
  %v0_12226 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12226 = add i32 %v0_12226, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12226 = inttoptr i32 %v1_12226 to i32*
  store i32 ptrtoint (i32* @global_var_39064.3416 to i32), i32* %v2_12226, align 4
  %v0_1222d = load i32, i32* %eax.global-to-local, align 4
  %v1_1222d = load i32, i32* %ebx.global-to-local, align 4
  %v2_1222d = add i32 %v1_1222d, 16
  %v3_1222d = inttoptr i32 %v2_1222d to i32*
  store i32 %v0_1222d, i32* %v3_1222d, align 4
  %v0_12230 = load i32, i32* %esi.global-to-local, align 4
  %v1_12230 = add i32 %v0_12230, 20
  %v2_12230 = inttoptr i32 %v1_12230 to i32*
  %v3_12230 = load i32, i32* %v2_12230, align 4
  store i32 %v3_12230, i32* %eax.global-to-local, align 4
  %v1_12233 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12233 = add i32 %v1_12233, 20
  %v3_12233 = inttoptr i32 %v2_12233 to i32*
  store i32 %v3_12230, i32* %v3_12233, align 4
  %v0_12236 = load i32, i32* %esi.global-to-local, align 4
  %v1_12236 = add i32 %v0_12236, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_12236 = inttoptr i32 %v1_12236 to i32*
  %v3_12236 = load i32, i32* %v2_12236, align 4
  store i32 %v3_12236, i32* %eax.global-to-local, align 4
  %v0_12239 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12239 = inttoptr i32 %v0_12239 to i32*
  store i32 ptrtoint (%vtable_39048_type* @global_var_39048.3417 to i32), i32* %v1_12239, align 4
  %v0_1223f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1223f = add i32 %v0_1223f, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_1223f = inttoptr i32 %v1_1223f to i32*
  store i32 ptrtoint (i32* @global_var_39074.3418 to i32), i32* %v2_1223f, align 4
  %v0_12246 = load i32, i32* %eax.global-to-local, align 4
  %v1_12246 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12246 = add i32 %v1_12246, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_12246 = inttoptr i32 %v2_12246 to i32*
  store i32 %v0_12246, i32* %v3_12246, align 4
  %v0_12249 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12249 = add i32 %v0_12249, ptrtoint (i32* @global_var_1c.3271 to i32)
  store i32 %v1_12249, i32* %eax.global-to-local, align 4
  %v1_1224c = icmp eq i1 %v3_1221f, false
  br i1 %v1_1224c, label %dec_label_pc_12254, label %dec_label_pc_1224e

dec_label_pc_1224e:                               ; preds = %dec_label_pc_12218
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_12249

dec_label_pc_12254:                               ; preds = %dec_label_pc_12218
  store i32 %v1_12249, i32* %esi.global-to-local, align 4
  ret i32 %v1_12249

; uselistorder directives
  uselistorder i32 %v1_12249, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 5, 4 }
}

define i32 @_ZNK5boost6system12system_error4whatEv(i32 %arg1) {
dec_label_pc_12280:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_12283 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v0_1228b = load i32, i32* %ebx.global-to-local, align 4
  %v0_1229b = load i32, i32* %edi.global-to-local, align 4
  %v1_1229f = add i32 %arg1, 16
  %v2_1229f = inttoptr i32 %v1_1229f to i32*
  %v3_1229f = load i32, i32* %v2_1229f, align 4
  store i32 %v3_1229f, i32* %ebx.global-to-local, align 4
  %v1_122a2 = add i32 %v3_1229f, -12
  %v2_122a2 = inttoptr i32 %v1_122a2 to i32*
  %v3_122a2 = load i32, i32* %v2_122a2, align 4
  %v1_122a5 = icmp eq i32 %v3_122a2, 0
  br i1 %v1_122a5, label %dec_label_pc_122d0, label %dec_label_pc_122a9

dec_label_pc_122a9:                               ; preds = %dec_label_pc_12280
  store i32 %v3_1229f, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_122bc

bb:                                               ; preds = %dec_label_pc_122a9
  br label %dec_label_pc_122bc

dec_label_pc_122bc:                               ; preds = %bb, %dec_label_pc_122a9
  store i32 %v0_1228b, i32* %ebx.global-to-local, align 4
  store i32 %v0_12283, i32* %esi.global-to-local, align 4
  store i32 %v0_1229b, i32* %edi.global-to-local, align 4
  ret i32 %v3_1229f

dec_label_pc_122d0:                               ; preds = %dec_label_pc_12280
  store i32 %v1_1229f, i32* %edi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_122dd() local_unnamed_addr {
dec_label_pc_122dd:
  %eax.global-to-local = alloca i32, align 4
  %v0_122dd = load i32, i32* %eax.global-to-local, align 4
  %v11_122dd = and i32 %v0_122dd, or (i32 zext (i8 ptrtoint (i8* @global_var_89.3286 to i8) to i32), i32 -256)
  store i32 %v11_122dd, i32* %eax.global-to-local, align 4
  ret i32 %v11_122dd

; uselistorder directives
  uselistorder i32 %v11_122dd, { 1, 0 }
}

define i32 @function_122f4() local_unnamed_addr {
dec_label_pc_122f4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %v0_122f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_122f4 = add i32 %v0_122f4, 1082855494
  %v2_122f4 = inttoptr i32 %v1_122f4 to i32*
  %v3_122f4 = load i32, i32* %v2_122f4, align 4
  %v4_122f4 = add i32 %v3_122f4, -1
  store i32 %v4_122f4, i32* %v2_122f4, align 4
  %v0_122fb = load i32, i32* %eax.global-to-local, align 4
  %v1_122fb = icmp eq i32 %v0_122fb, 0
  %v1_122fd = icmp eq i1 %v1_122fb, false
  br i1 %v1_122fd, label %dec_label_pc_12338, label %dec_label_pc_122ff

dec_label_pc_122ff:                               ; preds = %dec_label_pc_122f4
  %v0_122ff = load i32, i32* %esi.global-to-local, align 4
  %v1_122ff = add i32 %v0_122ff, 12
  %v2_122ff = inttoptr i32 %v1_122ff to i32*
  %v3_122ff = load i32, i32* %v2_122ff, align 4
  store i32 %v3_122ff, i32* %eax.global-to-local, align 4
  %v2_12302 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_12302, i32* %ebx.global-to-local, align 4
  %v1_12330 = add i32 %v0_122ff, 16
  %v2_12330 = inttoptr i32 %v1_12330 to i32*
  %v3_12330 = load i32, i32* %v2_12330, align 4
  store i32 %v3_12330, i32* %ebx.global-to-local, align 4
  ret i32 %v3_122ff

dec_label_pc_12338:                               ; preds = %dec_label_pc_122f4
  ret i32 %v0_122fb
}

define i32 @function_12350() local_unnamed_addr {
dec_label_pc_12350:
  %eax.global-to-local = alloca i32, align 4
  %v0_12350 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12350
}

define i32 @function_12352(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12352:
  %v0_12357 = load i32, i32* @eax, align 4
  ret i32 %v0_12357
}

define i32 @function_12363() local_unnamed_addr {
dec_label_pc_12363:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12374() local_unnamed_addr {
dec_label_pc_12374:
  %eax.global-to-local = alloca i32, align 4
  %v0_12374 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12374
}

define i32 @function_1237a() local_unnamed_addr {
dec_label_pc_1237a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1237a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1237a
}

define i32 @function_12380() local_unnamed_addr {
dec_label_pc_12380:
  %v0_12380 = call i32 @function_12363()
  ret i32 %v0_12380
}

define i32 @function_12383() local_unnamed_addr {
dec_label_pc_12383:
  %eax.global-to-local = alloca i32, align 4
  %v0_12383 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12383
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_123a0:
  %v4_123a0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_123a5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %v4_123a0)
  ret i32 %v1_123a5
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv(i32 %arg1) {
dec_label_pc_123b0:
  ret i32 0
}

define i32 @function_123d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_123d0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_123d0 = load i32, i32* %edi.global-to-local, align 4
  %v1_123d0 = add i32 %v0_123d0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_123d0, i32* %edi.global-to-local, align 4
  %v2_123d2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_123d2 = load i32, i32* %ecx.global-to-local, align 4
  %v4_123d2 = trunc i32 %v3_123d2 to i8
  %v5_123d2 = add i8 %v4_123d2, %v2_123d2
  %v20_123d2 = load i32, i32* %eax.global-to-local, align 4
  %v21_123d2 = inttoptr i32 %v20_123d2 to i8*
  store i8 %v5_123d2, i8* %v21_123d2, align 1
  %v2_123d4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_123d4 = load i32, i32* %eax.global-to-local, align 4
  %v4_123d4 = trunc i32 %v3_123d4 to i8
  %v5_123d4 = add i8 %v4_123d4, %v2_123d4
  %v21_123d4 = inttoptr i32 %v3_123d4 to i8*
  store i8 %v5_123d4, i8* %v21_123d4, align 1
  %v0_123d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_123d6 = add i32 %v0_123d6, 71732675
  %v2_123d6 = inttoptr i32 %v1_123d6 to i8*
  %v3_123d6 = load i8, i8* %v2_123d6, align 1
  %v5_123d6 = trunc i32 %v0_123d6 to i8
  %v6_123d6 = add i8 %v3_123d6, %v5_123d6
  store i8 %v6_123d6, i8* %v2_123d6, align 1
  %v0_123e0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_123e0 = add i32 %v0_123e0, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_123e0, i32* %eax.global-to-local, align 4
  %v0_123eb = load i32, i32* %esi.global-to-local, align 4
  %v1_123eb = add i32 %v0_123eb, 12
  %v2_123eb = inttoptr i32 %v1_123eb to i32*
  %v3_123eb = load i32, i32* %v2_123eb, align 4
  store i32 %v3_123eb, i32* %eax.global-to-local, align 4
  %v1_123ee = add i32 %v0_123e0, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_123ee = inttoptr i32 %v1_123ee to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_123ee, align 4
  %v1_123f5 = icmp eq i32 %v3_123eb, 0
  %v1_123f7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_123f7 = add i32 %v1_123f7, 12
  %v3_123f7 = inttoptr i32 %v2_123f7 to i32*
  store i32 %v3_123eb, i32* %v3_123f7, align 4
  br i1 %v1_123f5, label %dec_label_pc_12404, label %dec_label_pc_123fc

dec_label_pc_123fc:                               ; preds = %dec_label_pc_123d0
  br label %dec_label_pc_12404

dec_label_pc_12404:                               ; preds = %dec_label_pc_123fc, %dec_label_pc_123d0
  %v0_12404 = load i32, i32* %esi.global-to-local, align 4
  %v1_12404 = add i32 %v0_12404, 16
  %v2_12404 = inttoptr i32 %v1_12404 to i32*
  %v3_12404 = load i32, i32* %v2_12404, align 4
  store i32 %v3_12404, i32* %eax.global-to-local, align 4
  %v1_1240b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1240b = icmp eq i32 %v1_1240b, %arg1
  %v0_12412 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12412 = add i32 %v0_12412, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12412 = inttoptr i32 %v1_12412 to i32*
  store i32 ptrtoint (i32* @global_var_39684.3420 to i32), i32* %v2_12412, align 4
  %v0_12419 = load i32, i32* %eax.global-to-local, align 4
  %v1_12419 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12419 = add i32 %v1_12419, 16
  %v3_12419 = inttoptr i32 %v2_12419 to i32*
  store i32 %v0_12419, i32* %v3_12419, align 4
  %v0_1241c = load i32, i32* %esi.global-to-local, align 4
  %v1_1241c = add i32 %v0_1241c, 20
  %v2_1241c = inttoptr i32 %v1_1241c to i32*
  %v3_1241c = load i32, i32* %v2_1241c, align 4
  store i32 %v3_1241c, i32* %eax.global-to-local, align 4
  %v1_1241f = load i32, i32* %ebx.global-to-local, align 4
  %v2_1241f = add i32 %v1_1241f, 20
  %v3_1241f = inttoptr i32 %v2_1241f to i32*
  store i32 %v3_1241c, i32* %v3_1241f, align 4
  %v0_12422 = load i32, i32* %esi.global-to-local, align 4
  %v1_12422 = add i32 %v0_12422, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_12422 = inttoptr i32 %v1_12422 to i32*
  %v3_12422 = load i32, i32* %v2_12422, align 4
  store i32 %v3_12422, i32* %eax.global-to-local, align 4
  %v0_12425 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12425 = inttoptr i32 %v0_12425 to i32*
  store i32 ptrtoint (%vtable_39668_type* @global_var_39668.3421 to i32), i32* %v1_12425, align 4
  %v0_1242b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1242b = add i32 %v0_1242b, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_1242b = inttoptr i32 %v1_1242b to i32*
  store i32 ptrtoint (i32* @global_var_39694.3422 to i32), i32* %v2_1242b, align 4
  %v0_12432 = load i32, i32* %eax.global-to-local, align 4
  %v1_12432 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12432 = add i32 %v1_12432, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_12432 = inttoptr i32 %v2_12432 to i32*
  store i32 %v0_12432, i32* %v3_12432, align 4
  %v0_12435 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12435 = add i32 %v0_12435, ptrtoint (i32* @global_var_1c.3271 to i32)
  store i32 %v1_12435, i32* %eax.global-to-local, align 4
  %v1_12438 = icmp eq i1 %v3_1240b, false
  br i1 %v1_12438, label %dec_label_pc_12440, label %dec_label_pc_1243a

dec_label_pc_1243a:                               ; preds = %dec_label_pc_12404
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_12435

dec_label_pc_12440:                               ; preds = %dec_label_pc_12404
  ret i32 %v1_12435

; uselistorder directives
  uselistorder i32 %v1_12435, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv, { 1, 0 }
}

define i32 @function_1244f() local_unnamed_addr {
dec_label_pc_1244f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12469() local_unnamed_addr {
dec_label_pc_12469:
  %v0_12469 = call i32 @function_1244f()
  ret i32 %v0_12469
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12470:
  %v4_12470 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_12475 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %v4_12470)
  ret i32 %v1_12475
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %arg1) {
dec_label_pc_12480:
  ret i32 0
}

define i32 @function_124a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_124a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_124a0 = load i32, i32* %edi.global-to-local, align 4
  %v1_124a0 = add i32 %v0_124a0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_124a0, i32* %edi.global-to-local, align 4
  %v2_124a2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_124a2 = load i32, i32* %ecx.global-to-local, align 4
  %v4_124a2 = trunc i32 %v3_124a2 to i8
  %v5_124a2 = add i8 %v4_124a2, %v2_124a2
  %v20_124a2 = load i32, i32* %eax.global-to-local, align 4
  %v21_124a2 = inttoptr i32 %v20_124a2 to i8*
  store i8 %v5_124a2, i8* %v21_124a2, align 1
  %v2_124a4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_124a4 = load i32, i32* %eax.global-to-local, align 4
  %v4_124a4 = trunc i32 %v3_124a4 to i8
  %v5_124a4 = add i8 %v4_124a4, %v2_124a4
  %v21_124a4 = inttoptr i32 %v3_124a4 to i8*
  store i8 %v5_124a4, i8* %v21_124a4, align 1
  %v0_124a6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_124a6 = add i32 %v0_124a6, 71732675
  %v2_124a6 = inttoptr i32 %v1_124a6 to i8*
  %v3_124a6 = load i8, i8* %v2_124a6, align 1
  %v5_124a6 = trunc i32 %v0_124a6 to i8
  %v6_124a6 = add i8 %v3_124a6, %v5_124a6
  store i8 %v6_124a6, i8* %v2_124a6, align 1
  %v0_124b0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_124b0 = add i32 %v0_124b0, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_124b0, i32* %eax.global-to-local, align 4
  %v0_124bb = load i32, i32* %esi.global-to-local, align 4
  %v1_124bb = add i32 %v0_124bb, 12
  %v2_124bb = inttoptr i32 %v1_124bb to i32*
  %v3_124bb = load i32, i32* %v2_124bb, align 4
  store i32 %v3_124bb, i32* %eax.global-to-local, align 4
  %v1_124be = inttoptr i32 %v0_124b0 to i32*
  store i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), i32* %v1_124be, align 4
  %v0_124c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_124c4 = add i32 %v0_124c4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_124c4 = inttoptr i32 %v1_124c4 to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_124c4, align 4
  %v1_124cb = icmp eq i32 %v3_124bb, 0
  %v1_124cd = load i32, i32* %ebx.global-to-local, align 4
  %v2_124cd = add i32 %v1_124cd, 12
  %v3_124cd = inttoptr i32 %v2_124cd to i32*
  store i32 %v3_124bb, i32* %v3_124cd, align 4
  br i1 %v1_124cb, label %dec_label_pc_124da, label %dec_label_pc_124d2

dec_label_pc_124d2:                               ; preds = %dec_label_pc_124a0
  br label %dec_label_pc_124da

dec_label_pc_124da:                               ; preds = %dec_label_pc_124d2, %dec_label_pc_124a0
  %v0_124da = load i32, i32* %esi.global-to-local, align 4
  %v1_124da = add i32 %v0_124da, 16
  %v2_124da = inttoptr i32 %v1_124da to i32*
  %v3_124da = load i32, i32* %v2_124da, align 4
  store i32 %v3_124da, i32* %eax.global-to-local, align 4
  %v1_124e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_124e1 = icmp eq i32 %v1_124e1, %arg1
  %v0_124e8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_124e8 = add i32 %v0_124e8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_124e8 = inttoptr i32 %v1_124e8 to i32*
  store i32 ptrtoint (i32* @global_var_39164.3423 to i32), i32* %v2_124e8, align 4
  %v0_124ef = load i32, i32* %eax.global-to-local, align 4
  %v1_124ef = load i32, i32* %ebx.global-to-local, align 4
  %v2_124ef = add i32 %v1_124ef, 16
  %v3_124ef = inttoptr i32 %v2_124ef to i32*
  store i32 %v0_124ef, i32* %v3_124ef, align 4
  %v0_124f2 = load i32, i32* %esi.global-to-local, align 4
  %v1_124f2 = add i32 %v0_124f2, 20
  %v2_124f2 = inttoptr i32 %v1_124f2 to i32*
  %v3_124f2 = load i32, i32* %v2_124f2, align 4
  store i32 %v3_124f2, i32* %eax.global-to-local, align 4
  %v1_124f5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_124f5 = add i32 %v1_124f5, 20
  %v3_124f5 = inttoptr i32 %v2_124f5 to i32*
  store i32 %v3_124f2, i32* %v3_124f5, align 4
  %v0_124f8 = load i32, i32* %esi.global-to-local, align 4
  %v1_124f8 = add i32 %v0_124f8, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_124f8 = inttoptr i32 %v1_124f8 to i32*
  %v3_124f8 = load i32, i32* %v2_124f8, align 4
  store i32 %v3_124f8, i32* %eax.global-to-local, align 4
  %v0_124fb = load i32, i32* %ebx.global-to-local, align 4
  %v1_124fb = inttoptr i32 %v0_124fb to i32*
  store i32 ptrtoint (%vtable_39148_type* @global_var_39148.3424 to i32), i32* %v1_124fb, align 4
  %v0_12501 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12501 = add i32 %v0_12501, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_12501 = inttoptr i32 %v1_12501 to i32*
  store i32 ptrtoint (i32* @global_var_39174.3425 to i32), i32* %v2_12501, align 4
  %v0_12508 = load i32, i32* %eax.global-to-local, align 4
  %v1_12508 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12508 = add i32 %v1_12508, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_12508 = inttoptr i32 %v2_12508 to i32*
  store i32 %v0_12508, i32* %v3_12508, align 4
  %v0_1250b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1250b = add i32 %v0_1250b, ptrtoint (i32* @global_var_1c.3271 to i32)
  store i32 %v1_1250b, i32* %eax.global-to-local, align 4
  %v1_1250e = icmp eq i1 %v3_124e1, false
  br i1 %v1_1250e, label %dec_label_pc_12516, label %dec_label_pc_12510

dec_label_pc_12510:                               ; preds = %dec_label_pc_124da
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_1250b

dec_label_pc_12516:                               ; preds = %dec_label_pc_124da
  store i32 %v1_1250b, i32* %esi.global-to-local, align 4
  ret i32 %v1_1250b

; uselistorder directives
  uselistorder i32 %v1_1250b, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv, { 1, 0 }
}

define i32 @function_1253f() local_unnamed_addr {
dec_label_pc_1253f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1253f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1253f
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12550:
  %v4_12550 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_12555 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %v4_12550)
  ret i32 %v1_12555
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv(i32 %arg1) {
dec_label_pc_12560:
  ret i32 0
}

define i32 @function_1259a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1259a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_1259a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1259a = add i32 %v0_1259a, 63376454
  %v2_1259a = inttoptr i32 %v1_1259a to i32*
  %v3_1259a = load i32, i32* %v2_1259a, align 4
  %v4_1259a = add i32 %v3_1259a, -1
  %v12_1259a = icmp eq i32 %v4_1259a, 0
  store i1 %v12_1259a, i1* %zf.global-to-local, align 1
  store i32 %v4_1259a, i32* %v2_1259a, align 4
  %v0_125a0 = call i32 @unknown_c701293b()
  store i32 %v0_125a0, i32* %eax.global-to-local, align 4
  %v0_125a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_125a5 = add i32 %v0_125a5, ptrtoint (i8** @global_var_1.3274 to i32)
  %v9_125a5 = icmp eq i32 %v1_125a5, 0
  store i1 %v9_125a5, i1* %zf.global-to-local, align 1
  store i32 %v1_125a5, i32* %ebx.global-to-local, align 4
  %v1_125a6 = inttoptr i32 %v0_125a0 to i8*
  %v2_125a6 = load i8, i8* %v1_125a6, align 1
  %v3_125a6 = load i32, i32* %ecx.global-to-local, align 4
  %v4_125a6 = trunc i32 %v3_125a6 to i8
  %v5_125a6 = or i8 %v4_125a6, %v2_125a6
  %v6_125a6 = icmp eq i8 %v5_125a6, 0
  store i1 %v6_125a6, i1* %zf.global-to-local, align 1
  store i8 %v5_125a6, i8* %v1_125a6, align 1
  %v3_125a8 = load i32, i32* %ebx.global-to-local, align 4
  %v4_125a8 = inttoptr i32 %v3_125a8 to i32*
  store i32 %arg1, i32* %v4_125a8, align 4
  %v0_125aa = load i32, i32* %ebp.global-to-local, align 4
  %v1_125aa = add i32 %v0_125aa, 205752768
  %v2_125aa = inttoptr i32 %v1_125aa to i8*
  %v3_125aa = load i8, i8* %v2_125aa, align 1
  %v4_125aa = load i32, i32* %eax.global-to-local, align 4
  %v5_125aa = trunc i32 %v4_125aa to i8
  %v6_125aa = add i8 %v5_125aa, %v3_125aa
  %v16_125aa = icmp eq i8 %v6_125aa, 0
  store i1 %v16_125aa, i1* %zf.global-to-local, align 1
  store i8 %v6_125aa, i8* %v2_125aa, align 1
  %v0_125b0 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_125b0, label %dec_label_pc_125ba, label %dec_label_pc_125b2

dec_label_pc_125b2:                               ; preds = %dec_label_pc_1259a
  br label %dec_label_pc_125ba

dec_label_pc_125ba:                               ; preds = %dec_label_pc_125b2, %dec_label_pc_1259a
  %v0_125ba = load i32, i32* %esi.global-to-local, align 4
  %v1_125ba = add i32 %v0_125ba, 16
  %v2_125ba = inttoptr i32 %v1_125ba to i32*
  %v3_125ba = load i32, i32* %v2_125ba, align 4
  store i32 %v3_125ba, i32* %eax.global-to-local, align 4
  %v1_125c1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_125c1 = icmp eq i32 %v1_125c1, %arg2
  store i1 %v3_125c1, i1* %zf.global-to-local, align 1
  %v0_125c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_125c8 = add i32 %v0_125c8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_125c8 = inttoptr i32 %v1_125c8 to i32*
  store i32 ptrtoint (i32* @global_var_39764.3426 to i32), i32* %v2_125c8, align 4
  %v0_125cf = load i32, i32* %eax.global-to-local, align 4
  %v1_125cf = load i32, i32* %ebx.global-to-local, align 4
  %v2_125cf = add i32 %v1_125cf, 16
  %v3_125cf = inttoptr i32 %v2_125cf to i32*
  store i32 %v0_125cf, i32* %v3_125cf, align 4
  %v0_125d2 = load i32, i32* %esi.global-to-local, align 4
  %v1_125d2 = add i32 %v0_125d2, 20
  %v2_125d2 = inttoptr i32 %v1_125d2 to i32*
  %v3_125d2 = load i32, i32* %v2_125d2, align 4
  store i32 %v3_125d2, i32* %eax.global-to-local, align 4
  %v1_125d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_125d5 = add i32 %v1_125d5, 20
  %v3_125d5 = inttoptr i32 %v2_125d5 to i32*
  store i32 %v3_125d2, i32* %v3_125d5, align 4
  %v0_125d8 = load i32, i32* %esi.global-to-local, align 4
  %v1_125d8 = add i32 %v0_125d8, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_125d8 = inttoptr i32 %v1_125d8 to i32*
  %v3_125d8 = load i32, i32* %v2_125d8, align 4
  store i32 %v3_125d8, i32* %eax.global-to-local, align 4
  %v0_125db = load i32, i32* %ebx.global-to-local, align 4
  %v1_125db = inttoptr i32 %v0_125db to i32*
  store i32 ptrtoint (%vtable_39748_type* @global_var_39748.3427 to i32), i32* %v1_125db, align 4
  %v0_125e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_125e1 = add i32 %v0_125e1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_125e1 = inttoptr i32 %v1_125e1 to i32*
  store i32 ptrtoint (i32* @global_var_39774.3428 to i32), i32* %v2_125e1, align 4
  %v0_125e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_125e8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_125e8 = add i32 %v1_125e8, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_125e8 = inttoptr i32 %v2_125e8 to i32*
  store i32 %v0_125e8, i32* %v3_125e8, align 4
  %v0_125eb = load i32, i32* %ebx.global-to-local, align 4
  %v1_125eb = add i32 %v0_125eb, ptrtoint (i32* @global_var_1c.3271 to i32)
  store i32 %v1_125eb, i32* %eax.global-to-local, align 4
  %v1_125ee = icmp eq i1 %v3_125c1, false
  br i1 %v1_125ee, label %dec_label_pc_125f6, label %dec_label_pc_125f0

dec_label_pc_125f0:                               ; preds = %dec_label_pc_125ba
  %v0_125f0 = load i32, i32* @esp, align 4
  %v10_125f0 = icmp eq i32 %v0_125f0, -36
  store i1 %v10_125f0, i1* %zf.global-to-local, align 1
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v1_125eb

dec_label_pc_125f6:                               ; preds = %dec_label_pc_125ba
  ret i32 %v1_125eb

; uselistorder directives
  uselistorder i32 %v1_125eb, { 1, 0, 2 }
  uselistorder i1 %v3_125c1, { 1, 0 }
  uselistorder i32 %v4_1259a, { 1, 0 }
}

define i32 @function_12605() local_unnamed_addr {
dec_label_pc_12605:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1261f() local_unnamed_addr {
dec_label_pc_1261f:
  %v0_1261f = call i32 @function_12605()
  ret i32 %v0_1261f
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12630:
  %v4_12630 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_12635 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv(i32 %v4_12630)
  ret i32 %v1_12635
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv(i32 %arg1) {
dec_label_pc_12640:
  ret i32 0
}

define i32 @function_12668() local_unnamed_addr {
dec_label_pc_12668:
  %eax.global-to-local = alloca i32, align 4
  %v0_12668 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12668
}

define i32 @function_1267a() local_unnamed_addr {
dec_label_pc_1267a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_1267a = load i32, i32* @ebx, align 4
  %v1_1267a = add i32 %v0_1267a, 63376454
  %v2_1267a = inttoptr i32 %v1_1267a to i32*
  %v3_1267a = load i32, i32* %v2_1267a, align 4
  %v4_1267a = add i32 %v3_1267a, -1
  store i32 %v4_1267a, i32* %v2_1267a, align 4
  %v1_12680 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v1_12680, i32* %stack_var_-4, align 4
  %v4_12680 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_12680, i32* %ebp.global-to-local, align 4
  %v0_12684 = load i32, i32* @ebx, align 4
  %v1_12684 = add i32 %v0_12684, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12684 = inttoptr i32 %v1_12684 to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_12684, align 4
  %v0_1268b = load i32, i32* %eax.global-to-local, align 4
  %v1_1268b = icmp eq i32 %v0_1268b, 0
  %v1_1268d = load i32, i32* @ebx, align 4
  %v2_1268d = add i32 %v1_1268d, 12
  %v3_1268d = inttoptr i32 %v2_1268d to i32*
  store i32 %v0_1268b, i32* %v3_1268d, align 4
  br i1 %v1_1268b, label %dec_label_pc_1269a, label %dec_label_pc_12692

dec_label_pc_12692:                               ; preds = %dec_label_pc_1267a
  br label %dec_label_pc_1269a

dec_label_pc_1269a:                               ; preds = %dec_label_pc_12692, %dec_label_pc_1267a
  %v0_1269a = load i32, i32* %esi.global-to-local, align 4
  %v1_1269a = add i32 %v0_1269a, 16
  %v2_1269a = inttoptr i32 %v1_1269a to i32*
  %v3_1269a = load i32, i32* %v2_1269a, align 4
  store i32 %v3_1269a, i32* %eax.global-to-local, align 4
  %v1_126a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_126a1 = xor i32 %v1_126a1, %tmp99
  %v3_126a1 = icmp eq i32 %v2_126a1, 0
  store i32 %v2_126a1, i32* @edx, align 4
  %v0_126a8 = load i32, i32* @ebx, align 4
  %v1_126a8 = add i32 %v0_126a8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_126a8 = inttoptr i32 %v1_126a8 to i32*
  store i32 ptrtoint (i32* @global_var_39844.3429 to i32), i32* %v2_126a8, align 4
  %v0_126af = load i32, i32* %eax.global-to-local, align 4
  %v1_126af = load i32, i32* @ebx, align 4
  %v2_126af = add i32 %v1_126af, 16
  %v3_126af = inttoptr i32 %v2_126af to i32*
  store i32 %v0_126af, i32* %v3_126af, align 4
  %v0_126b2 = load i32, i32* %esi.global-to-local, align 4
  %v1_126b2 = add i32 %v0_126b2, 20
  %v2_126b2 = inttoptr i32 %v1_126b2 to i32*
  %v3_126b2 = load i32, i32* %v2_126b2, align 4
  store i32 %v3_126b2, i32* %eax.global-to-local, align 4
  %v1_126b5 = load i32, i32* @ebx, align 4
  %v2_126b5 = add i32 %v1_126b5, 20
  %v3_126b5 = inttoptr i32 %v2_126b5 to i32*
  store i32 %v3_126b2, i32* %v3_126b5, align 4
  %v0_126b8 = load i32, i32* %esi.global-to-local, align 4
  %v1_126b8 = add i32 %v0_126b8, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_126b8 = inttoptr i32 %v1_126b8 to i32*
  %v3_126b8 = load i32, i32* %v2_126b8, align 4
  store i32 %v3_126b8, i32* %eax.global-to-local, align 4
  %v0_126bb = load i32, i32* @ebx, align 4
  %v1_126bb = inttoptr i32 %v0_126bb to i32*
  store i32 ptrtoint (%vtable_39828_type* @global_var_39828.3430 to i32), i32* %v1_126bb, align 4
  %v0_126c1 = load i32, i32* @ebx, align 4
  %v1_126c1 = add i32 %v0_126c1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_126c1 = inttoptr i32 %v1_126c1 to i32*
  store i32 ptrtoint (i32* @global_var_39854.3431 to i32), i32* %v2_126c1, align 4
  %v0_126c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_126c8 = load i32, i32* @ebx, align 4
  %v2_126c8 = add i32 %v1_126c8, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_126c8 = inttoptr i32 %v2_126c8 to i32*
  store i32 %v0_126c8, i32* %v3_126c8, align 4
  %v0_126cb = load i32, i32* @ebx, align 4
  %v1_126cb = add i32 %v0_126cb, ptrtoint (i32* @global_var_1c.3271 to i32)
  store i32 %v1_126cb, i32* @eax, align 4
  %v1_126ce = icmp eq i1 %v3_126a1, false
  br i1 %v1_126ce, label %dec_label_pc_126d6, label %dec_label_pc_126d0

dec_label_pc_126d0:                               ; preds = %dec_label_pc_1269a
  ret i32 %v1_126cb

dec_label_pc_126d6:                               ; preds = %dec_label_pc_1269a
  store i32 %v1_126cb, i32* %esi.global-to-local, align 4
  %v1_126e0 = call i32 @function_237e0(i32 %v0_126cb)
  store i32 %v1_126e0, i32* %eax.global-to-local, align 4
  ret i32 %v1_126e0

; uselistorder directives
  uselistorder i32 %v1_126cb, { 1, 0, 2 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv, { 1, 0 }
}

define i32 @function_126ff() local_unnamed_addr {
dec_label_pc_126ff:
  %eax.global-to-local = alloca i32, align 4
  %v0_126ff = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_126ff
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_12710:
  %v4_12710 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_12715 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %v4_12710)
  ret i32 %v1_12715
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv(i32 %arg1) {
dec_label_pc_12720:
  ret i32 0
}

define i32 @function_12740(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12740:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_12740 = load i32, i32* %edi.global-to-local, align 4
  %v1_12740 = add i32 %v0_12740, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_12740, i32* %edi.global-to-local, align 4
  %v2_12742 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_12742 = load i32, i32* %ecx.global-to-local, align 4
  %v4_12742 = trunc i32 %v3_12742 to i8
  %v5_12742 = add i8 %v4_12742, %v2_12742
  %v20_12742 = load i32, i32* %eax.global-to-local, align 4
  %v21_12742 = inttoptr i32 %v20_12742 to i8*
  store i8 %v5_12742, i8* %v21_12742, align 1
  %v2_12744 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_12744 = load i32, i32* %eax.global-to-local, align 4
  %v4_12744 = trunc i32 %v3_12744 to i8
  %v5_12744 = add i8 %v4_12744, %v2_12744
  %v21_12744 = inttoptr i32 %v3_12744 to i8*
  store i8 %v5_12744, i8* %v21_12744, align 1
  %v0_12746 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12746 = add i32 %v0_12746, 71732675
  %v2_12746 = inttoptr i32 %v1_12746 to i8*
  %v3_12746 = load i8, i8* %v2_12746, align 1
  %v5_12746 = trunc i32 %v0_12746 to i8
  %v6_12746 = add i8 %v3_12746, %v5_12746
  store i8 %v6_12746, i8* %v2_12746, align 1
  %v0_12750 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12750 = add i32 %v0_12750, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_12750, i32* %eax.global-to-local, align 4
  %v0_1275b = load i32, i32* %esi.global-to-local, align 4
  %v1_1275b = add i32 %v0_1275b, 12
  %v2_1275b = inttoptr i32 %v1_1275b to i32*
  %v3_1275b = load i32, i32* %v2_1275b, align 4
  store i32 %v3_1275b, i32* %eax.global-to-local, align 4
  %v1_1275e = inttoptr i32 %v0_12750 to i32*
  store i32 ptrtoint (%vtable_398a8_type* @global_var_398a8.3340 to i32), i32* %v1_1275e, align 4
  %v0_12764 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12764 = add i32 %v0_12764, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12764 = inttoptr i32 %v1_12764 to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_12764, align 4
  %v1_1276b = icmp eq i32 %v3_1275b, 0
  %v1_1276d = load i32, i32* %ebx.global-to-local, align 4
  %v2_1276d = add i32 %v1_1276d, 12
  %v3_1276d = inttoptr i32 %v2_1276d to i32*
  store i32 %v3_1275b, i32* %v3_1276d, align 4
  br i1 %v1_1276b, label %dec_label_pc_1277a, label %dec_label_pc_12772

dec_label_pc_12772:                               ; preds = %dec_label_pc_12740
  br label %dec_label_pc_1277a

dec_label_pc_1277a:                               ; preds = %dec_label_pc_12772, %dec_label_pc_12740
  %v0_1277a = load i32, i32* %esi.global-to-local, align 4
  %v1_1277a = add i32 %v0_1277a, 16
  %v2_1277a = inttoptr i32 %v1_1277a to i32*
  %v3_1277a = load i32, i32* %v2_1277a, align 4
  store i32 %v3_1277a, i32* %eax.global-to-local, align 4
  %v1_12781 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12781 = icmp eq i32 %v1_12781, %arg1
  %v0_12788 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12788 = add i32 %v0_12788, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12788 = inttoptr i32 %v1_12788 to i32*
  store i32 ptrtoint (i32* @global_var_39924.3432 to i32), i32* %v2_12788, align 4
  %v0_1278f = load i32, i32* %eax.global-to-local, align 4
  %v1_1278f = load i32, i32* %ebx.global-to-local, align 4
  %v2_1278f = add i32 %v1_1278f, 16
  %v3_1278f = inttoptr i32 %v2_1278f to i32*
  store i32 %v0_1278f, i32* %v3_1278f, align 4
  %v0_12792 = load i32, i32* %esi.global-to-local, align 4
  %v1_12792 = add i32 %v0_12792, 20
  %v2_12792 = inttoptr i32 %v1_12792 to i32*
  %v3_12792 = load i32, i32* %v2_12792, align 4
  store i32 %v3_12792, i32* %eax.global-to-local, align 4
  %v1_12795 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12795 = add i32 %v1_12795, 20
  %v3_12795 = inttoptr i32 %v2_12795 to i32*
  store i32 %v3_12792, i32* %v3_12795, align 4
  %v0_12798 = load i32, i32* %esi.global-to-local, align 4
  %v1_12798 = add i32 %v0_12798, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_12798 = inttoptr i32 %v1_12798 to i32*
  %v3_12798 = load i32, i32* %v2_12798, align 4
  store i32 %v3_12798, i32* %eax.global-to-local, align 4
  %v0_1279b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1279b = inttoptr i32 %v0_1279b to i32*
  store i32 ptrtoint (%vtable_39908_type* @global_var_39908.3433 to i32), i32* %v1_1279b, align 4
  %v0_127a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_127a1 = add i32 %v0_127a1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_127a1 = inttoptr i32 %v1_127a1 to i32*
  store i32 ptrtoint (i32* @global_var_39934.3434 to i32), i32* %v2_127a1, align 4
  %v0_127a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_127a8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_127a8 = add i32 %v1_127a8, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_127a8 = inttoptr i32 %v2_127a8 to i32*
  store i32 %v0_127a8, i32* %v3_127a8, align 4
  %v0_127ab = load i32, i32* %ebx.global-to-local, align 4
  %v1_127ab = add i32 %v0_127ab, ptrtoint (i32* @global_var_1c.3271 to i32)
  store i32 %v1_127ab, i32* %eax.global-to-local, align 4
  %v1_127ae = icmp eq i1 %v3_12781, false
  br i1 %v1_127ae, label %dec_label_pc_127b6, label %dec_label_pc_127b0

dec_label_pc_127b0:                               ; preds = %dec_label_pc_1277a
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_127ab

dec_label_pc_127b6:                               ; preds = %dec_label_pc_1277a
  ret i32 %v1_127ab

; uselistorder directives
  uselistorder i32 %v1_127ab, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv, { 1, 0 }
}

define i32 @function_127c5() local_unnamed_addr {
dec_label_pc_127c5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_127d4() local_unnamed_addr {
dec_label_pc_127d4:
  %ecx.global-to-local = alloca i32, align 4
  %v0_127d4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_127d4 = add i32 %v0_127d4, 605850054
  %v2_127d4 = inttoptr i32 %v1_127d4 to i32*
  %v3_127d4 = load i32, i32* %v2_127d4, align 4
  %v4_127d4 = add i32 %v3_127d4, -1
  store i32 %v4_127d4, i32* %v2_127d4, align 4
  %v0_127df = call i32 @function_127c5()
  ret i32 %v0_127df
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEED1Ev(i32* %arg1) {
dec_label_pc_127f0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_127f0 = load i32, i32* %edi.global-to-local, align 4
  %v0_127f1 = load i32, i32* %esi.global-to-local, align 4
  %v0_127f2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v0_127fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  %v1_12806 = add i32 %tmp100, 268
  %v2_12806 = inttoptr i32 %v1_12806 to i32*
  %v3_12806 = load i32, i32* %v2_12806, align 4
  store i32 %v3_12806, i32* %esi.global-to-local, align 4
  %v1_1280c = add i32 %tmp100, 264
  %v2_1280c = inttoptr i32 %v1_1280c to i32*
  %v3_1280c = load i32, i32* %v2_1280c, align 4
  store i32 %v3_1280c, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_395e8_type* @global_var_395e8.3435 to i32), i32* %arg1, align 4
  %v1_12818 = load i32, i32* @ebx, align 4
  %v12_12818 = icmp eq i32 %v3_12806, %v1_12818
  br i1 %v12_12818, label %bb, label %dec_label_pc_127f0.dec_label_pc_1281c_crit_edge

dec_label_pc_127f0.dec_label_pc_1281c_crit_edge:  ; preds = %dec_label_pc_127f0
  %v16_12823.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1281c

bb:                                               ; preds = %dec_label_pc_127f0
  %v5_1281a = call i32 @function_12835(i32 %v0_127fa, i32 %v0_127f2, i32 %v0_127f1, i32 %v0_127f0)
  %v0_12820.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_127f0.dec_label_pc_1281c_crit_edge, %bb
  %v16_12823 = phi i32 [ %v5_1281a, %bb ], [ %v16_12823.pre, %dec_label_pc_127f0.dec_label_pc_1281c_crit_edge ]
  %v0_12820 = phi i32 [ %v0_12820.pre, %bb ], [ %v1_12818, %dec_label_pc_127f0.dec_label_pc_1281c_crit_edge ]
  %v1_12823 = add i32 %v0_12820, 4
  store i32 %v1_12823, i32* %ebx.global-to-local, align 4
  ret i32 %v16_12823

; uselistorder directives
  uselistorder i32 %v1_12818, { 1, 0 }
  uselistorder i32 %tmp100, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_1281c, { 1, 0 }
}

define i32 @function_12835(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12835:
  %v0_12835 = load i32, i32* @ebx, align 4
  %v1_12835 = icmp eq i32 %v0_12835, 0
  br i1 %v1_12835, label %bb, label %dec_label_pc_12835.dec_label_pc_12839_crit_edge

dec_label_pc_12835.dec_label_pc_12839_crit_edge:  ; preds = %dec_label_pc_12835
  %v3_12839.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_12839

bb:                                               ; preds = %dec_label_pc_12835
  %v1_12837 = call i32 @function_12841()
  br label %dec_label_pc_12839

dec_label_pc_12839:                               ; preds = %dec_label_pc_12835.dec_label_pc_12839_crit_edge, %bb
  %v3_12839 = phi i32 [ %v3_12839.pre, %dec_label_pc_12835.dec_label_pc_12839_crit_edge ], [ %v1_12837, %bb ]
  ret i32 %v3_12839

; uselistorder directives
  uselistorder label %dec_label_pc_12839, { 1, 0 }
}

define i32 @function_12841() local_unnamed_addr {
dec_label_pc_12841:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_12845 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_12845 = xor i32 %v1_12845, %tmp9
  %v3_12845 = icmp eq i32 %v2_12845, 0
  store i32 %v2_12845, i32* @eax, align 4
  %v1_1284c = icmp eq i1 %v3_12845, false
  br i1 %v1_1284c, label %bb, label %dec_label_pc_1284e

bb:                                               ; preds = %dec_label_pc_12841
  %v2_1284c = call i32 @function_1285d()
  br label %dec_label_pc_1284e

dec_label_pc_1284e:                               ; preds = %bb, %dec_label_pc_12841
  %v5_12857 = phi i32 [ %v2_1284c, %bb ], [ %v2_12845, %dec_label_pc_12841 ]
  ret i32 %v5_12857
}

define i32 @function_1285d() local_unnamed_addr {
dec_label_pc_1285d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEED0Ev(i32* %arg1) {
dec_label_pc_12870:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_12870 = load i32, i32* %edi.global-to-local, align 4
  %v0_12871 = load i32, i32* %esi.global-to-local, align 4
  %v0_12872 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v0_1287a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  %v1_12886 = add i32 %tmp100, 268
  %v2_12886 = inttoptr i32 %v1_12886 to i32*
  %v3_12886 = load i32, i32* %v2_12886, align 4
  store i32 %v3_12886, i32* %esi.global-to-local, align 4
  %v1_1288c = add i32 %tmp100, 264
  %v2_1288c = inttoptr i32 %v1_1288c to i32*
  %v3_1288c = load i32, i32* %v2_1288c, align 4
  store i32 %v3_1288c, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_395e8_type* @global_var_395e8.3435 to i32), i32* %arg1, align 4
  %v1_12898 = load i32, i32* @ebx, align 4
  %v12_12898 = icmp eq i32 %v3_12886, %v1_12898
  br i1 %v12_12898, label %bb, label %dec_label_pc_12870.dec_label_pc_1289c_crit_edge

dec_label_pc_12870.dec_label_pc_1289c_crit_edge:  ; preds = %dec_label_pc_12870
  %v16_128a3.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1289c

bb:                                               ; preds = %dec_label_pc_12870
  %v5_1289a = call i32 @function_128b5(i32 %v0_1287a, i32 %v0_12872, i32 %v0_12871, i32 %v0_12870)
  %v0_128a0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1289c

dec_label_pc_1289c:                               ; preds = %dec_label_pc_12870.dec_label_pc_1289c_crit_edge, %bb
  %v16_128a3 = phi i32 [ %v5_1289a, %bb ], [ %v16_128a3.pre, %dec_label_pc_12870.dec_label_pc_1289c_crit_edge ]
  %v0_128a0 = phi i32 [ %v0_128a0.pre, %bb ], [ %v1_12898, %dec_label_pc_12870.dec_label_pc_1289c_crit_edge ]
  %v1_128a3 = add i32 %v0_128a0, 4
  store i32 %v1_128a3, i32* %ebx.global-to-local, align 4
  ret i32 %v16_128a3

; uselistorder directives
  uselistorder i32 %v1_12898, { 1, 0 }
  uselistorder i32 %tmp100, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_395e8_type* @global_var_395e8.3435 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_1289c, { 1, 0 }
}

define i32 @function_128b5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_128b5:
  %v3_128c1 = load i32, i32* @eax, align 4
  ret i32 %v3_128c1
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_128f0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_128f0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v1_12904 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_12904 = inttoptr i32 %v1_12904 to i32*
  %v3_12904 = load i32, i32* %v2_12904, align 4
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %arg1, align 4
  %v1_1290d = icmp eq i32 %v3_12904, 0
  br i1 %v1_1290d, label %dec_label_pc_1291d, label %dec_label_pc_12911

dec_label_pc_12911:                               ; preds = %dec_label_pc_128f0
  %v3_1290d = trunc i32 %v3_12904 to i8
  %v5_12919 = icmp eq i8 %v3_1290d, 0
  %v1_1291b = icmp eq i1 %v5_12919, false
  br i1 %v1_1291b, label %dec_label_pc_12938, label %dec_label_pc_1291d

dec_label_pc_1291d:                               ; preds = %dec_label_pc_12938, %dec_label_pc_12911, %dec_label_pc_128f0
  br i1 false, label %dec_label_pc_12941, label %dec_label_pc_1292a

dec_label_pc_1292a:                               ; preds = %dec_label_pc_1291d
  store i32 %v0_128f0, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_12938:                               ; preds = %dec_label_pc_12911
  %v0_12938 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12938 = add i32 %v0_12938, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_12938 = inttoptr i32 %v1_12938 to i32*
  store i32 0, i32* %v2_12938, align 4
  br label %dec_label_pc_1291d

dec_label_pc_12941:                               ; preds = %dec_label_pc_1291d
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 0 }
}

define i32 @function_12947() local_unnamed_addr {
dec_label_pc_12947:
  %eax.global-to-local = alloca i32, align 4
  %v0_12947 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12947
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12960:
  %v4_12960 = add i32 %arg1, -20
  %v1_12965 = call i32 @function_252d0(i32 %v4_12960)
  ret i32 %v1_12965
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_12970:
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12970 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_39d48_type* @global_var_39d48.3436 to i32), i32* %arg1, align 4
  %v1_1298a = add i32 %tmp99, 20
  %v2_1298d = inttoptr i32 %v1_1298a to i32*
  store i32 ptrtoint (i32* @global_var_39d58.3437 to i32), i32* %v2_1298d, align 4
  br i1 false, label %dec_label_pc_129b6, label %dec_label_pc_129a9

dec_label_pc_129a9:                               ; preds = %dec_label_pc_12970
  store i32 %v0_12970, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_129b6:                               ; preds = %dec_label_pc_12970
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_129c0:
  %v5_129c0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v9_129c0 = icmp ult i32 %arg1, 8
  store i1 %v9_129c0, i1* @cf, align 1
  %v2_129c5 = call i32 @function_25390(i32 %v5_129c0)
  ret i32 %v2_129c5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev(i32* %arg1) {
dec_label_pc_129d0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_129d0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_39628_type* @global_var_39628.3438 to i32), i32* %arg1, align 4
  %v1_129ea = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_129ea, i32* @eax, align 4
  %v2_129ed = inttoptr i32 %v1_129ea to i32*
  store i32 ptrtoint (i32* @global_var_3963c.3439 to i32), i32* %v2_129ed, align 4
  %v0_129f4 = load i32, i32* @eax, align 4
  %v2_129f7 = call i32 @function_252c0(i32 %v0_129f4)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_12a09

bb:                                               ; preds = %dec_label_pc_129d0
  br label %dec_label_pc_12a09

dec_label_pc_12a09:                               ; preds = %bb, %dec_label_pc_129d0
  store i32 %v0_129d0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_12a16() local_unnamed_addr {
dec_label_pc_12a16:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a20:
  %v5_12a20 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12a25 = call i32 @function_25450(i32 %v5_12a20)
  ret i32 %v2_12a25
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev(i32* %arg1) {
dec_label_pc_12a30:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12a30 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_39708_type* @global_var_39708.3440 to i32), i32* %arg1, align 4
  %v1_12a4a = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12a4a, i32* @eax, align 4
  %v2_12a4d = inttoptr i32 %v1_12a4a to i32*
  store i32 ptrtoint (i32* @global_var_3971c.3441 to i32), i32* %v2_12a4d, align 4
  %v0_12a54 = load i32, i32* @eax, align 4
  %v2_12a57 = call i32 @function_25320(i32 %v0_12a54)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12a67 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12a67 = inttoptr i32 %v0_12a67 to i32*
  store i32 ptrtoint (%vtable_396e8_type* @global_var_396e8.3339 to i32), i32* %v1_12a67, align 4
  br i1 false, label %dec_label_pc_12a7c, label %dec_label_pc_12a6f

dec_label_pc_12a6f:                               ; preds = %dec_label_pc_12a30
  store i32 %v0_12a30, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a6f, %dec_label_pc_12a30
  %v0_12a77 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12a77

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a90:
  %eax.global-to-local = alloca i32, align 4
  %v0_12a95 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12a95
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32* %arg1) {
dec_label_pc_12aa0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12aa0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* @ebx, align 4
  store i1 false, i1* @cf, align 1
  store i32 ptrtoint (%vtable_38f28_type* @global_var_38f28.3442 to i32), i32* %arg1, align 4
  %v0_12aba = load i32, i32* @ebx, align 4
  %v1_12aba = add i32 %v0_12aba, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12aba, i32* @eax, align 4
  %v2_12abd = inttoptr i32 %v1_12aba to i32*
  store i32 ptrtoint (i32* @global_var_38f3c.3443 to i32), i32* %v2_12abd, align 4
  %v0_12ac4 = load i32, i32* @eax, align 4
  %v2_12ac7 = call i32 @function_25390(i32 %v0_12ac4)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12ad7 = load i32, i32* @ebx, align 4
  %v1_12ad7 = inttoptr i32 %v0_12ad7 to i32*
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %v1_12ad7, align 4
  br i1 false, label %dec_label_pc_12aec, label %dec_label_pc_12adf

dec_label_pc_12adf:                               ; preds = %dec_label_pc_12aa0
  store i32 %v0_12aa0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12adf, %dec_label_pc_12aa0
  %v0_12ae7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12ae7

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_25390, { 1, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b00:
  %v5_12b00 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v14_12b00 = icmp eq i32 %v5_12b00, 0
  store i1 %v14_12b00, i1* @zf, align 1
  %v2_12b05 = call i32 @function_25610(i32 %v5_12b00)
  ret i32 %v2_12b05
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32* %arg1) {
dec_label_pc_12b10:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12b10 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.3444 to i32), i32* %arg1, align 4
  %v0_12b2a = load i32, i32* @ebx, align 4
  %v1_12b2a = add i32 %v0_12b2a, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12b2a, i32* %eax.global-to-local, align 4
  %v2_12b2d = inttoptr i32 %v1_12b2a to i32*
  store i32 ptrtoint (i32* @global_var_3901c.3445 to i32), i32* %v2_12b2d, align 4
  %v0_12b34 = load i32, i32* %eax.global-to-local, align 4
  %v2_12b37 = call i32 @function_25400(i32 %v0_12b34)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12b47 = load i32, i32* @ebx, align 4
  %v1_12b47 = inttoptr i32 %v0_12b47 to i32*
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %v1_12b47, align 4
  br i1 false, label %dec_label_pc_12b5c, label %dec_label_pc_12b4f

dec_label_pc_12b4f:                               ; preds = %dec_label_pc_12b10
  store i32 %v0_12b10, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_12b5c

dec_label_pc_12b5c:                               ; preds = %dec_label_pc_12b4f, %dec_label_pc_12b10
  %v0_12b57 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12b57

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12b70:
  %v5_12b70 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12b75 = call i32 @function_256f0(i32 %v5_12b70)
  ret i32 %v2_12b75
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32* %arg1) {
dec_label_pc_12b80:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12b80 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_39108_type* @global_var_39108.3446 to i32), i32* %arg1, align 4
  %v1_12b9a = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12b9a, i32* @eax, align 4
  %v2_12b9d = inttoptr i32 %v1_12b9a to i32*
  store i32 ptrtoint (i32* @global_var_3911c.3447 to i32), i32* %v2_12b9d, align 4
  %v0_12ba4 = load i32, i32* @eax, align 4
  %v2_12ba7 = call i32 @function_25470(i32 %v0_12ba4)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12bb7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12bb7 = inttoptr i32 %v0_12bb7 to i32*
  store i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), i32* %v1_12bb7, align 4
  br i1 false, label %dec_label_pc_12bcc, label %dec_label_pc_12bbf

dec_label_pc_12bbf:                               ; preds = %dec_label_pc_12b80
  store i32 %v0_12b80, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_12bcc

dec_label_pc_12bcc:                               ; preds = %dec_label_pc_12bbf, %dec_label_pc_12b80
  %v0_12bc7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12bc7

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12be0:
  %v5_12be0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12be5 = call i32 @function_257d0(i32 %v5_12be0)
  ret i32 %v2_12be5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev(i32* %arg1) {
dec_label_pc_12bf0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12bf0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_398c8_type* @global_var_398c8.3448 to i32), i32* %arg1, align 4
  %v1_12c0a = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12c0a, i32* @eax, align 4
  %v2_12c0d = inttoptr i32 %v1_12c0a to i32*
  store i32 ptrtoint (i32* @global_var_398dc.3449 to i32), i32* %v2_12c0d, align 4
  %v0_12c14 = load i32, i32* @eax, align 4
  %v2_12c17 = call i32 @function_254e0(i32 %v0_12c14)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12c27 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12c27 = inttoptr i32 %v0_12c27 to i32*
  store i32 ptrtoint (%vtable_398a8_type* @global_var_398a8.3340 to i32), i32* %v1_12c27, align 4
  br i1 false, label %dec_label_pc_12c3c, label %dec_label_pc_12c2f

dec_label_pc_12c2f:                               ; preds = %dec_label_pc_12bf0
  store i32 %v0_12bf0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_12c3c

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12c2f, %dec_label_pc_12bf0
  %v0_12c3c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12c3c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c50:
  %v5_12c50 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12c55 = call i32 @function_258b0(i32 %v5_12c50)
  ret i32 %v2_12c55
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev(i32* %arg1) {
dec_label_pc_12c60:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12c60 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_397e8_type* @global_var_397e8.3450 to i32), i32* %arg1, align 4
  %v1_12c7a = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12c7a, i32* %eax.global-to-local, align 4
  %v2_12c7d = inttoptr i32 %v1_12c7a to i32*
  store i32 ptrtoint (i32* @global_var_397fc.3451 to i32), i32* %v2_12c7d, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12c97 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12c97 = inttoptr i32 %v0_12c97 to i32*
  store i32 ptrtoint (%vtable_397c8_type* @global_var_397c8.3341 to i32), i32* %v1_12c97, align 4
  br i1 false, label %dec_label_pc_12cac, label %dec_label_pc_12c9f

dec_label_pc_12c9f:                               ; preds = %dec_label_pc_12c60
  store i32 %v0_12c60, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_12cac

dec_label_pc_12cac:                               ; preds = %dec_label_pc_12c9f, %dec_label_pc_12c60
  %v0_12ca7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12ca7

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @_ZThn4_N5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12cc0:
  %v5_12cc0 = sub i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_12cc5 = call i32 @function_25990(i32 %v5_12cc0)
  ret i32 %v2_12cc5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED1Ev(i32* %arg1) {
dec_label_pc_12cd0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12cd0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_39448_type* @global_var_39448.3452 to i32), i32* %arg1, align 4
  %v0_12cea = load i32, i32* @ebx, align 4
  %v1_12cea = add i32 %v0_12cea, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_12cea, i32* %eax.global-to-local, align 4
  %v2_12ced = inttoptr i32 %v1_12cea to i32*
  store i32 ptrtoint (i32* @global_var_3945c.3453 to i32), i32* %v2_12ced, align 4
  %v0_12cf4 = load i32, i32* %eax.global-to-local, align 4
  %v2_12cf7 = call i32 @function_255c0(i32 %v0_12cf4)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_12d07 = load i32, i32* @ebx, align 4
  %v1_12d07 = inttoptr i32 %v0_12d07 to i32*
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %v1_12d07, align 4
  br i1 false, label %dec_label_pc_12d1c, label %dec_label_pc_12d0f

dec_label_pc_12d0f:                               ; preds = %dec_label_pc_12cd0
  store i32 %v0_12cd0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_12d1c

dec_label_pc_12d1c:                               ; preds = %dec_label_pc_12d0f, %dec_label_pc_12cd0
  %v0_12d17 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12d17

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d30:
  %v4_12d30 = sub i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v1_12d35 = call i32 @function_25a80(i32 %v4_12d30)
  ret i32 %v1_12d35
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d40:
  %v4_12d40 = add i32 %arg1, -20
  %v1_12d45 = call i32 @function_25a80(i32 %v4_12d40)
  ret i32 %v1_12d45

; uselistorder directives
  uselistorder i32 (i32)* @function_25a80, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_12d50:
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_12d50 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  %v1_12d64 = add i32 %tmp99, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_12d64 = inttoptr i32 %v1_12d64 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_12d64, align 4
  %v0_12d6b = load i32, i32* %ebx.global-to-local, align 4
  %v1_12d6e = inttoptr i32 %v0_12d6b to i32*
  store i32 ptrtoint (%vtable_39d48_type* @global_var_39d48.3436 to i32), i32* %v1_12d6e, align 4
  %v0_12d74 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12d74 = add i32 %v0_12d74, 20
  %v2_12d74 = inttoptr i32 %v1_12d74 to i32*
  store i32 ptrtoint (i32* @global_var_39d58.3437 to i32), i32* %v2_12d74, align 4
  br i1 false, label %dec_label_pc_12d9d, label %dec_label_pc_12d90

dec_label_pc_12d90:                               ; preds = %dec_label_pc_12d50
  store i32 %v0_12d50, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_12d9d:                               ; preds = %dec_label_pc_12d50
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12db0:
  %v5_12db0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_12db0 to i32*
  %v3_12db5 = call i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32* %tmp100)
  ret i32 %v3_12db5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev(i32* %arg1) {
dec_label_pc_12dc0:
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_39628_type* @global_var_39628.3438 to i32), i32* %arg1, align 4
  %v1_12dda = add i32 %tmp4, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12dda, i32* @eax, align 4
  %v2_12ddd = inttoptr i32 %v1_12dda to i32*
  store i32 ptrtoint (i32* @global_var_3963c.3439 to i32), i32* %v2_12ddd, align 4
  %v0_12de4 = load i32, i32* @eax, align 4
  %v2_12de7 = call i32 @function_256a0(i32 %v0_12de4)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_12e01

bb:                                               ; preds = %dec_label_pc_12dc0
  br label %dec_label_pc_12e01

dec_label_pc_12e01:                               ; preds = %bb, %dec_label_pc_12dc0
  ret i32 0
}

define i32 @function_12e0e(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e0e:
  %v0_12e0e = load i32, i32* @eax, align 4
  ret i32 %v0_12e0e
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e20:
  %v4_12e20 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_12e25 = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %v4_12e20)
  ret i32 %v1_12e25
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e30:
  %v5_12e30 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12e35 = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %v5_12e30)
  ret i32 %v2_12e35
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev(i32* %arg1) {
dec_label_pc_12e40:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_12e40 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  %v1_12e54 = add i32 %tmp100, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_12e54 = inttoptr i32 %v1_12e54 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_12e54, align 4
  %v0_12e5b = load i32, i32* %ebx.global-to-local, align 4
  %v1_12e5b = add i32 %v0_12e5b, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12e5b, i32* @eax, align 4
  %v1_12e5e = inttoptr i32 %v0_12e5b to i32*
  store i32 ptrtoint (%vtable_39628_type* @global_var_39628.3438 to i32), i32* %v1_12e5e, align 4
  %v0_12e64 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12e64 = add i32 %v0_12e64, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12e64 = inttoptr i32 %v1_12e64 to i32*
  store i32 ptrtoint (i32* @global_var_3963c.3439 to i32), i32* %v2_12e64, align 4
  %v0_12e6b = load i32, i32* @eax, align 4
  %v2_12e6e = call i32 @function_25730(i32 %v0_12e6b)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_12e80

bb:                                               ; preds = %dec_label_pc_12e40
  br label %dec_label_pc_12e80

dec_label_pc_12e80:                               ; preds = %bb, %dec_label_pc_12e40
  store i32 %v0_12e40, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 0 }
}

define i32 @function_12e8d() local_unnamed_addr {
dec_label_pc_12e8d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ea0:
  %v4_12ea0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_12ea5 = inttoptr i32 %v4_12ea0 to i32*
  %v2_12ea5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32* %v1_12ea5)
  ret i32 %v2_12ea5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12eb0:
  %v5_12eb0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_12eb0 to i32*
  %v3_12eb5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32* %tmp100)
  ret i32 %v3_12eb5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev(i32* %arg1) {
dec_label_pc_12ec0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* %ebx.global-to-local, align 4
  %v1_12ed4 = add i32 %tmp4, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_12ed4 = inttoptr i32 %v1_12ed4 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_12ed4, align 4
  %v0_12edb = load i32, i32* %ebx.global-to-local, align 4
  %v1_12edb = add i32 %v0_12edb, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_12edb, i32* @eax, align 4
  %v1_12ede = inttoptr i32 %v0_12edb to i32*
  store i32 ptrtoint (%vtable_39628_type* @global_var_39628.3438 to i32), i32* %v1_12ede, align 4
  %v0_12ee4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12ee4 = add i32 %v0_12ee4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_12ee4 = inttoptr i32 %v1_12ee4 to i32*
  store i32 ptrtoint (i32* @global_var_3963c.3439 to i32), i32* %v2_12ee4, align 4
  %v0_12eeb = load i32, i32* @eax, align 4
  %v2_12eee = call i32 @function_25790(i32 %v0_12eeb)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_12f08

bb:                                               ; preds = %dec_label_pc_12ec0
  br label %dec_label_pc_12f08

dec_label_pc_12f08:                               ; preds = %bb, %dec_label_pc_12ec0
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39628_type* @global_var_39628.3438 to i32), { 3, 2, 1, 0 }
}

define i32 @function_12f15(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f15:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f20:
  %v4_12f20 = add i32 %arg1, -20
  %v1_12f25 = inttoptr i32 %v4_12f20 to i32*
  %v2_12f25 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32* %v1_12f25)
  ret i32 %v2_12f25
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32* %arg1) {
dec_label_pc_12f30:
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_39d48_type* @global_var_39d48.3436 to i32), i32* %arg1, align 4
  %v0_12f4a = load i32, i32* @ebx, align 4
  %v1_12f4a = add i32 %v0_12f4a, 20
  store i32 %v1_12f4a, i32* @eax, align 4
  %v2_12f4d = inttoptr i32 %v1_12f4a to i32*
  store i32 ptrtoint (i32* @global_var_39d58.3437 to i32), i32* %v2_12f4d, align 4
  %v0_12f5c = load i32, i32* @ebx, align 4
  %v1_12f5f = call i32 @function_25810(i32 %v0_12f5c)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_12f71

bb:                                               ; preds = %dec_label_pc_12f30
  br label %dec_label_pc_12f71

dec_label_pc_12f71:                               ; preds = %bb, %dec_label_pc_12f30
  ret i32 0
}

define i32 @function_12f7e() local_unnamed_addr {
dec_label_pc_12f7e:
  %v0_12f7e = load i32, i32* @eax, align 4
  ret i32 %v0_12f7e
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12f90:
  %v4_12f90 = sub i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v1_12f95 = inttoptr i32 %v4_12f90 to i32*
  %v2_12f95 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %v1_12f95)
  ret i32 %v2_12f95
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12fa0:
  %v4_12fa0 = add i32 %arg1, -20
  %v1_12fa5 = inttoptr i32 %v4_12fa0 to i32*
  %v2_12fa5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %v1_12fa5)
  ret i32 %v2_12fa5
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %arg1) {
dec_label_pc_12fb0:
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* @ebx, align 4
  %v1_12fc4 = add i32 %tmp4, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_12fc4 = inttoptr i32 %v1_12fc4 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_12fc4, align 4
  %v0_12fcb = load i32, i32* @ebx, align 4
  %v1_12fcb = add i32 %v0_12fcb, 20
  store i32 %v1_12fcb, i32* @eax, align 4
  %v1_12fce = inttoptr i32 %v0_12fcb to i32*
  store i32 ptrtoint (%vtable_39d48_type* @global_var_39d48.3436 to i32), i32* %v1_12fce, align 4
  %v0_12fd4 = load i32, i32* @ebx, align 4
  %v1_12fd4 = add i32 %v0_12fd4, 20
  %v2_12fd4 = inttoptr i32 %v1_12fd4 to i32*
  store i32 ptrtoint (i32* @global_var_39d58.3437 to i32), i32* %v2_12fd4, align 4
  %v0_12fe3 = load i32, i32* @ebx, align 4
  %v1_12fe6 = call i32 @function_25880(i32 %v0_12fe3)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_12ff8

bb:                                               ; preds = %dec_label_pc_12fb0
  br label %dec_label_pc_12ff8

dec_label_pc_12ff8:                               ; preds = %bb, %dec_label_pc_12fb0
  ret i32 0
}

define i32 @function_13005() local_unnamed_addr {
dec_label_pc_13005:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13010:
  %v4_13010 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_13015 = inttoptr i32 %v4_13010 to i32*
  %v2_13015 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32* %v1_13015)
  ret i32 %v2_13015
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13020:
  %v5_13020 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13020 to i32*
  %v3_13025 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32* %tmp100)
  ret i32 %v3_13025

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev(i32* %arg1) {
dec_label_pc_13030:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* @ebx, align 4
  %v1_13044 = add i32 %tmp2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_13044 = inttoptr i32 %v1_13044 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_13044, align 4
  %v0_1304b = load i32, i32* @ebx, align 4
  %v1_1304b = add i32 %v0_1304b, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1304b, i32* @eax, align 4
  %v1_1304e = inttoptr i32 %v0_1304b to i32*
  store i32 ptrtoint (%vtable_398c8_type* @global_var_398c8.3448 to i32), i32* %v1_1304e, align 4
  %v0_13054 = load i32, i32* @ebx, align 4
  %v1_13054 = add i32 %v0_13054, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13054 = inttoptr i32 %v1_13054 to i32*
  store i32 ptrtoint (i32* @global_var_398dc.3449 to i32), i32* %v2_13054, align 4
  %v0_1305b = load i32, i32* @eax, align 4
  %v2_1305e = call i32 @function_25900(i32 %v0_1305b)
  store i32 %v2_1305e, i32* %eax.global-to-local, align 4
  %v0_13063 = load i32, i32* @ebx, align 4
  %v1_13063 = inttoptr i32 %v0_13063 to i32*
  store i32 ptrtoint (%vtable_398a8_type* @global_var_398a8.3340 to i32), i32* %v1_13063, align 4
  %v4_13069 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13069
}

define i32 @function_13070(i32 %arg1) local_unnamed_addr {
dec_label_pc_13070:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13070 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13070 = add i32 %v0_13070, 1696343108
  %v2_13070 = inttoptr i32 %v1_13070 to i32*
  %v3_13070 = load i32, i32* %v2_13070, align 4
  %v4_13070 = add i32 %v3_13070, -1
  store i32 %v4_13070, i32* %v2_13070, align 4
  %v0_13076 = load i32, i32* %eax.global-to-local, align 4
  %v1_13076 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13076 = xor i32 %v1_13076, %v0_13076
  %v3_13076 = icmp eq i32 %v2_13076, 0
  store i32 %v2_13076, i32* %eax.global-to-local, align 4
  %v1_1307c = icmp eq i1 %v3_13076, false
  br i1 %v1_1307c, label %dec_label_pc_1308b, label %dec_label_pc_1307e

dec_label_pc_1307e:                               ; preds = %dec_label_pc_13070
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1308b

dec_label_pc_1308b:                               ; preds = %dec_label_pc_1307e, %dec_label_pc_13070
  ret i32 %v2_13076
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13090:
  %eax.global-to-local = alloca i32, align 4
  %v0_13095 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13095
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_130a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_130a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_130a5
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev(i32* %arg1) {
dec_label_pc_130b0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_130b0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* @ebx, align 4
  %v1_130c4 = add i32 %tmp99, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_130c4 = inttoptr i32 %v1_130c4 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_130c4, align 4
  %v0_130cb = load i32, i32* @ebx, align 4
  %v1_130cb = add i32 %v0_130cb, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_130cb, i32* @eax, align 4
  %v1_130ce = inttoptr i32 %v0_130cb to i32*
  store i32 ptrtoint (%vtable_398c8_type* @global_var_398c8.3448 to i32), i32* %v1_130ce, align 4
  %v0_130d4 = load i32, i32* @ebx, align 4
  %v1_130d4 = add i32 %v0_130d4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_130d4 = inttoptr i32 %v1_130d4 to i32*
  store i32 ptrtoint (i32* @global_var_398dc.3449 to i32), i32* %v2_130d4, align 4
  %v0_130db = load i32, i32* @eax, align 4
  %v2_130de = call i32 @function_259a0(i32 %v0_130db)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_130ee = load i32, i32* @ebx, align 4
  %v1_130ee = inttoptr i32 %v0_130ee to i32*
  store i32 ptrtoint (%vtable_398a8_type* @global_var_398a8.3340 to i32), i32* %v1_130ee, align 4
  br i1 false, label %dec_label_pc_13103, label %dec_label_pc_130f6

dec_label_pc_130f6:                               ; preds = %dec_label_pc_130b0
  store i32 %v0_130b0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13103

dec_label_pc_13103:                               ; preds = %dec_label_pc_130f6, %dec_label_pc_130b0
  %v0_13103 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13103

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13110:
  %v5_13110 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13110 to i32*
  %v3_13115 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32* %tmp100)
  ret i32 %v3_13115
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev(i32* %arg1) {
dec_label_pc_13120:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_398c8_type* @global_var_398c8.3448 to i32), i32* %arg1, align 4
  %v1_1313a = add i32 %tmp2, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1313a, i32* @eax, align 4
  %v2_1313d = inttoptr i32 %v1_1313a to i32*
  store i32 ptrtoint (i32* @global_var_398dc.3449 to i32), i32* %v2_1313d, align 4
  %v0_13144 = load i32, i32* @eax, align 4
  %v2_13147 = call i32 @function_25a00(i32 %v0_13144)
  store i32 %v2_13147, i32* %eax.global-to-local, align 4
  %v0_1314c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1314c = inttoptr i32 %v0_1314c to i32*
  store i32 ptrtoint (%vtable_398a8_type* @global_var_398a8.3340 to i32), i32* %v1_1314c, align 4
  %v4_13152 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13152

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_398a8_type* @global_var_398a8.3340 to i32), { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_13159(i32 %arg1) local_unnamed_addr {
dec_label_pc_13159:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13159 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13159 = add i32 %v0_13159, 1696343108
  %v2_13159 = inttoptr i32 %v1_13159 to i32*
  %v3_13159 = load i32, i32* %v2_13159, align 4
  %v4_13159 = add i32 %v3_13159, -1
  store i32 %v4_13159, i32* %v2_13159, align 4
  %v0_1315f = load i32, i32* %eax.global-to-local, align 4
  %v1_1315f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1315f = xor i32 %v1_1315f, %v0_1315f
  %v3_1315f = icmp eq i32 %v2_1315f, 0
  store i32 %v2_1315f, i32* %eax.global-to-local, align 4
  %v1_13165 = icmp eq i1 %v3_1315f, false
  br i1 %v1_13165, label %dec_label_pc_13174, label %dec_label_pc_13167

dec_label_pc_13167:                               ; preds = %dec_label_pc_13159
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13174

dec_label_pc_13174:                               ; preds = %dec_label_pc_13167, %dec_label_pc_13159
  ret i32 %v2_1315f
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13180:
  %eax.global-to-local = alloca i32, align 4
  %v0_13185 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13185
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13190:
  %eax.global-to-local = alloca i32, align 4
  %v0_13195 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13195
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev(i32* %arg1) {
dec_label_pc_131a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_131a0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  %v1_131b4 = add i32 %tmp99, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_131b4 = inttoptr i32 %v1_131b4 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_131b4, align 4
  %v0_131bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_131bb = add i32 %v0_131bb, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_131bb, i32* @eax, align 4
  %v1_131be = inttoptr i32 %v0_131bb to i32*
  store i32 ptrtoint (%vtable_39708_type* @global_var_39708.3440 to i32), i32* %v1_131be, align 4
  %v0_131c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_131c4 = add i32 %v0_131c4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_131c4 = inttoptr i32 %v1_131c4 to i32*
  store i32 ptrtoint (i32* @global_var_3971c.3441 to i32), i32* %v2_131c4, align 4
  %v0_131cb = load i32, i32* @eax, align 4
  %v2_131ce = call i32 @function_25a90(i32 %v0_131cb)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_131de = load i32, i32* %ebx.global-to-local, align 4
  %v1_131de = inttoptr i32 %v0_131de to i32*
  store i32 ptrtoint (%vtable_396e8_type* @global_var_396e8.3339 to i32), i32* %v1_131de, align 4
  br i1 false, label %dec_label_pc_131f3, label %dec_label_pc_131e6

dec_label_pc_131e6:                               ; preds = %dec_label_pc_131a0
  store i32 %v0_131a0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_131f3

dec_label_pc_131f3:                               ; preds = %dec_label_pc_131e6, %dec_label_pc_131a0
  %v0_131f3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_131f3

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13200:
  %v5_13200 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13200 to i32*
  %v3_13205 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32* %tmp100)
  ret i32 %v3_13205
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev(i32* %arg1) {
dec_label_pc_13210:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_39708_type* @global_var_39708.3440 to i32), i32* %arg1, align 4
  %v1_1322a = add i32 %tmp2, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1322a, i32* @eax, align 4
  %v2_1322d = inttoptr i32 %v1_1322a to i32*
  store i32 ptrtoint (i32* @global_var_3971c.3441 to i32), i32* %v2_1322d, align 4
  %v0_13234 = load i32, i32* @eax, align 4
  %v2_13237 = call i32 @function_25af0(i32 %v0_13234)
  store i32 %v2_13237, i32* %eax.global-to-local, align 4
  %v0_1323c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1323c = inttoptr i32 %v0_1323c to i32*
  store i32 ptrtoint (%vtable_396e8_type* @global_var_396e8.3339 to i32), i32* %v1_1323c, align 4
  %v4_13242 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13242
}

define i32 @function_13249(i32 %arg1) local_unnamed_addr {
dec_label_pc_13249:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13249 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13249 = add i32 %v0_13249, 1696343108
  %v2_13249 = inttoptr i32 %v1_13249 to i32*
  %v3_13249 = load i32, i32* %v2_13249, align 4
  %v4_13249 = add i32 %v3_13249, -1
  store i32 %v4_13249, i32* %v2_13249, align 4
  %v0_1324f = load i32, i32* %eax.global-to-local, align 4
  %v1_1324f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1324f = xor i32 %v1_1324f, %v0_1324f
  %v3_1324f = icmp eq i32 %v2_1324f, 0
  store i32 %v2_1324f, i32* %eax.global-to-local, align 4
  %v1_13255 = icmp eq i1 %v3_1324f, false
  br i1 %v1_13255, label %dec_label_pc_13264, label %dec_label_pc_13257

dec_label_pc_13257:                               ; preds = %dec_label_pc_13249
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13264

dec_label_pc_13264:                               ; preds = %dec_label_pc_13257, %dec_label_pc_13249
  ret i32 %v2_1324f
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13270:
  %v4_13270 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_13275 = inttoptr i32 %v4_13270 to i32*
  %v2_13275 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32* %v1_13275)
  ret i32 %v2_13275
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13280:
  %v5_13280 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13280 to i32*
  %v3_13285 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32* %tmp100)
  ret i32 %v3_13285
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev(i32* %arg1) {
dec_label_pc_13290:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_132a4 = add i32 %tmp2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_132a4 = inttoptr i32 %v1_132a4 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_132a4, align 4
  %v0_132ab = load i32, i32* %ebx.global-to-local, align 4
  %v1_132ab = add i32 %v0_132ab, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_132ab, i32* @eax, align 4
  %v1_132ae = inttoptr i32 %v0_132ab to i32*
  store i32 ptrtoint (%vtable_39708_type* @global_var_39708.3440 to i32), i32* %v1_132ae, align 4
  %v0_132b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_132b4 = add i32 %v0_132b4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_132b4 = inttoptr i32 %v1_132b4 to i32*
  store i32 ptrtoint (i32* @global_var_3971c.3441 to i32), i32* %v2_132b4, align 4
  %v0_132bb = load i32, i32* @eax, align 4
  %v2_132be = call i32 @function_25b60(i32 %v0_132bb)
  store i32 %v2_132be, i32* %eax.global-to-local, align 4
  %v0_132c3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_132c3 = inttoptr i32 %v0_132c3 to i32*
  store i32 ptrtoint (%vtable_396e8_type* @global_var_396e8.3339 to i32), i32* %v1_132c3, align 4
  %v4_132c9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_132c9

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_396e8_type* @global_var_396e8.3339 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_132f0:
  %v4_132f0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_132f5 = call i32 @function_26600(i32 %v4_132f0)
  ret i32 %v1_132f5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13300:
  %v5_13300 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13305 = call i32 @function_26600(i32 %v5_13300)
  ret i32 %v2_13305

; uselistorder directives
  uselistorder i32 (i32)* @function_26600, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32* %arg1) {
dec_label_pc_13310:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_13310 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  %v1_13324 = add i32 %tmp99, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_13324 = inttoptr i32 %v1_13324 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_13324, align 4
  %v0_1332b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1332b = add i32 %v0_1332b, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1332b, i32* @eax, align 4
  %v1_1332e = inttoptr i32 %v0_1332b to i32*
  store i32 ptrtoint (%vtable_39108_type* @global_var_39108.3446 to i32), i32* %v1_1332e, align 4
  %v0_13334 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13334 = add i32 %v0_13334, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13334 = inttoptr i32 %v1_13334 to i32*
  store i32 ptrtoint (i32* @global_var_3911c.3447 to i32), i32* %v2_13334, align 4
  %v0_1333b = load i32, i32* @eax, align 4
  %v2_1333e = call i32 @function_25c00(i32 %v0_1333b)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1334e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1334e = inttoptr i32 %v0_1334e to i32*
  store i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), i32* %v1_1334e, align 4
  br i1 false, label %dec_label_pc_13363, label %dec_label_pc_13356

dec_label_pc_13356:                               ; preds = %dec_label_pc_13310
  store i32 %v0_13310, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13363

dec_label_pc_13363:                               ; preds = %dec_label_pc_13356, %dec_label_pc_13310
  %v0_13363 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13363

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13370:
  %v5_13370 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13370 to i32*
  %v3_13375 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32* %tmp100)
  ret i32 %v3_13375
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32* %arg1) {
dec_label_pc_13380:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_39108_type* @global_var_39108.3446 to i32), i32* %arg1, align 4
  %v1_1339a = add i32 %tmp2, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1339a, i32* %eax.global-to-local, align 4
  %v2_1339d = inttoptr i32 %v1_1339a to i32*
  store i32 ptrtoint (i32* @global_var_3911c.3447 to i32), i32* %v2_1339d, align 4
  %v0_133a4 = load i32, i32* %eax.global-to-local, align 4
  %v2_133a7 = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %v0_133a4)
  store i32 %v2_133a7, i32* %eax.global-to-local, align 4
  %v0_133ac = load i32, i32* @ebx, align 4
  %v1_133ac = inttoptr i32 %v0_133ac to i32*
  store i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), i32* %v1_133ac, align 4
  %v4_133b2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_133b2

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_, { 2, 1, 0 }
}

define i32 @function_133b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_133b9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_133b9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_133b9 = add i32 %v0_133b9, 1696343108
  %v2_133b9 = inttoptr i32 %v1_133b9 to i32*
  %v3_133b9 = load i32, i32* %v2_133b9, align 4
  %v4_133b9 = add i32 %v3_133b9, -1
  store i32 %v4_133b9, i32* %v2_133b9, align 4
  %v0_133bf = load i32, i32* %eax.global-to-local, align 4
  %v1_133bf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_133bf = xor i32 %v1_133bf, %v0_133bf
  %v3_133bf = icmp eq i32 %v2_133bf, 0
  store i32 %v2_133bf, i32* %eax.global-to-local, align 4
  %v1_133c5 = icmp eq i1 %v3_133bf, false
  br i1 %v1_133c5, label %dec_label_pc_133d4, label %dec_label_pc_133c7

dec_label_pc_133c7:                               ; preds = %dec_label_pc_133b9
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_133d4

dec_label_pc_133d4:                               ; preds = %dec_label_pc_133c7, %dec_label_pc_133b9
  ret i32 %v2_133bf
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_133e0:
  %v4_133e0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_133e5 = inttoptr i32 %v4_133e0 to i32*
  %v2_133e5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %v1_133e5)
  ret i32 %v2_133e5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_133f0:
  %v5_133f0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_133f0 to i32*
  %v3_133f5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %tmp100)
  ret i32 %v3_133f5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %arg1) {
dec_label_pc_13400:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_13414 = add i32 %tmp2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_13414 = inttoptr i32 %v1_13414 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_13414, align 4
  %v0_1341b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1341b = add i32 %v0_1341b, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1341b, i32* @eax, align 4
  %v1_1341e = inttoptr i32 %v0_1341b to i32*
  store i32 ptrtoint (%vtable_39108_type* @global_var_39108.3446 to i32), i32* %v1_1341e, align 4
  %v0_13424 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13424 = add i32 %v0_13424, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13424 = inttoptr i32 %v1_13424 to i32*
  store i32 ptrtoint (i32* @global_var_3911c.3447 to i32), i32* %v2_13424, align 4
  %v0_1342b = load i32, i32* @eax, align 4
  %v2_1342e = call i32 @function_25cd0(i32 %v0_1342b)
  store i32 %v2_1342e, i32* %eax.global-to-local, align 4
  %v0_13433 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13433 = inttoptr i32 %v0_13433 to i32*
  store i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), i32* %v1_13433, align 4
  %v4_13439 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13439

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39108_type* @global_var_39108.3446 to i32), { 3, 2, 1, 0 }
}

define i32 @function_13440(i32 %arg1) local_unnamed_addr {
dec_label_pc_13440:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13440 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13440 = add i32 %v0_13440, 1696343108
  %v2_13440 = inttoptr i32 %v1_13440 to i32*
  %v3_13440 = load i32, i32* %v2_13440, align 4
  %v4_13440 = add i32 %v3_13440, -1
  store i32 %v4_13440, i32* %v2_13440, align 4
  %v0_13446 = load i32, i32* %eax.global-to-local, align 4
  %v1_13446 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13446 = xor i32 %v1_13446, %v0_13446
  %v3_13446 = icmp eq i32 %v2_13446, 0
  store i32 %v2_13446, i32* %eax.global-to-local, align 4
  %v1_1344c = icmp eq i1 %v3_13446, false
  br i1 %v1_1344c, label %dec_label_pc_1345b, label %dec_label_pc_1344e

dec_label_pc_1344e:                               ; preds = %dec_label_pc_13440
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1345b

dec_label_pc_1345b:                               ; preds = %dec_label_pc_1344e, %dec_label_pc_13440
  ret i32 %v2_13446
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13460:
  %v4_13460 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_13465 = inttoptr i32 %v4_13460 to i32*
  %v2_13465 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32* %v1_13465)
  ret i32 %v2_13465
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13470:
  %v5_13470 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13470 to i32*
  %v3_13475 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32* %tmp100)
  ret i32 %v3_13475

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev(i32* %arg1) {
dec_label_pc_13480:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_13494 = add i32 %tmp2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_13494 = inttoptr i32 %v1_13494 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_13494, align 4
  %v0_1349b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1349b = add i32 %v0_1349b, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1349b, i32* %eax.global-to-local, align 4
  %v1_1349e = inttoptr i32 %v0_1349b to i32*
  store i32 ptrtoint (%vtable_397e8_type* @global_var_397e8.3450 to i32), i32* %v1_1349e, align 4
  %v0_134a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_134a4 = add i32 %v0_134a4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_134a4 = inttoptr i32 %v1_134a4 to i32*
  store i32 ptrtoint (i32* @global_var_397fc.3451 to i32), i32* %v2_134a4, align 4
  %v0_134ab = load i32, i32* %eax.global-to-local, align 4
  %v2_134ae = call i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %v0_134ab)
  store i32 %v2_134ae, i32* %eax.global-to-local, align 4
  %v0_134b3 = load i32, i32* @ebx, align 4
  %v1_134b3 = inttoptr i32 %v0_134b3 to i32*
  store i32 ptrtoint (%vtable_397c8_type* @global_var_397c8.3341 to i32), i32* %v1_134b3, align 4
  %v4_134b9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_134b9
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_134e0:
  %v4_134e0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_134e5 = call i32 @function_269e0(i32 %v4_134e0)
  ret i32 %v1_134e5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_134f0:
  %v5_134f0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_134f5 = call i32 @function_269e0(i32 %v5_134f0)
  ret i32 %v2_134f5

; uselistorder directives
  uselistorder i32 (i32)* @function_269e0, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev(i32* %arg1) {
dec_label_pc_13500:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_13500 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  %v1_13514 = add i32 %tmp99, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_13514 = inttoptr i32 %v1_13514 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_13514, align 4
  %v0_1351b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1351b = add i32 %v0_1351b, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1351b, i32* %eax.global-to-local, align 4
  %v1_1351e = inttoptr i32 %v0_1351b to i32*
  store i32 ptrtoint (%vtable_397e8_type* @global_var_397e8.3450 to i32), i32* %v1_1351e, align 4
  %v0_13524 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13524 = add i32 %v0_13524, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13524 = inttoptr i32 %v1_13524 to i32*
  store i32 ptrtoint (i32* @global_var_397fc.3451 to i32), i32* %v2_13524, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1353e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1353e = inttoptr i32 %v0_1353e to i32*
  store i32 ptrtoint (%vtable_397c8_type* @global_var_397c8.3341 to i32), i32* %v1_1353e, align 4
  br i1 false, label %dec_label_pc_13553, label %dec_label_pc_13546

dec_label_pc_13546:                               ; preds = %dec_label_pc_13500
  store i32 %v0_13500, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13553

dec_label_pc_13553:                               ; preds = %dec_label_pc_13546, %dec_label_pc_13500
  %v0_13553 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13553

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13560:
  %v5_13560 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13560 to i32*
  %v3_13565 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32* %tmp100)
  ret i32 %v3_13565
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev(i32* %arg1) {
dec_label_pc_13570:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_397e8_type* @global_var_397e8.3450 to i32), i32* %arg1, align 4
  %v0_1358a = load i32, i32* @ebx, align 4
  %v1_1358a = add i32 %v0_1358a, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1358a, i32* %eax.global-to-local, align 4
  %v2_1358d = inttoptr i32 %v1_1358a to i32*
  store i32 ptrtoint (i32* @global_var_397fc.3451 to i32), i32* %v2_1358d, align 4
  %v0_13594 = load i32, i32* %eax.global-to-local, align 4
  %v2_13597 = call i32 @function_25e50(i32 %v0_13594)
  store i32 %v2_13597, i32* %eax.global-to-local, align 4
  %v0_1359c = load i32, i32* @ebx, align 4
  %v1_1359c = inttoptr i32 %v0_1359c to i32*
  store i32 ptrtoint (%vtable_397c8_type* @global_var_397c8.3341 to i32), i32* %v1_1359c, align 4
  %v4_135a2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_135a2

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_397c8_type* @global_var_397c8.3341 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZThn4_N5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_135d0:
  %v5_135d0 = sub i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %tmp100 = inttoptr i32 %v5_135d0 to i32*
  %v3_135d5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev(i32* %tmp100)
  ret i32 %v3_135d5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev(i32* %arg1) {
dec_label_pc_135e0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_39448_type* @global_var_39448.3452 to i32), i32* %arg1, align 4
  %v1_135fa = add i32 %tmp2, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_135fa, i32* @eax, align 4
  %v2_135fd = inttoptr i32 %v1_135fa to i32*
  store i32 ptrtoint (i32* @global_var_3945c.3453 to i32), i32* %v2_135fd, align 4
  %v0_13604 = load i32, i32* @eax, align 4
  %v2_13607 = call i32 @function_25ec0(i32 %v0_13604)
  store i32 %v2_13607, i32* %eax.global-to-local, align 4
  %v0_1360c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1360c = inttoptr i32 %v0_1360c to i32*
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %v1_1360c, align 4
  %v4_13612 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13612
}

define i32 @function_13619(i32 %arg1) local_unnamed_addr {
dec_label_pc_13619:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13619 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13619 = add i32 %v0_13619, 1696343108
  %v2_13619 = inttoptr i32 %v1_13619 to i32*
  %v3_13619 = load i32, i32* %v2_13619, align 4
  %v4_13619 = add i32 %v3_13619, -1
  store i32 %v4_13619, i32* %v2_13619, align 4
  %v0_1361f = load i32, i32* %eax.global-to-local, align 4
  %v1_1361f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1361f = xor i32 %v1_1361f, %v0_1361f
  %v3_1361f = icmp eq i32 %v2_1361f, 0
  store i32 %v2_1361f, i32* %eax.global-to-local, align 4
  %v1_13625 = icmp eq i1 %v3_1361f, false
  br i1 %v1_13625, label %dec_label_pc_13634, label %dec_label_pc_13627

dec_label_pc_13627:                               ; preds = %dec_label_pc_13619
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13634

dec_label_pc_13634:                               ; preds = %dec_label_pc_13627, %dec_label_pc_13619
  ret i32 %v2_1361f
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13640:
  %v4_13640 = sub i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v1_13645 = call i32 @function_26ca0(i32 %v4_13640)
  ret i32 %v1_13645
}

define i32 @_ZThn4_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13650:
  %v5_13650 = sub i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_13655 = call i32 @function_26ca0(i32 %v5_13650)
  ret i32 %v2_13655

; uselistorder directives
  uselistorder i32 (i32)* @function_26ca0, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_13660:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_13660 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* @ebx, align 4
  %v1_13674 = add i32 %tmp99, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_13674 = inttoptr i32 %v1_13674 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_13674, align 4
  %v0_1367b = load i32, i32* @ebx, align 4
  %v1_1367b = add i32 %v0_1367b, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1367b, i32* @eax, align 4
  %v1_1367e = inttoptr i32 %v0_1367b to i32*
  store i32 ptrtoint (%vtable_39448_type* @global_var_39448.3452 to i32), i32* %v1_1367e, align 4
  %v0_13684 = load i32, i32* @ebx, align 4
  %v1_13684 = add i32 %v0_13684, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_13684 = inttoptr i32 %v1_13684 to i32*
  store i32 ptrtoint (i32* @global_var_3945c.3453 to i32), i32* %v2_13684, align 4
  %v0_1368b = load i32, i32* @eax, align 4
  %v2_1368e = call i32 @function_25f50(i32 %v0_1368b)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1369e = load i32, i32* @ebx, align 4
  %v1_1369e = inttoptr i32 %v0_1369e to i32*
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %v1_1369e, align 4
  br i1 false, label %dec_label_pc_136b3, label %dec_label_pc_136a6

dec_label_pc_136a6:                               ; preds = %dec_label_pc_13660
  store i32 %v0_13660, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_136b3

dec_label_pc_136b3:                               ; preds = %dec_label_pc_136a6, %dec_label_pc_13660
  %v0_136b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_136b3

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_136c0:
  %v4_136c0 = sub i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v1_136c5 = inttoptr i32 %v4_136c0 to i32*
  %v2_136c5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32* %v1_136c5)
  ret i32 %v2_136c5
}

define i32 @_ZThn4_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_136d0:
  %v5_136d0 = sub i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %tmp100 = inttoptr i32 %v5_136d0 to i32*
  %v3_136d5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32* %tmp100)
  ret i32 %v3_136d5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEED0Ev(i32* %arg1) {
dec_label_pc_136e0:
  %eax.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* @ebx, align 4
  %v1_136f4 = add i32 %tmp2, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_136f4 = inttoptr i32 %v1_136f4 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_136f4, align 4
  %v0_136fb = load i32, i32* @ebx, align 4
  %v1_136fb = add i32 %v0_136fb, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_136fb, i32* %eax.global-to-local, align 4
  %v1_136fe = inttoptr i32 %v0_136fb to i32*
  store i32 ptrtoint (%vtable_39448_type* @global_var_39448.3452 to i32), i32* %v1_136fe, align 4
  %v0_13704 = load i32, i32* @ebx, align 4
  %v1_13704 = add i32 %v0_13704, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_13704 = inttoptr i32 %v1_13704 to i32*
  store i32 ptrtoint (i32* @global_var_3945c.3453 to i32), i32* %v2_13704, align 4
  %v0_1370b = load i32, i32* %eax.global-to-local, align 4
  %v2_1370e = trunc i32 %v0_1370b to i8
  %v3_1370e = call i32 @function_25fb0(i8 %v2_1370e)
  store i32 %v3_1370e, i32* %eax.global-to-local, align 4
  %v0_13713 = load i32, i32* @ebx, align 4
  %v1_13713 = inttoptr i32 %v0_13713 to i32*
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %v1_13713, align 4
  %v4_13719 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13719
}

define i32 @function_13720(i32 %arg1) local_unnamed_addr {
dec_label_pc_13720:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13720 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13720 = add i32 %v0_13720, 1696343108
  %v2_13720 = inttoptr i32 %v1_13720 to i32*
  %v3_13720 = load i32, i32* %v2_13720, align 4
  %v4_13720 = add i32 %v3_13720, -1
  store i32 %v4_13720, i32* %v2_13720, align 4
  %v0_13726 = load i32, i32* %eax.global-to-local, align 4
  %v1_13726 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13726 = xor i32 %v1_13726, %v0_13726
  %v3_13726 = icmp eq i32 %v2_13726, 0
  store i32 %v2_13726, i32* %eax.global-to-local, align 4
  %v1_1372c = icmp eq i1 %v3_13726, false
  br i1 %v1_1372c, label %dec_label_pc_1373b, label %dec_label_pc_1372e

dec_label_pc_1372e:                               ; preds = %dec_label_pc_13720
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1373b

dec_label_pc_1373b:                               ; preds = %dec_label_pc_1372e, %dec_label_pc_13720
  ret i32 %v2_13726
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13740:
  %v4_13740 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_13745 = inttoptr i32 %v4_13740 to i32*
  %v2_13745 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %v1_13745)
  ret i32 %v2_13745
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13750:
  %v5_13750 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13750 to i32*
  %v3_13755 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %tmp100)
  ret i32 %v3_13755
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %arg1) {
dec_label_pc_13760:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_13774 = add i32 %tmp2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_13774 = inttoptr i32 %v1_13774 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_13774, align 4
  %v0_1377b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1377b = add i32 %v0_1377b, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1377b, i32* @eax, align 4
  %v1_1377e = inttoptr i32 %v0_1377b to i32*
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.3444 to i32), i32* %v1_1377e, align 4
  %v0_13784 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13784 = add i32 %v0_13784, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13784 = inttoptr i32 %v1_13784 to i32*
  store i32 ptrtoint (i32* @global_var_3901c.3445 to i32), i32* %v2_13784, align 4
  %v0_1378b = load i32, i32* @eax, align 4
  %v2_1378e = call i32 @function_26030(i32 %v0_1378b)
  store i32 %v2_1378e, i32* %eax.global-to-local, align 4
  %v0_13793 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13793 = inttoptr i32 %v0_13793 to i32*
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %v1_13793, align 4
  %v4_13799 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13799
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_137c0:
  %v4_137c0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_137c5 = call i32 @function_26fa0(i32 %v4_137c0)
  ret i32 %v1_137c5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_137d0:
  %v5_137d0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_137d5 = call i32 @function_26fa0(i32 %v5_137d0)
  ret i32 %v2_137d5

; uselistorder directives
  uselistorder i32 (i32)* @function_26fa0, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_137e0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_137e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  %v1_137f4 = add i32 %tmp99, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_137f4 = inttoptr i32 %v1_137f4 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_137f4, align 4
  %v0_137fb = load i32, i32* %ebx.global-to-local, align 4
  %v1_137fb = add i32 %v0_137fb, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_137fb, i32* %eax.global-to-local, align 4
  %v1_137fe = inttoptr i32 %v0_137fb to i32*
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.3444 to i32), i32* %v1_137fe, align 4
  %v0_13804 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13804 = add i32 %v0_13804, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13804 = inttoptr i32 %v1_13804 to i32*
  store i32 ptrtoint (i32* @global_var_3901c.3445 to i32), i32* %v2_13804, align 4
  %v0_1380b = load i32, i32* %eax.global-to-local, align 4
  %v2_1380e = call i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEj(i32 %v0_1380b)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1381e = load i32, i32* @ebx, align 4
  %v1_1381e = inttoptr i32 %v0_1381e to i32*
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %v1_1381e, align 4
  br i1 false, label %dec_label_pc_13833, label %dec_label_pc_13826

dec_label_pc_13826:                               ; preds = %dec_label_pc_137e0
  store i32 %v0_137e0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13833

dec_label_pc_13833:                               ; preds = %dec_label_pc_13826, %dec_label_pc_137e0
  %v0_13833 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13833

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 0 }
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13840:
  %v5_13840 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_13840 to i32*
  %v3_13845 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32* %tmp100)
  ret i32 %v3_13845
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32* %arg1) {
dec_label_pc_13850:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.3444 to i32), i32* %arg1, align 4
  %v1_1386a = add i32 %tmp2, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1386a, i32* %eax.global-to-local, align 4
  %v2_1386d = inttoptr i32 %v1_1386a to i32*
  store i32 ptrtoint (i32* @global_var_3901c.3445 to i32), i32* %v2_1386d, align 4
  %v0_1387c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1387c = inttoptr i32 %v0_1387c to i32*
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %v1_1387c, align 4
  %v4_13882 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_13882
}

define i32 @function_13889(i32 %arg1) local_unnamed_addr {
dec_label_pc_13889:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13889 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13889 = add i32 %v0_13889, 1696343108
  %v2_13889 = inttoptr i32 %v1_13889 to i32*
  %v3_13889 = load i32, i32* %v2_13889, align 4
  %v4_13889 = add i32 %v3_13889, -1
  store i32 %v4_13889, i32* %v2_13889, align 4
  %v0_1388f = load i32, i32* %eax.global-to-local, align 4
  %v1_1388f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1388f = xor i32 %v1_1388f, %v0_1388f
  %v3_1388f = icmp eq i32 %v2_1388f, 0
  store i32 %v2_1388f, i32* %eax.global-to-local, align 4
  %v1_13895 = icmp eq i1 %v3_1388f, false
  br i1 %v1_13895, label %dec_label_pc_138a4, label %dec_label_pc_13897

dec_label_pc_13897:                               ; preds = %dec_label_pc_13889
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_138a4

dec_label_pc_138a4:                               ; preds = %dec_label_pc_13897, %dec_label_pc_13889
  ret i32 %v2_1388f
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_138b0:
  %v5_138b0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_138b0 to i32*
  %v3_138b5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32* %tmp100)
  ret i32 %v3_138b5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32* %arg1) {
dec_label_pc_138c0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_38f28_type* @global_var_38f28.3442 to i32), i32* %arg1, align 4
  %v1_138da = add i32 %tmp2, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_138da, i32* %eax.global-to-local, align 4
  %v2_138dd = inttoptr i32 %v1_138da to i32*
  store i32 ptrtoint (i32* @global_var_38f3c.3443 to i32), i32* %v2_138dd, align 4
  %v0_138ec = load i32, i32* %ebx.global-to-local, align 4
  %v1_138ec = inttoptr i32 %v0_138ec to i32*
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %v1_138ec, align 4
  %v4_138f2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_138f2
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13920:
  %eax.global-to-local = alloca i32, align 4
  %v0_13925 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13925
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13930:
  %eax.global-to-local = alloca i32, align 4
  %v0_13935 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13935
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_13940:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_13940 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  %v1_13954 = add i32 %tmp99, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_13954 = inttoptr i32 %v1_13954 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_13954, align 4
  %v0_1395b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1395b = add i32 %v0_1395b, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1395b, i32* @eax, align 4
  %v1_1395e = inttoptr i32 %v0_1395b to i32*
  store i32 ptrtoint (%vtable_38f28_type* @global_var_38f28.3442 to i32), i32* %v1_1395e, align 4
  %v0_13964 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13964 = add i32 %v0_13964, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13964 = inttoptr i32 %v1_13964 to i32*
  store i32 ptrtoint (i32* @global_var_38f3c.3443 to i32), i32* %v2_13964, align 4
  %v0_1396b = load i32, i32* @eax, align 4
  %v2_1396e = call i32 @function_26230(i32 %v0_1396b)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1397e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1397e = inttoptr i32 %v0_1397e to i32*
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %v1_1397e, align 4
  br i1 false, label %dec_label_pc_13993, label %dec_label_pc_13986

dec_label_pc_13986:                               ; preds = %dec_label_pc_13940
  store i32 %v0_13940, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13993

dec_label_pc_13993:                               ; preds = %dec_label_pc_13986, %dec_label_pc_13940
  %v0_13993 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13993

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 0 }
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_139a0:
  %v4_139a0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_139a5 = inttoptr i32 %v4_139a0 to i32*
  %v2_139a5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %v1_139a5)
  ret i32 %v2_139a5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_139b0:
  %v5_139b0 = sub i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp100 = inttoptr i32 %v5_139b0 to i32*
  %v3_139b5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %tmp100)
  ret i32 %v3_139b5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %arg1) {
dec_label_pc_139c0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = ptrtoint i32* %arg1 to i32
  store i32 %tmp2, i32* %ebx.global-to-local, align 4
  %v1_139d4 = add i32 %tmp2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_139d4 = inttoptr i32 %v1_139d4 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_139d4, align 4
  %v0_139db = load i32, i32* %ebx.global-to-local, align 4
  %v1_139db = add i32 %v0_139db, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_139db, i32* @eax, align 4
  %v1_139de = inttoptr i32 %v0_139db to i32*
  store i32 ptrtoint (%vtable_38f28_type* @global_var_38f28.3442 to i32), i32* %v1_139de, align 4
  %v0_139e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_139e4 = add i32 %v0_139e4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_139e4 = inttoptr i32 %v1_139e4 to i32*
  store i32 ptrtoint (i32* @global_var_38f3c.3443 to i32), i32* %v2_139e4, align 4
  %v0_139eb = load i32, i32* @eax, align 4
  %v2_139ee = call i32 @function_26290(i32 %v0_139eb)
  store i32 %v2_139ee, i32* %eax.global-to-local, align 4
  %v0_139f3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_139f3 = inttoptr i32 %v0_139f3 to i32*
  store i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), i32* %v1_139f3, align 4
  %v4_139f9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_139f9

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38ed8_type* @global_var_38ed8.3336 to i32), { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_13a00(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a00:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_13a00 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13a00 = add i32 %v0_13a00, 1696343108
  %v2_13a00 = inttoptr i32 %v1_13a00 to i32*
  %v3_13a00 = load i32, i32* %v2_13a00, align 4
  %v4_13a00 = add i32 %v3_13a00, -1
  store i32 %v4_13a00, i32* %v2_13a00, align 4
  %v0_13a06 = load i32, i32* %eax.global-to-local, align 4
  %v1_13a06 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13a06 = xor i32 %v1_13a06, %v0_13a06
  %v3_13a06 = icmp eq i32 %v2_13a06, 0
  store i32 %v2_13a06, i32* %eax.global-to-local, align 4
  %v1_13a0c = icmp eq i1 %v3_13a06, false
  br i1 %v1_13a0c, label %dec_label_pc_13a1b, label %dec_label_pc_13a0e

dec_label_pc_13a0e:                               ; preds = %dec_label_pc_13a00
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_13a1b

dec_label_pc_13a1b:                               ; preds = %dec_label_pc_13a0e, %dec_label_pc_13a00
  ret i32 %v2_13a06
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a20:
  %ebx.global-to-local = alloca i32, align 4
  %v0_13a20 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_13a49

bb:                                               ; preds = %dec_label_pc_13a20
  br label %dec_label_pc_13a49

dec_label_pc_13a49:                               ; preds = %bb, %dec_label_pc_13a20
  store i32 %v0_13a20, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_13a56(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a56:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_13a60:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_13a73 = load i32, i32* %ebx.global-to-local, align 4
  %v0_13a77 = load i32, i32* %esi.global-to-local, align 4
  %v2_13a7b = load i32, i32* %arg1, align 4
  store i32 %v2_13a7b, i32* %ebx.global-to-local, align 4
  %v1_13a7d = icmp eq i32 %v2_13a7b, 0
  br i1 %v1_13a7d, label %dec_label_pc_13a92, label %dec_label_pc_13a81

dec_label_pc_13a81:                               ; preds = %dec_label_pc_13a60
  store i32 -1, i32* %esi.global-to-local, align 4
  %v1_13a88 = add i32 %v2_13a7b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_13a88 = inttoptr i32 %v1_13a88 to i32*
  %v3_13a88 = load i32, i32* %v2_13a88, align 4
  %v5_13a88 = add i32 %v3_13a88, -1
  %v15_13a88 = icmp eq i32 %v5_13a88, 0
  store i32 %v5_13a88, i32* %v2_13a88, align 4
  br i1 %v15_13a88, label %dec_label_pc_13ab0, label %dec_label_pc_13a92

dec_label_pc_13a92:                               ; preds = %dec_label_pc_13ab0, %dec_label_pc_13a81, %dec_label_pc_13a60
  br i1 false, label %dec_label_pc_13ae5, label %dec_label_pc_13a9f

dec_label_pc_13a9f:                               ; preds = %dec_label_pc_13a92
  store i32 %v0_13a73, i32* %ebx.global-to-local, align 4
  store i32 %v0_13a77, i32* %esi.global-to-local, align 4
  ret i32 0

dec_label_pc_13ab0:                               ; preds = %dec_label_pc_13a81
  %v1_13ab0 = inttoptr i32 %v2_13a7b to i32*
  %v1_13ab8 = add i32 %v2_13a7b, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_13ab8 = inttoptr i32 %v1_13ab8 to i32*
  %v3_13ab8 = load i32, i32* %v2_13ab8, align 4
  %v4_13ab8 = load i32, i32* %esi.global-to-local, align 4
  %v5_13ab8 = add i32 %v4_13ab8, %v3_13ab8
  store i32 %v5_13ab8, i32* %v2_13ab8, align 4
  store i32 %v3_13ab8, i32* %esi.global-to-local, align 4
  %v10_13abd = icmp eq i32 %v3_13ab8, 1
  %v1_13ac0 = icmp eq i1 %v10_13abd, false
  br i1 %v1_13ac0, label %dec_label_pc_13a92, label %dec_label_pc_13ac2

dec_label_pc_13ac2:                               ; preds = %dec_label_pc_13ab0
  br i1 false, label %dec_label_pc_13ae5, label %dec_label_pc_13acf

dec_label_pc_13acf:                               ; preds = %dec_label_pc_13ac2
  %v2_13acf = load i32, i32* %v1_13ab0, align 4
  store i32 %v0_13a77, i32* %esi.global-to-local, align 4
  store i32 %v0_13a73, i32* %ebx.global-to-local, align 4
  %v1_13add = add i32 %v2_13acf, 12
  %v2_13add = inttoptr i32 %v1_13add to i32*
  %v3_13add = load i32, i32* %v2_13add, align 4
  ret i32 %v3_13add

dec_label_pc_13ae5:                               ; preds = %dec_label_pc_13ac2, %dec_label_pc_13a92
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_13ab8, { 0, 2, 1 }
  uselistorder i32 %v2_13a7b, { 1, 0, 2, 3, 4 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13af0:
  %v0_13af3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @edx, align 4
  br i1 false, label %dec_label_pc_13b20, label %dec_label_pc_13b11

dec_label_pc_13b11:                               ; preds = %dec_label_pc_13af0
  %v1_13b11 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_13b11, i32* @eax, align 4
  %v1_13b1b = call i32 @function_27550(i32 %v0_13af3)
  ret i32 %v1_13b1b

dec_label_pc_13b20:                               ; preds = %dec_label_pc_13af0
  ret i32 %arg1
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_SF_SH_bSI_EEENSN_IFvRKNS2_10connectionES6_SF_SH_bSI_EEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13b30:
  %v1_13b44 = add i32 %arg1, 12
  %v2_13b44 = inttoptr i32 %v1_13b44 to i32*
  %v3_13b44 = load i32, i32* %v2_13b44, align 4
  %v1_13b47 = icmp eq i32 %v3_13b44, 0
  br i1 %v1_13b47, label %bb, label %dec_label_pc_13b4b

bb:                                               ; preds = %dec_label_pc_13b30
  %v0_13b34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13b49 = call i32 @function_13b80(i32 %v0_13b34)
  br label %dec_label_pc_13b4b

dec_label_pc_13b4b:                               ; preds = %bb, %dec_label_pc_13b30
  %v1_13b4b = add i32 %v3_13b44, 12
  ret i32 %v1_13b4b
}

define i32 @function_13b55(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b55:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13b55 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13b55 = add i32 %v0_13b55, 76088387
  %v2_13b55 = inttoptr i32 %v1_13b55 to i32*
  %v3_13b55 = load i32, i32* %v2_13b55, align 4
  %v4_13b55 = add i32 %v3_13b55, -1
  store i32 %v4_13b55, i32* %v2_13b55, align 4
  %v0_13b5b = load i32, i32* %eax.global-to-local, align 4
  %v1_13b5b = trunc i32 %v0_13b5b to i8
  %v2_13b5b = and i8 %v1_13b5b, ptrtoint (i32* @global_var_e8.3284 to i8)
  %v8_13b5b = zext i8 %v2_13b5b to i32
  %v10_13b5b = and i32 %v0_13b5b, -256
  %v11_13b5b = or i32 %v8_13b5b, %v10_13b5b
  store i32 %v11_13b5b, i32* %eax.global-to-local, align 4
  %v4_13b5d = and i8 %v1_13b5b, and (i8 ptrtoint (i32* @global_var_e8.3284 to i8), i8 15)
  %v5_13b5d = icmp ugt i8 %v4_13b5d, 9
  br i1 %v5_13b5d, label %bb, label %bb102

bb:                                               ; preds = %dec_label_pc_13b55
  %v7_13b5d = add i8 %v2_13b5b, -6
  %v8_13b5d = icmp ugt i8 %v2_13b5b, -103
  %v10_13b5d = sub i8 %v7_13b5d, ptrtoint (i32* @global_var_60.3454 to i8)
  %v11_13b5d = select i1 %v8_13b5d, i8 %v10_13b5d, i8 %v7_13b5d
  br label %bb103

bb102:                                            ; preds = %dec_label_pc_13b55
  %v21_13b5d = icmp ugt i8 %v2_13b5b, -103
  %v23_13b5d = sub i8 %v2_13b5b, ptrtoint (i32* @global_var_60.3454 to i8)
  %v24_13b5d = select i1 %v21_13b5d, i8 %v23_13b5d, i8 %v2_13b5b
  br label %bb103

bb103:                                            ; preds = %bb, %bb102
  %v25_13b5d.pn.in = phi i8 [ %v11_13b5d, %bb ], [ %v24_13b5d, %bb102 ]
  %v25_13b5d.pn = zext i8 %v25_13b5d.pn.in to i32
  %storemerge = or i32 %v25_13b5d.pn, %v10_13b5b
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_13b60 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13b60 = add i32 %v0_13b60, 1696343108
  %v2_13b60 = inttoptr i32 %v1_13b60 to i8*
  %v3_13b60 = load i8, i8* %v2_13b60, align 1
  %v4_13b60 = load i32, i32* %ecx.global-to-local, align 4
  %v5_13b60 = trunc i32 %v4_13b60 to i8
  %v6_13b60 = add i8 %v5_13b60, %v3_13b60
  store i8 %v6_13b60, i8* %v2_13b60, align 1
  %v0_13b66 = load i32, i32* %eax.global-to-local, align 4
  %v1_13b66 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13b66 = xor i32 %v1_13b66, %v0_13b66
  store i32 %v2_13b66, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_13b66

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %bb103, { 1, 0 }
}

define i32 @function_13b80(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b80:
  %v1_13b84 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13b84 = xor i32 %v1_13b84, %arg1
  %v3_13b84 = icmp eq i32 %v2_13b84, 0
  %v1_13b8b = icmp eq i1 %v3_13b84, false
  br i1 %v1_13b8b, label %dec_label_pc_13b92, label %dec_label_pc_13b8d

dec_label_pc_13b8d:                               ; preds = %dec_label_pc_13b80
  ret i32 %v2_13b84

dec_label_pc_13b92:                               ; preds = %dec_label_pc_13b80
  ret i32 %v2_13b84

; uselistorder directives
  uselistorder i32 %v2_13b84, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13ba0:
  %v1_13bb4 = add i32 %arg1, 12
  %v2_13bb4 = inttoptr i32 %v1_13bb4 to i32*
  %v3_13bb4 = load i32, i32* %v2_13bb4, align 4
  %v1_13bb7 = icmp eq i32 %v3_13bb4, 0
  br i1 %v1_13bb7, label %bb, label %dec_label_pc_13bbb

bb:                                               ; preds = %dec_label_pc_13ba0
  %v0_13ba4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13bb9 = call i32 @function_13bf0(i32 %v0_13ba4)
  br label %dec_label_pc_13bbb

dec_label_pc_13bbb:                               ; preds = %bb, %dec_label_pc_13ba0
  %v1_13bbb = add i32 %v3_13bb4, 12
  ret i32 %v1_13bbb
}

define i32 @function_13bc5(i32 %arg1) local_unnamed_addr {
dec_label_pc_13bc5:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13bc5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13bc5 = add i32 %v0_13bc5, 76088387
  %v2_13bc5 = inttoptr i32 %v1_13bc5 to i32*
  %v3_13bc5 = load i32, i32* %v2_13bc5, align 4
  %v4_13bc5 = add i32 %v3_13bc5, -1
  store i32 %v4_13bc5, i32* %v2_13bc5, align 4
  %v0_13bcb = load i32, i32* %eax.global-to-local, align 4
  %v1_13bcb = trunc i32 %v0_13bcb to i8
  %v2_13bcb = and i8 %v1_13bcb, ptrtoint (i32* @global_var_e8.3284 to i8)
  %v8_13bcb = zext i8 %v2_13bcb to i32
  %v10_13bcb = and i32 %v0_13bcb, -256
  %v11_13bcb = or i32 %v8_13bcb, %v10_13bcb
  store i32 %v11_13bcb, i32* %eax.global-to-local, align 4
  %v4_13bcd = and i8 %v1_13bcb, and (i8 ptrtoint (i32* @global_var_e8.3284 to i8), i8 15)
  %v5_13bcd = icmp ugt i8 %v4_13bcd, 9
  br i1 %v5_13bcd, label %bb, label %bb102

bb:                                               ; preds = %dec_label_pc_13bc5
  %v7_13bcd = add i8 %v2_13bcb, -6
  %v8_13bcd = icmp ugt i8 %v2_13bcb, -103
  %v10_13bcd = sub i8 %v7_13bcd, ptrtoint (i32* @global_var_60.3454 to i8)
  %v11_13bcd = select i1 %v8_13bcd, i8 %v10_13bcd, i8 %v7_13bcd
  br label %bb103

bb102:                                            ; preds = %dec_label_pc_13bc5
  %v21_13bcd = icmp ugt i8 %v2_13bcb, -103
  %v23_13bcd = sub i8 %v2_13bcb, ptrtoint (i32* @global_var_60.3454 to i8)
  %v24_13bcd = select i1 %v21_13bcd, i8 %v23_13bcd, i8 %v2_13bcb
  br label %bb103

bb103:                                            ; preds = %bb, %bb102
  %v25_13bcd.pn.in = phi i8 [ %v11_13bcd, %bb ], [ %v24_13bcd, %bb102 ]
  %v25_13bcd.pn = zext i8 %v25_13bcd.pn.in to i32
  %storemerge = or i32 %v25_13bcd.pn, %v10_13bcb
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_13bd0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13bd0 = add i32 %v0_13bd0, 1696343108
  %v2_13bd0 = inttoptr i32 %v1_13bd0 to i8*
  %v3_13bd0 = load i8, i8* %v2_13bd0, align 1
  %v4_13bd0 = load i32, i32* %ecx.global-to-local, align 4
  %v5_13bd0 = trunc i32 %v4_13bd0 to i8
  %v6_13bd0 = add i8 %v5_13bd0, %v3_13bd0
  store i8 %v6_13bd0, i8* %v2_13bd0, align 1
  %v0_13bd6 = load i32, i32* %eax.global-to-local, align 4
  %v1_13bd6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13bd6 = xor i32 %v1_13bd6, %v0_13bd6
  store i32 %v2_13bd6, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_13bd6

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %bb103, { 1, 0 }
}

define i32 @function_13bf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13bf0:
  %v1_13bf4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13bf4 = xor i32 %v1_13bf4, %arg1
  %v3_13bf4 = icmp eq i32 %v2_13bf4, 0
  %v1_13bfb = icmp eq i1 %v3_13bf4, false
  br i1 %v1_13bfb, label %dec_label_pc_13c02, label %dec_label_pc_13bfd

dec_label_pc_13bfd:                               ; preds = %dec_label_pc_13bf0
  ret i32 %v2_13bf4

dec_label_pc_13c02:                               ; preds = %dec_label_pc_13bf0
  ret i32 %v2_13bf4

; uselistorder directives
  uselistorder i32 %v2_13bf4, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13c10:
  %v1_13c24 = add i32 %arg1, 12
  %v2_13c24 = inttoptr i32 %v1_13c24 to i32*
  %v3_13c24 = load i32, i32* %v2_13c24, align 4
  %v1_13c27 = icmp eq i32 %v3_13c24, 0
  br i1 %v1_13c27, label %bb, label %dec_label_pc_13c2b

bb:                                               ; preds = %dec_label_pc_13c10
  %v0_13c14 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13c29 = call i32 @function_13c60(i32 %v0_13c14)
  br label %dec_label_pc_13c2b

dec_label_pc_13c2b:                               ; preds = %bb, %dec_label_pc_13c10
  %v1_13c2b = add i32 %v3_13c24, 12
  ret i32 %v1_13c2b
}

define i32 @function_13c60(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c60:
  %v1_13c64 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13c64 = xor i32 %v1_13c64, %arg1
  %v3_13c64 = icmp eq i32 %v2_13c64, 0
  %v1_13c6b = icmp eq i1 %v3_13c64, false
  br i1 %v1_13c6b, label %dec_label_pc_13c72, label %dec_label_pc_13c6d

dec_label_pc_13c6d:                               ; preds = %dec_label_pc_13c60
  ret i32 %v2_13c64

dec_label_pc_13c72:                               ; preds = %dec_label_pc_13c60
  ret i32 %v2_13c64

; uselistorder directives
  uselistorder i32 %v2_13c64, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S9_SA_EEENSF_IFvRKNS2_10connectionES6_S9_SA_EEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13c80:
  %v1_13c94 = add i32 %arg1, 12
  %v2_13c94 = inttoptr i32 %v1_13c94 to i32*
  %v3_13c94 = load i32, i32* %v2_13c94, align 4
  %v1_13c97 = icmp eq i32 %v3_13c94, 0
  br i1 %v1_13c97, label %bb, label %dec_label_pc_13c9b

bb:                                               ; preds = %dec_label_pc_13c80
  %v0_13c84 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13c99 = call i32 @function_13cd0(i32 %v0_13c84)
  br label %dec_label_pc_13c9b

dec_label_pc_13c9b:                               ; preds = %bb, %dec_label_pc_13c80
  %v1_13c9b = add i32 %v3_13c94, 12
  ret i32 %v1_13c9b
}

define i32 @function_13cd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13cd0:
  %v1_13cd4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13cd4 = xor i32 %v1_13cd4, %arg1
  %v3_13cd4 = icmp eq i32 %v2_13cd4, 0
  %v1_13cdb = icmp eq i1 %v3_13cd4, false
  br i1 %v1_13cdb, label %dec_label_pc_13ce2, label %dec_label_pc_13cdd

dec_label_pc_13cdd:                               ; preds = %dec_label_pc_13cd0
  ret i32 %v2_13cd4

dec_label_pc_13ce2:                               ; preds = %dec_label_pc_13cd0
  ret i32 %v2_13cd4

; uselistorder directives
  uselistorder i32 %v2_13cd4, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13cf0:
  %v1_13d04 = add i32 %arg1, 12
  %v2_13d04 = inttoptr i32 %v1_13d04 to i32*
  %v3_13d04 = load i32, i32* %v2_13d04, align 4
  %v1_13d07 = icmp eq i32 %v3_13d04, 0
  br i1 %v1_13d07, label %bb, label %dec_label_pc_13d0b

bb:                                               ; preds = %dec_label_pc_13cf0
  %v0_13cf4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13d09 = call i32 @function_13d40(i32 %v0_13cf4)
  br label %dec_label_pc_13d0b

dec_label_pc_13d0b:                               ; preds = %bb, %dec_label_pc_13cf0
  %v1_13d0b = add i32 %v3_13d04, 12
  ret i32 %v1_13d0b
}

define i32 @function_13d15(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d15:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13d15 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13d15 = add i32 %v0_13d15, 76088387
  %v2_13d15 = inttoptr i32 %v1_13d15 to i32*
  %v3_13d15 = load i32, i32* %v2_13d15, align 4
  %v4_13d15 = add i32 %v3_13d15, -1
  store i32 %v4_13d15, i32* %v2_13d15, align 4
  %v0_13d1b = load i32, i32* %eax.global-to-local, align 4
  %v1_13d1b = trunc i32 %v0_13d1b to i8
  %v2_13d1b = and i8 %v1_13d1b, ptrtoint (i32* @global_var_e8.3284 to i8)
  %v8_13d1b = zext i8 %v2_13d1b to i32
  %v10_13d1b = and i32 %v0_13d1b, -256
  %v11_13d1b = or i32 %v8_13d1b, %v10_13d1b
  store i32 %v11_13d1b, i32* %eax.global-to-local, align 4
  %v4_13d1d = and i8 %v1_13d1b, and (i8 ptrtoint (i32* @global_var_e8.3284 to i8), i8 15)
  %v5_13d1d = icmp ugt i8 %v4_13d1d, 9
  br i1 %v5_13d1d, label %bb, label %bb102

bb:                                               ; preds = %dec_label_pc_13d15
  %v7_13d1d = add i8 %v2_13d1b, -6
  %v8_13d1d = icmp ugt i8 %v2_13d1b, -103
  %v10_13d1d = sub i8 %v7_13d1d, ptrtoint (i32* @global_var_60.3454 to i8)
  %v11_13d1d = select i1 %v8_13d1d, i8 %v10_13d1d, i8 %v7_13d1d
  br label %bb103

bb102:                                            ; preds = %dec_label_pc_13d15
  %v21_13d1d = icmp ugt i8 %v2_13d1b, -103
  %v23_13d1d = sub i8 %v2_13d1b, ptrtoint (i32* @global_var_60.3454 to i8)
  %v24_13d1d = select i1 %v21_13d1d, i8 %v23_13d1d, i8 %v2_13d1b
  br label %bb103

bb103:                                            ; preds = %bb, %bb102
  %v25_13d1d.pn.in = phi i8 [ %v11_13d1d, %bb ], [ %v24_13d1d, %bb102 ]
  %v25_13d1d.pn = zext i8 %v25_13d1d.pn.in to i32
  %storemerge = or i32 %v25_13d1d.pn, %v10_13d1b
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_13d20 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13d20 = add i32 %v0_13d20, 1696343108
  %v2_13d20 = inttoptr i32 %v1_13d20 to i8*
  %v3_13d20 = load i8, i8* %v2_13d20, align 1
  %v4_13d20 = load i32, i32* %ecx.global-to-local, align 4
  %v5_13d20 = trunc i32 %v4_13d20 to i8
  %v6_13d20 = add i8 %v5_13d20, %v3_13d20
  store i8 %v6_13d20, i8* %v2_13d20, align 1
  %v0_13d26 = load i32, i32* %eax.global-to-local, align 4
  %v1_13d26 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13d26 = xor i32 %v1_13d26, %v0_13d26
  store i32 %v2_13d26, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_13d26

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %bb103, { 1, 0 }
}

define i32 @function_13d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d40:
  %v1_13d44 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13d44 = xor i32 %v1_13d44, %arg1
  %v3_13d44 = icmp eq i32 %v2_13d44, 0
  %v1_13d4b = icmp eq i1 %v3_13d44, false
  br i1 %v1_13d4b, label %dec_label_pc_13d52, label %dec_label_pc_13d4d

dec_label_pc_13d4d:                               ; preds = %dec_label_pc_13d40
  ret i32 %v2_13d44

dec_label_pc_13d52:                               ; preds = %dec_label_pc_13d40
  ret i32 %v2_13d44

; uselistorder directives
  uselistorder i32 %v2_13d44, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13d60:
  %v1_13d74 = add i32 %arg1, 12
  %v2_13d74 = inttoptr i32 %v1_13d74 to i32*
  %v3_13d74 = load i32, i32* %v2_13d74, align 4
  %v1_13d77 = icmp eq i32 %v3_13d74, 0
  br i1 %v1_13d77, label %bb, label %dec_label_pc_13d7b

bb:                                               ; preds = %dec_label_pc_13d60
  %v0_13d64 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13d79 = call i32 @function_13db0(i32 %v0_13d64)
  br label %dec_label_pc_13d7b

dec_label_pc_13d7b:                               ; preds = %bb, %dec_label_pc_13d60
  %v1_13d7b = add i32 %v3_13d74, 12
  ret i32 %v1_13d7b
}

define i32 @function_13d85(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d85:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13d85 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13d85 = add i32 %v0_13d85, 76088387
  %v2_13d85 = inttoptr i32 %v1_13d85 to i32*
  %v3_13d85 = load i32, i32* %v2_13d85, align 4
  %v4_13d85 = add i32 %v3_13d85, -1
  store i32 %v4_13d85, i32* %v2_13d85, align 4
  %v0_13d8b = load i32, i32* %eax.global-to-local, align 4
  %v1_13d8b = trunc i32 %v0_13d8b to i8
  %v2_13d8b = and i8 %v1_13d8b, ptrtoint (i32* @global_var_e8.3284 to i8)
  %v8_13d8b = zext i8 %v2_13d8b to i32
  %v10_13d8b = and i32 %v0_13d8b, -256
  %v11_13d8b = or i32 %v8_13d8b, %v10_13d8b
  store i32 %v11_13d8b, i32* %eax.global-to-local, align 4
  %v4_13d8d = and i8 %v1_13d8b, and (i8 ptrtoint (i32* @global_var_e8.3284 to i8), i8 15)
  %v5_13d8d = icmp ugt i8 %v4_13d8d, 9
  br i1 %v5_13d8d, label %bb, label %bb102

bb:                                               ; preds = %dec_label_pc_13d85
  %v7_13d8d = add i8 %v2_13d8b, -6
  %v8_13d8d = icmp ugt i8 %v2_13d8b, -103
  %v10_13d8d = sub i8 %v7_13d8d, ptrtoint (i32* @global_var_60.3454 to i8)
  %v11_13d8d = select i1 %v8_13d8d, i8 %v10_13d8d, i8 %v7_13d8d
  br label %bb103

bb102:                                            ; preds = %dec_label_pc_13d85
  %v21_13d8d = icmp ugt i8 %v2_13d8b, -103
  %v23_13d8d = sub i8 %v2_13d8b, ptrtoint (i32* @global_var_60.3454 to i8)
  %v24_13d8d = select i1 %v21_13d8d, i8 %v23_13d8d, i8 %v2_13d8b
  br label %bb103

bb103:                                            ; preds = %bb, %bb102
  %v25_13d8d.pn.in = phi i8 [ %v11_13d8d, %bb ], [ %v24_13d8d, %bb102 ]
  %v25_13d8d.pn = zext i8 %v25_13d8d.pn.in to i32
  %storemerge = or i32 %v25_13d8d.pn, %v10_13d8b
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_13d90 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13d90 = add i32 %v0_13d90, 1696343108
  %v2_13d90 = inttoptr i32 %v1_13d90 to i8*
  %v3_13d90 = load i8, i8* %v2_13d90, align 1
  %v4_13d90 = load i32, i32* %ecx.global-to-local, align 4
  %v5_13d90 = trunc i32 %v4_13d90 to i8
  %v6_13d90 = add i8 %v5_13d90, %v3_13d90
  store i8 %v6_13d90, i8* %v2_13d90, align 1
  %v0_13d96 = load i32, i32* %eax.global-to-local, align 4
  %v1_13d96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13d96 = xor i32 %v1_13d96, %v0_13d96
  store i32 %v2_13d96, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_13d96

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %bb103, { 1, 0 }
}

define i32 @function_13db0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13db0:
  %v1_13db4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13db4 = xor i32 %v1_13db4, %arg1
  %v3_13db4 = icmp eq i32 %v2_13db4, 0
  %v1_13dbb = icmp eq i1 %v3_13db4, false
  br i1 %v1_13dbb, label %dec_label_pc_13dc2, label %dec_label_pc_13dbd

dec_label_pc_13dbd:                               ; preds = %dec_label_pc_13db0
  ret i32 %v2_13db4

dec_label_pc_13dc2:                               ; preds = %dec_label_pc_13db0
  ret i32 %v2_13db4

; uselistorder directives
  uselistorder i32 %v2_13db4, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13dd0:
  %v1_13de4 = add i32 %arg1, 12
  %v2_13de4 = inttoptr i32 %v1_13de4 to i32*
  %v3_13de4 = load i32, i32* %v2_13de4, align 4
  %v1_13de7 = icmp eq i32 %v3_13de4, 0
  br i1 %v1_13de7, label %bb, label %dec_label_pc_13deb

bb:                                               ; preds = %dec_label_pc_13dd0
  %v0_13dd4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13de9 = call i32 @function_13e20(i32 %v0_13dd4)
  br label %dec_label_pc_13deb

dec_label_pc_13deb:                               ; preds = %bb, %dec_label_pc_13dd0
  %v1_13deb = add i32 %v3_13de4, 12
  ret i32 %v1_13deb
}

define i32 @function_13df5(i32 %arg1) local_unnamed_addr {
dec_label_pc_13df5:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_13df5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13df5 = add i32 %v0_13df5, 76088387
  %v2_13df5 = inttoptr i32 %v1_13df5 to i32*
  %v3_13df5 = load i32, i32* %v2_13df5, align 4
  %v4_13df5 = add i32 %v3_13df5, -1
  store i32 %v4_13df5, i32* %v2_13df5, align 4
  %v0_13dfb = load i32, i32* %eax.global-to-local, align 4
  %v1_13dfb = trunc i32 %v0_13dfb to i8
  %v2_13dfb = and i8 %v1_13dfb, ptrtoint (i32* @global_var_e8.3284 to i8)
  %v8_13dfb = zext i8 %v2_13dfb to i32
  %v10_13dfb = and i32 %v0_13dfb, -256
  %v11_13dfb = or i32 %v8_13dfb, %v10_13dfb
  store i32 %v11_13dfb, i32* %eax.global-to-local, align 4
  %v4_13dfd = and i8 %v1_13dfb, and (i8 ptrtoint (i32* @global_var_e8.3284 to i8), i8 15)
  %v5_13dfd = icmp ugt i8 %v4_13dfd, 9
  br i1 %v5_13dfd, label %bb, label %bb102

bb:                                               ; preds = %dec_label_pc_13df5
  %v7_13dfd = add i8 %v2_13dfb, -6
  %v8_13dfd = icmp ugt i8 %v2_13dfb, -103
  %v10_13dfd = sub i8 %v7_13dfd, ptrtoint (i32* @global_var_60.3454 to i8)
  %v11_13dfd = select i1 %v8_13dfd, i8 %v10_13dfd, i8 %v7_13dfd
  br label %bb103

bb102:                                            ; preds = %dec_label_pc_13df5
  %v21_13dfd = icmp ugt i8 %v2_13dfb, -103
  %v23_13dfd = sub i8 %v2_13dfb, ptrtoint (i32* @global_var_60.3454 to i8)
  %v24_13dfd = select i1 %v21_13dfd, i8 %v23_13dfd, i8 %v2_13dfb
  br label %bb103

bb103:                                            ; preds = %bb, %bb102
  %v25_13dfd.pn.in = phi i8 [ %v11_13dfd, %bb ], [ %v24_13dfd, %bb102 ]
  %v25_13dfd.pn = zext i8 %v25_13dfd.pn.in to i32
  %storemerge = or i32 %v25_13dfd.pn, %v10_13dfb
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v0_13e00 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13e00 = add i32 %v0_13e00, 1696343108
  %v2_13e00 = inttoptr i32 %v1_13e00 to i8*
  %v3_13e00 = load i8, i8* %v2_13e00, align 1
  %v4_13e00 = load i32, i32* %ecx.global-to-local, align 4
  %v5_13e00 = trunc i32 %v4_13e00 to i8
  %v6_13e00 = add i8 %v5_13e00, %v3_13e00
  store i8 %v6_13e00, i8* %v2_13e00, align 1
  %v0_13e06 = load i32, i32* %eax.global-to-local, align 4
  %v1_13e06 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13e06 = xor i32 %v1_13e06, %v0_13e06
  store i32 %v2_13e06, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v2_13e06

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder label %bb103, { 1, 0 }
}

define i32 @function_13e20(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e20:
  %v1_13e24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13e24 = xor i32 %v1_13e24, %arg1
  %v3_13e24 = icmp eq i32 %v2_13e24, 0
  %v1_13e2b = icmp eq i1 %v3_13e24, false
  br i1 %v1_13e2b, label %dec_label_pc_13e32, label %dec_label_pc_13e2d

dec_label_pc_13e2d:                               ; preds = %dec_label_pc_13e20
  ret i32 %v2_13e24

dec_label_pc_13e32:                               ; preds = %dec_label_pc_13e20
  ret i32 %v2_13e24

; uselistorder directives
  uselistorder i32 %v2_13e24, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13e40:
  %v1_13e54 = add i32 %arg1, 12
  %v2_13e54 = inttoptr i32 %v1_13e54 to i32*
  %v3_13e54 = load i32, i32* %v2_13e54, align 4
  %v1_13e57 = icmp eq i32 %v3_13e54, 0
  br i1 %v1_13e57, label %bb, label %dec_label_pc_13e5b

bb:                                               ; preds = %dec_label_pc_13e40
  %v0_13e44 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13e59 = call i32 @function_13e90(i32 %v0_13e44)
  br label %dec_label_pc_13e5b

dec_label_pc_13e5b:                               ; preds = %bb, %dec_label_pc_13e40
  %v1_13e5b = add i32 %v3_13e54, 12
  ret i32 %v1_13e5b
}

define i32 @function_13e90(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e90:
  %v1_13e94 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13e94 = xor i32 %v1_13e94, %arg1
  %v3_13e94 = icmp eq i32 %v2_13e94, 0
  %v1_13e9b = icmp eq i1 %v3_13e94, false
  br i1 %v1_13e9b, label %dec_label_pc_13ea2, label %dec_label_pc_13e9d

dec_label_pc_13e9d:                               ; preds = %dec_label_pc_13e90
  ret i32 %v2_13e94

dec_label_pc_13ea2:                               ; preds = %dec_label_pc_13e90
  ret i32 %v2_13e94

; uselistorder directives
  uselistorder i32 %v2_13e94, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13eb0:
  %v1_13ec4 = add i32 %arg1, 12
  %v2_13ec4 = inttoptr i32 %v1_13ec4 to i32*
  %v3_13ec4 = load i32, i32* %v2_13ec4, align 4
  %v1_13ec7 = icmp eq i32 %v3_13ec4, 0
  br i1 %v1_13ec7, label %bb, label %dec_label_pc_13ecb

bb:                                               ; preds = %dec_label_pc_13eb0
  %v0_13eb4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13ec9 = call i32 @function_13f00(i32 %v0_13eb4)
  br label %dec_label_pc_13ecb

dec_label_pc_13ecb:                               ; preds = %bb, %dec_label_pc_13eb0
  %v1_13ecb = add i32 %v3_13ec4, 12
  ret i32 %v1_13ecb
}

define i32 @function_13f00(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f00:
  %v1_13f04 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13f04 = xor i32 %v1_13f04, %arg1
  %v3_13f04 = icmp eq i32 %v2_13f04, 0
  %v1_13f0b = icmp eq i1 %v3_13f04, false
  br i1 %v1_13f0b, label %dec_label_pc_13f12, label %dec_label_pc_13f0d

dec_label_pc_13f0d:                               ; preds = %dec_label_pc_13f00
  ret i32 %v2_13f04

dec_label_pc_13f12:                               ; preds = %dec_label_pc_13f00
  ret i32 %v2_13f04

; uselistorder directives
  uselistorder i32 %v2_13f04, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEEEE7disposeEv(i32 %arg1) {
dec_label_pc_13f20:
  %v1_13f34 = add i32 %arg1, 12
  %v2_13f34 = inttoptr i32 %v1_13f34 to i32*
  %v3_13f34 = load i32, i32* %v2_13f34, align 4
  %v1_13f37 = icmp eq i32 %v3_13f34, 0
  br i1 %v1_13f37, label %bb, label %dec_label_pc_13f3b

bb:                                               ; preds = %dec_label_pc_13f20
  %v0_13f24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13f39 = call i32 @function_13f70(i32 %v0_13f24)
  br label %dec_label_pc_13f3b

dec_label_pc_13f3b:                               ; preds = %bb, %dec_label_pc_13f20
  %v1_13f3b = add i32 %v3_13f34, 12
  ret i32 %v1_13f3b
}

define i32 @function_13f70(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f70:
  %v1_13f74 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13f74 = xor i32 %v1_13f74, %arg1
  %v3_13f74 = icmp eq i32 %v2_13f74, 0
  %v1_13f7b = icmp eq i1 %v3_13f74, false
  br i1 %v1_13f7b, label %dec_label_pc_13f82, label %dec_label_pc_13f7d

dec_label_pc_13f7d:                               ; preds = %dec_label_pc_13f70
  ret i32 %v2_13f74

dec_label_pc_13f82:                               ; preds = %dec_label_pc_13f70
  ret i32 %v2_13f74

; uselistorder directives
  uselistorder i32 %v2_13f74, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIbRKSsS6_jNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbS6_S6_jEEENSB_IFbRKNS2_10connectionES6_S6_jEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_13f90:
  %ebx.global-to-local = alloca i32, align 4
  %v0_13f90 = load i32, i32* %ebx.global-to-local, align 4
  %v0_13f94 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_13fa4 = add i32 %arg1, 12
  %v2_13fa4 = inttoptr i32 %v1_13fa4 to i32*
  %v3_13fa4 = load i32, i32* %v2_13fa4, align 4
  store i32 %v3_13fa4, i32* @ebx, align 4
  %v1_13fa7 = icmp eq i32 %v3_13fa4, 0
  br i1 %v1_13fa7, label %bb, label %dec_label_pc_13fab

bb:                                               ; preds = %dec_label_pc_13f90
  %v2_13fa9 = call i32 @function_13fe0(i32 %v0_13f94)
  br label %dec_label_pc_13fab

dec_label_pc_13fab:                               ; preds = %bb, %dec_label_pc_13f90
  %v1_13fab = add i32 %v3_13fa4, 12
  store i32 %v1_13fab, i32* @eax, align 4
  %v1_13fb1 = trunc i32 %v1_13fab to i16
  %v2_13fb1 = call i32 @function_279f0(i16 %v1_13fb1)
  %v1_13fb6 = add i32 %v3_13fa4, 4
  store i32 %v1_13fb6, i32* @eax, align 4
  %v1_13fbc = trunc i32 %v1_13fb6 to i16
  %v2_13fbc = call i32 @function_279f0(i16 %v1_13fbc)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb103, label %dec_label_pc_13fce

bb103:                                            ; preds = %dec_label_pc_13fab
  br label %dec_label_pc_13fce

dec_label_pc_13fce:                               ; preds = %bb103, %dec_label_pc_13fab
  store i32 %v0_13f90, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_13fe0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13fe0:
  %v1_13fe4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13fe4 = xor i32 %v1_13fe4, %arg1
  %v3_13fe4 = icmp eq i32 %v2_13fe4, 0
  store i32 %v2_13fe4, i32* @eax, align 4
  %v1_13feb = icmp eq i1 %v3_13fe4, false
  br i1 %v1_13feb, label %bb, label %dec_label_pc_13fed

bb:                                               ; preds = %dec_label_pc_13fe0
  %v2_13feb = call i32 @function_13ff2()
  br label %dec_label_pc_13fed

dec_label_pc_13fed:                               ; preds = %bb, %dec_label_pc_13fe0
  %v0_13ff1 = phi i32 [ %v2_13feb, %bb ], [ %v2_13fe4, %dec_label_pc_13fe0 ]
  ret i32 %v0_13ff1
}

define i32 @function_13ff2() local_unnamed_addr {
dec_label_pc_13ff2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_13ff8() local_unnamed_addr {
dec_label_pc_13ff8:
  %eax.global-to-local = alloca i32, align 4
  %v0_13ff8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13ff8
}

define i32 @function_14000() local_unnamed_addr {
dec_label_pc_14000:
  %eax.global-to-local = alloca i32, align 4
  %v0_14000 = load i32, i32* %eax.global-to-local, align 4
  %v11_14000 = and i32 %v0_14000, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_14000, i32* @eax, align 4
  %v0_14002 = call i32 @function_8b000139()
  store i32 %v0_14002, i32* %eax.global-to-local, align 4
  ret i32 %v0_14002
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbxNS2_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS9_IFbRKNS2_10connectionExEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_14020:
  %ebx.global-to-local = alloca i32, align 4
  %v0_14020 = load i32, i32* %ebx.global-to-local, align 4
  %v0_14024 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14034 = add i32 %arg1, 12
  %v2_14034 = inttoptr i32 %v1_14034 to i32*
  %v3_14034 = load i32, i32* %v2_14034, align 4
  store i32 %v3_14034, i32* %ebx.global-to-local, align 4
  %v1_14037 = icmp eq i32 %v3_14034, 0
  br i1 %v1_14037, label %bb, label %dec_label_pc_1403b

bb:                                               ; preds = %dec_label_pc_14020
  %v2_14039 = call i32 @function_14070(i32 %v0_14024)
  br label %dec_label_pc_1403b

dec_label_pc_1403b:                               ; preds = %bb, %dec_label_pc_14020
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb103, label %dec_label_pc_1405e

bb103:                                            ; preds = %dec_label_pc_1403b
  br label %dec_label_pc_1405e

dec_label_pc_1405e:                               ; preds = %bb103, %dec_label_pc_1403b
  store i32 %v0_14020, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_14070(i32 %arg1) local_unnamed_addr {
dec_label_pc_14070:
  %v1_14074 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14074 = xor i32 %v1_14074, %arg1
  %v3_14074 = icmp eq i32 %v2_14074, 0
  store i32 %v2_14074, i32* @eax, align 4
  %v1_1407b = icmp eq i1 %v3_14074, false
  br i1 %v1_1407b, label %bb, label %dec_label_pc_1407d

bb:                                               ; preds = %dec_label_pc_14070
  %v3_1407b = call i32 @function_14082(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_1407d

dec_label_pc_1407d:                               ; preds = %bb, %dec_label_pc_14070
  %v0_14081 = phi i32 [ %v3_1407b, %bb ], [ %v2_14074, %dec_label_pc_14070 ]
  ret i32 %v0_14081
}

define i32 @function_14082(i32 %arg1) local_unnamed_addr {
dec_label_pc_14082:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14088() local_unnamed_addr {
dec_label_pc_14088:
  %eax.global-to-local = alloca i32, align 4
  %v0_14088 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14088
}

define i32 @function_14090() local_unnamed_addr {
dec_label_pc_14090:
  %eax.global-to-local = alloca i32, align 4
  %v0_14090 = load i32, i32* %eax.global-to-local, align 4
  %v11_14090 = and i32 %v0_14090, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_14090, i32* @eax, align 4
  %v0_14092 = call i32 @function_8b000139()
  store i32 %v0_14092, i32* %eax.global-to-local, align 4
  ret i32 %v0_14092
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvRKSsNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_140b0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_140b0 = load i32, i32* %ebx.global-to-local, align 4
  %v0_140b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_140c4 = add i32 %arg1, 12
  %v2_140c4 = inttoptr i32 %v1_140c4 to i32*
  %v3_140c4 = load i32, i32* %v2_140c4, align 4
  store i32 %v3_140c4, i32* @ebx, align 4
  %v1_140c7 = icmp eq i32 %v3_140c4, 0
  br i1 %v1_140c7, label %bb, label %dec_label_pc_140cb

bb:                                               ; preds = %dec_label_pc_140b0
  %v2_140c9 = call i32 @function_14100(i32 %v0_140b4)
  br label %dec_label_pc_140cb

dec_label_pc_140cb:                               ; preds = %bb, %dec_label_pc_140b0
  %v1_140cb = add i32 %v3_140c4, 12
  store i32 %v1_140cb, i32* @eax, align 4
  %v1_140d1 = call i32 @function_27b10(i32 %v1_140cb)
  %v1_140d6 = add i32 %v3_140c4, 4
  store i32 %v1_140d6, i32* @eax, align 4
  %v1_140dc = call i32 @function_27b10(i32 %v1_140d6)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb103, label %dec_label_pc_140ee

bb103:                                            ; preds = %dec_label_pc_140cb
  br label %dec_label_pc_140ee

dec_label_pc_140ee:                               ; preds = %bb103, %dec_label_pc_140cb
  store i32 %v0_140b0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_140c4, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_14100(i32 %arg1) local_unnamed_addr {
dec_label_pc_14100:
  %v1_14104 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14104 = xor i32 %v1_14104, %arg1
  %v3_14104 = icmp eq i32 %v2_14104, 0
  store i32 %v2_14104, i32* @eax, align 4
  %v1_1410b = icmp eq i1 %v3_14104, false
  br i1 %v1_1410b, label %bb, label %dec_label_pc_1410d

bb:                                               ; preds = %dec_label_pc_14100
  %v2_1410b = call i32 @function_14112()
  br label %dec_label_pc_1410d

dec_label_pc_1410d:                               ; preds = %bb, %dec_label_pc_14100
  %v0_14111 = phi i32 [ %v2_1410b, %bb ], [ %v2_14104, %dec_label_pc_14100 ]
  ret i32 %v0_14111
}

define i32 @function_14112() local_unnamed_addr {
dec_label_pc_14112:
  %v0_14117 = load i32, i32* @ebx, align 4
  %v1_14117 = add i32 %v0_14117, ptrtoint (i16** @global_var_4.3276 to i32)
  %v0_1411a = load i32, i32* @eax, align 4
  %v2_14121 = call i32 @function_27b10(i32 %v1_14117)
  ret i32 %v0_1411a

; uselistorder directives
  uselistorder i32 (i32)* @function_27b10, { 2, 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_14140:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_14140 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14154 = add i32 %arg1, 12
  %v2_14154 = inttoptr i32 %v1_14154 to i32*
  %v3_14154 = load i32, i32* %v2_14154, align 4
  store i32 %v3_14154, i32* %ebx.global-to-local, align 4
  %v1_14157 = icmp eq i32 %v3_14154, 0
  br i1 %v1_14157, label %dec_label_pc_14190, label %dec_label_pc_1415b

dec_label_pc_1415b:                               ; preds = %dec_label_pc_14140
  %v1_1415b = add i32 %v3_14154, 12
  store i32 %v1_1415b, i32* @eax, align 4
  store i32 %v1_1415b, i32* %stack_var_-60, align 4
  %v1_14161 = call i32 @function_27ba0(i32 %v1_1415b)
  %v1_14166 = add i32 %v3_14154, 4
  store i32 %v1_14166, i32* @eax, align 4
  store i32 %v1_14166, i32* %stack_var_-60, align 4
  %v1_1416c = call i32 @function_27ba0(i32 %v1_14166)
  br i1 false, label %dec_label_pc_141a2, label %dec_label_pc_1417e

dec_label_pc_1417e:                               ; preds = %dec_label_pc_1415b
  store i32 %v0_14140, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %dec_label_pc_1417e, %dec_label_pc_14140
  %v0_1419d.in = phi i32* [ %stack_var_0, %dec_label_pc_1417e ], [ %stack_var_-60, %dec_label_pc_14140 ]
  %v0_1419d = ptrtoint i32* %v0_1419d.in to i32
  %v1_14190 = add i32 %v0_1419d, 44
  %v2_14190 = inttoptr i32 %v1_14190 to i32*
  %v3_14190 = load i32, i32* %v2_14190, align 4
  %v1_14194 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14194 = xor i32 %v1_14194, %v3_14190
  %v3_14194 = icmp eq i32 %v2_14194, 0
  %v1_1419b = icmp eq i1 %v3_14194, false
  br i1 %v1_1419b, label %dec_label_pc_141a2, label %dec_label_pc_1419d

dec_label_pc_1419d:                               ; preds = %dec_label_pc_14190
  %v1_1419d = add i32 %v0_1419d, ptrtoint (i32* @global_var_38.3456 to i32)
  %v1_141a0 = inttoptr i32 %v1_1419d to i32*
  %v2_141a0 = load i32, i32* %v1_141a0, align 4
  store i32 %v2_141a0, i32* %ebx.global-to-local, align 4
  ret i32 %v2_14194

dec_label_pc_141a2:                               ; preds = %dec_label_pc_14190, %dec_label_pc_1415b
  %v1_141a1 = phi i32 [ %v2_14194, %dec_label_pc_14190 ], [ 0, %dec_label_pc_1415b ]
  ret i32 %v1_141a1

; uselistorder directives
  uselistorder i32 %v0_1419d, { 1, 0 }
  uselistorder i32 %v3_14154, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 (i32)* @function_27ba0, { 1, 0 }
}

define i32 @function_141a8() local_unnamed_addr {
dec_label_pc_141a8:
  %eax.global-to-local = alloca i32, align 4
  %v0_141a8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_141a8
}

define i32 @function_141b0() local_unnamed_addr {
dec_label_pc_141b0:
  %eax.global-to-local = alloca i32, align 4
  %v0_141b0 = load i32, i32* %eax.global-to-local, align 4
  %v11_141b0 = and i32 %v0_141b0, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_141b0, i32* @eax, align 4
  %v0_141b2 = call i32 @function_8b000139()
  store i32 %v0_141b2, i32* %eax.global-to-local, align 4
  ret i32 %v0_141b2
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_141d0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_141d0 = load i32, i32* %ebx.global-to-local, align 4
  %v0_141d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_141e4 = add i32 %arg1, 12
  %v2_141e4 = inttoptr i32 %v1_141e4 to i32*
  %v3_141e4 = load i32, i32* %v2_141e4, align 4
  store i32 %v3_141e4, i32* %ebx.global-to-local, align 4
  %v1_141e7 = icmp eq i32 %v3_141e4, 0
  br i1 %v1_141e7, label %bb, label %dec_label_pc_141eb

bb:                                               ; preds = %dec_label_pc_141d0
  %v2_141e9 = call i32 @function_14220(i32 %v0_141d4)
  br label %dec_label_pc_141eb

dec_label_pc_141eb:                               ; preds = %bb, %dec_label_pc_141d0
  %v1_141eb = add i32 %v3_141e4, 12
  store i32 %v1_141eb, i32* @eax, align 4
  %v1_141f1 = call i32 @function_27c30(i32 %v1_141eb)
  %v1_141f6 = add i32 %v3_141e4, 4
  store i32 %v1_141f6, i32* @eax, align 4
  %v1_141fc = call i32 @function_27c30(i32 %v1_141f6)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb103, label %dec_label_pc_1420e

bb103:                                            ; preds = %dec_label_pc_141eb
  br label %dec_label_pc_1420e

dec_label_pc_1420e:                               ; preds = %bb103, %dec_label_pc_141eb
  store i32 %v0_141d0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_141e4, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_27c30, { 1, 0 }
}

define i32 @function_14220(i32 %arg1) local_unnamed_addr {
dec_label_pc_14220:
  %v1_14224 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14224 = xor i32 %v1_14224, %arg1
  %v3_14224 = icmp eq i32 %v2_14224, 0
  store i32 %v2_14224, i32* @eax, align 4
  %v1_1422b = icmp eq i1 %v3_14224, false
  br i1 %v1_1422b, label %bb, label %dec_label_pc_1422d

bb:                                               ; preds = %dec_label_pc_14220
  %v2_1422b = call i32 @function_14232()
  br label %dec_label_pc_1422d

dec_label_pc_1422d:                               ; preds = %bb, %dec_label_pc_14220
  %v0_14231 = phi i32 [ %v2_1422b, %bb ], [ %v2_14224, %dec_label_pc_14220 ]
  ret i32 %v0_14231
}

define i32 @function_14232() local_unnamed_addr {
dec_label_pc_14232:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14238() local_unnamed_addr {
dec_label_pc_14238:
  %eax.global-to-local = alloca i32, align 4
  %v0_14238 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14238
}

define i32 @function_14240() local_unnamed_addr {
dec_label_pc_14240:
  %eax.global-to-local = alloca i32, align 4
  %v0_14240 = load i32, i32* %eax.global-to-local, align 4
  %v11_14240 = and i32 %v0_14240, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_14240, i32* @eax, align 4
  %v0_14242 = call i32 @function_8b000139()
  store i32 %v0_14242, i32* %eax.global-to-local, align 4
  ret i32 %v0_14242
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_14260:
  %ebx.global-to-local = alloca i32, align 4
  %v0_14260 = load i32, i32* %ebx.global-to-local, align 4
  %v0_14264 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14274 = add i32 %arg1, 12
  %v2_14274 = inttoptr i32 %v1_14274 to i32*
  %v3_14274 = load i32, i32* %v2_14274, align 4
  store i32 %v3_14274, i32* @ebx, align 4
  %v1_14277 = icmp eq i32 %v3_14274, 0
  br i1 %v1_14277, label %bb, label %dec_label_pc_1427b

bb:                                               ; preds = %dec_label_pc_14260
  %v2_14279 = call i32 @function_142b0(i32 %v0_14264)
  br label %dec_label_pc_1427b

dec_label_pc_1427b:                               ; preds = %bb, %dec_label_pc_14260
  %v1_1427b = add i32 %v3_14274, 12
  %v1_14281 = call i32 @function_27cc0(i32 %v1_1427b)
  %v1_14286 = add i32 %v3_14274, 4
  %v1_1428c = call i32 @function_27cc0(i32 %v1_14286)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb103, label %dec_label_pc_1429e

bb103:                                            ; preds = %dec_label_pc_1427b
  br label %dec_label_pc_1429e

dec_label_pc_1429e:                               ; preds = %bb103, %dec_label_pc_1427b
  store i32 %v0_14260, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_14274, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_27cc0, { 1, 0 }
}

define i32 @function_142b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_142b0:
  %v1_142b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_142b4 = xor i32 %v1_142b4, %arg1
  %v3_142b4 = icmp eq i32 %v2_142b4, 0
  store i32 %v2_142b4, i32* @eax, align 4
  %v1_142bb = icmp eq i1 %v3_142b4, false
  br i1 %v1_142bb, label %bb, label %dec_label_pc_142bd

bb:                                               ; preds = %dec_label_pc_142b0
  %v2_142bb = call i32 @function_142c2()
  br label %dec_label_pc_142bd

dec_label_pc_142bd:                               ; preds = %bb, %dec_label_pc_142b0
  %v0_142c1 = phi i32 [ %v2_142bb, %bb ], [ %v2_142b4, %dec_label_pc_142b0 ]
  ret i32 %v0_142c1
}

define i32 @function_142c2() local_unnamed_addr {
dec_label_pc_142c2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_142c8() local_unnamed_addr {
dec_label_pc_142c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_142c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_142c8
}

define i32 @function_142d0() local_unnamed_addr {
dec_label_pc_142d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_142d0 = load i32, i32* %eax.global-to-local, align 4
  %v11_142d0 = and i32 %v0_142d0, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_142d0, i32* @eax, align 4
  %v0_142d2 = call i32 @function_8b000139()
  store i32 %v0_142d2, i32* %eax.global-to-local, align 4
  ret i32 %v0_142d2

; uselistorder directives
  uselistorder i32 ()* @function_8b000139, { 4, 3, 2, 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_142f0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_142f0 = load i32, i32* %ebx.global-to-local, align 4
  %v0_142f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14304 = add i32 %arg1, 12
  %v2_14304 = inttoptr i32 %v1_14304 to i32*
  %v3_14304 = load i32, i32* %v2_14304, align 4
  store i32 %v3_14304, i32* @ebx, align 4
  %v1_14307 = icmp eq i32 %v3_14304, 0
  br i1 %v1_14307, label %bb, label %dec_label_pc_1430b

bb:                                               ; preds = %dec_label_pc_142f0
  %v2_14309 = call i32 @function_14340(i32 %v0_142f4)
  br label %dec_label_pc_1430b

dec_label_pc_1430b:                               ; preds = %bb, %dec_label_pc_142f0
  %v1_1430b = add i32 %v3_14304, 12
  store i32 %v1_1430b, i32* @eax, align 4
  %v1_14311 = call i32 @function_27d50(i32 %v1_1430b)
  %v1_14316 = add i32 %v3_14304, 4
  store i32 %v1_14316, i32* @eax, align 4
  %v1_1431c = call i32 @function_27d50(i32 %v1_14316)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb103, label %dec_label_pc_1432e

bb103:                                            ; preds = %dec_label_pc_1430b
  br label %dec_label_pc_1432e

dec_label_pc_1432e:                               ; preds = %bb103, %dec_label_pc_1430b
  store i32 %v0_142f0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_14304, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_14340(i32 %arg1) local_unnamed_addr {
dec_label_pc_14340:
  %v1_14344 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14344 = xor i32 %v1_14344, %arg1
  %v3_14344 = icmp eq i32 %v2_14344, 0
  store i32 %v2_14344, i32* @eax, align 4
  %v1_1434b = icmp eq i1 %v3_14344, false
  br i1 %v1_1434b, label %bb, label %dec_label_pc_1434d

bb:                                               ; preds = %dec_label_pc_14340
  %v2_1434b = call i32 @function_14352()
  br label %dec_label_pc_1434d

dec_label_pc_1434d:                               ; preds = %bb, %dec_label_pc_14340
  %v0_14351 = phi i32 [ %v2_1434b, %bb ], [ %v2_14344, %dec_label_pc_14340 ]
  ret i32 %v0_14351
}

define i32 @function_14352() local_unnamed_addr {
dec_label_pc_14352:
  %v0_14357 = load i32, i32* @ebx, align 4
  %v1_14357 = add i32 %v0_14357, ptrtoint (i16** @global_var_4.3276 to i32)
  %v0_1435a = load i32, i32* @eax, align 4
  %v2_14361 = call i32 @function_27d50(i32 %v1_14357)
  ret i32 %v0_1435a

; uselistorder directives
  uselistorder i32 (i32)* @function_27d50, { 2, 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S9_SA_EEENSF_IFvRKNS2_10connectionES6_S9_SA_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_14380:
  %ebx.global-to-local = alloca i32, align 4
  %v0_14380 = load i32, i32* %ebx.global-to-local, align 4
  %v0_14384 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_14394 = add i32 %arg1, 12
  %v2_14394 = inttoptr i32 %v1_14394 to i32*
  %v3_14394 = load i32, i32* %v2_14394, align 4
  store i32 %v3_14394, i32* @ebx, align 4
  %v1_14397 = icmp eq i32 %v3_14394, 0
  br i1 %v1_14397, label %bb, label %dec_label_pc_1439b

bb:                                               ; preds = %dec_label_pc_14380
  %v2_14399 = call i32 @function_143d0(i32 %v0_14384)
  br label %dec_label_pc_1439b

dec_label_pc_1439b:                               ; preds = %bb, %dec_label_pc_14380
  %v1_1439b = add i32 %v3_14394, 12
  store i32 %v1_1439b, i32* @eax, align 4
  %v1_143a1 = call i32 @function_27de0(i32 %v1_1439b)
  %v1_143a6 = add i32 %v3_14394, 4
  store i32 %v1_143a6, i32* @eax, align 4
  %v1_143ac = call i32 @function_27de0(i32 %v1_143a6)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb103, label %dec_label_pc_143be

bb103:                                            ; preds = %dec_label_pc_1439b
  br label %dec_label_pc_143be

dec_label_pc_143be:                               ; preds = %bb103, %dec_label_pc_1439b
  store i32 %v0_14380, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_14394, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_143d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_143d0:
  %v1_143d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_143d4 = xor i32 %v1_143d4, %arg1
  %v3_143d4 = icmp eq i32 %v2_143d4, 0
  store i32 %v2_143d4, i32* @eax, align 4
  %v1_143db = icmp eq i1 %v3_143d4, false
  br i1 %v1_143db, label %bb, label %dec_label_pc_143dd

bb:                                               ; preds = %dec_label_pc_143d0
  %v2_143db = call i32 @function_143e2()
  br label %dec_label_pc_143dd

dec_label_pc_143dd:                               ; preds = %bb, %dec_label_pc_143d0
  %v0_143e1 = phi i32 [ %v2_143db, %bb ], [ %v2_143d4, %dec_label_pc_143d0 ]
  ret i32 %v0_143e1
}

define i32 @function_143e2() local_unnamed_addr {
dec_label_pc_143e2:
  %v0_143e7 = load i32, i32* @ebx, align 4
  %v1_143e7 = add i32 %v0_143e7, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_143e7, i32* @ebx, align 4
  %v0_143ea = load i32, i32* @eax, align 4
  %v2_143f1 = call i32 @function_27de0(i32 %v1_143e7)
  ret i32 %v0_143ea

; uselistorder directives
  uselistorder i32 (i32)* @function_27de0, { 2, 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_14410:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_14410 = load i32, i32* %ebx.global-to-local, align 4
  %v0_14414 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_14424 = add i32 %arg1, 12
  %v2_14424 = inttoptr i32 %v1_14424 to i32*
  %v3_14424 = load i32, i32* %v2_14424, align 4
  store i32 %v3_14424, i32* %ebx.global-to-local, align 4
  %v1_14427 = icmp eq i32 %v3_14424, 0
  br i1 %v1_14427, label %dec_label_pc_14460, label %dec_label_pc_1442b

dec_label_pc_1442b:                               ; preds = %dec_label_pc_14410
  %v1_1442b = add i32 %v3_14424, 12
  store i32 %v1_1442b, i32* @eax, align 4
  store i32 %v1_1442b, i32* %stack_var_-60, align 4
  %v1_14431 = call i32 @function_27e70(i32 %v1_1442b)
  %v0_14436 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14436 = add i32 %v0_14436, 4
  store i32 %v1_14436, i32* @eax, align 4
  store i32 %v1_14436, i32* %stack_var_-60, align 4
  %v1_1443c = call i32 @function_27e70(i32 %v1_14436)
  store i32 %v0_14414, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  %v0_14477.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_1447a.pre = load i32, i32* @esp, align 4
  br i1 false, label %dec_label_pc_14472, label %dec_label_pc_1444e

dec_label_pc_1444e:                               ; preds = %dec_label_pc_1442b
  store i32 %v0_14410, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_14460

dec_label_pc_14460:                               ; preds = %dec_label_pc_1444e, %dec_label_pc_14410
  %v0_144773 = phi i32 [ 0, %dec_label_pc_14410 ], [ %v0_14410, %dec_label_pc_1444e ]
  %v0_1446d.in = phi i32* [ %stack_var_-60, %dec_label_pc_14410 ], [ %stack_var_0, %dec_label_pc_1444e ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_14410 ], [ %v0_14477.pre, %dec_label_pc_1444e ]
  %v0_1446d = ptrtoint i32* %v0_1446d.in to i32
  %v1_14460 = add i32 %v0_1446d, 44
  %v2_14460 = inttoptr i32 %v1_14460 to i32*
  %v3_14460 = load i32, i32* %v2_14460, align 4
  store i32 %v3_14460, i32* %eax.global-to-local, align 4
  %v1_14464 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14464 = xor i32 %v1_14464, %v3_14460
  %v3_14464 = icmp eq i32 %v2_14464, 0
  store i32 %v2_14464, i32* @eax, align 4
  %v1_1446b = icmp eq i1 %v3_14464, false
  br i1 %v1_1446b, label %dec_label_pc_14472, label %dec_label_pc_1446d

dec_label_pc_1446d:                               ; preds = %dec_label_pc_14460
  %v1_1446d = add i32 %v0_1446d, ptrtoint (i32* @global_var_38.3456 to i32)
  %v1_14470 = inttoptr i32 %v1_1446d to i32*
  %v2_14470 = load i32, i32* %v1_14470, align 4
  store i32 %v2_14470, i32* %ebx.global-to-local, align 4
  ret i32 %v2_14464

dec_label_pc_14472:                               ; preds = %dec_label_pc_1442b, %dec_label_pc_14460
  %v1_1447a = phi i32 [ %v0_1446d, %dec_label_pc_14460 ], [ %v1_1447a.pre, %dec_label_pc_1442b ]
  %v0_1447a = phi i32 [ %v2_14464, %dec_label_pc_14460 ], [ 0, %dec_label_pc_1442b ]
  %v0_14477 = phi i32 [ %v0_144773, %dec_label_pc_14460 ], [ %v0_14477.pre, %dec_label_pc_1442b ]
  %stack_var_4.1 = phi i32 [ %stack_var_4.0, %dec_label_pc_14460 ], [ %arg1, %dec_label_pc_1442b ]
  %v1_14477 = add i32 %v0_14477, 4
  store i32 %v1_14477, i32* %ebx.global-to-local, align 4
  %v2_1447a = add i32 %v1_1447a, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_1447a = inttoptr i32 %v2_1447a to i32*
  store i32 %v0_1447a, i32* %v3_1447a, align 4
  %v0_1447e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1447e = load i32, i32* @esp, align 4
  %v2_1447e = inttoptr i32 %v1_1447e to i32*
  store i32 %v0_1447e, i32* %v2_1447e, align 4
  %v1_14481 = call i32 @function_27e70(i32 %stack_var_4.1)
  store i32 %v1_14481, i32* %eax.global-to-local, align 4
  %v0_14486 = load i32, i32* @esp, align 4
  %v1_14486 = add i32 %v0_14486, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_14486 = inttoptr i32 %v1_14486 to i32*
  %v3_14486 = load i32, i32* %v2_14486, align 4
  store i32 %v3_14486, i32* %eax.global-to-local, align 4
  %v2_1448a = inttoptr i32 %v0_14486 to i32*
  store i32 %v3_14486, i32* %v2_1448a, align 4
  %v3_1448a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_1448a

; uselistorder directives
  uselistorder i32 %v0_1446d, { 2, 1, 0 }
  uselistorder i32 %v0_14410, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @function_27e70, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_14472, { 1, 0 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_SF_SH_bSI_EEENSN_IFvRKNS2_10connectionES6_SF_SH_bSI_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_144a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v0_144a0 = load i32, i32* %ebx.global-to-local, align 4
  %v0_144a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_144b4 = add i32 %arg1, 12
  %v2_144b4 = inttoptr i32 %v1_144b4 to i32*
  %v3_144b4 = load i32, i32* %v2_144b4, align 4
  store i32 %v3_144b4, i32* %ebx.global-to-local, align 4
  %v1_144b7 = icmp eq i32 %v3_144b4, 0
  br i1 %v1_144b7, label %dec_label_pc_144f0, label %dec_label_pc_144bb

dec_label_pc_144bb:                               ; preds = %dec_label_pc_144a0
  %v1_144bb = add i32 %v3_144b4, 12
  store i32 %v1_144bb, i32* @eax, align 4
  store i32 %v1_144bb, i32* %stack_var_-60, align 4
  %v1_144c1 = call i32 @function_27f00(i32 %v1_144bb)
  %v0_144c6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_144c6 = add i32 %v0_144c6, 4
  store i32 %v1_144c6, i32* @eax, align 4
  store i32 %v1_144c6, i32* %stack_var_-60, align 4
  %v1_144cc = call i32 @function_27f00(i32 %v1_144c6)
  store i32 %v0_144a4, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  %v0_14507.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_1450a.pre = load i32, i32* @esp, align 4
  br i1 false, label %dec_label_pc_14502, label %dec_label_pc_144de

dec_label_pc_144de:                               ; preds = %dec_label_pc_144bb
  store i32 %v0_144a0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_144f0

dec_label_pc_144f0:                               ; preds = %dec_label_pc_144de, %dec_label_pc_144a0
  %v0_145073 = phi i32 [ 0, %dec_label_pc_144a0 ], [ %v0_144a0, %dec_label_pc_144de ]
  %v0_144fd.in = phi i32* [ %stack_var_-60, %dec_label_pc_144a0 ], [ %stack_var_0, %dec_label_pc_144de ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_144a0 ], [ %v0_14507.pre, %dec_label_pc_144de ]
  %v0_144fd = ptrtoint i32* %v0_144fd.in to i32
  %v1_144f0 = add i32 %v0_144fd, 44
  %v2_144f0 = inttoptr i32 %v1_144f0 to i32*
  %v3_144f0 = load i32, i32* %v2_144f0, align 4
  store i32 %v3_144f0, i32* %eax.global-to-local, align 4
  %v1_144f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_144f4 = xor i32 %v1_144f4, %v3_144f0
  %v3_144f4 = icmp eq i32 %v2_144f4, 0
  store i32 %v2_144f4, i32* @eax, align 4
  %v1_144fb = icmp eq i1 %v3_144f4, false
  br i1 %v1_144fb, label %dec_label_pc_14502, label %dec_label_pc_144fd

dec_label_pc_144fd:                               ; preds = %dec_label_pc_144f0
  %v1_144fd = add i32 %v0_144fd, ptrtoint (i32* @global_var_38.3456 to i32)
  %v1_14500 = inttoptr i32 %v1_144fd to i32*
  %v2_14500 = load i32, i32* %v1_14500, align 4
  store i32 %v2_14500, i32* %ebx.global-to-local, align 4
  ret i32 %v2_144f4

dec_label_pc_14502:                               ; preds = %dec_label_pc_144bb, %dec_label_pc_144f0
  %v1_1450a = phi i32 [ %v0_144fd, %dec_label_pc_144f0 ], [ %v1_1450a.pre, %dec_label_pc_144bb ]
  %v0_1450a = phi i32 [ %v2_144f4, %dec_label_pc_144f0 ], [ 0, %dec_label_pc_144bb ]
  %v0_14507 = phi i32 [ %v0_145073, %dec_label_pc_144f0 ], [ %v0_14507.pre, %dec_label_pc_144bb ]
  %stack_var_4.1 = phi i32 [ %stack_var_4.0, %dec_label_pc_144f0 ], [ %arg1, %dec_label_pc_144bb ]
  %v1_14507 = add i32 %v0_14507, 4
  store i32 %v1_14507, i32* %ebx.global-to-local, align 4
  %v2_1450a = add i32 %v1_1450a, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_1450a = inttoptr i32 %v2_1450a to i32*
  store i32 %v0_1450a, i32* %v3_1450a, align 4
  %v0_1450e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1450e = load i32, i32* @esp, align 4
  %v2_1450e = inttoptr i32 %v1_1450e to i32*
  store i32 %v0_1450e, i32* %v2_1450e, align 4
  %v1_14511 = call i32 @function_27f00(i32 %stack_var_4.1)
  store i32 %v1_14511, i32* %eax.global-to-local, align 4
  %v0_14516 = load i32, i32* @esp, align 4
  %v1_14516 = add i32 %v0_14516, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_14516 = inttoptr i32 %v1_14516 to i32*
  %v3_14516 = load i32, i32* %v2_14516, align 4
  store i32 %v3_14516, i32* %eax.global-to-local, align 4
  %v2_1451a = inttoptr i32 %v0_14516 to i32*
  store i32 %v3_14516, i32* %v2_1451a, align 4
  %v3_1451a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_1451a

; uselistorder directives
  uselistorder i32 %v0_144fd, { 2, 1, 0 }
  uselistorder i32 %v0_144a0, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 0 }
  uselistorder i32 (i32)* @function_27f00, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_14502, { 1, 0 }
}

define i32 @_ZN5boost5mutexD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14530:
  %v1_1454b = icmp eq i32 %arg1, 0
  %v1_1454d = icmp eq i1 %v1_1454b, false
  br i1 %v1_1454d, label %dec_label_pc_14561, label %dec_label_pc_1454f

dec_label_pc_1454f:                               ; preds = %dec_label_pc_14530
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_1455c

bb:                                               ; preds = %dec_label_pc_1454f
  br label %dec_label_pc_1455c

dec_label_pc_1455c:                               ; preds = %bb, %dec_label_pc_1454f
  ret i32 0

dec_label_pc_14561:                               ; preds = %dec_label_pc_14530
  ret i32 %arg1
}

define i32 @function_14585(i32 %arg1) local_unnamed_addr {
dec_label_pc_14585:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost18condition_variableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14590:
  %ebx.global-to-local = alloca i32, align 4
  %v0_14590 = load i32, i32* %ebx.global-to-local, align 4
  %v1_145b0 = add i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  store i32 %v1_145b0, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_145cc

bb:                                               ; preds = %dec_label_pc_14590
  br label %dec_label_pc_145cc

dec_label_pc_145cc:                               ; preds = %bb, %dec_label_pc_14590
  store i32 %v0_14590, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_145f5() local_unnamed_addr {
dec_label_pc_145f5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_145fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_145fa:
  %v3_14612 = load i32, i32* @eax, align 4
  ret i32 %v3_14612
}

define i32 @_ZN11CDataStreamD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14620:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_14628 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14635 = load i32, i32* %arg1, align 4
  %v1_14637 = add i32 %tmp101, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_14637 = inttoptr i32 %v1_14637 to i32*
  %v3_14637 = load i32, i32* %v2_14637, align 4
  store i32 %v3_14637, i32* @eax, align 4
  %v1_1463a = icmp eq i32 %v2_14635, 0
  br i1 %v1_1463a, label %bb, label %dec_label_pc_1463e

bb:                                               ; preds = %dec_label_pc_14620
  %v2_1463c = call i32 @function_14668(i32 %v0_14628)
  br label %dec_label_pc_1463e

dec_label_pc_1463e:                               ; preds = %bb, %dec_label_pc_14620
  %v0_1463e = phi i32 [ %v2_1463c, %bb ], [ %v3_14637, %dec_label_pc_14620 ]
  %v2_1463e = sub i32 %v0_1463e, %v2_14635
  ret i32 %v2_1463e
}

define i32 @function_14665() local_unnamed_addr {
dec_label_pc_14665:
  %eax.global-to-local = alloca i32, align 4
  %v0_14665 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14665
}

define i32 @function_14668(i32 %arg1) local_unnamed_addr {
dec_label_pc_14668:
  %v1_1466c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1466c = icmp eq i32 %v1_1466c, %arg1
  %v1_14673 = icmp eq i1 %v3_1466c, false
  br i1 %v1_14673, label %dec_label_pc_1467a, label %dec_label_pc_14675

dec_label_pc_14675:                               ; preds = %dec_label_pc_14668
  %v0_14679 = load i32, i32* @eax, align 4
  ret i32 %v0_14679

dec_label_pc_1467a:                               ; preds = %dec_label_pc_14668
  %v1_1467a = load i32, i32* @eax, align 4
  ret i32 %v1_1467a
}

define i32 @_ZN11CDataStream4readEPci(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14690:
  %ebx.global-to-local = alloca i32, align 4
  %tmp110 = ptrtoint i32* %arg1 to i32
  %v0_14697 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  store i32 %tmp110, i32* %ebx.global-to-local, align 4
  %v2_146b3 = icmp slt i32 %arg3, 0
  br i1 %v2_146b3, label %bb, label %dec_label_pc_146c3

bb:                                               ; preds = %dec_label_pc_14690
  %v2_146bd = call i32 @function_14778(i32 %v0_14697)
  %v0_146c3.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_146c3

dec_label_pc_146c3:                               ; preds = %bb, %dec_label_pc_14690
  %v0_146d2 = phi i32 [ %v0_146c3.pre, %bb ], [ %tmp110, %dec_label_pc_14690 ]
  %v1_146c3 = add i32 %v0_146d2, 12
  %v2_146c3 = inttoptr i32 %v1_146c3 to i32*
  %v3_146c3 = load i32, i32* %v2_146c3, align 4
  store i32 %v3_146c3, i32* @ecx, align 4
  store i32 %arg3, i32* @eax, align 4
  %v1_146c8 = add i32 %v0_146d2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_146c8 = inttoptr i32 %v1_146c8 to i32*
  %v3_146c8 = load i32, i32* %v2_146c8, align 4
  %v3_146cb = add i32 %v3_146c3, %arg3
  %v1_146d2 = inttoptr i32 %v0_146d2 to i32*
  %v2_146d2 = load i32, i32* %v1_146d2, align 4
  store i32 %v2_146d2, i32* @edi, align 4
  %v2_146d4 = sub i32 %v3_146c8, %v2_146d2
  %v10_146d6 = icmp ult i32 %v3_146cb, %v2_146d4
  %v15_146d6 = icmp eq i32 %v3_146cb, %v2_146d4
  br i1 %v10_146d6, label %bb115, label %dec_label_pc_146dc

bb115:                                            ; preds = %dec_label_pc_146c3
  %v2_146da = call i32 @function_14758(i32 %v3_146cb)
  store i32 %v2_146da, i32* @eax, align 4
  %v0_146dc.pre = load i1, i1* @cf, align 1
  %v1_146dc.pre = load i1, i1* @zf, align 1
  br label %dec_label_pc_146dc

dec_label_pc_146dc:                               ; preds = %bb115, %dec_label_pc_146c3
  %v1_146dc = phi i1 [ %v1_146dc.pre, %bb115 ], [ %v15_146d6, %dec_label_pc_146c3 ]
  %v0_146dc = phi i1 [ %v0_146dc.pre, %bb115 ], [ false, %dec_label_pc_146c3 ]
  %v2_146dc = or i1 %v1_146dc, %v0_146dc
  br i1 %v2_146dc, label %bb116, label %dec_label_pc_146de

bb116:                                            ; preds = %dec_label_pc_146dc
  %v3_146dc = call i32 @function_14716()
  store i32 %v3_146dc, i32* @eax, align 4
  br label %dec_label_pc_146de

dec_label_pc_146de:                               ; preds = %bb116, %dec_label_pc_146dc
  %v0_146de = load i32, i32* %ebx.global-to-local, align 4
  %v1_146de = add i32 %v0_146de, 16
  %v2_146de = inttoptr i32 %v1_146de to i16*
  %v3_146de = load i16, i16* %v2_146de, align 2
  %v4_146de = zext i16 %v3_146de to i32
  %v1_146e2 = add i32 %v0_146de, 18
  %v2_146e2 = inttoptr i32 %v1_146e2 to i16*
  %v3_146e2 = load i16, i16* %v2_146e2, align 2
  %v4_146e2 = zext i16 %v3_146e2 to i32
  %v1_146e6 = or i32 %v4_146de, 4
  %v4_146e91 = and i32 %v4_146e2, %v1_146e6
  %v5_146e9 = icmp eq i32 %v4_146e91, 0
  %v1_146ec = trunc i32 %v1_146e6 to i16
  store i16 %v1_146ec, i16* %v2_146de, align 2
  %v1_146f0 = icmp eq i1 %v5_146e9, false
  br i1 %v1_146f0, label %bb117, label %dec_label_pc_146de.dec_label_pc_146f6_crit_edge

dec_label_pc_146de.dec_label_pc_146f6_crit_edge:  ; preds = %dec_label_pc_146de
  %v3_14702.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_146f6

bb117:                                            ; preds = %dec_label_pc_146de
  %v2_146f0 = call i32 @function_1479c()
  br label %dec_label_pc_146f6

dec_label_pc_146f6:                               ; preds = %dec_label_pc_146de.dec_label_pc_146f6_crit_edge, %bb117
  %v3_14702 = phi i32 [ %v3_14702.pre, %dec_label_pc_146de.dec_label_pc_146f6_crit_edge ], [ %v2_146f0, %bb117 ]
  ret i32 %v3_14702

; uselistorder directives
  uselistorder i32 %v1_146e6, { 1, 0 }
  uselistorder i32 %v3_146cb, { 1, 0, 2 }
  uselistorder i32 %v0_146d2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_146f6, { 1, 0 }
}

define i32 @function_14716() local_unnamed_addr {
dec_label_pc_14716:
  %v3_14720 = load i32, i32* @eax, align 4
  ret i32 %v3_14720
}

define i32 @function_14727(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14727:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_14727 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14727 = add i32 %v0_14727, 205768451
  %v2_14727 = inttoptr i32 %v1_14727 to i32*
  %v3_14727 = load i32, i32* %v2_14727, align 4
  %v4_14727 = add i32 %v3_14727, -1
  store i32 %v4_14727, i32* %v2_14727, align 4
  %v2_1472d = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1472d = load i32, i32* %eax.global-to-local, align 4
  %v4_1472d = trunc i32 %v3_1472d to i8
  %v5_1472d = add i8 %v4_1472d, %v2_1472d
  %v21_1472d = inttoptr i32 %v3_1472d to i8*
  store i8 %v5_1472d, i8* %v21_1472d, align 1
  %v2_1472f = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1472f = load i32, i32* %eax.global-to-local, align 4
  %v4_1472f = trunc i32 %v3_1472f to i8
  %v5_1472f = add i8 %v4_1472f, %v2_1472f
  %v21_1472f = inttoptr i32 %v3_1472f to i8*
  store i8 %v5_1472f, i8* %v21_1472f, align 1
  %v0_14731 = load i32, i32* %eax.global-to-local, align 4
  %v1_14731 = load i32, i32* %ebx.global-to-local, align 4
  %v2_14731 = add i32 %v1_14731, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_14731 = inttoptr i32 %v2_14731 to i32*
  store i32 %v0_14731, i32* %v3_14731, align 4
  %v1_14738 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_14738 = icmp eq i32 %v1_14738, %arg1
  %v0_1473f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1473f, i32* @eax, align 4
  %v1_14741 = icmp eq i1 %v3_14738, false
  br i1 %v1_14741, label %bb, label %dec_label_pc_14743

bb:                                               ; preds = %dec_label_pc_14727
  %v2_14741 = call i32 @function_14773()
  store i32 %v2_14741, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_14743

dec_label_pc_14743:                               ; preds = %bb, %dec_label_pc_14727
  %v0_14756 = phi i32 [ %v2_14741, %bb ], [ %v0_1473f, %dec_label_pc_14727 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_14756

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2 }
}

define i32 @function_14758(i32 %arg1) local_unnamed_addr {
dec_label_pc_14758:
  %v0_14758 = load i32, i32* @ecx, align 4
  %v1_14758 = load i32, i32* @edi, align 4
  %v2_14758 = add i32 %v1_14758, %v0_14758
  %v7_14758 = icmp ult i32 %v2_14758, %v0_14758
  store i1 %v7_14758, i1* @cf, align 1
  %v12_14758 = icmp eq i32 %v2_14758, 0
  store i1 %v12_14758, i1* @zf, align 1
  store i32 %v2_14758, i32* @ecx, align 4
  %v3_14762 = load i32, i32* @eax, align 4
  ret i32 %v3_14762

; uselistorder directives
  uselistorder i32 %v0_14758, { 1, 0 }
}

define i32 @function_1476a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1476a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v1_1476e = load i32, i32* %ebx.global-to-local, align 4
  %v2_1476e = add i32 %v1_1476e, 12
  %v3_1476e = inttoptr i32 %v2_1476e to i32*
  store i32 %arg1, i32* %v3_1476e, align 4
  %v0_14771 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14771
}

define i32 @function_14773() local_unnamed_addr {
dec_label_pc_14773:
  %v0_14773 = load i32, i32* @eax, align 4
  ret i32 %v0_14773
}

define i32 @function_14778(i32 %arg1) local_unnamed_addr {
dec_label_pc_14778:
  %v3_14790 = load i32, i32* @eax, align 4
  ret i32 %v3_14790
}

define i32 @function_1479c() local_unnamed_addr {
dec_label_pc_1479c:
  %stack_var_43 = alloca i32, align 4
  %v2_147b9 = ptrtoint i32* %stack_var_43 to i32
  ret i32 %v2_147b9
}

define i32 @function_147f3() local_unnamed_addr {
dec_label_pc_147f3:
  %eax.global-to-local = alloca i32, align 4
  %v0_147f3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_147f3
}

define i32 @_ZN5boost11filesystem3dvERKNS0_4pathES3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14810:
  ret i32 %arg2
}

define i32 @function_14846(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14846:
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_14846 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14846 = add i32 %v0_14846, -1996217220
  %v2_14846 = inttoptr i32 %v1_14846 to i32*
  %v3_14846 = load i32, i32* %v2_14846, align 4
  %v4_14846 = sub i32 %v3_14846, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_14846, i32* %v2_14846, align 4
  %v0_14867 = load i32, i32* %esi.global-to-local, align 4
  %v1_1486d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1486d = icmp eq i32 %v1_1486d, %arg1
  %v1_14874 = icmp eq i1 %v3_1486d, false
  br i1 %v1_14874, label %dec_label_pc_14888, label %dec_label_pc_14876

dec_label_pc_14876:                               ; preds = %dec_label_pc_14846
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v0_14867

dec_label_pc_14888:                               ; preds = %dec_label_pc_14846
  ret i32 %v0_14867
}

define i32 @_ZN5boost11filesystem36existsERKNS0_4pathE(i32 %arg1) local_unnamed_addr {
dec_label_pc_148a0:
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %v1_148d4 = icmp eq i32 %tmp100, 0
  br i1 %v1_148d4, label %dec_label_pc_148de, label %dec_label_pc_148d8

dec_label_pc_148d8:                               ; preds = %dec_label_pc_148a0
  %v10_148d8 = icmp eq i32 %tmp100, 1
  %v1_148db = icmp eq i1 %v10_148d8, false
  %v2_148db = zext i1 %v1_148db to i32
  br label %dec_label_pc_148de

dec_label_pc_148de:                               ; preds = %dec_label_pc_148d8, %dec_label_pc_148a0
  %v0_148ef = phi i32 [ %v2_148db, %dec_label_pc_148d8 ], [ 0, %dec_label_pc_148a0 ]
  %v1_148e2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_148e2 = icmp eq i32 %v1_148e2, %tmp99
  %v1_148e9 = icmp eq i1 %v3_148e2, false
  br i1 %v1_148e9, label %dec_label_pc_148ef, label %dec_label_pc_148eb

dec_label_pc_148eb:                               ; preds = %dec_label_pc_148de
  ret i32 %v0_148ef

dec_label_pc_148ef:                               ; preds = %dec_label_pc_148de
  ret i32 %v0_148ef
}

define i32 @_ZN5boost17bad_function_callC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14900:
  %stack_var_-17 = alloca i32, align 4
  %v2_1491f = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_1491f
}

define i32 @function_1494a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1494a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1494a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1494a = add i32 %v0_1494a, 1696343108
  %v2_1494a = inttoptr i32 %v1_1494a to i32*
  %v3_1494a = load i32, i32* %v2_1494a, align 4
  %v4_1494a = add i32 %v3_1494a, -1
  store i32 %v4_1494a, i32* %v2_1494a, align 4
  %v0_14950 = load i32, i32* %eax.global-to-local, align 4
  %v1_14950 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14950 = xor i32 %v1_14950, %v0_14950
  %v3_14950 = icmp eq i32 %v2_14950, 0
  store i32 %v2_14950, i32* %eax.global-to-local, align 4
  %v0_14956 = load i32, i32* %esi.global-to-local, align 4
  %v1_14956 = inttoptr i32 %v0_14956 to i32*
  store i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), i32* %v1_14956, align 4
  %v1_1495c = icmp eq i1 %v3_14950, false
  br i1 %v1_1495c, label %dec_label_pc_1496a, label %dec_label_pc_1495e

dec_label_pc_1495e:                               ; preds = %dec_label_pc_1494a
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v0_14969 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14969

dec_label_pc_1496a:                               ; preds = %dec_label_pc_1494a
  %v0_1496f = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1496f, i32* %esi.global-to-local, align 4
  ret i32 %v0_1496f

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_390d8_type* @global_var_390d8.3334 to i32), { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN12CTransactionD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14990:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_14990 = load i32, i32* %edi.global-to-local, align 4
  %v0_14991 = load i32, i32* %esi.global-to-local, align 4
  %v0_14992 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_1499a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  %v1_149a6 = add i32 %arg1, 20
  %v2_149a6 = inttoptr i32 %v1_149a6 to i32*
  %v3_149a6 = load i32, i32* %v2_149a6, align 4
  store i32 %v3_149a6, i32* @esi, align 4
  %v1_149a9 = add i32 %arg1, 16
  %v2_149a9 = inttoptr i32 %v1_149a9 to i32*
  %v3_149a9 = load i32, i32* %v2_149a9, align 4
  store i32 %v3_149a9, i32* @ebx, align 4
  %v12_149ac = icmp eq i32 %v3_149a6, %v3_149a9
  br i1 %v12_149ac, label %bb, label %dec_label_pc_149b0

bb:                                               ; preds = %dec_label_pc_14990
  %v5_149ae = call i32 @function_149c9(i32 %v0_1499a, i32 %v0_14992, i32 %v0_14991, i32 %v0_14990)
  %v0_149b0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_149b0

dec_label_pc_149b0:                               ; preds = %bb, %dec_label_pc_14990
  %v0_149b0 = phi i32 [ %v0_149b0.pre, %bb ], [ %v3_149a9, %dec_label_pc_14990 ]
  %v1_149b0 = add i32 %v0_149b0, 8
  %v2_149b0 = inttoptr i32 %v1_149b0 to i32*
  %v3_149b0 = load i32, i32* %v2_149b0, align 4
  store i32 %v3_149b0, i32* @eax, align 4
  %v1_149b3 = icmp eq i32 %v3_149b0, 0
  br i1 %v1_149b3, label %bb104, label %dec_label_pc_149b7

bb104:                                            ; preds = %dec_label_pc_149b0
  %v1_149b5 = call i32 @function_149bf()
  br label %dec_label_pc_149b7

dec_label_pc_149b7:                               ; preds = %bb104, %dec_label_pc_149b0
  %v0_149b7 = phi i32 [ %v1_149b5, %bb104 ], [ %v3_149b0, %dec_label_pc_149b0 ]
  ret i32 %v0_149b7

; uselistorder directives
  uselistorder i32 %v3_149a9, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_149bf() local_unnamed_addr {
dec_label_pc_149bf:
  %v4_149c6 = load i32, i32* @eax, align 4
  ret i32 %v4_149c6
}

define i32 @function_149c9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_149c9:
  %v0_149c9 = load i32, i32* @ebx, align 4
  %v1_149c9 = icmp eq i32 %v0_149c9, 0
  br i1 %v1_149c9, label %bb, label %dec_label_pc_149c9.dec_label_pc_149cd_crit_edge

dec_label_pc_149c9.dec_label_pc_149cd_crit_edge:  ; preds = %dec_label_pc_149c9
  %v3_149cd.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_149cd

bb:                                               ; preds = %dec_label_pc_149c9
  %v1_149cb = call i32 @function_149d5()
  br label %dec_label_pc_149cd

dec_label_pc_149cd:                               ; preds = %dec_label_pc_149c9.dec_label_pc_149cd_crit_edge, %bb
  %v3_149cd = phi i32 [ %v3_149cd.pre, %dec_label_pc_149c9.dec_label_pc_149cd_crit_edge ], [ %v1_149cb, %bb ]
  ret i32 %v3_149cd

; uselistorder directives
  uselistorder label %dec_label_pc_149cd, { 1, 0 }
}

define i32 @function_149d5() local_unnamed_addr {
dec_label_pc_149d5:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %v0_149d5 = load i32, i32* @edi, align 4
  %v1_149d5 = add i32 %v0_149d5, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_149d5 = inttoptr i32 %v1_149d5 to i32*
  %v3_149d5 = load i32, i32* %v2_149d5, align 4
  store i32 %v3_149d5, i32* @esi, align 4
  %v1_149d8 = add i32 %v0_149d5, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_149d8 = inttoptr i32 %v1_149d8 to i32*
  %v3_149d8 = load i32, i32* %v2_149d8, align 4
  store i32 %v3_149d8, i32* @ebx, align 4
  %v12_149db = icmp eq i32 %v3_149d5, %v3_149d8
  br i1 %v12_149db, label %dec_label_pc_149f9, label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149d5, %dec_label_pc_149e0
  %v0_149e0 = phi i32 [ %v1_149ef, %dec_label_pc_149e0 ], [ %v3_149d8, %dec_label_pc_149d5 ]
  %v1_149ef = add i32 %v0_149e0, ptrtoint (i32* @global_var_34.3466 to i32)
  %v12_149f2 = icmp eq i32 %v3_149d5, %v1_149ef
  %v1_149f4 = icmp eq i1 %v12_149f2, false
  br i1 %v1_149f4, label %dec_label_pc_149e0, label %dec_label_pc_149f6

dec_label_pc_149f6:                               ; preds = %dec_label_pc_149e0
  %v3_149f6 = load i32, i32* %v2_149d8, align 4
  store i32 %v3_149f6, i32* @ebx, align 4
  br label %dec_label_pc_149f9

dec_label_pc_149f9:                               ; preds = %dec_label_pc_149f6, %dec_label_pc_149d5
  %v0_149f9 = phi i32 [ %v3_149f6, %dec_label_pc_149f6 ], [ %v3_149d8, %dec_label_pc_149d5 ]
  %v1_149f9 = icmp eq i32 %v0_149f9, 0
  br i1 %v1_149f9, label %dec_label_pc_14a20, label %dec_label_pc_149fd

dec_label_pc_149fd:                               ; preds = %dec_label_pc_149f9
  %v1_14a01 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14a01 = xor i32 %v1_14a01, %tmp15
  %v3_14a01 = icmp eq i32 %v2_14a01, 0
  %v1_14a08 = icmp eq i1 %v3_14a01, false
  br i1 %v1_14a08, label %dec_label_pc_14a34, label %dec_label_pc_14a0a

dec_label_pc_14a0a:                               ; preds = %dec_label_pc_149fd
  br label %dec_label_pc_14a20

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14a0a, %dec_label_pc_149f9
  %v1_14a24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14a24 = xor i32 %v1_14a24, %tmp9
  %v3_14a24 = icmp eq i32 %v2_14a24, 0
  %v1_14a2b = icmp eq i1 %v3_14a24, false
  br i1 %v1_14a2b, label %dec_label_pc_14a34, label %dec_label_pc_14a2d

dec_label_pc_14a2d:                               ; preds = %dec_label_pc_14a20
  ret i32 %v2_14a24

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a20, %dec_label_pc_149fd
  %v0_14a34 = phi i32 [ %v2_14a24, %dec_label_pc_14a20 ], [ %v2_14a01, %dec_label_pc_149fd ]
  ret i32 %v0_14a34

; uselistorder directives
  uselistorder i32 %v3_149d8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_149e0, { 1, 0 }
}

define i32 @_ZN5boost12interprocess22interprocess_exceptionC1ERKNS0_10error_infoEPKc(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14a40:
  %v1_14a5d = inttoptr i32 %arg2 to i32*
  %v2_14a5d = load i32, i32* %v1_14a5d, align 4
  store i32 ptrtoint (%vtable_39348_type* @global_var_39348.3338 to i32), i32* %arg1, align 4
  ret i32 %v2_14a5d

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_39348_type* @global_var_39348.3338 to i32), { 2, 1, 0 }
}

define i32 @function_14a98(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14a98:
  %v1_14a9c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14a9c = xor i32 %v1_14a9c, %arg1
  %v3_14a9c = icmp eq i32 %v2_14a9c, 0
  store i32 %v2_14a9c, i32* @eax, align 4
  %v1_14aa3 = icmp eq i1 %v3_14a9c, false
  br i1 %v1_14aa3, label %bb, label %dec_label_pc_14aa5

bb:                                               ; preds = %dec_label_pc_14a98
  %v2_14aa3 = call i32 @function_14add()
  br label %dec_label_pc_14aa5

dec_label_pc_14aa5:                               ; preds = %bb, %dec_label_pc_14a98
  %v0_14aaa = phi i32 [ %v2_14aa3, %bb ], [ %v2_14a9c, %dec_label_pc_14a98 ]
  ret i32 %v0_14aaa
}

define i32 @function_14ab0() local_unnamed_addr {
dec_label_pc_14ab0:
  %eax.global-to-local = alloca i32, align 4
  %v3_14ab0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_14ab0
}

define i32 @function_14ab8() local_unnamed_addr {
dec_label_pc_14ab8:
  %eax.global-to-local = alloca i32, align 4
  %v0_14ab8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14ab8
}

define i32 @function_14ac0() local_unnamed_addr {
dec_label_pc_14ac0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_14ac0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14ac0 = add i32 %v0_14ac0, 12
  %v4_14adb = call i32 @function_14a98(i32 %v1_14ac0, i32 ptrtoint ([45 x i8]* @global_var_ab50.3467 to i32), i32 44)
  ret i32 %v4_14adb
}

define i32 @function_14add() local_unnamed_addr {
dec_label_pc_14add:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14aea() local_unnamed_addr {
dec_label_pc_14aea:
  %v3_14af0 = call i32 @function_14a98(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  ret i32 %v3_14af0

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_14a98, { 1, 0 }
}

define i32 @_ZN5boost12interprocess9file_lockC1EPKc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14b20:
  ret i32 %arg2
}

define i32 @function_14b47(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14b47:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_14b47 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14b47 = add i32 %v0_14b47, 59375608
  %v2_14b47 = inttoptr i32 %v1_14b47 to i32*
  %v3_14b47 = load i32, i32* %v2_14b47, align 4
  %v4_14b47 = add i32 %v3_14b47, 1
  %v12_14b47 = icmp eq i32 %v4_14b47, 0
  store i32 %v4_14b47, i32* %v2_14b47, align 4
  br i1 %v12_14b47, label %dec_label_pc_14b61, label %dec_label_pc_14b4f

dec_label_pc_14b4f:                               ; preds = %dec_label_pc_14b47
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_14b53 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14b53 = xor i32 %v1_14b53, %arg1
  %v3_14b53 = icmp eq i32 %v2_14b53, 0
  store i32 %v2_14b53, i32* %eax.global-to-local, align 4
  %v1_14b5a = icmp eq i1 %v3_14b53, false
  br i1 %v1_14b5a, label %bb, label %dec_label_pc_14b5c

bb:                                               ; preds = %dec_label_pc_14b4f
  %v2_14b5a = call i32 @function_14bcb()
  store i32 %v2_14b5a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_14b5c

dec_label_pc_14b5c:                               ; preds = %bb, %dec_label_pc_14b4f
  %v0_14b60 = phi i32 [ %v2_14b5a, %bb ], [ %v2_14b53, %dec_label_pc_14b4f ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_14b60

dec_label_pc_14b61:                               ; preds = %dec_label_pc_14b47
  %v1_14b60 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v1_14b60

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 1 }
}

define i32 @function_14b89() local_unnamed_addr {
dec_label_pc_14b89:
  %v2_14b8d = load i32, i32* @eax, align 4
  ret i32 %v2_14b8d
}

define i32 @function_14ba2() local_unnamed_addr {
dec_label_pc_14ba2:
  %eax.global-to-local = alloca i32, align 4
  %v0_14ba2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14ba2
}

define i32 @function_14bcb() local_unnamed_addr {
dec_label_pc_14bcb:
  store i32 3, i32* @eax, align 4
  %v0_14bd8 = call i32 @function_14b89()
  ret i32 %v0_14bd8
}

define i32 @_ZN9CWalletDBD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c00:
  ret i32 0
}

define i32 @function_14c2a() local_unnamed_addr {
dec_label_pc_14c2a:
  %eax.global-to-local = alloca i32, align 4
  %v0_14c2a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14c2a
}

define i32 @function_14c3f() local_unnamed_addr {
dec_label_pc_14c3f:
  %eax.global-to-local = alloca i32, align 4
  %v0_14c3f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14c3f
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14c60:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_14c60 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v2_14c74 = load i32, i32* %arg1, align 4
  %v1_14c76 = icmp eq i32 %v2_14c74, 0
  br i1 %v1_14c76, label %dec_label_pc_14c86, label %dec_label_pc_14c7a

dec_label_pc_14c7a:                               ; preds = %dec_label_pc_14c60
  %v3_14c76 = trunc i32 %v2_14c74 to i8
  %v5_14c82 = icmp eq i8 %v3_14c76, 0
  %v1_14c84 = icmp eq i1 %v5_14c82, false
  br i1 %v1_14c84, label %dec_label_pc_14c98, label %dec_label_pc_14c86

dec_label_pc_14c86:                               ; preds = %dec_label_pc_14c98, %dec_label_pc_14c7a, %dec_label_pc_14c60
  br i1 false, label %dec_label_pc_14ca0, label %dec_label_pc_14c93

dec_label_pc_14c93:                               ; preds = %dec_label_pc_14c86
  store i32 %v0_14c60, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_14c98:                               ; preds = %dec_label_pc_14c7a
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_14c86

dec_label_pc_14ca0:                               ; preds = %dec_label_pc_14c86
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14cb0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_14cd3 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_14cd3 = inttoptr i32 %v1_14cd3 to i32*
  %v3_14cd3 = load i32, i32* %v2_14cd3, align 4
  %v1_14ce2 = icmp eq i32 %v3_14cd3, 0
  br i1 %v1_14ce2, label %dec_label_pc_14d39, label %dec_label_pc_14cea

dec_label_pc_14cea:                               ; preds = %dec_label_pc_14cb0
  store i32 0, i32* %edi.global-to-local, align 4
  %v1_14d05 = icmp eq i32 %tmp105, 0
  br i1 %v1_14d05, label %dec_label_pc_14d11, label %dec_label_pc_14d09

dec_label_pc_14d09:                               ; preds = %dec_label_pc_14cea
  br label %dec_label_pc_14d11

dec_label_pc_14d11:                               ; preds = %dec_label_pc_14d09, %dec_label_pc_14cea
  br label %dec_label_pc_14d39

dec_label_pc_14d39:                               ; preds = %dec_label_pc_14cb0, %dec_label_pc_14d11
  store i32 0, i32* %edi.global-to-local, align 4
  %v1_14d39 = add i32 %arg2, 12
  %v2_14d39 = inttoptr i32 %v1_14d39 to i32*
  %v3_14d39 = load i32, i32* %v2_14d39, align 4
  %v2_14d3c = add i32 %arg1, 12
  %v3_14d3c = inttoptr i32 %v2_14d3c to i32*
  store i32 %v3_14d39, i32* %v3_14d3c, align 4
  %v0_14d3f = load i32, i32* %ebx.global-to-local, align 4
  %v1_14d3f = add i32 %v0_14d3f, 16
  %v2_14d3f = inttoptr i32 %v1_14d3f to i32*
  %v3_14d3f = load i32, i32* %v2_14d3f, align 4
  %v1_14d42 = load i32, i32* %esi.global-to-local, align 4
  %v2_14d42 = add i32 %v1_14d42, 16
  %v3_14d42 = inttoptr i32 %v2_14d42 to i32*
  store i32 %v3_14d3f, i32* %v3_14d42, align 4
  %v0_14d45 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14d45 = add i32 %v0_14d45, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_14d45 = inttoptr i32 %v1_14d45 to i32*
  %v3_14d45 = load i32, i32* %v2_14d45, align 4
  %v1_14d48 = load i32, i32* %esi.global-to-local, align 4
  %v2_14d48 = add i32 %v1_14d48, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_14d48 = inttoptr i32 %v2_14d48 to i32*
  store i32 %v3_14d45, i32* %v3_14d48, align 4
  %v0_14d4b = load i32, i32* %esi.global-to-local, align 4
  %v1_14d4b = add i32 %v0_14d4b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_14d4b = inttoptr i32 %v1_14d4b to i32*
  %v3_14d4b = load i32, i32* %v2_14d4b, align 4
  %v1_14d4e = icmp eq i32 %v3_14d4b, 0
  br i1 %v1_14d4e, label %dec_label_pc_14d5a, label %dec_label_pc_14d52

dec_label_pc_14d52:                               ; preds = %dec_label_pc_14d39
  %v1_14d54 = load i32, i32* @esp, align 4
  %v2_14d54 = inttoptr i32 %v1_14d54 to i32*
  store i32 %v3_14d4b, i32* %v2_14d54, align 4
  %v1_14d5c.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_14d5a

dec_label_pc_14d5a:                               ; preds = %dec_label_pc_14d52, %dec_label_pc_14d39
  %v1_14d5c = phi i32 [ %v1_14d5c.pre, %dec_label_pc_14d52 ], [ %v0_14d4b, %dec_label_pc_14d39 ]
  %v0_14d5a = load i32, i32* %edi.global-to-local, align 4
  %v1_14d5a = icmp eq i32 %v0_14d5a, 0
  %v2_14d5c = add i32 %v1_14d5c, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_14d5c = inttoptr i32 %v2_14d5c to i32*
  store i32 %v0_14d5a, i32* %v3_14d5c, align 4
  br i1 %v1_14d5a, label %dec_label_pc_14d69, label %dec_label_pc_14d61

dec_label_pc_14d61:                               ; preds = %dec_label_pc_14d5a
  %v0_14d61 = load i32, i32* %edi.global-to-local, align 4
  %v1_14d63 = load i32, i32* @esp, align 4
  %v2_14d63 = inttoptr i32 %v1_14d63 to i32*
  store i32 %v0_14d61, i32* %v2_14d63, align 4
  br label %dec_label_pc_14d69

dec_label_pc_14d69:                               ; preds = %dec_label_pc_14d61, %dec_label_pc_14d5a
  %v0_14d69 = load i32, i32* @esp, align 4
  %v1_14d69 = add i32 %v0_14d69, 20
  %v2_14d69 = inttoptr i32 %v1_14d69 to i32*
  %v3_14d69 = load i32, i32* %v2_14d69, align 4
  %v1_14d6d = icmp eq i32 %v3_14d69, 0
  br i1 %v1_14d6d, label %dec_label_pc_14d79, label %dec_label_pc_14d71

dec_label_pc_14d71:                               ; preds = %dec_label_pc_14d69
  %v2_14d73 = inttoptr i32 %v0_14d69 to i32*
  store i32 %v3_14d69, i32* %v2_14d73, align 4
  %v0_14d79.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_14d79

dec_label_pc_14d79:                               ; preds = %dec_label_pc_14d71, %dec_label_pc_14d69
  %v0_14d96 = phi i32 [ %v0_14d79.pre, %dec_label_pc_14d71 ], [ %v0_14d69, %dec_label_pc_14d69 ]
  %v1_14d79 = add i32 %v0_14d96, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_14d79 = inttoptr i32 %v1_14d79 to i32*
  %v3_14d79 = load i32, i32* %v2_14d79, align 4
  %v1_14d7d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14d7d = xor i32 %v1_14d7d, %v3_14d79
  %v3_14d7d = icmp eq i32 %v2_14d7d, 0
  %v1_14d84 = icmp eq i1 %v3_14d7d, false
  br i1 %v1_14d84, label %dec_label_pc_14db4, label %dec_label_pc_14d86

dec_label_pc_14d86:                               ; preds = %dec_label_pc_14d79
  %v1_14d86 = add i32 %v0_14d96, 44
  %v2_14d86 = inttoptr i32 %v1_14d86 to i32*
  %v3_14d86 = load i32, i32* %v2_14d86, align 4
  store i32 %v3_14d86, i32* %ebx.global-to-local, align 4
  %v1_14d8a = add i32 %v0_14d96, ptrtoint (i32* @global_var_30.3470 to i32)
  %v2_14d8a = inttoptr i32 %v1_14d8a to i32*
  %v3_14d8a = load i32, i32* %v2_14d8a, align 4
  store i32 %v3_14d8a, i32* %esi.global-to-local, align 4
  %v1_14d8e = add i32 %v0_14d96, ptrtoint (i32* @global_var_34.3466 to i32)
  %v2_14d8e = inttoptr i32 %v1_14d8e to i32*
  %v3_14d8e = load i32, i32* %v2_14d8e, align 4
  store i32 %v3_14d8e, i32* %edi.global-to-local, align 4
  ret i32 %v2_14d7d

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14d79
  ret i32 %v2_14d7d

; uselistorder directives
  uselistorder i32 %v2_14d7d, { 1, 0, 2 }
  uselistorder i32 %v0_14d96, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14d39, { 1, 0 }
}

define i32 @function_14dba() local_unnamed_addr {
dec_label_pc_14dba:
  %eax.global-to-local = alloca i32, align 4
  %v0_14dba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14dba
}

define i32 @function_14dc3() local_unnamed_addr {
dec_label_pc_14dc3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14dd7() local_unnamed_addr {
dec_label_pc_14dd7:
  %v0_14dd9 = call i32 @function_14dc3()
  ret i32 %v0_14dd9
}

define i32 @_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14de0:
  %v1_14df9 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_14df9
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_14e90:
  %v4_14e90 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_14e95 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %v4_14e90)
  ret i32 %v1_14e95

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv(i32 %arg1) {
dec_label_pc_14ea0:
  ret i32 0
}

define i32 @function_14ec0() local_unnamed_addr {
dec_label_pc_14ec0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_14ec0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14ec0 = add i32 %v0_14ec0, -1996217228
  %v2_14ec0 = inttoptr i32 %v1_14ec0 to i32*
  %v3_14ec0 = load i32, i32* %v2_14ec0, align 4
  %v4_14ec0 = sub i32 %v3_14ec0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_14ec0, i32* %v2_14ec0, align 4
  %v0_14ec6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14ec6
}

define i32 @_ZN5boost15throw_exceptionISt13runtime_errorEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f10:
  ret i32 0
}

define i32 @function_14f37() local_unnamed_addr {
dec_label_pc_14f37:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_14f37 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_14f37 = load i32, i32* %ecx.global-to-local, align 4
  %v4_14f37 = trunc i32 %v3_14f37 to i8
  %v5_14f37 = and i8 %v4_14f37, %v2_14f37
  %v11_14f37 = load i32, i32* %eax.global-to-local, align 4
  %v12_14f37 = inttoptr i32 %v11_14f37 to i8*
  store i8 %v5_14f37, i8* %v12_14f37, align 1
  %v2_14f39 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_14f39 = load i32, i32* %eax.global-to-local, align 4
  %v4_14f39 = trunc i32 %v3_14f39 to i8
  %v5_14f39 = add i8 %v4_14f39, %v2_14f39
  %v21_14f39 = inttoptr i32 %v3_14f39 to i8*
  store i8 %v5_14f39, i8* %v21_14f39, align 1
  %v0_14f3b = load i32, i32* %ecx.global-to-local, align 4
  %v1_14f3b = add i32 %v0_14f3b, -1996217228
  %v2_14f3b = inttoptr i32 %v1_14f3b to i8*
  %v3_14f3b = load i8, i8* %v2_14f3b, align 1
  %v5_14f3b = trunc i32 %v0_14f3b to i8
  %v6_14f3b = add i8 %v3_14f3b, %v5_14f3b
  store i8 %v6_14f3b, i8* %v2_14f3b, align 1
  %v0_14f41 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14f41

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
}

define i32 @function_14fe3() local_unnamed_addr {
dec_label_pc_14fe3:
  %v0_14fe3 = load i32, i32* @ebx, align 4
  %v1_14ff3 = add i32 %v0_14fe3, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_14ff3 = inttoptr i32 %v1_14ff3 to i32*
  store i32 ptrtoint (i32* @global_var_38f50.3327 to i32), i32* %v2_14ff3, align 4
  %v0_14ffa = load i32, i32* @eax, align 4
  %v0_14ffe = load i32, i32* @ebx, align 4
  %v1_15001 = call i32 @function_278e0(i32 %v0_14ffe)
  store i32 %v0_14ffa, i32* @eax, align 4
  %v0_1500a = load i32, i32* @esi, align 4
  %v1_15011 = call i32 @function_278e0(i32 %v0_1500a)
  %v0_1501c = call i32 @function_14fe3()
  ret i32 %v0_1501c

; uselistorder directives
  uselistorder i32 (i32)* @function_278e0, { 1, 0 }
}

define i32 @function_1501e() local_unnamed_addr {
dec_label_pc_1501e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1501e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1501e
}

define i32 @_ZN5boost9date_time6c_time6gmtimeEPKlP2tm(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15020:
  ret i32 %arg1
}

define i32 @function_1504a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1504a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1504a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1504a = add i32 %v0_1504a, -1960938304
  %v2_1504a = inttoptr i32 %v1_1504a to i32*
  %v3_1504a = load i32, i32* %v2_1504a, align 4
  %v4_1504a = add i32 %v3_1504a, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1504a, i32* %v2_1504a, align 4
  %v0_15051 = load i32, i32* %eax.global-to-local, align 4
  %v11_15051 = and i32 %v0_15051, or (i32 zext (i8 ptrtoint (i32* @global_var_3c.3471 to i8) to i32), i32 -256)
  store i32 %v11_15051, i32* %eax.global-to-local, align 4
  %v0_15053 = load i32, i32* %edx.global-to-local, align 4
  %v1_15053 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15053 = xor i32 %v1_15053, %v0_15053
  %v3_15053 = icmp eq i32 %v2_15053, 0
  store i32 %v2_15053, i32* %edx.global-to-local, align 4
  %v1_1505a = icmp eq i1 %v3_15053, false
  br i1 %v1_1505a, label %dec_label_pc_15068, label %dec_label_pc_1505c

dec_label_pc_1505c:                               ; preds = %dec_label_pc_1504a
  ret i32 %v11_15051

dec_label_pc_15068:                               ; preds = %dec_label_pc_1504a
  ret i32 %v11_15051

; uselistorder directives
  uselistorder i32 %v11_15051, { 2, 1, 0 }
}

define i32 @function_150ac() local_unnamed_addr {
dec_label_pc_150ac:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_150ac = load i32, i32* %ebx.global-to-local, align 4
  %v1_150ac = add i32 %v0_150ac, -1994644412
  %v2_150ac = inttoptr i32 %v1_150ac to i32*
  %v3_150ac = load i32, i32* %v2_150ac, align 4
  %v4_150ac = sub i32 %v3_150ac, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_150ac, i32* %v2_150ac, align 4
  %v0_150b2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_150b2
}

define i32 @function_150b3() local_unnamed_addr {
dec_label_pc_150b3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_150c3() local_unnamed_addr {
dec_label_pc_150c3:
  %v0_150c5 = call i32 @function_150b3()
  ret i32 %v0_150c5
}

define i32 @_ZNSt11logic_errorC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_150d0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_150d0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_8.3277 to i32), i32* %arg1, align 4
  br i1 false, label %dec_label_pc_15112, label %dec_label_pc_1510d

dec_label_pc_1510d:                               ; preds = %dec_label_pc_150d0
  store i32 %v0_150d0, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_15112:                               ; preds = %dec_label_pc_150d0
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15130:
  %v1_15149 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_15149
}

define i32 @function_15160(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15160:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_15160 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15160 = add i32 %v0_15160, 63376454
  %v2_15160 = inttoptr i32 %v1_15160 to i32*
  %v3_15160 = load i32, i32* %v2_15160, align 4
  %v4_15160 = add i32 %v3_15160, -1
  %v12_15160 = icmp eq i32 %v4_15160, 0
  store i1 %v12_15160, i1* %zf.global-to-local, align 1
  store i32 %v4_15160, i32* %v2_15160, align 4
  %v0_15166 = call i32 @unknown_c7015501()
  store i32 %v0_15166, i32* %eax.global-to-local, align 4
  %v0_1516b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1516b = add i32 %v0_1516b, ptrtoint (i8** @global_var_1.3274 to i32)
  %v9_1516b = icmp eq i32 %v1_1516b, 0
  store i1 %v9_1516b, i1* %zf.global-to-local, align 1
  store i32 %v1_1516b, i32* %ebx.global-to-local, align 4
  %v1_1516c = inttoptr i32 %v0_15166 to i8*
  %v2_1516c = load i8, i8* %v1_1516c, align 1
  %v3_1516c = load i32, i32* %ecx.global-to-local, align 4
  %v4_1516c = trunc i32 %v3_1516c to i8
  %v5_1516c = or i8 %v4_1516c, %v2_1516c
  %v6_1516c = icmp eq i8 %v5_1516c, 0
  store i1 %v6_1516c, i1* %zf.global-to-local, align 1
  store i8 %v5_1516c, i8* %v1_1516c, align 1
  %v3_1516e = load i32, i32* %ebx.global-to-local, align 4
  %v4_1516e = inttoptr i32 %v3_1516e to i32*
  store i32 %arg1, i32* %v4_1516e, align 4
  %v0_15170 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15170 = add i32 %v0_15170, 205752768
  %v2_15170 = inttoptr i32 %v1_15170 to i8*
  %v3_15170 = load i8, i8* %v2_15170, align 1
  %v4_15170 = load i32, i32* %eax.global-to-local, align 4
  %v5_15170 = trunc i32 %v4_15170 to i8
  %v6_15170 = add i8 %v5_15170, %v3_15170
  %v16_15170 = icmp eq i8 %v6_15170, 0
  store i1 %v16_15170, i1* %zf.global-to-local, align 1
  store i8 %v6_15170, i8* %v2_15170, align 1
  %v0_15176 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_15176, label %dec_label_pc_15180, label %dec_label_pc_15178

dec_label_pc_15178:                               ; preds = %dec_label_pc_15160
  br label %dec_label_pc_15180

dec_label_pc_15180:                               ; preds = %dec_label_pc_15178, %dec_label_pc_15160
  %v0_15180 = load i32, i32* %esi.global-to-local, align 4
  %v1_15180 = add i32 %v0_15180, 16
  %v2_15180 = inttoptr i32 %v1_15180 to i32*
  %v3_15180 = load i32, i32* %v2_15180, align 4
  store i32 %v3_15180, i32* %eax.global-to-local, align 4
  %v0_15183 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15183 = add i32 %v0_15183, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_15183 = inttoptr i32 %v1_15183 to i32*
  store i32 ptrtoint (i32* @global_var_3971c.3441 to i32), i32* %v2_15183, align 4
  %v0_1518a = load i32, i32* %eax.global-to-local, align 4
  %v1_1518a = load i32, i32* %ebx.global-to-local, align 4
  %v2_1518a = add i32 %v1_1518a, 16
  %v3_1518a = inttoptr i32 %v2_1518a to i32*
  store i32 %v0_1518a, i32* %v3_1518a, align 4
  %v0_1518d = load i32, i32* %esi.global-to-local, align 4
  %v1_1518d = add i32 %v0_1518d, 20
  %v2_1518d = inttoptr i32 %v1_1518d to i32*
  %v3_1518d = load i32, i32* %v2_1518d, align 4
  store i32 %v3_1518d, i32* %eax.global-to-local, align 4
  %v1_15190 = load i32, i32* %ebx.global-to-local, align 4
  %v2_15190 = add i32 %v1_15190, 20
  %v3_15190 = inttoptr i32 %v2_15190 to i32*
  store i32 %v3_1518d, i32* %v3_15190, align 4
  %v0_15193 = load i32, i32* %esi.global-to-local, align 4
  %v1_15193 = add i32 %v0_15193, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_15193 = inttoptr i32 %v1_15193 to i32*
  %v3_15193 = load i32, i32* %v2_15193, align 4
  store i32 %v3_15193, i32* %eax.global-to-local, align 4
  %v0_15196 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15196 = inttoptr i32 %v0_15196 to i32*
  store i32 ptrtoint (%vtable_39708_type* @global_var_39708.3440 to i32), i32* %v1_15196, align 4
  %v0_1519c = load i32, i32* %eax.global-to-local, align 4
  %v1_1519c = load i32, i32* %ebx.global-to-local, align 4
  %v2_1519c = add i32 %v1_1519c, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_1519c = inttoptr i32 %v2_1519c to i32*
  store i32 %v0_1519c, i32* %v3_1519c, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_151a3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_151a3 = xor i32 %v1_151a3, %arg2
  %v3_151a3 = icmp eq i32 %v2_151a3, 0
  store i1 %v3_151a3, i1* %zf.global-to-local, align 1
  store i32 %v2_151a3, i32* %eax.global-to-local, align 4
  %v1_151aa = icmp eq i1 %v3_151a3, false
  br i1 %v1_151aa, label %dec_label_pc_151b2, label %dec_label_pc_151ac

dec_label_pc_151ac:                               ; preds = %dec_label_pc_15180
  %v0_151ac = load i32, i32* @esp, align 4
  %v10_151ac = icmp eq i32 %v0_151ac, -36
  store i1 %v10_151ac, i1* %zf.global-to-local, align 1
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v2_151a3

dec_label_pc_151b2:                               ; preds = %dec_label_pc_15180
  ret i32 %v2_151a3

; uselistorder directives
  uselistorder i32 %v2_151a3, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15160, { 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_151e0:
  %v4_151e0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_151e5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %v4_151e0)
  ret i32 %v1_151e5
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_151f0:
  ret i32 0
}

define i32 @function_15210() local_unnamed_addr {
dec_label_pc_15210:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15210 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15210 = add i32 %v0_15210, -1996217228
  %v2_15210 = inttoptr i32 %v1_15210 to i32*
  %v3_15210 = load i32, i32* %v2_15210, align 4
  %v4_15210 = sub i32 %v3_15210, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_15210, i32* %v2_15210, align 4
  %v0_15216 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15216
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian16bad_day_of_monthEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15260:
  %stack_var_-44 = alloca i32, align 4
  %v2_15285 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* @ebx, align 4
  %v3_1528e = call i32 @function_2a330(i32 %v2_15285, i32 %arg1)
  store i32 %v3_1528e, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39708_type* @global_var_39708.3440 to i32), i32* %stack_var_-44, align 4
  %v0_152c7 = load i32, i32* @ebx, align 4
  %v3_152ca = call i32 @function_2a390(i32 %v0_152c7, i32 %v2_15285)
  %v0_152d3 = load i32, i32* @ebx, align 4
  %v1_152d3 = inttoptr i32 %v0_152d3 to i32*
  store i32 ptrtoint (%vtable_39748_type* @global_var_39748.3427 to i32), i32* %v1_152d3, align 4
  store i8* bitcast (i32* @global_var_39764.3426 to i8*), i8** @global_var_8.3277, align 4
  store i32 ptrtoint (i32* @global_var_39774.3428 to i32), i32* @global_var_1c.3271, align 4
  store i32 ptrtoint (i8** @global_var_8.3277 to i32), i32* @eax, align 4
  %v2_152f9 = call i32 @function_27c90(i32 %v2_15285)
  ret i32 %v2_152f9

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv, { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev, { 1, 2, 0 }
  uselistorder i32 ptrtoint (%vtable_39748_type* @global_var_39748.3427 to i32), { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39708_type* @global_var_39708.3440 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_15318() local_unnamed_addr {
dec_label_pc_15318:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15327(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15327:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_15329 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15329 = add i32 %v0_15329, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_15329, i32* @ebx, align 4
  %v0_1532a = load i32, i32* %eax.global-to-local, align 4
  %v1_1532a = trunc i32 %v0_1532a to i8
  %v2_1532a = load i1, i1* %cf.global-to-local, align 1
  %v3_1532a = zext i1 %v2_1532a to i32
  %v4_1532a = sub i32 %v0_1532a, zext (i8 ptrtoint (i32* @global_var_50.3473 to i8) to i32)
  %v5_1532a = add i32 %v4_1532a, %v3_1532a
  %v16_1532a = icmp ult i8 %v1_1532a, 80
  %v17_1532a = or i1 %v2_1532a, %v16_1532a
  store i1 %v17_1532a, i1* %cf.global-to-local, align 1
  %v30_1532a = and i32 %v5_1532a, 255
  %v32_1532a = and i32 %v0_1532a, -256
  %v33_1532a = or i32 %v30_1532a, %v32_1532a
  store i32 %v33_1532a, i32* %eax.global-to-local, align 4
  %v4_1532c = inttoptr i32 %v1_15329 to i32*
  store i32 %arg1, i32* %v4_1532c, align 4
  %v0_1532e = load i32, i32* @ecx, align 4
  %v1_1532e = add i32 %v0_1532e, -1994644412
  %v2_1532e = inttoptr i32 %v1_1532e to i8*
  %v3_1532e = load i8, i8* %v2_1532e, align 1
  %v5_1532e = trunc i32 %v0_1532e to i8
  %v6_1532e = add i8 %v3_1532e, %v5_1532e
  %v11_1532e = icmp ult i8 %v6_1532e, %v3_1532e
  store i1 %v11_1532e, i1* %cf.global-to-local, align 1
  store i8 %v6_1532e, i8* %v2_1532e, align 1
  %v0_15334 = load i32, i32* %eax.global-to-local, align 4
  %v1_15334 = trunc i32 %v0_15334 to i8
  %v2_15334 = load i1, i1* %cf.global-to-local, align 1
  %v3_15334 = zext i1 %v2_15334 to i32
  %v4_15334 = add i32 %v0_15334, 220
  %v5_15334 = add i32 %v4_15334, %v3_15334
  %v17_15334 = icmp ult i8 %v1_15334, 36
  %v18_15334 = or i1 %v2_15334, %v17_15334
  store i1 %v18_15334, i1* %cf.global-to-local, align 1
  %v31_15334 = and i32 %v5_15334, 255
  %v33_15334 = and i32 %v0_15334, -256
  %v34_15334 = or i32 %v31_15334, %v33_15334
  store i32 %v34_15334, i32* @eax, align 4
  %v1_15336 = call i32 @function_27c90(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg2, i32* @eax, align 4
  %v0_1533f = load i32, i32* %esi.global-to-local, align 4
  %v1_15346 = call i32 @function_27c90(i32 %v0_1533f)
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v0_15351 = call i32 @function_15318()
  store i32 %v0_15351, i32* %eax.global-to-local, align 4
  ret i32 %v0_15351

; uselistorder directives
  uselistorder i1 %v2_15334, { 1, 0 }
  uselistorder i32 %v0_15334, { 1, 0, 2 }
  uselistorder i1 %v2_1532a, { 1, 0 }
  uselistorder i32 %v0_1532a, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_27c90, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_15353() local_unnamed_addr {
dec_label_pc_15353:
  %eax.global-to-local = alloca i32, align 4
  %v0_15353 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15353
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15360:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_15360 = load i32, i32* %esi.global-to-local, align 4
  %v0_15361 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_15379 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_15379 = inttoptr i32 %v1_15379 to i32*
  %v3_15379 = load i32, i32* %v2_15379, align 4
  store i32 %v3_15379, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.3411 to i32), i32* %arg1, align 4
  %v0_15382 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15382 = add i32 %v0_15382, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_15382 = inttoptr i32 %v1_15382 to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_15382, align 4
  %v0_15389 = load i32, i32* %eax.global-to-local, align 4
  %v1_15389 = load i32, i32* %ebx.global-to-local, align 4
  %v2_15389 = add i32 %v1_15389, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_15389 = inttoptr i32 %v2_15389 to i32*
  store i32 %v0_15389, i32* %v3_15389, align 4
  %v0_1538c = load i32, i32* %esi.global-to-local, align 4
  %v1_1538c = add i32 %v0_1538c, 12
  %v2_1538c = inttoptr i32 %v1_1538c to i32*
  %v3_1538c = load i32, i32* %v2_1538c, align 4
  store i32 %v3_1538c, i32* %eax.global-to-local, align 4
  %v1_1538f = icmp eq i32 %v3_1538c, 0
  %v1_15391 = load i32, i32* %ebx.global-to-local, align 4
  %v2_15391 = add i32 %v1_15391, 12
  %v3_15391 = inttoptr i32 %v2_15391 to i32*
  store i32 %v3_1538c, i32* %v3_15391, align 4
  br i1 %v1_1538f, label %dec_label_pc_1539e, label %dec_label_pc_15396

dec_label_pc_15396:                               ; preds = %dec_label_pc_15360
  br label %dec_label_pc_1539e

dec_label_pc_1539e:                               ; preds = %dec_label_pc_15396, %dec_label_pc_15360
  %v0_1539e = load i32, i32* %esi.global-to-local, align 4
  %v1_1539e = add i32 %v0_1539e, 16
  %v2_1539e = inttoptr i32 %v1_1539e to i32*
  %v3_1539e = load i32, i32* %v2_1539e, align 4
  store i32 %v3_1539e, i32* %eax.global-to-local, align 4
  %v0_153a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_153a1 = add i32 %v0_153a1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_153a1 = inttoptr i32 %v1_153a1 to i32*
  store i32 ptrtoint (i32* @global_var_38f3c.3443 to i32), i32* %v2_153a1, align 4
  %v0_153a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_153a8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_153a8 = add i32 %v1_153a8, 16
  %v3_153a8 = inttoptr i32 %v2_153a8 to i32*
  store i32 %v0_153a8, i32* %v3_153a8, align 4
  %v0_153ab = load i32, i32* %esi.global-to-local, align 4
  %v1_153ab = add i32 %v0_153ab, 20
  %v2_153ab = inttoptr i32 %v1_153ab to i32*
  %v3_153ab = load i32, i32* %v2_153ab, align 4
  store i32 %v3_153ab, i32* %eax.global-to-local, align 4
  %v1_153ae = load i32, i32* %ebx.global-to-local, align 4
  %v2_153ae = add i32 %v1_153ae, 20
  %v3_153ae = inttoptr i32 %v2_153ae to i32*
  store i32 %v3_153ab, i32* %v3_153ae, align 4
  %v0_153b1 = load i32, i32* %esi.global-to-local, align 4
  %v1_153b1 = add i32 %v0_153b1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_153b1 = inttoptr i32 %v1_153b1 to i32*
  %v3_153b1 = load i32, i32* %v2_153b1, align 4
  store i32 %v3_153b1, i32* %eax.global-to-local, align 4
  %v0_153b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_153b4 = inttoptr i32 %v0_153b4 to i32*
  store i32 ptrtoint (%vtable_38f28_type* @global_var_38f28.3442 to i32), i32* %v1_153b4, align 4
  %v0_153ba = load i32, i32* %eax.global-to-local, align 4
  %v1_153ba = load i32, i32* %ebx.global-to-local, align 4
  %v2_153ba = add i32 %v1_153ba, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_153ba = inttoptr i32 %v2_153ba to i32*
  store i32 %v0_153ba, i32* %v3_153ba, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 false, label %dec_label_pc_153d0, label %dec_label_pc_153ca

dec_label_pc_153ca:                               ; preds = %dec_label_pc_1539e
  store i32 %v0_15361, i32* %ebx.global-to-local, align 4
  store i32 %v0_15360, i32* %esi.global-to-local, align 4
  ret i32 0

dec_label_pc_153d0:                               ; preds = %dec_label_pc_1539e
  ret i32 0

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 5, 4, 6, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38f28_type* @global_var_38f28.3442 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_153f0:
  %v4_153f0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_153f5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %v4_153f0)
  ret i32 %v1_153f5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_15400:
  ret i32 0
}

define i32 @function_15420() local_unnamed_addr {
dec_label_pc_15420:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15420 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15420 = add i32 %v0_15420, -1996217228
  %v2_15420 = inttoptr i32 %v1_15420 to i32*
  %v3_15420 = load i32, i32* %v2_15420, align 4
  %v4_15420 = sub i32 %v3_15420, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_15420, i32* %v2_15420, align 4
  %v0_15426 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15426
}

define i32 @_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15470:
  ret i32 0
}

define i32 @function_154ba() local_unnamed_addr {
dec_label_pc_154ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_154ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_154ba
}

define i32 @function_15521() local_unnamed_addr {
dec_label_pc_15521:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15540(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15540:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15542 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15542 = add i32 %v0_15542, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_15542, i32* %ebx.global-to-local, align 4
  %v0_15543 = load i32, i32* %eax.global-to-local, align 4
  %v1_15543 = trunc i32 %v0_15543 to i8
  %v2_15543 = load i1, i1* %cf.global-to-local, align 1
  %v3_15543 = zext i1 %v2_15543 to i32
  %v4_15543 = sub i32 %v0_15543, zext (i8 ptrtoint (i32* @global_var_50.3473 to i8) to i32)
  %v5_15543 = add i32 %v4_15543, %v3_15543
  %v16_15543 = icmp ult i8 %v1_15543, 80
  %v17_15543 = or i1 %v2_15543, %v16_15543
  store i1 %v17_15543, i1* %cf.global-to-local, align 1
  %v30_15543 = and i32 %v5_15543, 255
  %v32_15543 = and i32 %v0_15543, -256
  %v33_15543 = or i32 %v30_15543, %v32_15543
  store i32 %v33_15543, i32* %eax.global-to-local, align 4
  %v4_15545 = inttoptr i32 %v1_15542 to i32*
  store i32 %arg1, i32* %v4_15545, align 4
  %v0_15547 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15547 = add i32 %v0_15547, -1994644412
  %v2_15547 = inttoptr i32 %v1_15547 to i8*
  %v3_15547 = load i8, i8* %v2_15547, align 1
  %v5_15547 = trunc i32 %v0_15547 to i8
  %v6_15547 = add i8 %v3_15547, %v5_15547
  %v11_15547 = icmp ult i8 %v6_15547, %v3_15547
  store i1 %v11_15547, i1* %cf.global-to-local, align 1
  store i8 %v6_15547, i8* %v2_15547, align 1
  %v0_1554d = load i32, i32* %eax.global-to-local, align 4
  %v1_1554d = trunc i32 %v0_1554d to i8
  %v2_1554d = load i1, i1* %cf.global-to-local, align 1
  %v3_1554d = zext i1 %v2_1554d to i32
  %v4_1554d = add i32 %v0_1554d, 220
  %v5_1554d = add i32 %v4_1554d, %v3_1554d
  %v17_1554d = icmp ult i8 %v1_1554d, 36
  %v18_1554d = or i1 %v2_1554d, %v17_1554d
  store i1 %v18_1554d, i1* %cf.global-to-local, align 1
  %v31_1554d = and i32 %v5_1554d, 255
  %v33_1554d = and i32 %v0_1554d, -256
  %v34_1554d = or i32 %v31_1554d, %v33_1554d
  store i32 %v34_1554d, i32* @eax, align 4
  %v0_1554f = call i32 @function_27f10()
  store i32 %arg2, i32* @eax, align 4
  %v0_15558 = call i32 @function_15521()
  store i32 %v0_15558, i32* %eax.global-to-local, align 4
  ret i32 %v0_15558

; uselistorder directives
  uselistorder i1 %v2_1554d, { 1, 0 }
  uselistorder i32 %v0_1554d, { 1, 0, 2 }
  uselistorder i1 %v2_15543, { 1, 0 }
  uselistorder i32 %v0_15543, { 1, 0, 2 }
}

define i32 @_ZN5boost15recursive_mutexC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15560:
  %v1_1558c = add i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  ret i32 %v1_1558c
}

define i32 @function_1559e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1559e:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_1559e = load i32, i32* %ebp.global-to-local, align 4
  %v1_1559e = add i32 %v0_1559e, -1960479296
  %v2_1559e = inttoptr i32 %v1_1559e to i32*
  %v3_1559e = load i32, i32* %v2_1559e, align 4
  %v4_1559e = add i32 %v3_1559e, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1559e, i32* %v2_1559e, align 4
  %v0_155a5 = load i32, i32* %eax.global-to-local, align 4
  %v11_155a5 = and i32 %v0_155a5, or (i32 zext (i8 ptrtoint (i32* @global_var_3c.3471 to i8) to i32), i32 -256)
  store i32 %v11_155a5, i32* %eax.global-to-local, align 4
  %v1_155a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_155a7 = xor i32 %v1_155a7, %v11_155a5
  %v3_155a7 = icmp eq i32 %v2_155a7, 0
  store i1 %v3_155a7, i1* %zf.global-to-local, align 1
  store i32 %v2_155a7, i32* @eax, align 4
  %v0_155ae = load i32, i32* %ebx.global-to-local, align 4
  %v1_155ae = add i32 %v0_155ae, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_155ae = inttoptr i32 %v1_155ae to i8*
  store i8 0, i8* %v2_155ae, align 1
  %v0_155b2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_155b2 = add i32 %v0_155b2, ptrtoint (i32* @global_var_50.3473 to i32)
  %v2_155b2 = inttoptr i32 %v1_155b2 to i32*
  store i32 0, i32* %v2_155b2, align 4
  %v0_155b9 = load i1, i1* %zf.global-to-local, align 1
  %v1_155b9 = icmp eq i1 %v0_155b9, false
  br i1 %v1_155b9, label %bb, label %dec_label_pc_1559e.dec_label_pc_155bf_crit_edge

dec_label_pc_1559e.dec_label_pc_155bf_crit_edge:  ; preds = %dec_label_pc_1559e
  %v0_155c3.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_155bf

bb:                                               ; preds = %dec_label_pc_1559e
  %v2_155b9 = call i32 @function_1564a()
  store i32 %v2_155b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_155bf

dec_label_pc_155bf:                               ; preds = %dec_label_pc_1559e.dec_label_pc_155bf_crit_edge, %bb
  %v0_155c3 = phi i32 [ %v0_155c3.pre, %dec_label_pc_1559e.dec_label_pc_155bf_crit_edge ], [ %v2_155b9, %bb ]
  %v0_155bf = load i32, i32* @esp, align 4
  %v10_155bf = icmp eq i32 %v0_155bf, -72
  store i1 %v10_155bf, i1* %zf.global-to-local, align 1
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_155c3

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_155bf, { 1, 0 }
}

define i32 @function_15614() local_unnamed_addr {
dec_label_pc_15614:
  %v0_15614 = load i32, i32* @eax, align 4
  %v0_15618 = load i32, i32* @ebx, align 4
  %v1_1561b = call i32 @function_27350(i32 %v0_15618)
  ret i32 %v0_15614
}

define i32 @function_1562c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1562c:
  %stack_var_44 = alloca i32, align 4
  %v2_1562c = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_1562c, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.3411 to i32), i32* %stack_var_44, align 4
  %v1_15643 = call i32 @function_2a9d0(i32 %v2_1562c)
  store i32 %v1_15643, i32* @eax, align 4
  %v0_15648 = call i32 @function_15614()
  ret i32 %v0_15648
}

define i32 @function_1564a() local_unnamed_addr {
dec_label_pc_1564a:
  %v0_1564a = load i32, i32* @eax, align 4
  ret i32 %v0_1564a
}

define i32 @_ZN5boost6detail16thread_data_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15650:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_1566d = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1566d = inttoptr i32 %v1_1566d to i32*
  store i32 0, i32* %v2_1566d, align 4
  %v0_15674 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15674 = add i32 %v0_15674, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_15674 = inttoptr i32 %v1_15674 to i32*
  store i32 0, i32* %v2_15674, align 4
  %v3_15674 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_15674

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1573b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1573b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_1573b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1573b = add i32 %v0_1573b, -1937436736
  %v2_1573b = inttoptr i32 %v1_1573b to i32*
  %v3_1573b = load i32, i32* %v2_1573b, align 4
  %v4_1573b = add i32 %v3_1573b, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1573b, i32* %v2_1573b, align 4
  %v2_15741 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15741 = load i32, i32* %eax.global-to-local, align 4
  %v4_15741 = trunc i32 %v3_15741 to i8
  %v5_15741 = add i8 %v4_15741, %v2_15741
  %v15_15741 = icmp eq i8 %v5_15741, 0
  store i1 %v15_15741, i1* %zf.global-to-local, align 1
  %v21_15741 = inttoptr i32 %v3_15741 to i8*
  store i8 %v5_15741, i8* %v21_15741, align 1
  %v0_15743 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15743 = add i32 %v0_15743, 58499
  %v2_15743 = inttoptr i32 %v1_15743 to i8*
  %v3_15743 = load i8, i8* %v2_15743, align 1
  %v4_15743 = load i32, i32* @ecx, align 4
  %v5_15743 = trunc i32 %v4_15743 to i8
  %v6_15743 = add i8 %v5_15743, %v3_15743
  %v16_15743 = icmp eq i8 %v6_15743, 0
  store i1 %v16_15743, i1* %zf.global-to-local, align 1
  store i8 %v6_15743, i8* %v2_15743, align 1
  %v0_15749 = load i32, i32* @ecx, align 4
  %v1_15749 = add i32 %v0_15749, ptrtoint (i8** @global_var_ec83.3474 to i32)
  %v2_15749 = inttoptr i32 %v1_15749 to i8*
  %v3_15749 = load i8, i8* %v2_15749, align 1
  %v5_15749 = trunc i32 %v0_15749 to i8
  %v6_15749 = add i8 %v3_15749, %v5_15749
  %v16_15749 = icmp eq i8 %v6_15749, 0
  store i1 %v16_15749, i1* %zf.global-to-local, align 1
  store i8 %v6_15749, i8* %v2_15749, align 1
  %v0_1574f = load i32, i32* @ecx, align 4
  %v1_1574f = add i32 %v0_1574f, ptrtoint (i8** @global_var_f083.3475 to i32)
  %v2_1574f = inttoptr i32 %v1_1574f to i8*
  %v3_1574f = load i8, i8* %v2_1574f, align 1
  %v5_1574f = trunc i32 %v0_1574f to i8
  %v6_1574f = add i8 %v3_1574f, %v5_1574f
  %v16_1574f = icmp eq i8 %v6_1574f, 0
  store i1 %v16_1574f, i1* %zf.global-to-local, align 1
  store i8 %v6_1574f, i8* %v2_1574f, align 1
  %v0_15755 = load i32, i32* @ebx, align 4
  %v1_15755 = add i32 %v0_15755, 1700537412
  %v2_15755 = inttoptr i32 %v1_15755 to i8*
  %v3_15755 = load i8, i8* %v2_15755, align 1
  %v4_15755 = load i32, i32* @ecx, align 4
  %v5_15755 = trunc i32 %v4_15755 to i8
  %v6_15755 = add i8 %v5_15755, %v3_15755
  store i8 %v6_15755, i8* %v2_15755, align 1
  %v0_1575b = load i32, i32* %eax.global-to-local, align 4
  %v1_1575b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1575b = xor i32 %v1_1575b, %v0_1575b
  %v3_1575b = icmp eq i32 %v2_1575b, 0
  store i1 %v3_1575b, i1* %zf.global-to-local, align 1
  store i32 %v2_1575b, i32* %eax.global-to-local, align 4
  %v0_15761 = load i32, i32* @ebx, align 4
  %v1_15761 = add i32 %v0_15761, ptrtoint (i8** @global_var_d8.3476 to i32)
  %v2_15761 = inttoptr i32 %v1_15761 to i8*
  store i8 0, i8* %v2_15761, align 1
  %v0_15768 = load i32, i32* @ebx, align 4
  %v1_15768 = add i32 %v0_15768, ptrtoint (i8** @global_var_d9.3477 to i32)
  %v2_15768 = inttoptr i32 %v1_15768 to i8*
  store i8 0, i8* %v2_15768, align 1
  %v0_1576f = load i32, i32* @ebx, align 4
  %v1_1576f = add i32 %v0_1576f, ptrtoint (i8** @global_var_da.3478 to i32)
  %v2_1576f = inttoptr i32 %v1_1576f to i8*
  store i8 0, i8* %v2_1576f, align 1
  %v0_15776 = load i32, i32* @ebx, align 4
  %v1_15776 = add i32 %v0_15776, ptrtoint (i32* @global_var_dc.3318 to i32)
  %v2_15776 = inttoptr i32 %v1_15776 to i32*
  store i32 0, i32* %v2_15776, align 4
  %v0_15780 = load i32, i32* @ebx, align 4
  %v1_15780 = add i32 %v0_15780, ptrtoint (i32* @global_var_e4.3479 to i32)
  %v2_15780 = inttoptr i32 %v1_15780 to i32*
  store i32 0, i32* %v2_15780, align 4
  %v0_1578a = load i32, i32* @ebx, align 4
  %v1_1578a = add i32 %v0_1578a, ptrtoint (i32* @global_var_e8.3284 to i32)
  %v2_1578a = inttoptr i32 %v1_1578a to i32*
  store i32 0, i32* %v2_1578a, align 4
  %v0_15794 = load i32, i32* @ebx, align 4
  %v1_15794 = add i32 %v0_15794, 244
  %v2_15794 = inttoptr i32 %v1_15794 to i32*
  store i32 0, i32* %v2_15794, align 4
  %v0_1579e = load i32, i32* @ebx, align 4
  %v1_1579e = add i32 %v0_1579e, 248
  %v2_1579e = inttoptr i32 %v1_1579e to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_1579e, align 1
  %v0_157a5 = load i32, i32* @ebx, align 4
  %v1_157a5 = add i32 %v0_157a5, 249
  %v2_157a5 = inttoptr i32 %v1_157a5 to i8*
  store i8 0, i8* %v2_157a5, align 1
  %v0_157ac = load i32, i32* @ebx, align 4
  %v1_157ac = add i32 %v0_157ac, 256
  %v2_157ac = inttoptr i32 %v1_157ac to i32*
  store i32 0, i32* %v2_157ac, align 4
  %v0_157b6 = load i1, i1* %zf.global-to-local, align 1
  %v1_157b6 = icmp eq i1 %v0_157b6, false
  br i1 %v1_157b6, label %bb, label %dec_label_pc_1573b.dec_label_pc_157bc_crit_edge

dec_label_pc_1573b.dec_label_pc_157bc_crit_edge:  ; preds = %dec_label_pc_1573b
  %v0_157cf.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_157bc

bb:                                               ; preds = %dec_label_pc_1573b
  %v2_157b6 = call i32 @function_1590f()
  store i32 %v2_157b6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_157bc

dec_label_pc_157bc:                               ; preds = %dec_label_pc_1573b.dec_label_pc_157bc_crit_edge, %bb
  %v0_157cf = phi i32 [ %v0_157cf.pre, %dec_label_pc_1573b.dec_label_pc_157bc_crit_edge ], [ %v2_157b6, %bb ]
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  %v0_157cc = load i32, i32* @esp, align 4
  %v10_157cc = icmp eq i32 %v0_157cc, -124
  store i1 %v10_157cc, i1* %zf.global-to-local, align 1
  ret i32 %v0_157cf

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_157bc, { 1, 0 }
}

define i32 @function_1584c() local_unnamed_addr {
dec_label_pc_1584c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15858() local_unnamed_addr {
dec_label_pc_15858:
  %v0_15858 = load i32, i32* @edi, align 4
  %v1_1585b = call i32 @function_29b80(i32 %v0_15858)
  ret i32 %v1_1585b
}

define i32 @function_15860() local_unnamed_addr {
dec_label_pc_15860:
  %stack_var_76 = alloca i32, align 4
  %v0_15860 = load i32, i32* @ebx, align 4
  %v1_15860 = add i32 %v0_15860, 16
  store i32 %v1_15860, i32* @eax, align 4
  %v1_15866 = trunc i32 %v1_15860 to i8
  %v2_15866 = call i32 @function_290b0(i8 %v1_15866)
  %v0_1586b = load i32, i32* @ebx, align 4
  %v1_1586b = add i32 %v0_1586b, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1586b = inttoptr i32 %v1_1586b to i32*
  %v3_1586b = load i32, i32* %v2_1586b, align 4
  store i32 %v3_1586b, i32* @eax, align 4
  %v1_1586e = icmp eq i32 %v3_1586b, 0
  br i1 %v1_1586e, label %dec_label_pc_15887, label %dec_label_pc_15872

dec_label_pc_15872:                               ; preds = %dec_label_pc_15860
  %v1_15875 = add i32 %v3_1586b, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_15875 = inttoptr i32 %v1_15875 to i32*
  %v3_15875 = load i32, i32* %v2_15875, align 4
  %v5_15875 = add i32 %v3_15875, -1
  store i32 %v5_15875, i32* %v2_15875, align 4
  %v10_1587a = icmp eq i32 %v3_15875, ptrtoint (i8** @global_var_1.3274 to i32)
  %v1_1587d = icmp eq i1 %v10_1587a, false
  br i1 %v1_1587d, label %dec_label_pc_15887, label %dec_label_pc_1587f

dec_label_pc_1587f:                               ; preds = %dec_label_pc_15872
  br label %dec_label_pc_15887

dec_label_pc_15887:                               ; preds = %dec_label_pc_1587f, %dec_label_pc_15872, %dec_label_pc_15860
  %v2_1588f = ptrtoint i32* %stack_var_76 to i32
  %v1_1589a = call i32 @function_27440(i32 %v2_1588f)
  store i32 %v3_1586b, i32* @eax, align 4
  %v1_158aa = call i32 @function_29b80(i32 %v3_1586b)
  store i32 %v3_1586b, i32* @eax, align 4
  store i32 %v3_1586b, i32* @ebp, align 4
  %v0_158b5 = load i32, i32* @esi, align 4
  store i32 %v3_1586b, i32* @esi, align 4
  %v1_158ba = call i32 @function_29be0(i32 %v0_158b5)
  store i32 %v1_158ba, i32* @eax, align 4
  %v0_158bf = call i32 @function_15858()
  ret i32 %v0_158bf

; uselistorder directives
  uselistorder i32 %v3_1586b, { 5, 4, 3, 2, 1, 0, 6, 7 }
}

define i32 @function_158c1() local_unnamed_addr {
dec_label_pc_158c1:
  %stack_var_44 = alloca i32, align 4
  %v2_158c1 = ptrtoint i32* %stack_var_44 to i32
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.3411 to i32), i32* %stack_var_44, align 4
  %v1_158d8 = call i32 @function_2aac0(i32 %v2_158c1)
  store i32 %v1_158d8, i32* @eax, align 4
  store i32 %v1_158d8, i32* @edi, align 4
  store i32 %v1_158d8, i32* @esi, align 4
  %v1_158e4 = call i32 @function_27440(i32 %v2_158c1)
  %v0_158e9 = call i32 @function_15860()
  ret i32 %v0_158e9
}

define i32 @function_158ee() local_unnamed_addr {
dec_label_pc_158ee:
  %stack_var_60 = alloca i32, align 4
  %v2_158ee = ptrtoint i32* %stack_var_60 to i32
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.3411 to i32), i32* %stack_var_60, align 4
  %v1_15905 = call i32 @function_2aac0(i32 %v2_158ee)
  store i32 %v1_15905, i32* @eax, align 4
  %v0_1590a = call i32 @function_1584c()
  ret i32 %v0_1590a
}

define i32 @function_1590f() local_unnamed_addr {
dec_label_pc_1590f:
  %stack_var_84 = alloca i32, align 4
  %v2_15914 = ptrtoint i32* %stack_var_84 to i32
  store i32 %v2_15914, i32* @eax, align 4
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.3411 to i32), i32* %stack_var_84, align 4
  %v1_1592b = call i32 @function_2aac0(i32 %v2_15914)
  store i32 %v1_1592b, i32* @eax, align 4
  %v1_1593b = call i32 @function_27440(i32 %v2_15914)
  ret i32 %v1_1592b
}

define i32 @function_15949() local_unnamed_addr {
dec_label_pc_15949:
  %stack_var_68 = alloca i32, align 4
  %v2_15949 = ptrtoint i32* %stack_var_68 to i32
  store i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.3411 to i32), i32* %stack_var_68, align 4
  %v1_15960 = call i32 @function_2aac0(i32 %v2_15949)
  store i32 %v1_15960, i32* @eax, align 4
  %v1_1596c = call i32 @function_27440(i32 %v2_15949)
  ret i32 %v1_15960

; uselistorder directives
  uselistorder i32 (i32)* @function_27440, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_2aac0, { 3, 1, 2, 0 }
  uselistorder i32 ptrtoint (%vtable_38ef0_type* @global_var_38ef0.3411 to i32), { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15980:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_15980 = load i32, i32* %esi.global-to-local, align 4
  %v0_15981 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_15999 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_15999 = inttoptr i32 %v1_15999 to i32*
  %v3_15999 = load i32, i32* %v2_15999, align 4
  store i32 %v3_15999, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %arg1, align 4
  %v0_159a2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_159a2 = add i32 %v0_159a2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_159a2 = inttoptr i32 %v1_159a2 to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_159a2, align 4
  %v0_159a9 = load i32, i32* %eax.global-to-local, align 4
  %v1_159a9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_159a9 = add i32 %v1_159a9, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_159a9 = inttoptr i32 %v2_159a9 to i32*
  store i32 %v0_159a9, i32* %v3_159a9, align 4
  %v0_159ac = load i32, i32* %esi.global-to-local, align 4
  %v1_159ac = add i32 %v0_159ac, 12
  %v2_159ac = inttoptr i32 %v1_159ac to i32*
  %v3_159ac = load i32, i32* %v2_159ac, align 4
  store i32 %v3_159ac, i32* %eax.global-to-local, align 4
  %v1_159af = icmp eq i32 %v3_159ac, 0
  %v1_159b1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_159b1 = add i32 %v1_159b1, 12
  %v3_159b1 = inttoptr i32 %v2_159b1 to i32*
  store i32 %v3_159ac, i32* %v3_159b1, align 4
  br i1 %v1_159af, label %dec_label_pc_159be, label %dec_label_pc_159b6

dec_label_pc_159b6:                               ; preds = %dec_label_pc_15980
  br label %dec_label_pc_159be

dec_label_pc_159be:                               ; preds = %dec_label_pc_159b6, %dec_label_pc_15980
  %v0_159be = load i32, i32* %esi.global-to-local, align 4
  %v1_159be = add i32 %v0_159be, 16
  %v2_159be = inttoptr i32 %v1_159be to i32*
  %v3_159be = load i32, i32* %v2_159be, align 4
  store i32 %v3_159be, i32* %eax.global-to-local, align 4
  %v0_159c1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_159c1 = add i32 %v0_159c1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_159c1 = inttoptr i32 %v1_159c1 to i32*
  store i32 ptrtoint (i32* @global_var_3901c.3445 to i32), i32* %v2_159c1, align 4
  %v0_159c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_159c8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_159c8 = add i32 %v1_159c8, 16
  %v3_159c8 = inttoptr i32 %v2_159c8 to i32*
  store i32 %v0_159c8, i32* %v3_159c8, align 4
  %v0_159cb = load i32, i32* %esi.global-to-local, align 4
  %v1_159cb = add i32 %v0_159cb, 20
  %v2_159cb = inttoptr i32 %v1_159cb to i32*
  %v3_159cb = load i32, i32* %v2_159cb, align 4
  store i32 %v3_159cb, i32* %eax.global-to-local, align 4
  %v1_159ce = load i32, i32* %ebx.global-to-local, align 4
  %v2_159ce = add i32 %v1_159ce, 20
  %v3_159ce = inttoptr i32 %v2_159ce to i32*
  store i32 %v3_159cb, i32* %v3_159ce, align 4
  %v0_159d1 = load i32, i32* %esi.global-to-local, align 4
  %v1_159d1 = add i32 %v0_159d1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_159d1 = inttoptr i32 %v1_159d1 to i32*
  %v3_159d1 = load i32, i32* %v2_159d1, align 4
  store i32 %v3_159d1, i32* %eax.global-to-local, align 4
  %v0_159d4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_159d4 = inttoptr i32 %v0_159d4 to i32*
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.3444 to i32), i32* %v1_159d4, align 4
  %v0_159da = load i32, i32* %eax.global-to-local, align 4
  %v1_159da = load i32, i32* %ebx.global-to-local, align 4
  %v2_159da = add i32 %v1_159da, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_159da = inttoptr i32 %v2_159da to i32*
  store i32 %v0_159da, i32* %v3_159da, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 false, label %dec_label_pc_159f0, label %dec_label_pc_159ea

dec_label_pc_159ea:                               ; preds = %dec_label_pc_159be
  store i32 %v0_15981, i32* %ebx.global-to-local, align 4
  store i32 %v0_15980, i32* %esi.global-to-local, align 4
  ret i32 0

dec_label_pc_159f0:                               ; preds = %dec_label_pc_159be
  ret i32 0

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 5, 4, 6, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a10:
  %v4_15a10 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_15a15 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %v4_15a10)
  ret i32 %v1_15a15
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_15a20:
  ret i32 0
}

define i32 @function_15a40() local_unnamed_addr {
dec_label_pc_15a40:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15a40 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15a40 = add i32 %v0_15a40, -1996217228
  %v2_15a40 = inttoptr i32 %v1_15a40 to i32*
  %v3_15a40 = load i32, i32* %v2_15a40, align 4
  %v4_15a40 = sub i32 %v3_15a40, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_15a40, i32* %v2_15a40, align 4
  %v0_15a46 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15a46
}

define i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a90:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 ptrtoint (%vtable_39008_type* @global_var_39008.3444 to i32), i32* %stack_var_-44, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_15adb = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_15adb = inttoptr i32 %v1_15adb to i32*
  %v3_15adb = load i32, i32* %v2_15adb, align 4
  store i32 %v3_15adb, i32* @eax, align 4
  %v2_15ade = ptrtoint i32* %stack_var_-44 to i32
  store i32 ptrtoint (i32* @global_var_3901c.3445 to i32), i32* %stack_var_-36, align 4
  %v3_15af5 = call i32 @function_2b410(i32 0, i32 %v2_15ade)
  %v2_15afa = ptrtoint i32* %stack_var_-36 to i32
  %v0_15afe = load i32, i32* %ebx.global-to-local, align 4
  %v1_15afe = inttoptr i32 %v0_15afe to i32*
  store i32 ptrtoint (%vtable_39048_type* @global_var_39048.3417 to i32), i32* %v1_15afe, align 4
  store i8* bitcast (i32* @global_var_39064.3416 to i8*), i8** @global_var_8.3277, align 4
  store i32 ptrtoint (i32* @global_var_39074.3418 to i32), i32* @global_var_1c.3271, align 4
  store i32 ptrtoint (i8** @global_var_8.3277 to i32), i32* @eax, align 4
  %v3_15b1c = call i32 @function_2a740(i32 ptrtoint (i8** @global_var_8.3277 to i32), i32 %v2_15afa)
  store i32 %v3_15b1c, i32* @eax, align 4
  %v2_15b24 = call i32 @function_285a0(i32 %v2_15ade)
  store i32 %v2_15b24, i32* @eax, align 4
  %v2_15b48 = call i32 @function_285a0(i32 %v2_15ade)
  ret i32 %v2_15b48

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, { 1, 2, 0 }
  uselistorder i32 ptrtoint (%vtable_39048_type* @global_var_39048.3417 to i32), { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39008_type* @global_var_39008.3444 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_15b60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15b60:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15b62 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15b62 = add i32 %v0_15b62, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_15b62, i32* %ebx.global-to-local, align 4
  %v0_15b63 = load i32, i32* %eax.global-to-local, align 4
  %v1_15b63 = trunc i32 %v0_15b63 to i8
  %v2_15b63 = load i1, i1* %cf.global-to-local, align 1
  %v3_15b63 = zext i1 %v2_15b63 to i32
  %v4_15b63 = sub i32 %v0_15b63, zext (i8 ptrtoint (i32* @global_var_50.3473 to i8) to i32)
  %v5_15b63 = add i32 %v4_15b63, %v3_15b63
  %v16_15b63 = icmp ult i8 %v1_15b63, 80
  %v17_15b63 = or i1 %v2_15b63, %v16_15b63
  store i1 %v17_15b63, i1* %cf.global-to-local, align 1
  %v30_15b63 = and i32 %v5_15b63, 255
  %v32_15b63 = and i32 %v0_15b63, -256
  %v33_15b63 = or i32 %v30_15b63, %v32_15b63
  store i32 %v33_15b63, i32* %eax.global-to-local, align 4
  %v4_15b65 = inttoptr i32 %v1_15b62 to i32*
  store i32 %arg1, i32* %v4_15b65, align 4
  %v0_15b67 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15b67 = add i32 %v0_15b67, -1994644412
  %v2_15b67 = inttoptr i32 %v1_15b67 to i8*
  %v3_15b67 = load i8, i8* %v2_15b67, align 1
  %v5_15b67 = trunc i32 %v0_15b67 to i8
  %v6_15b67 = add i8 %v3_15b67, %v5_15b67
  %v11_15b67 = icmp ult i8 %v6_15b67, %v3_15b67
  store i1 %v11_15b67, i1* %cf.global-to-local, align 1
  store i8 %v6_15b67, i8* %v2_15b67, align 1
  %v0_15b6d = load i32, i32* %eax.global-to-local, align 4
  %v1_15b6d = trunc i32 %v0_15b6d to i8
  %v2_15b6d = load i1, i1* %cf.global-to-local, align 1
  %v3_15b6d = zext i1 %v2_15b6d to i32
  %v4_15b6d = add i32 %v0_15b6d, 220
  %v5_15b6d = add i32 %v4_15b6d, %v3_15b6d
  %v17_15b6d = icmp ult i8 %v1_15b6d, 36
  %v18_15b6d = or i1 %v2_15b6d, %v17_15b6d
  store i1 %v18_15b6d, i1* %cf.global-to-local, align 1
  %v31_15b6d = and i32 %v5_15b6d, 255
  %v33_15b6d = and i32 %v0_15b6d, -256
  %v34_15b6d = or i32 %v31_15b6d, %v33_15b6d
  store i32 %v34_15b6d, i32* @eax, align 4
  %v1_15b6f = call i32 @function_285a0(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg2, i32* %eax.global-to-local, align 4
  ret i32 %arg2

; uselistorder directives
  uselistorder i1 %v2_15b6d, { 1, 0 }
  uselistorder i32 %v0_15b6d, { 1, 0, 2 }
  uselistorder i1 %v2_15b63, { 1, 0 }
  uselistorder i32 %v0_15b63, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_285a0, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost6detail20interruption_checkerD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15b80:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_15b9b = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_15b9b = inttoptr i32 %v1_15b9b to i32*
  %v3_15b9b = load i32, i32* %v2_15b9b, align 4
  store i32 %v3_15b9b, i32* @eax, align 4
  %v1_15b9e = add i32 %tmp101, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_15b9e = inttoptr i32 %v1_15b9e to i8*
  %v3_15b9e = load i8, i8* %v2_15b9e, align 1
  %v10_15b9e = icmp eq i8 %v3_15b9e, 0
  br i1 %v10_15b9e, label %bb, label %dec_label_pc_15ba7

bb:                                               ; preds = %dec_label_pc_15b80
  %v2_15ba5 = call i32 @function_15c08(i32 %v3_15b9b)
  store i32 %v2_15ba5, i32* @eax, align 4
  br label %dec_label_pc_15ba7

dec_label_pc_15ba7:                               ; preds = %bb, %dec_label_pc_15b80
  %v0_15bac = phi i32 [ %v2_15ba5, %bb ], [ %v3_15b9b, %dec_label_pc_15b80 ]
  %v1_15bac = icmp eq i32 %v0_15bac, 0
  %v1_15bae = icmp eq i1 %v1_15bac, false
  br i1 %v1_15bae, label %bb104, label %dec_label_pc_15bb4

bb104:                                            ; preds = %dec_label_pc_15ba7
  %v2_15bae = call i32 @function_15c3a()
  br label %dec_label_pc_15bb4

dec_label_pc_15bb4:                               ; preds = %bb104, %dec_label_pc_15ba7
  %v3_15bb9 = phi i32 [ %v2_15bae, %bb104 ], [ %v0_15bac, %dec_label_pc_15ba7 ]
  ret i32 %v3_15bb9

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_15bc0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15bc0:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_15bc0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15bc0 = add i32 %v0_15bc0, -1702555712
  %v2_15bc0 = inttoptr i32 %v1_15bc0 to i32*
  %v3_15bc0 = load i32, i32* %v2_15bc0, align 4
  %v4_15bc0 = add i32 %v3_15bc0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_15bc0, i32* %v2_15bc0, align 4
  %v2_15bc6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15bc6 = load i32, i32* @eax, align 4
  %v4_15bc6 = trunc i32 %v3_15bc6 to i8
  %v5_15bc6 = add i8 %v4_15bc6, %v2_15bc6
  %v21_15bc6 = inttoptr i32 %v3_15bc6 to i8*
  store i8 %v5_15bc6, i8* %v21_15bc6, align 1
  %v0_15bc8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15bc8 = add i32 %v0_15bc8, -58669309
  %v2_15bc8 = inttoptr i32 %v1_15bc8 to i8*
  %v3_15bc8 = load i8, i8* %v2_15bc8, align 1
  %v4_15bc8 = load i32, i32* @ecx, align 4
  %v5_15bc8 = trunc i32 %v4_15bc8 to i8
  %v6_15bc8 = add i8 %v5_15bc8, %v3_15bc8
  store i8 %v6_15bc8, i8* %v2_15bc8, align 1
  %v2_15bce = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15bce = load i32, i32* @eax, align 4
  %v4_15bce = trunc i32 %v3_15bce to i8
  %v5_15bce = add i8 %v4_15bce, %v2_15bce
  %v21_15bce = inttoptr i32 %v3_15bce to i8*
  store i8 %v5_15bce, i8* %v21_15bce, align 1
  %v2_15bd0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15bd0 = load i32, i32* @eax, align 4
  %v4_15bd0 = trunc i32 %v3_15bd0 to i8
  %v5_15bd0 = add i8 %v4_15bd0, %v2_15bd0
  %v21_15bd0 = inttoptr i32 %v3_15bd0 to i8*
  store i8 %v5_15bd0, i8* %v21_15bd0, align 1
  %v2_15bd2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15bd2 = load i32, i32* @eax, align 4
  %v4_15bd2 = trunc i32 %v3_15bd2 to i8
  %v5_15bd2 = add i8 %v4_15bd2, %v2_15bd2
  %v21_15bd2 = inttoptr i32 %v3_15bd2 to i8*
  store i8 %v5_15bd2, i8* %v21_15bd2, align 1
  %v0_15bd4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15bd4 = lshr i32 %v0_15bd4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_15bd4 = load i32, i32* @eax, align 4
  %v4_15bd4 = trunc i32 %v3_15bd4 to i8
  %v5_15bd4 = add i32 %v1_15bd4, %v3_15bd4
  %v20_15bd4 = mul i32 %v5_15bd4, 256
  %v22_15bd4 = and i32 %v20_15bd4, 65280
  %v23_15bd4 = and i32 %v0_15bd4, -65281
  %v24_15bd4 = or i32 %v22_15bd4, %v23_15bd4
  store i32 %v24_15bd4, i32* %ebx.global-to-local, align 4
  %v3_15bd6 = add i8 %v4_15bd4, ptrtoint (i8** @global_var_1.3274 to i8)
  %v18_15bd6 = inttoptr i32 %v3_15bd4 to i8*
  store i8 %v3_15bd6, i8* %v18_15bd6, align 1
  %v2_15bd9 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15bd9 = load i32, i32* @eax, align 4
  %v4_15bd9 = trunc i32 %v3_15bd9 to i8
  %v5_15bd9 = add i8 %v4_15bd9, %v2_15bd9
  %v21_15bd9 = inttoptr i32 %v3_15bd9 to i8*
  store i8 %v5_15bd9, i8* %v21_15bd9, align 1
  %v2_15bdb = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15bdb = load i32, i32* @eax, align 4
  %v4_15bdb = trunc i32 %v3_15bdb to i8
  %v5_15bdb = add i8 %v4_15bdb, %v2_15bdb
  %v21_15bdb = inttoptr i32 %v3_15bdb to i8*
  store i8 %v5_15bdb, i8* %v21_15bdb, align 1
  %v2_15bdd = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15bdd = load i32, i32* @eax, align 4
  %v4_15bdd = trunc i32 %v3_15bdd to i8
  %v5_15bdd = add i8 %v4_15bdd, %v2_15bdd
  %v21_15bdd = inttoptr i32 %v3_15bdd to i8*
  store i8 %v5_15bdd, i8* %v21_15bdd, align 1
  %v0_15be7 = load i32, i32* @eax, align 4
  %v1_15be7 = icmp eq i32 %v0_15be7, 0
  %v1_15be9 = icmp eq i1 %v1_15be7, false
  br i1 %v1_15be9, label %bb, label %dec_label_pc_15beb

bb:                                               ; preds = %dec_label_pc_15bc0
  %v0_15bdf = load i32, i32* %esi.global-to-local, align 4
  %v3_15be9 = call i32 @function_15c35(i32 %v0_15bdf)
  br label %dec_label_pc_15beb

dec_label_pc_15beb:                               ; preds = %bb, %dec_label_pc_15bc0
  %v1_15bef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15bef = xor i32 %v1_15bef, %arg1
  %v3_15bef = icmp eq i32 %v2_15bef, 0
  store i32 %v2_15bef, i32* @eax, align 4
  %v1_15bf6 = icmp eq i1 %v3_15bef, false
  br i1 %v1_15bf6, label %bb102, label %dec_label_pc_15bf8

bb102:                                            ; preds = %dec_label_pc_15beb
  %v2_15bf6 = call i32 @function_15c5e()
  br label %dec_label_pc_15bf8

dec_label_pc_15bf8:                               ; preds = %bb102, %dec_label_pc_15beb
  %v0_15c03 = phi i32 [ %v2_15bf6, %bb102 ], [ %v2_15bef, %dec_label_pc_15beb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v0_15c03

; uselistorder directives
  uselistorder i32 %v3_15bd4, { 1, 0, 2 }
}

define i32 @function_15c08(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c08:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15c35(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c35:
  %v0_15c35 = call i32 @function_26e50()
  ret i32 %v0_15c35
}

define i32 @function_15c3a() local_unnamed_addr {
dec_label_pc_15c3a:
  %v3_15c52 = load i32, i32* @eax, align 4
  ret i32 %v3_15c52
}

define i32 @function_15c5e() local_unnamed_addr {
dec_label_pc_15c5e:
  %stack_var_20 = alloca i32, align 4
  %v2_15c63 = ptrtoint i32* %stack_var_20 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_20, align 4
  %v1_15c76 = call i32 @function_2b610(i32 %v2_15c63)
  ret i32 %v1_15c76
}

define i32 @_ZN5boost10lock_guardINS_12shared_mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15c90:
  %tmp98 = ptrtoint i32* %arg1 to i32
  store i32 %tmp98, i32* @eax, align 4
  %v2_15ca6 = load i32, i32* %arg1, align 4
  store i32 %v2_15ca6, i32* @ebx, align 4
  %v1_15cb3 = icmp eq i32* %arg1, null
  %v1_15cb5 = icmp eq i1 %v1_15cb3, false
  br i1 %v1_15cb5, label %bb, label %dec_label_pc_15cbb

bb:                                               ; preds = %dec_label_pc_15c90
  %v1_15ca8 = add i32 %v2_15ca6, ptrtoint (i8** @global_var_8.3277 to i32)
  %v4_15cb5 = call i32 @function_15d4b(i32 %v1_15ca8)
  store i32 %v4_15cb5, i32* @eax, align 4
  %v0_15cbb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_15cbb

dec_label_pc_15cbb:                               ; preds = %bb, %dec_label_pc_15c90
  %v0_15cbb = phi i32 [ %v0_15cbb.pre, %bb ], [ %v2_15ca6, %dec_label_pc_15c90 ]
  %v1_15cbb = add i32 %v0_15cbb, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_15cbb = inttoptr i32 %v1_15cbb to i8*
  store i8 0, i8* %v2_15cbb, align 1
  %v0_15cbf = load i32, i32* @ebx, align 4
  %v1_15cc2 = add i32 %v0_15cbf, 6
  %v2_15cc2 = inttoptr i32 %v1_15cc2 to i8*
  store i8 0, i8* %v2_15cc2, align 1
  %v4_15cc6 = load i32, i32* @eax, align 4
  ret i32 %v4_15cc6
}

define i32 @function_15d02() local_unnamed_addr {
dec_label_pc_15d02:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_15d02 = add i32 %tmp91, -2092993088
  %v2_15d02 = inttoptr i32 %v1_15d02 to i32*
  %v3_15d02 = load i32, i32* %v2_15d02, align 4
  %v4_15d02 = add i32 %v3_15d02, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_15d02, i32* %v2_15d02, align 4
  %v0_15d08 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15d08
}

define i32 @function_15d29(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15d29:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15d29 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15d29 = add i32 %v0_15d29, -1786441792
  %v2_15d29 = inttoptr i32 %v1_15d29 to i32*
  %v3_15d29 = load i32, i32* %v2_15d29, align 4
  %v4_15d29 = add i32 %v3_15d29, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_15d29, i32* %v2_15d29, align 4
  %v2_15d2f = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_15d2f = load i32, i32* %eax.global-to-local, align 4
  %v4_15d2f = trunc i32 %v3_15d2f to i8
  %v5_15d2f = add i8 %v4_15d2f, %v2_15d2f
  %v21_15d2f = inttoptr i32 %v3_15d2f to i8*
  store i8 %v5_15d2f, i8* %v21_15d2f, align 1
  %v0_15d31 = load i32, i32* %ebx.global-to-local, align 4
  %v1_15d31 = add i32 %v0_15d31, 1696343108
  %v2_15d31 = inttoptr i32 %v1_15d31 to i8*
  %v3_15d31 = load i8, i8* %v2_15d31, align 1
  %v4_15d31 = load i32, i32* %ecx.global-to-local, align 4
  %v5_15d31 = trunc i32 %v4_15d31 to i8
  %v6_15d31 = add i8 %v5_15d31, %v3_15d31
  store i8 %v6_15d31, i8* %v2_15d31, align 1
  %v0_15d37 = load i32, i32* %eax.global-to-local, align 4
  %v1_15d37 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15d37 = xor i32 %v1_15d37, %v0_15d37
  %v3_15d37 = icmp eq i32 %v2_15d37, 0
  store i32 %v2_15d37, i32* @eax, align 4
  %v1_15d3d = icmp eq i1 %v3_15d37, false
  br i1 %v1_15d3d, label %bb, label %dec_label_pc_15d3f

bb:                                               ; preds = %dec_label_pc_15d29
  %v2_15d3d = call i32 @function_15d75()
  store i32 %v2_15d3d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_15d3f

dec_label_pc_15d3f:                               ; preds = %bb, %dec_label_pc_15d29
  %v0_15d45 = phi i32 [ %v2_15d3d, %bb ], [ %v2_15d37, %dec_label_pc_15d29 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_15d45

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
}

define i32 @function_15d4b(i32 %arg1) local_unnamed_addr {
dec_label_pc_15d4b:
  %stack_var_20 = alloca i32, align 4
  %v2_15d4b = ptrtoint i32* %stack_var_20 to i32
  store i32 %v2_15d4b, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_20, align 4
  %v1_15d5e = call i32 @function_2b720(i32 %v2_15d4b)
  store i32 %v1_15d5e, i32* @eax, align 4
  %v1_15d68 = call i32 @function_27ac0(i32 %v2_15d4b)
  ret i32 %v1_15d68
}

define i32 @function_15d75() local_unnamed_addr {
dec_label_pc_15d75:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15dba() local_unnamed_addr {
dec_label_pc_15dba:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_15dba = load i32, i32* %ebx.global-to-local, align 4
  %v1_15dba = lshr i32 %v0_15dba, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_15dba = load i32, i32* %eax.global-to-local, align 4
  %v5_15dba = add i32 %v1_15dba, %v3_15dba
  %v20_15dba = mul i32 %v5_15dba, 256
  %v22_15dba = and i32 %v20_15dba, 65280
  %v23_15dba = and i32 %v0_15dba, -65281
  %v24_15dba = or i32 %v22_15dba, %v23_15dba
  store i32 %v24_15dba, i32* %ebx.global-to-local, align 4
  %v2_15dbc = add i32 %v3_15dba, 36
  %v16_15dbc = and i32 %v2_15dbc, 255
  %v18_15dbc = and i32 %v3_15dba, -256
  %v19_15dbc = or i32 %v16_15dbc, %v18_15dbc
  store i32 %v19_15dbc, i32* %eax.global-to-local, align 4
  ret i32 %v19_15dbc

; uselistorder directives
  uselistorder i32 %v3_15dba, { 2, 0, 1 }
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_15eab:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v2_15dd7 = ptrtoint i32* %stack_var_-84 to i32
  %v2_15ddf = ptrtoint i32* %stack_var_-56 to i32
  store i32 %tmp114, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39d48_type* @global_var_39d48.3436 to i32), i32* %stack_var_-56, align 4
  store i32 ptrtoint (%vtable_39d88_type* @global_var_39d88.3404 to i32), i32* %stack_var_-84, align 4
  %v2_15e6a = call i32 @function_2aa80(i32 %v2_15dd7, i32 %v2_15ddf)
  store i32 %v2_15e6a, i32* @eax, align 4
  %v7_15e8e = call i32 @function_15f28(i32* bitcast ([169 x i8]* @global_var_38e20.3486 to i32*), i32 ptrtoint ([54 x i8]* @global_var_ac68.3487 to i32), i32 ptrtoint (i32* @global_var_51.3488 to i32))
  %v1_15e99 = load i32, i32* %ebx.global-to-local, align 4
  %v2_15e99 = inttoptr i32 %v1_15e99 to i32*
  store i32 0, i32* %v2_15e99, align 4
  %v1_15ea2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_15ea2 = add i32 %v1_15ea2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_15ea2 = inttoptr i32 %v2_15ea2 to i32*
  store i32 ptrtoint (i32* @global_var_3a880.3490 to i32), i32* %v3_15ea2, align 4
  store i32 ptrtoint (i32* @global_var_3a885.3493 to i32), i32* bitcast ([90 x i8]** @global_var_3a884.3492 to i32*), align 4
  %v2_15eab = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_15eab, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39d48_type* @global_var_39d48.3436 to i32), i32* %stack_var_-84, align 4
  store i32 ptrtoint (i32* @global_var_39d58.3437 to i32), i32* %stack_var_-64, align 4
  %v1_15ed2 = call i32 @function_286c0(i32 %v2_15dd7)
  %v2_15ed7 = ptrtoint i32* %stack_var_-36 to i32
  ret i32 %v2_15ed7

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39d48_type* @global_var_39d48.3436 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_15ef2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15ef2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_15ef2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_15ef2 = add i32 %v0_15ef2, -974642116
  %v2_15ef2 = inttoptr i32 %v1_15ef2 to i32*
  %v3_15ef2 = load i32, i32* %v2_15ef2, align 4
  %v4_15ef2 = sub i32 %v3_15ef2, ptrtoint (i8** @global_var_1.3274 to i32)
  %v5_15ef2 = urem i32 %v3_15ef2, 16
  %v6_15ef2 = add nsw i32 %v5_15ef2, -1
  %v7_15ef2 = icmp ugt i32 %v6_15ef2, 15
  store i32 %v4_15ef2, i32* %v2_15ef2, align 4
  %v0_15ef8 = load i32, i32* %eax.global-to-local, align 4
  %v1_15ef8 = trunc i32 %v0_15ef8 to i8
  %v3_15ef8 = load i1, i1* %cf.global-to-local, align 1
  %v4_15ef8 = and i8 %v1_15ef8, 14
  %v5_15ef8 = icmp ugt i8 %v4_15ef8, 9
  %v6_15ef8 = or i1 %v7_15ef2, %v5_15ef8
  %v8_15ef8 = icmp ugt i8 %v1_15ef8, -103
  %v9_15ef8 = or i1 %v3_15ef8, %v8_15ef8
  br i1 %v6_15ef8, label %bb, label %bb107

bb:                                               ; preds = %dec_label_pc_15ef2
  %v11_15ef8.v = select i1 %v9_15ef8, i32 102, i32 6
  %v11_15ef8 = add i32 %v11_15ef8.v, %v0_15ef8
  store i1 %v9_15ef8, i1* %cf.global-to-local, align 1
  %v12_15ef8 = urem i32 %v11_15ef8, 256
  %v14_15ef8 = and i32 %v0_15ef8, -256
  %v15_15ef8 = or i32 %v12_15ef8, %v14_15ef8
  br label %bb108

bb107:                                            ; preds = %dec_label_pc_15ef2
  %v23_15ef8 = add i32 %v0_15ef8, zext (i8 ptrtoint (i32* @global_var_60.3454 to i8) to i32)
  %v24_15ef8 = select i1 %v9_15ef8, i32 %v23_15ef8, i32 %v0_15ef8
  store i1 %v9_15ef8, i1* %cf.global-to-local, align 1
  %v25_15ef8 = urem i32 %v24_15ef8, 256
  %v27_15ef8 = and i32 %v0_15ef8, -256
  %v28_15ef8 = or i32 %v25_15ef8, %v27_15ef8
  br label %bb108

bb108:                                            ; preds = %bb, %bb107
  %storemerge3 = phi i32 [ %v28_15ef8, %bb107 ], [ %v15_15ef8, %bb ]
  store i32 %storemerge3, i32* %eax.global-to-local, align 4
  %v1_15ef9 = inttoptr i32 %storemerge3 to i32*
  %v2_15ef9 = load i32, i32* %v1_15ef9, align 4
  %v4_15ef9 = add i32 %v2_15ef9, %storemerge3
  store i32 %v4_15ef9, i32* %v1_15ef9, align 4
  %v0_15efb = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_15efb, i32* @eax, align 4
  %v1_15f01 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_15f01 = icmp eq i32 %v1_15f01, %arg1
  %v1_15f08 = icmp eq i1 %v3_15f01, false
  br i1 %v1_15f08, label %bb109, label %dec_label_pc_15f0e

bb109:                                            ; preds = %bb108
  %v2_15f08 = call i32 @function_15ff4()
  store i32 %v2_15f08, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_15f0e

dec_label_pc_15f0e:                               ; preds = %bb109, %bb108
  %v0_15f21 = phi i32 [ %v2_15f08, %bb109 ], [ %v0_15efb, %bb108 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_15f1e = load i32, i32* @esp, align 4
  %v5_15f1e = icmp ugt i32 %v0_15f1e, -109
  store i1 %v5_15f1e, i1* %cf.global-to-local, align 1
  ret i32 %v0_15f21

; uselistorder directives
  uselistorder i1 %v9_15ef8, { 2, 1, 3, 0 }
  uselistorder i32 %v0_15ef8, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
  uselistorder label %bb108, { 1, 0 }
}

define i32 @function_15f28(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15f28:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v0_15f34 = load i32, i32* @eax, align 4
  store i32 %v0_15f34, i32* %ebp.global-to-local, align 4
  %v1_15f4a = inttoptr i32 %v0_15f34 to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v1_15f4a, align 4
  store i32 %tmp5, i32* %eax.global-to-local, align 4
  %v1_15f54 = icmp eq i32* %arg1, null
  %v1_15f56 = load i32, i32* %ebp.global-to-local, align 4
  %v2_15f56 = add i32 %v1_15f56, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_15f56 = inttoptr i32 %v2_15f56 to i32*
  store i32 %tmp5, i32* %v3_15f56, align 4
  br i1 %v1_15f54, label %dec_label_pc_15f63, label %dec_label_pc_15f5b

dec_label_pc_15f5b:                               ; preds = %dec_label_pc_15f28
  br label %dec_label_pc_15f63

dec_label_pc_15f63:                               ; preds = %dec_label_pc_15f5b, %dec_label_pc_15f28
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_15f67 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15f67 = inttoptr i32 %v0_15f67 to i32*
  store i32 ptrtoint (%vtable_39d88_type* @global_var_39d88.3404 to i32), i32* %v1_15f67, align 4
  %v0_15f6e = load i32, i32* %ebp.global-to-local, align 4
  %v1_15f6e = add i32 %v0_15f6e, 20
  %v2_15f6e = inttoptr i32 %v1_15f6e to i32*
  store i32 ptrtoint (i32* @global_var_39da0.3405 to i32), i32* %v2_15f6e, align 4
  %v0_15f75 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15f75 = add i32 %v0_15f75, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_15f75 = inttoptr i32 %v1_15f75 to i32*
  store i32 ptrtoint (i32* @global_var_39db4.3406 to i32), i32* %v2_15f75, align 4
  %v0_15f7c = load i32, i32* %eax.global-to-local, align 4
  %v1_15f7c = load i32, i32* %ebp.global-to-local, align 4
  %v2_15f7c = add i32 %v1_15f7c, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_15f7c = inttoptr i32 %v2_15f7c to i32*
  store i32 %v0_15f7c, i32* %v3_15f7c, align 4
  store i32 0, i32* @global_var_39dcc.3489, align 4
  %v1_15f8d = load i32, i32* %ebp.global-to-local, align 4
  %v2_15f8d = add i32 %v1_15f8d, 12
  %v3_15f8d = inttoptr i32 %v2_15f8d to i32*
  store i32 %arg3, i32* %v3_15f8d, align 4
  %v1_15f94 = load i32, i32* %ebp.global-to-local, align 4
  %v2_15f94 = add i32 %v1_15f94, 16
  %v3_15f94 = inttoptr i32 %v2_15f94 to i32*
  %v0_15f97 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15f97 = add i32 %v0_15f97, ptrtoint (i32* @global_var_18.3278 to i32)
  store i32 %v1_15f97, i32* %eax.global-to-local, align 4
  store i32 %v1_15f97, i32* @global_var_39dc8.3485, align 4
  %v1_15fab = add i32 %v0_15f97, add (i32 ptrtoint (i32* @global_var_18.3278 to i32), i32 ptrtoint (i16** @global_var_4.3276 to i32))
  %v2_15fab = inttoptr i32 %v1_15fab to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_15fab, align 4
  %v0_15fb2 = load i32, i32* %eax.global-to-local, align 4
  %v1_15fb2 = inttoptr i32 %v0_15fb2 to i32*
  store i32 ptrtoint (%vtable_39dd0_type* @global_var_39dd0.3494 to i32), i32* %v1_15fb2, align 4
  %v0_15fb8 = load i32, i32* %ebp.global-to-local, align 4
  %v1_15fb8 = load i32, i32* %eax.global-to-local, align 4
  %v2_15fb8 = add i32 %v1_15fb8, 12
  %v3_15fb8 = inttoptr i32 %v2_15fb8 to i32*
  store i32 %v0_15fb8, i32* %v3_15fb8, align 4
  %v0_15fbb = load i32, i32* %eax.global-to-local, align 4
  %v1_15fbb = add i32 %v0_15fbb, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_15fbb = inttoptr i32 %v1_15fbb to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_15fbb, align 4
  %v0_15fc2 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_15fc2, i32* @global_var_39dcc.3489, align 4
  ret i32 %v0_15fc2

; uselistorder directives
  uselistorder i32 %v0_15f34, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 1, 2, 0 }
  uselistorder i32 ptrtoint (%vtable_39d88_type* @global_var_39d88.3404 to i32), { 2, 1, 0 }
}

define i32 @function_15ff4() local_unnamed_addr {
dec_label_pc_15ff4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16014() local_unnamed_addr {
dec_label_pc_16014:
  %eax.global-to-local = alloca i32, align 4
  %v0_16014 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16014
}

define i32 @function_1601d() local_unnamed_addr {
dec_label_pc_1601d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16031(i32 %arg1) local_unnamed_addr {
dec_label_pc_16031:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16042() local_unnamed_addr {
dec_label_pc_16042:
  %eax.global-to-local = alloca i32, align 4
  %v0_16042 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16042
}

define i32 @function_16048() local_unnamed_addr {
dec_label_pc_16048:
  %v0_16048 = call i32 @function_1601d()
  ret i32 %v0_16048
}

define i32 @function_1604a() local_unnamed_addr {
dec_label_pc_1604a:
  %v0_16050 = call i32 @function_1601d()
  ret i32 %v0_16050

; uselistorder directives
  uselistorder i32 ()* @function_1601d, { 1, 0 }
}

define i32 @function_16052() local_unnamed_addr {
dec_label_pc_16052:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_16064 = call i32 @function_16031(i32 %tmp92)
  ret i32 %v1_16064
}

define i32 @_ZN5boost11unique_lockINS_5mutexEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16070:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_16078 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  %v1_16084 = add i32 %tmp99, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_16084 = inttoptr i32 %v1_16084 to i8*
  %v3_16084 = load i8, i8* %v2_16084, align 1
  store i1 false, i1* @cf, align 1
  %v10_16084 = icmp eq i8 %v3_16084, 0
  %v1_16088 = icmp eq i1 %v10_16084, false
  br i1 %v1_16088, label %bb, label %dec_label_pc_1608a

bb:                                               ; preds = %dec_label_pc_16070
  %v3_16088 = call i32 @function_160ae(i32 %v0_16078)
  %v0_1608a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1608a

dec_label_pc_1608a:                               ; preds = %bb, %dec_label_pc_16070
  %v0_1608a = phi i32 [ %v0_1608a.pre, %bb ], [ %tmp99, %dec_label_pc_16070 ]
  %v1_1608a = inttoptr i32 %v0_1608a to i32*
  %v2_1608a = load i32, i32* %v1_1608a, align 4
  ret i32 %v2_1608a
}

define i32 @function_16093(i32 %arg1) local_unnamed_addr {
dec_label_pc_16093:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_16093 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16093 = add i32 %v0_16093, -1957726784
  %v2_16093 = inttoptr i32 %v1_16093 to i32*
  %v3_16093 = load i32, i32* %v2_16093, align 4
  %v4_16093 = add i32 %v3_16093, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_16093, i32* %v2_16093, align 4
  %v0_1609a = load i32, i32* %eax.global-to-local, align 4
  %v11_1609a = and i32 %v0_1609a, or (i32 zext (i8 ptrtoint (i32* @global_var_3c.3471 to i8) to i32), i32 -256)
  store i32 %v11_1609a, i32* %eax.global-to-local, align 4
  %v1_1609c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1609c = xor i32 %v1_1609c, %v11_1609a
  %v3_1609c = icmp eq i32 %v2_1609c, 0
  store i1 %v3_1609c, i1* %zf.global-to-local, align 1
  store i32 %v2_1609c, i32* @eax, align 4
  %v0_160a3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_160a3 = add i32 %v0_160a3, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_160a3 = inttoptr i32 %v1_160a3 to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_160a3, align 1
  %v0_160a7 = load i1, i1* %zf.global-to-local, align 1
  %v1_160a7 = icmp eq i1 %v0_160a7, false
  br i1 %v1_160a7, label %bb, label %dec_label_pc_16093.dec_label_pc_160a9_crit_edge

dec_label_pc_16093.dec_label_pc_160a9_crit_edge:  ; preds = %dec_label_pc_16093
  %v0_160ad.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_160a9

bb:                                               ; preds = %dec_label_pc_16093
  %v2_160a7 = call i32 @function_160e2()
  store i32 %v2_160a7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_160a9

dec_label_pc_160a9:                               ; preds = %dec_label_pc_16093.dec_label_pc_160a9_crit_edge, %bb
  %v0_160ad = phi i32 [ %v0_160ad.pre, %dec_label_pc_16093.dec_label_pc_160a9_crit_edge ], [ %v2_160a7, %bb ]
  %v0_160a9 = load i32, i32* @esp, align 4
  %v10_160a9 = icmp eq i32 %v0_160a9, -72
  store i1 %v10_160a9, i1* %zf.global-to-local, align 1
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_160ad

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_160a9, { 1, 0 }
}

define i32 @function_160ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_160ae:
  %stack_var_44 = alloca i32, align 4
  %v2_160ae = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_160ae, i32* @ebx, align 4
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_44, align 4
  %v1_160c5 = call i32 @function_2bb00(i32 %v2_160ae)
  store i32 %v1_160c5, i32* @eax, align 4
  %v1_160d1 = call i32 @function_27ea0(i32 %v2_160ae)
  ret i32 %v1_160c5
}

define i32 @function_160e2() local_unnamed_addr {
dec_label_pc_160e2:
  %stack_var_52 = alloca i32, align 4
  %v2_160e7 = ptrtoint i32* %stack_var_52 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_52, align 4
  %v1_160fa = call i32 @function_2bb00(i32 %v2_160e7)
  ret i32 %v1_160fa

; uselistorder directives
  uselistorder i32 (i32)* @function_2bb00, { 1, 0 }
}

define i32 @_ZN5boost10lock_guardINS_12shared_mutexEEC1ERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16110:
  %stack_var_-33 = alloca i32, align 4
  store i32 %arg2, i32* %arg1, align 4
  %v2_16133 = ptrtoint i32* %stack_var_-33 to i32
  ret i32 %v2_16133
}

define i32 @function_16170(i32 %arg1) local_unnamed_addr {
dec_label_pc_16170:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16196(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16196:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_16196 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16196 = add i32 %v0_16196, 1700537412
  %v2_16196 = inttoptr i32 %v1_16196 to i32*
  %v3_16196 = load i32, i32* %v2_16196, align 4
  %v4_16196 = add i32 %v3_16196, -1
  store i32 %v4_16196, i32* %v2_16196, align 4
  %v0_1619c = load i32, i32* %eax.global-to-local, align 4
  %v1_1619c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1619c = xor i32 %v1_1619c, %v0_1619c
  %v3_1619c = icmp eq i32 %v2_1619c, 0
  store i32 %v2_1619c, i32* @eax, align 4
  %v1_161a2 = icmp eq i1 %v3_1619c, false
  br i1 %v1_161a2, label %bb, label %dec_label_pc_161a8

bb:                                               ; preds = %dec_label_pc_16196
  %v2_161a2 = call i32 @function_16577()
  store i32 %v2_161a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_161a8

dec_label_pc_161a8:                               ; preds = %bb, %dec_label_pc_16196
  %v0_161af = phi i32 [ %v2_161a2, %bb ], [ %v2_1619c, %dec_label_pc_16196 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_161af

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_162e1() local_unnamed_addr {
dec_label_pc_162e1:
  %v0_162e1 = load i32, i32* @eax, align 4
  %v1_162e1 = icmp eq i32 %v0_162e1, 0
  %v1_162e3 = icmp eq i1 %v1_162e1, false
  br i1 %v1_162e3, label %bb, label %dec_label_pc_162e9

bb:                                               ; preds = %dec_label_pc_162e1
  %v2_162e3 = call i32 @function_16381()
  store i32 %v2_162e3, i32* @eax, align 4
  br label %dec_label_pc_162e9

dec_label_pc_162e9:                               ; preds = %bb, %dec_label_pc_162e1
  %v2_162ee = call i32 @function_16170(i32 sext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32))
  ret i32 %v2_162ee
}

define i32 @function_1637c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1637c:
  %v0_1637c = load i32, i32* @eax, align 4
  ret i32 %v0_1637c
}

define i32 @function_16381() local_unnamed_addr {
dec_label_pc_16381:
  %stack_var_91 = alloca i32, align 4
  %tmp1 = call i8 @__decompiler_undefined_function_2()
  %stack_var_80 = alloca i32, align 4
  %v2_16381 = ptrtoint i32* %stack_var_80 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_80, align 4
  %v1_16394 = call i32 @function_2bba0(i32 %v2_16381)
  store i32 %v1_16394, i32* @eax, align 4
  store i32 %v1_16394, i32* @ebx, align 4
  %v2_163a0 = call i32 @function_27f40(i32* nonnull %stack_var_80)
  %v10_163a5 = icmp eq i8 %tmp1, 0
  %v1_163aa = icmp eq i1 %v10_163a5, false
  br i1 %v1_163aa, label %bb, label %dec_label_pc_163b0

bb:                                               ; preds = %dec_label_pc_16381
  %v2_163aa = call i32 @function_16534()
  br label %dec_label_pc_163b0

dec_label_pc_163b0:                               ; preds = %bb, %dec_label_pc_16381
  %v2_163b0 = ptrtoint i32* %stack_var_91 to i32
  ret i32 %v2_163b0
}

define i32 @function_163bc() local_unnamed_addr {
dec_label_pc_163bc:
  %stack_var_72 = alloca i32, align 4
  %v2_163c8 = ptrtoint i32* %stack_var_72 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_72, align 4
  %v1_163df = call i32 @function_2bba0(i32 %v2_163c8)
  ret i32 %v1_163df
}

define i32 @function_163e8() local_unnamed_addr {
dec_label_pc_163e8:
  %stack_var_20 = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %v2_1640c = ptrtoint i32* %stack_var_48 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_48, align 4
  %v2_16423 = call i32 @function_2bba0(i32 %v2_1640c)
  store i32 %v2_16423, i32* @eax, align 4
  store i32 %v2_16423, i32* @ebx, align 4
  %v3_16431 = call i32 @function_27f40(i32* nonnull %stack_var_48)
  %v2_16436 = ptrtoint i32* %stack_var_20 to i32
  store i32 %v2_16436, i32* @eax, align 4
  %v2_1643d = call i32 @function_2bc90(i32 %v2_16436)
  store i32 %v2_1643d, i32* @eax, align 4
  %v2_1644d = call i32 @_ZZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE5eraseERKSB_RKSt14_List_iteratorISL_EE19__PRETTY_FUNCTION__(i32 0)
  ret i32 %v2_1644d
}

define i32 @function_1644a() local_unnamed_addr {
dec_label_pc_1644a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_164a6() local_unnamed_addr {
dec_label_pc_164a6:
  %ecx.global-to-local = alloca i32, align 4
  %v0_164a6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_164a6 = add i32 %v0_164a6, 606898627
  %v2_164a6 = inttoptr i32 %v1_164a6 to i32*
  %v3_164a6 = load i32, i32* %v2_164a6, align 4
  %v4_164a6 = add i32 %v3_164a6, -1
  store i32 %v4_164a6, i32* %v2_164a6, align 4
  %v1_164b9 = call i32 @function_1637c(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_164b9
}

define i32 @function_164c0() local_unnamed_addr {
dec_label_pc_164c0:
  %stack_var_56 = alloca i32, align 4
  %v2_164c0 = ptrtoint i32* %stack_var_56 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_56, align 4
  %v1_164d3 = call i32 @function_2bba0(i32 %v2_164c0)
  ret i32 %v1_164d3
}

define i32 @function_164e0() local_unnamed_addr {
dec_label_pc_164e0:
  %stack_var_64 = alloca i32, align 4
  %v2_164e0 = ptrtoint i32* %stack_var_64 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_64, align 4
  %v1_164f3 = call i32 @function_2bba0(i32 %v2_164e0)
  store i32 %v1_164f3, i32* @eax, align 4
  store i32 %v1_164f3, i32* @ebx, align 4
  %v2_164ff = call i32 @function_27f40(i32* nonnull %stack_var_64)
  store i32 %v2_164ff, i32* @eax, align 4
  %v0_16508 = call i32 @function_1644a()
  ret i32 %v0_16508
}

define i32 @function_16534() local_unnamed_addr {
dec_label_pc_16534:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_16548 = call i32 @function_1637c(i32 %tmp2)
  ret i32 %v1_16548
}

define i32 @function_1654d() local_unnamed_addr {
dec_label_pc_1654d:
  %stack_var_40 = alloca i32, align 4
  %v2_1654d = ptrtoint i32* %stack_var_40 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_40, align 4
  %v1_16560 = call i32 @function_2bba0(i32 %v2_1654d)
  ret i32 %v1_16560

; uselistorder directives
  uselistorder i32 (i32)* @function_2bba0, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_16570() local_unnamed_addr {
dec_label_pc_16570:
  %eax.global-to-local = alloca i32, align 4
  %v0_16570 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16570
}

define i32 @function_16577() local_unnamed_addr {
dec_label_pc_16577:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_16580() local_unnamed_addr {
dec_label_pc_16580:
  %eax.global-to-local = alloca i32, align 4
  %v0_16580 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16580
}

define i32 @function_16582() local_unnamed_addr {
dec_label_pc_16582:
  %ebx.global-to-local = alloca i32, align 4
  %v0_16582 = load i32, i32* @eax, align 4
  %v0_16584 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_16582, i32* @ebx, align 4
  %v1_16589 = inttoptr i32 %v0_16584 to i32*
  %v2_16589 = call i32 @function_27f40(i32* %v1_16589)
  ret i32 %v2_16589
}

define i32 @_ZN21LockedPageManagerBaseI16MemoryPageLockerE11UnlockRangeEPvj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_165a0:
  %v1_165bf = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_165bf
}

define i32 @function_165cd() local_unnamed_addr {
dec_label_pc_165cd:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_165cd = load i32, i32* %ebp.global-to-local, align 4
  %v1_165cd = add i32 %v0_165cd, -561705024
  %v2_165cd = inttoptr i32 %v1_165cd to i32*
  %v3_165cd = load i32, i32* %v2_165cd, align 4
  %v4_165cd = add i32 %v3_165cd, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_165cd, i32* %v2_165cd, align 4
  %v2_165d3 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_165d3 = load i32, i32* %eax.global-to-local, align 4
  %v4_165d3 = trunc i32 %v3_165d3 to i8
  %v5_165d3 = add i8 %v4_165d3, %v2_165d3
  %v21_165d3 = inttoptr i32 %v3_165d3 to i8*
  store i8 %v5_165d3, i8* %v21_165d3, align 1
  %v0_165d5 = load i32, i32* %ebp.global-to-local, align 4
  %v1_165d5 = add i32 %v0_165d5, -1954279434
  %v2_165d5 = inttoptr i32 %v1_165d5 to i8*
  %v3_165d5 = load i8, i8* %v2_165d5, align 1
  %v4_165d5 = load i32, i32* %eax.global-to-local, align 4
  %v5_165d5 = trunc i32 %v4_165d5 to i8
  %v6_165d5 = add i8 %v5_165d5, %v3_165d5
  store i8 %v6_165d5, i8* %v2_165d5, align 1
  %v2_165db = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_165db = load i32, i32* %eax.global-to-local, align 4
  %v4_165db = trunc i32 %v3_165db to i8
  %v5_165db = add i8 %v4_165db, %v2_165db
  %v21_165db = inttoptr i32 %v3_165db to i8*
  store i8 %v5_165db, i8* %v21_165db, align 1
  %v0_165dd = load i32, i32* %ebx.global-to-local, align 4
  %v1_165dd = add i32 %v0_165dd, -343334841
  %v2_165dd = inttoptr i32 %v1_165dd to i8*
  %v3_165dd = load i8, i8* %v2_165dd, align 1
  %v4_165dd = load i32, i32* %ecx.global-to-local, align 4
  %v5_165dd = trunc i32 %v4_165dd to i8
  %v6_165dd = add i8 %v5_165dd, %v3_165dd
  store i8 %v6_165dd, i8* %v2_165dd, align 1
  %v0_165e3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_165e3 = load i32, i32* %esi.global-to-local, align 4
  %v2_165e3 = mul i32 %v1_165e3, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_165e3 = add i32 %v0_165e3, -1
  %v4_165e3 = add i32 %v3_165e3, %v2_165e3
  %v0_165e7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_165e7 = load i32, i32* %eax.global-to-local, align 4
  %v2_165e7 = and i32 %v1_165e7, %v0_165e7
  store i32 %v2_165e7, i32* @ebx, align 4
  %v2_165e9 = and i32 %v1_165e7, %v4_165e3
  store i32 %v2_165e9, i32* @edx, align 4
  %tmp123 = icmp ugt i32 %v2_165e7, %v2_165e9
  br i1 %tmp123, label %bb, label %dec_label_pc_165ef

bb:                                               ; preds = %dec_label_pc_165cd
  %v4_165ed = call i32 @function_16669()
  store i32 %v4_165ed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_165ef

dec_label_pc_165ef:                               ; preds = %dec_label_pc_165cd, %bb
  %v0_165ef = load i32, i32* @edi, align 4
  %v1_165ef = add i32 %v0_165ef, 40
  store i32 %v1_165ef, i32* %ebp.global-to-local, align 4
  %v1_165f8 = add i32 %v0_165ef, 44
  %v2_165f8 = inttoptr i32 %v1_165f8 to i32*
  %v3_165f8 = load i32, i32* %v2_165f8, align 4
  store i32 %v3_165f8, i32* @eax, align 4
  %v1_165fb = icmp eq i32 %v3_165f8, 0
  br i1 %v1_165fb, label %bb114, label %dec_label_pc_16603

bb114:                                            ; preds = %dec_label_pc_165ef
  %v1_165fd = call i32 @function_16690()
  store i32 %v1_165fd, i32* %eax.global-to-local, align 4
  %v0_16603.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_16603

dec_label_pc_16603:                               ; preds = %bb114, %dec_label_pc_165ef
  %v0_166116 = phi i32 [ %v1_165fd, %bb114 ], [ %v3_165f8, %dec_label_pc_165ef ]
  %v0_1661d = phi i32 [ %v0_16603.pre, %bb114 ], [ %v1_165ef, %dec_label_pc_165ef ]
  store i32 %v0_1661d, i32* %esi.global-to-local, align 4
  %v4_16611.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_16611.outer

dec_label_pc_16608:                               ; preds = %dec_label_pc_16611
  store i32 %v0_16608, i32* %esi.global-to-local, align 4
  %v1_1660a = add i32 %v0_16608, 8
  %v2_1660a = inttoptr i32 %v1_1660a to i32*
  %v3_1660a = load i32, i32* %v2_1660a, align 4
  store i32 %v3_1660a, i32* @eax, align 4
  %v1_1660d = icmp eq i32 %v3_1660a, 0
  br i1 %v1_1660d, label %dec_label_pc_1661d, label %dec_label_pc_16611.outer

dec_label_pc_16611.outer:                         ; preds = %dec_label_pc_16608, %dec_label_pc_16603
  %v1_1661d9.ph = phi i32 [ %v0_16608, %dec_label_pc_16608 ], [ %v0_1661d, %dec_label_pc_16603 ]
  %v0_16608.ph = phi i32 [ %v3_1660a, %dec_label_pc_16608 ], [ %v0_166116, %dec_label_pc_16603 ]
  br label %dec_label_pc_16611

dec_label_pc_16611:                               ; preds = %dec_label_pc_16611.outer, %dec_label_pc_16616
  %v0_16608 = phi i32 [ %v3_16616, %dec_label_pc_16616 ], [ %v0_16608.ph, %dec_label_pc_16611.outer ]
  %v1_16611 = add i32 %v0_16608, 16
  %v2_16611 = inttoptr i32 %v1_16611 to i32*
  %v3_16611 = load i32, i32* %v2_16611, align 4
  %v10_16611 = icmp ult i32 %v3_16611, %v4_16611.pre
  %v1_16614 = icmp eq i1 %v10_16611, false
  br i1 %v1_16614, label %dec_label_pc_16608, label %dec_label_pc_16616

dec_label_pc_16616:                               ; preds = %dec_label_pc_16611
  %v1_16616 = add i32 %v0_16608, 12
  %v2_16616 = inttoptr i32 %v1_16616 to i32*
  %v3_16616 = load i32, i32* %v2_16616, align 4
  store i32 %v3_16616, i32* @eax, align 4
  %v1_16619 = icmp eq i32 %v3_16616, 0
  %v1_1661b = icmp eq i1 %v1_16619, false
  br i1 %v1_1661b, label %dec_label_pc_16611, label %dec_label_pc_1661d

dec_label_pc_1661d:                               ; preds = %dec_label_pc_16608, %dec_label_pc_16616
  %v1_1661d = phi i32 [ %v1_1661d9.ph, %dec_label_pc_16616 ], [ %v0_16608, %dec_label_pc_16608 ]
  %v12_1661d = icmp eq i32 %v0_1661d, %v1_1661d
  br i1 %v12_1661d, label %bb115, label %dec_label_pc_16621

bb115:                                            ; preds = %dec_label_pc_1661d
  %v1_1661f = call i32 @function_16690()
  store i32 %v1_1661f, i32* @eax, align 4
  %v0_16621.pre = load i32, i32* %esi.global-to-local, align 4
  %v4_16621.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_16621

dec_label_pc_16621:                               ; preds = %bb115, %dec_label_pc_1661d
  %v4_16621 = phi i32 [ %v4_16621.pre, %bb115 ], [ %v4_16611.pre, %dec_label_pc_1661d ]
  %v0_16621 = phi i32 [ %v0_16621.pre, %bb115 ], [ %v1_1661d, %dec_label_pc_1661d ]
  %v1_16621 = add i32 %v0_16621, 16
  %v2_16621 = inttoptr i32 %v1_16621 to i32*
  %v3_16621 = load i32, i32* %v2_16621, align 4
  %tmp124 = icmp ugt i32 %v3_16621, %v4_16621
  br i1 %tmp124, label %bb116, label %dec_label_pc_16626

bb116:                                            ; preds = %dec_label_pc_16621
  %v4_16624 = call i32 @function_16690()
  store i32 %v4_16624, i32* %eax.global-to-local, align 4
  %v0_16626.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_16626

dec_label_pc_16626:                               ; preds = %dec_label_pc_16621, %bb116
  %v1_1662e = phi i32 [ %v0_16621, %dec_label_pc_16621 ], [ %v0_16626.pre, %bb116 ]
  %v1_16626 = add i32 %v1_1662e, 20
  %v2_16626 = inttoptr i32 %v1_16626 to i32*
  %v3_16626 = load i32, i32* %v2_16626, align 4
  %v1_16629 = add i32 %v3_16626, -1
  %v10_16629 = icmp eq i32 %v1_16629, 0
  store i32 %v1_16629, i32* @eax, align 4
  store i32 %v1_16629, i32* %v2_16626, align 4
  %v1_16631 = icmp eq i1 %v10_16629, false
  br i1 %v1_16631, label %bb117, label %dec_label_pc_16633

bb117:                                            ; preds = %dec_label_pc_16626
  %v2_16631 = call i32 @function_16662()
  store i32 %v2_16631, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_16633

dec_label_pc_16633:                               ; preds = %bb117, %dec_label_pc_16626
  %v0_16633 = load i32, i32* @edi, align 4
  %v1_16633 = add i32 %v0_16633, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_16633 = inttoptr i32 %v1_16633 to i32*
  %v3_16633 = load i32, i32* %v2_16633, align 4
  store i32 %v3_16633, i32* %eax.global-to-local, align 4
  ret i32 %v3_16633

; uselistorder directives
  uselistorder i32 %v1_16629, { 0, 2, 1 }
  uselistorder i32 %v1_1661d, { 1, 0 }
  uselistorder i32 %v3_16616, { 1, 2, 0 }
  uselistorder i32 %v0_16608, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 %v4_16611.pre, { 1, 0 }
  uselistorder i32 %v1_165e7, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 5, 7, 6, 8, 1, 2, 3, 4 }
  uselistorder i32 ()* @function_16690, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16626, { 1, 0 }
  uselistorder label %dec_label_pc_1661d, { 1, 0 }
  uselistorder label %dec_label_pc_16611, { 1, 0 }
  uselistorder label %dec_label_pc_165ef, { 1, 0 }
}

define i32 @function_16662() local_unnamed_addr {
dec_label_pc_16662:
  %v0_16667 = load i32, i32* @eax, align 4
  ret i32 %v0_16667
}

define i32 @function_16669() local_unnamed_addr {
dec_label_pc_16669:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_16674(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16674:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_16674 = load i32, i32* %ebp.global-to-local, align 4
  %v1_16674 = add i32 %v0_16674, -1957136960
  %v2_16674 = inttoptr i32 %v1_16674 to i32*
  %v3_16674 = load i32, i32* %v2_16674, align 4
  %v4_16674 = add i32 %v3_16674, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_16674, i32* %v2_16674, align 4
  %v0_1667b = load i32, i32* %eax.global-to-local, align 4
  %v11_1667b = and i32 %v0_1667b, -212
  store i32 %v11_1667b, i32* %eax.global-to-local, align 4
  %v1_1667d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1667d = xor i32 %v1_1667d, %v11_1667b
  %v3_1667d = icmp eq i32 %v2_1667d, 0
  store i32 %v2_1667d, i32* @eax, align 4
  %v1_16684 = icmp eq i1 %v3_1667d, false
  br i1 %v1_16684, label %bb, label %dec_label_pc_16686

bb:                                               ; preds = %dec_label_pc_16674
  %v2_16684 = call i32 @function_166cc()
  store i32 %v2_16684, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_16686

dec_label_pc_16686:                               ; preds = %bb, %dec_label_pc_16674
  %v0_1668d = phi i32 [ %v2_16684, %bb ], [ %v2_1667d, %dec_label_pc_16674 ]
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1668d

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
}

define i32 @function_16690() local_unnamed_addr {
dec_label_pc_16690:
  %v3_166a8 = load i32, i32* @eax, align 4
  ret i32 %v3_166a8
}

define i32 @function_166cc() local_unnamed_addr {
dec_label_pc_166cc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_166f0:
  %v0_166f8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16704 = load i32, i32* %arg1, align 4
  %v2_16708 = ashr i32 %v2_16704, 31
  %v2_1670b = xor i32 %v2_16708, %v2_16704
  store i32 %v2_1670b, i32* @eax, align 4
  %tmp110 = icmp ult i32 %v2_1670b, 20
  br i1 %tmp110, label %bb, label %dec_label_pc_16712

bb:                                               ; preds = %dec_label_pc_166f0
  %v4_16710 = call i32 @function_16738(i32 %v0_166f8)
  br label %dec_label_pc_16712

dec_label_pc_16712:                               ; preds = %bb, %dec_label_pc_166f0
  %v3_1672a = phi i32 [ %v4_16710, %bb ], [ %v2_1670b, %dec_label_pc_166f0 ]
  ret i32 %v3_1672a

; uselistorder directives
  uselistorder i32 %v2_1670b, { 1, 0, 2 }
}

define i32 @function_16735() local_unnamed_addr {
dec_label_pc_16735:
  %eax.global-to-local = alloca i32, align 4
  %v0_16735 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16735
}

define i32 @function_16738(i32 %arg1) local_unnamed_addr {
dec_label_pc_16738:
  %v0_16738 = load i32, i32* @eax, align 4
  ret i32 %v0_16738
}

define i32 @function_16740(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16740:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16740 = call i32 @function_16810()
  %v0_16748 = load i32, i32* %edx.global-to-local, align 4
  %v2_16748 = icmp slt i32 %v0_16748, 0
  %v0_167e8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_167e8 = add i32 %v0_167e8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_167e8 = inttoptr i32 %v1_167e8 to i32*
  %v3_167e8 = load i32, i32* %v2_167e8, align 4
  br i1 %v2_16748, label %dec_label_pc_167e8, label %dec_label_pc_16756

dec_label_pc_16756:                               ; preds = %dec_label_pc_16740
  %v1_16759 = icmp eq i32 %v3_167e8, 0
  br i1 %v1_16759, label %dec_label_pc_167b0, label %dec_label_pc_1675d

dec_label_pc_1675d:                               ; preds = %dec_label_pc_16756
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_16761 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16761 = xor i32 %v1_16761, %arg1
  %v3_16761 = icmp eq i32 %v2_16761, 0
  store i32 %v2_16761, i32* %edx.global-to-local, align 4
  %v1_16768 = icmp eq i1 %v3_16761, false
  br i1 %v1_16768, label %dec_label_pc_1680a, label %dec_label_pc_1676e

dec_label_pc_1676e:                               ; preds = %dec_label_pc_1675d
  %v1_1676e = inttoptr i32 %v3_167e8 to i32*
  %v2_1676e = load i32, i32* %v1_1676e, align 4
  store i32 %v2_1676e, i32* %edx.global-to-local, align 4
  %v1_16774 = add i32 %v2_1676e, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_16774 = inttoptr i32 %v1_16774 to i32*
  %v3_16774 = load i32, i32* %v2_16774, align 4
  ret i32 %v3_16774

dec_label_pc_167a3:                               ; preds = %dec_label_pc_167fd
  br label %dec_label_pc_167b0

dec_label_pc_167b0:                               ; preds = %dec_label_pc_167a3, %dec_label_pc_167e8, %dec_label_pc_16756
  %v0_167c1 = phi i32 [ 0, %dec_label_pc_167a3 ], [ %v0_16740, %dec_label_pc_167e8 ], [ 0, %dec_label_pc_16756 ]
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_167b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_167b4 = xor i32 %v1_167b4, %arg3
  %v3_167b4 = icmp eq i32 %v2_167b4, 0
  store i32 %v2_167b4, i32* %edx.global-to-local, align 4
  %v1_167bb = icmp eq i1 %v3_167b4, false
  br i1 %v1_167bb, label %dec_label_pc_1680a, label %dec_label_pc_167bd

dec_label_pc_167bd:                               ; preds = %dec_label_pc_167b0
  ret i32 %v0_167c1

dec_label_pc_167e8:                               ; preds = %dec_label_pc_16740
  %v1_167eb = icmp eq i32 %v3_167e8, 0
  br i1 %v1_167eb, label %dec_label_pc_167b0, label %dec_label_pc_167ef

dec_label_pc_167ef:                               ; preds = %dec_label_pc_167e8
  %v1_167ef = inttoptr i32 %v3_167e8 to i32*
  %v2_167ef = load i32, i32* %v1_167ef, align 4
  %v1_167f1 = icmp eq i32 %v2_167ef, 0
  br i1 %v1_167f1, label %dec_label_pc_167fd, label %dec_label_pc_167f5

dec_label_pc_167f5:                               ; preds = %dec_label_pc_167ef
  %v1_167f5 = inttoptr i32 %v2_167ef to i32*
  %v2_167f5 = load i32, i32* %v1_167f5, align 4
  store i32 %v2_167f5, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_167fd

dec_label_pc_167fd:                               ; preds = %dec_label_pc_167f5, %dec_label_pc_167ef
  %v1_16801 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16801 = xor i32 %v1_16801, %arg1
  %v3_16801 = icmp eq i32 %v2_16801, 0
  br i1 %v3_16801, label %dec_label_pc_167a3, label %dec_label_pc_1680a

dec_label_pc_1680a:                               ; preds = %dec_label_pc_167fd, %dec_label_pc_167b0, %dec_label_pc_1675d
  %v1_16808 = phi i32 [ %v2_16801, %dec_label_pc_167fd ], [ %v0_167c1, %dec_label_pc_167b0 ], [ %v3_167e8, %dec_label_pc_1675d ]
  ret i32 %v1_16808

; uselistorder directives
  uselistorder i32 %v3_167e8, { 0, 2, 4, 1, 3 }
  uselistorder label %dec_label_pc_167b0, { 1, 0, 2 }
}

define i32 @function_16810() local_unnamed_addr {
dec_label_pc_16810:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt6vectorIh16secure_allocatorIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16860:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* @eax, align 4
  %v0_16867 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1686b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_16878 = load i32, i32* %esi.global-to-local, align 4
  %v2_1687c = load i32, i32* %arg1, align 4
  store i32 %v2_1687c, i32* %ebx.global-to-local, align 4
  %v1_1687e = add i32 %tmp104, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1687e = inttoptr i32 %v1_1687e to i32*
  %v3_1687e = load i32, i32* %v2_1687e, align 4
  store i32 %v3_1687e, i32* @esi, align 4
  %v1_16881 = icmp eq i32 %v2_1687c, 0
  br i1 %v1_16881, label %bb, label %dec_label_pc_16885

bb:                                               ; preds = %dec_label_pc_16860
  %v4_16883 = call i32 @function_168c8(i32 %v0_1686b, i32 %v0_16867, i32 %v0_16878)
  %v0_16885.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_16885

dec_label_pc_16885:                               ; preds = %bb, %dec_label_pc_16860
  %v3_1688b = phi i32 [ %v4_16883, %bb ], [ %tmp104, %dec_label_pc_16860 ]
  %v0_16885 = phi i32 [ %v0_16885.pre, %bb ], [ %v3_1687e, %dec_label_pc_16860 ]
  %v2_16885 = sub i32 %v0_16885, %v2_1687c
  store i32 %v2_16885, i32* %esi.global-to-local, align 4
  ret i32 %v3_1688b

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_16892(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16892:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16892 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16892 = add i32 %v0_16892, -1995955084
  %v2_16892 = inttoptr i32 %v1_16892 to i32*
  %v3_16892 = load i32, i32* %v2_16892, align 4
  %v4_16892 = sub i32 %v3_16892, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_16892, i32* %v2_16892, align 4
  %v0_16899 = load i32, i32* %eax.global-to-local, align 4
  %v11_16899 = and i32 %v0_16899, or (i32 zext (i8 ptrtoint (i16** @global_var_4.3276 to i8) to i32), i32 -256)
  store i32 %v11_16899, i32* @eax, align 4
  %v1_168a2 = call i32 @function_2ce00(i32 0)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_168ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_168ab = xor i32 %v1_168ab, %arg2
  store i32 %v2_168ab, i32* %eax.global-to-local, align 4
  ret i32 %v2_168ab
}

define i32 @function_168c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_168c8:
  %v1_168cc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_168cc = icmp eq i32 %v1_168cc, %arg1
  %v1_168d3 = icmp eq i1 %v3_168cc, false
  br i1 %v1_168d3, label %dec_label_pc_168e1, label %dec_label_pc_168d5

dec_label_pc_168d5:                               ; preds = %dec_label_pc_168c8
  store i32 %arg3, i32* @esi, align 4
  %v0_168e0 = load i32, i32* @eax, align 4
  ret i32 %v0_168e0

dec_label_pc_168e1:                               ; preds = %dec_label_pc_168c8
  %v1_168e0 = load i32, i32* @eax, align 4
  ret i32 %v1_168e0
}

define i32 @_ZNSt6vectorI12CTransactionSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_168f0:
  %tmp10 = ptrtoint i32* %arg1 to i32
  %v1_1690f = add i32 %tmp10, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1690f = inttoptr i32 %v1_1690f to i32*
  %v3_1690f = load i32, i32* %v2_1690f, align 4
  %v2_1691a = load i32, i32* %arg1, align 4
  %v15_1691c = icmp eq i32 %v3_1690f, %v2_1691a
  br i1 %v15_1691c, label %bb, label %dec_label_pc_1692a

bb:                                               ; preds = %dec_label_pc_168f0
  %v4_16924 = call i32 @function_169c8(i32 %v2_1691a, i32 %v3_1690f, i32 %tmp10)
  br label %dec_label_pc_1692a

dec_label_pc_1692a:                               ; preds = %bb, %dec_label_pc_168f0
  %v0_1692a = phi i32 [ %v4_16924, %bb ], [ %v2_1691a, %dec_label_pc_168f0 ]
  store i32 %v0_1692a, i32* @edi, align 4
  %v1_1692c = add i32 %v0_1692a, 16
  store i32 %v1_1692c, i32* @eax, align 4
  %v5_16946 = sub i32 %v0_1692a, %v2_1691a
  store i32 %v5_16946, i32* @ebp, align 4
  %v3_1694a = add i32 %v5_16946, 4
  %v4_1694a = add i32 %v3_1694a, %v1_1692c
  %v5_1694a = inttoptr i32 %v4_1694a to i32*
  %v6_1694a = load i32, i32* %v5_1694a, align 4
  store i32 %v6_1694a, i32* @esi, align 4
  %v2_1694e = mul i32 %v1_1692c, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1694e = add i32 %v2_1694e, %v5_16946
  %v4_1694e = inttoptr i32 %v3_1694e to i32*
  %v5_1694e = load i32, i32* %v4_1694e, align 4
  store i32 %v5_1694e, i32* @ebx, align 4
  %v12_16952 = icmp eq i32 %v6_1694a, %v5_1694e
  br i1 %v12_16952, label %bb16, label %dec_label_pc_16956

bb16:                                             ; preds = %dec_label_pc_1692a
  %v1_16933 = add i32 %v0_1692a, 4
  %v3_16954 = call i32 @function_16971(i32 %v1_16933, i32 %v1_1692c)
  %v0_16958.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_16956

dec_label_pc_16956:                               ; preds = %bb16, %dec_label_pc_1692a
  %v0_16958 = phi i32 [ %v0_16958.pre, %bb16 ], [ %v5_1694e, %dec_label_pc_1692a ]
  %v1_16958 = add i32 %v0_16958, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_16958 = inttoptr i32 %v1_16958 to i32*
  %v3_16958 = load i32, i32* %v2_16958, align 4
  store i32 %v3_16958, i32* @eax, align 4
  %v1_1695b = icmp eq i32 %v3_16958, 0
  br i1 %v1_1695b, label %bb17, label %dec_label_pc_1695f

bb17:                                             ; preds = %dec_label_pc_16956
  %v1_1695d = call i32 @function_16967()
  br label %dec_label_pc_1695f

dec_label_pc_1695f:                               ; preds = %bb17, %dec_label_pc_16956
  %v0_1695f = phi i32 [ %v1_1695d, %bb17 ], [ %v3_16958, %dec_label_pc_16956 ]
  ret i32 %v0_1695f

; uselistorder directives
  uselistorder i32 %v5_1694e, { 1, 0, 2 }
  uselistorder i32 %v1_1692c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1692a, { 3, 0, 2, 1 }
  uselistorder i32 %v2_1691a, { 3, 1, 2, 0 }
  uselistorder i32 %v3_1690f, { 1, 0 }
}

define i32 @function_16967() local_unnamed_addr {
dec_label_pc_16967:
  %v4_1696e = load i32, i32* @eax, align 4
  ret i32 %v4_1696e
}

define i32 @function_16971(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16971:
  %v0_16971 = load i32, i32* @ebx, align 4
  %v1_16971 = icmp eq i32 %v0_16971, 0
  br i1 %v1_16971, label %bb, label %dec_label_pc_16971.dec_label_pc_16975_crit_edge

dec_label_pc_16971.dec_label_pc_16975_crit_edge:  ; preds = %dec_label_pc_16971
  %v3_16975.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_16975

bb:                                               ; preds = %dec_label_pc_16971
  %v1_16973 = call i32 @function_1697d()
  br label %dec_label_pc_16975

dec_label_pc_16975:                               ; preds = %dec_label_pc_16971.dec_label_pc_16975_crit_edge, %bb
  %v3_16975 = phi i32 [ %v3_16975.pre, %dec_label_pc_16971.dec_label_pc_16975_crit_edge ], [ %v1_16973, %bb ]
  ret i32 %v3_16975

; uselistorder directives
  uselistorder label %dec_label_pc_16975, { 1, 0 }
}

define i32 @function_1697d() local_unnamed_addr {
dec_label_pc_1697d:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_16981 = load i32, i32* @ebp, align 4
  %v2_16981 = mul i32 %tmp3, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_16981 = add i32 %v2_16981, ptrtoint (i16** @global_var_4.3276 to i32)
  %v4_16981 = add i32 %v3_16981, %v0_16981
  %v5_16981 = inttoptr i32 %v4_16981 to i32*
  %v6_16981 = load i32, i32* %v5_16981, align 4
  store i32 %v6_16981, i32* @esi, align 4
  %v3_16985 = add i32 %v0_16981, %v2_16981
  %v4_16985 = inttoptr i32 %v3_16985 to i32*
  %v5_16985 = load i32, i32* %v4_16985, align 4
  store i32 %v5_16985, i32* @ebx, align 4
  %v12_16989 = icmp eq i32 %v6_16981, %v5_16985
  br i1 %v12_16989, label %bb, label %dec_label_pc_1698d

bb:                                               ; preds = %dec_label_pc_1697d
  %v1_1698b = call i32 @function_169a9()
  %v0_16990.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1698d

dec_label_pc_1698d:                               ; preds = %bb, %dec_label_pc_1697d
  %v0_16990 = phi i32 [ %v0_16990.pre, %bb ], [ %v5_16985, %dec_label_pc_1697d ]
  %v1_16990 = add i32 %v0_16990, 36
  %v2_16990 = inttoptr i32 %v1_16990 to i32*
  %v3_16990 = load i32, i32* %v2_16990, align 4
  store i32 %v3_16990, i32* @eax, align 4
  %v1_16993 = icmp eq i32 %v3_16990, 0
  br i1 %v1_16993, label %bb4, label %dec_label_pc_16997

bb4:                                              ; preds = %dec_label_pc_1698d
  %v1_16995 = call i32 @function_1699f()
  br label %dec_label_pc_16997

dec_label_pc_16997:                               ; preds = %bb4, %dec_label_pc_1698d
  %v3_16997 = phi i32 [ %v1_16995, %bb4 ], [ %v3_16990, %dec_label_pc_1698d ]
  ret i32 %v3_16997

; uselistorder directives
  uselistorder i32 %v5_16985, { 1, 0, 2 }
}

define i32 @function_1699f() local_unnamed_addr {
dec_label_pc_1699f:
  %v0_169a6 = load i32, i32* @edi, align 4
  %v1_169a6 = add i32 %v0_169a6, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_169a6 = inttoptr i32 %v1_169a6 to i32*
  %v3_169a6 = load i32, i32* %v2_169a6, align 4
  store i32 %v3_169a6, i32* @ebx, align 4
  %v4_169a6 = load i32, i32* @eax, align 4
  ret i32 %v4_169a6
}

define i32 @function_169a9() local_unnamed_addr {
dec_label_pc_169a9:
  %v0_169a9 = load i32, i32* @ebx, align 4
  %v1_169a9 = icmp eq i32 %v0_169a9, 0
  br i1 %v1_169a9, label %bb, label %dec_label_pc_169a9.dec_label_pc_169ad_crit_edge

dec_label_pc_169a9.dec_label_pc_169ad_crit_edge:  ; preds = %dec_label_pc_169a9
  %v3_169ad.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_169ad

bb:                                               ; preds = %dec_label_pc_169a9
  %v1_169ab = call i32 @function_169b5()
  br label %dec_label_pc_169ad

dec_label_pc_169ad:                               ; preds = %dec_label_pc_169a9.dec_label_pc_169ad_crit_edge, %bb
  %v3_169ad = phi i32 [ %v3_169ad.pre, %dec_label_pc_169a9.dec_label_pc_169ad_crit_edge ], [ %v1_169ab, %bb ]
  ret i32 %v3_169ad

; uselistorder directives
  uselistorder label %dec_label_pc_169ad, { 1, 0 }
}

define i32 @function_169b5() local_unnamed_addr {
dec_label_pc_169b5:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_169b5 = load i32, i32* @edi, align 4
  %v1_169b5 = add i32 %v0_169b5, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_169b5, i32* @edi, align 4
  %v1_169c2 = inttoptr i32 %tmp1 to i32*
  %v2_169c2 = load i32, i32* %v1_169c2, align 4
  ret i32 %v2_169c2
}

define i32 @function_169c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_169c8:
  %v1_169cc = icmp eq i32 %arg1, 0
  br i1 %v1_169cc, label %bb, label %dec_label_pc_169d0

bb:                                               ; preds = %dec_label_pc_169c8
  %v1_169ce = call i32 @function_169f1()
  br label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %bb, %dec_label_pc_169c8
  %v1_169d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_169d4 = xor i32 %v1_169d4, %arg2
  %v3_169d4 = icmp eq i32 %v2_169d4, 0
  store i32 %v2_169d4, i32* @eax, align 4
  %v1_169db = icmp eq i1 %v3_169d4, false
  br i1 %v1_169db, label %bb9, label %dec_label_pc_169dd

bb9:                                              ; preds = %dec_label_pc_169d0
  %v2_169db = call i32 @function_16a06()
  br label %dec_label_pc_169dd

dec_label_pc_169dd:                               ; preds = %bb9, %dec_label_pc_169d0
  ret i32 %arg1
}

define i32 @function_169f1() local_unnamed_addr {
dec_label_pc_169f1:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_169f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_169f5 = xor i32 %v1_169f5, %tmp10
  %v3_169f5 = icmp eq i32 %v2_169f5, 0
  store i32 %v2_169f5, i32* @eax, align 4
  %v1_169fc = icmp eq i1 %v3_169f5, false
  br i1 %v1_169fc, label %bb, label %dec_label_pc_169fe

bb:                                               ; preds = %dec_label_pc_169f1
  %v2_169fc = call i32 @function_16a06()
  br label %dec_label_pc_169fe

dec_label_pc_169fe:                               ; preds = %bb, %dec_label_pc_169f1
  %v0_16a05 = phi i32 [ %v2_169fc, %bb ], [ %v2_169f5, %dec_label_pc_169f1 ]
  ret i32 %v0_16a05

; uselistorder directives
  uselistorder i32 ()* @function_16a06, { 1, 0 }
}

define i32 @function_16a06() local_unnamed_addr {
dec_label_pc_16a06:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16a10:
  %v0_16a13 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16a23 = load i32, i32* %arg1, align 4
  store i32 %v2_16a23, i32* @eax, align 4
  %v1_16a25 = icmp eq i32 %v2_16a23, 0
  br i1 %v1_16a25, label %bb, label %dec_label_pc_16a29

bb:                                               ; preds = %dec_label_pc_16a10
  %v2_16a27 = call i32 @function_16a48(i32 %v0_16a13)
  store i32 %v2_16a27, i32* @eax, align 4
  br label %dec_label_pc_16a29

dec_label_pc_16a29:                               ; preds = %bb, %dec_label_pc_16a10
  %v17_16a3a2 = phi i32 [ %v2_16a27, %bb ], [ %v2_16a23, %dec_label_pc_16a10 ]
  br i1 false, label %bb7, label %dec_label_pc_16a36

bb7:                                              ; preds = %dec_label_pc_16a29
  br label %dec_label_pc_16a36

dec_label_pc_16a36:                               ; preds = %bb7, %dec_label_pc_16a29
  ret i32 %v17_16a3a2
}

define i32 @function_16a48(i32 %arg1) local_unnamed_addr {
dec_label_pc_16a48:
  %v1_16a4c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16a4c = xor i32 %v1_16a4c, %arg1
  %v3_16a4c = icmp eq i32 %v2_16a4c, 0
  store i32 %v2_16a4c, i32* @eax, align 4
  %v1_16a53 = icmp eq i1 %v3_16a4c, false
  br i1 %v1_16a53, label %bb, label %dec_label_pc_16a55

bb:                                               ; preds = %dec_label_pc_16a48
  %v2_16a53 = call i32 @function_16a59()
  br label %dec_label_pc_16a55

dec_label_pc_16a55:                               ; preds = %bb, %dec_label_pc_16a48
  %v0_16a58 = phi i32 [ %v2_16a53, %bb ], [ %v2_16a4c, %dec_label_pc_16a48 ]
  ret i32 %v0_16a58
}

define i32 @function_16a59() local_unnamed_addr {
dec_label_pc_16a59:
  %v1_16a59 = load i32, i32* @eax, align 4
  ret i32 %v1_16a59
}

define i32 @_ZN13CBlockLocatorC1EPK11CBlockIndex(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16a70:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_16a70 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v1_16a8e = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_16a8e = inttoptr i32 %v1_16a8e to i32*
  store i32 0, i32* %v2_16a8e, align 4
  %v0_16a95 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16a95 = add i32 %v0_16a95, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_16a95 = inttoptr i32 %v1_16a95 to i32*
  store i32 0, i32* %v2_16a95, align 4
  br i1 false, label %dec_label_pc_16aba, label %dec_label_pc_16ab5

dec_label_pc_16ab5:                               ; preds = %dec_label_pc_16a70
  store i32 %v0_16a70, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_16aba:                               ; preds = %dec_label_pc_16a70
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_ED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16ae0:
  %v0_16ae3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16af3 = load i32, i32* %arg1, align 4
  %v2_16af7 = ashr i32 %v2_16af3, 31
  %v2_16afa = xor i32 %v2_16af7, %v2_16af3
  store i32 %v2_16afa, i32* @eax, align 4
  %tmp109 = icmp ult i32 %v2_16afa, 20
  br i1 %tmp109, label %bb, label %dec_label_pc_16b01

bb:                                               ; preds = %dec_label_pc_16ae0
  %v4_16aff = call i32 @function_16b28(i32 %v0_16ae3)
  br label %dec_label_pc_16b01

dec_label_pc_16b01:                               ; preds = %bb, %dec_label_pc_16ae0
  %v3_16b19 = phi i32 [ %v4_16aff, %bb ], [ %v2_16afa, %dec_label_pc_16ae0 ]
  ret i32 %v3_16b19

; uselistorder directives
  uselistorder i32 %v2_16afa, { 1, 0, 2 }
}

define i32 @function_16b28(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b28:
  %v0_16b28 = load i32, i32* @eax, align 4
  ret i32 %v0_16b28
}

define i32 @function_16b30(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b30:
  %v0_16b30 = call i32 @_ZN5boost8optionalISsED1Ev()
  %v1_16b3c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16b3c = xor i32 %v1_16b3c, %arg1
  %v3_16b3c = icmp eq i32 %v2_16b3c, 0
  %v1_16b43 = icmp eq i1 %v3_16b3c, false
  br i1 %v1_16b43, label %dec_label_pc_16b49, label %dec_label_pc_16b45

dec_label_pc_16b45:                               ; preds = %dec_label_pc_16b30
  ret i32 %v2_16b3c

dec_label_pc_16b49:                               ; preds = %dec_label_pc_16b30
  ret i32 %v2_16b3c

; uselistorder directives
  uselistorder i32 %v2_16b3c, { 1, 0, 2 }
}

define i32 @_ZNKSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEE5countERS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_16bb0:
  %edx.global-to-local = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg2 to i32
  store i32 %tmp107, i32* %edx.global-to-local, align 4
  %v1_16bcc = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_16bcc = inttoptr i32 %v1_16bcc to i32*
  %v3_16bcc = load i32, i32* %v2_16bcc, align 4
  store i32 0, i32* @eax, align 4
  %v1_16bd8 = icmp eq i32 %v3_16bcc, 0
  br i1 %v1_16bd8, label %bb, label %dec_label_pc_16bdc

bb:                                               ; preds = %dec_label_pc_16bb0
  %v1_16bcf = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_16bda = call i32 @function_16c57(i32 %v1_16bcf)
  %v0_16bdc.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_16bdc

dec_label_pc_16bdc:                               ; preds = %bb, %dec_label_pc_16bb0
  %v0_16bdc = phi i32 [ %v0_16bdc.pre, %bb ], [ %tmp107, %dec_label_pc_16bb0 ]
  %v1_16bdc = inttoptr i32 %v0_16bdc to i32*
  %v2_16bdc = load i32, i32* %v1_16bdc, align 4
  %v1_16be2 = add i32 %v2_16bdc, -12
  %v2_16be2 = inttoptr i32 %v1_16be2 to i32*
  %v3_16be2 = load i32, i32* %v2_16be2, align 4
  %v1_16bf3 = add i32 %v3_16bcc, 16
  %v2_16bf3 = inttoptr i32 %v1_16bf3 to i32*
  %v3_16bf3 = load i32, i32* %v2_16bf3, align 4
  store i32 %v3_16be2, i32* %edx.global-to-local, align 4
  %v1_16bf8 = add i32 %v3_16bf3, -12
  %v2_16bf8 = inttoptr i32 %v1_16bf8 to i32*
  %v3_16bf8 = load i32, i32* %v2_16bf8, align 4
  %tmp115 = icmp ule i32 %v3_16bf8, %v3_16be2
  %v5_16c04 = select i1 %tmp115, i32 %v3_16bf8, i32 %v3_16be2
  store i32 %v5_16c04, i32* %edx.global-to-local, align 4
  ret i32 %v3_16bf3

; uselistorder directives
  uselistorder i32 %v3_16bf8, { 1, 0 }
  uselistorder i32 %v3_16be2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16c22(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c22:
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %edx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  %v15_16c28 = icmp eq i32 %tmp4, %arg1
  br i1 %v15_16c28, label %bb, label %dec_label_pc_16c2e

bb:                                               ; preds = %dec_label_pc_16c22
  %v2_16c2c = call i32 @function_16c57(i32 ptrtoint (i32* @0 to i32))
  %v0_16c2e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_16c2e

dec_label_pc_16c2e:                               ; preds = %bb, %dec_label_pc_16c22
  %v0_16c2e = phi i32 [ %v0_16c2e.pre, %bb ], [ %arg1, %dec_label_pc_16c22 ]
  %v1_16c2e = add i32 %v0_16c2e, 16
  %v2_16c2e = inttoptr i32 %v1_16c2e to i32*
  %v3_16c2e = load i32, i32* %v2_16c2e, align 4
  %v0_16c31 = load i32, i32* @edi, align 4
  store i32 %v0_16c31, i32* %edx.global-to-local, align 4
  %v1_16c33 = add i32 %v3_16c2e, -12
  %v2_16c33 = inttoptr i32 %v1_16c33 to i32*
  %v3_16c33 = load i32, i32* %v2_16c33, align 4
  %tmp6 = icmp uge i32 %v0_16c31, %v3_16c33
  %v5_16c3f = select i1 %tmp6, i32 %v3_16c33, i32 %v0_16c31
  store i32 %v5_16c3f, i32* %edx.global-to-local, align 4
  ret i32 %v3_16c2e

; uselistorder directives
  uselistorder i32 %v3_16c33, { 1, 0 }
  uselistorder i32 %v0_16c31, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_16c57, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_16c57(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c57:
  %v1_16c5b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_16c5b = icmp eq i32 %v1_16c5b, %arg1
  %v1_16c62 = icmp eq i1 %v3_16c5b, false
  br i1 %v1_16c62, label %dec_label_pc_16c6c, label %dec_label_pc_16c64

dec_label_pc_16c64:                               ; preds = %dec_label_pc_16c57
  %v0_16c6b = load i32, i32* @eax, align 4
  ret i32 %v0_16c6b

dec_label_pc_16c6c:                               ; preds = %dec_label_pc_16c57
  %v0_16c6c = load i32, i32* @eax, align 4
  ret i32 %v0_16c6c
}

define i32 @_ZN5boost8optionalISsED1Ev() local_unnamed_addr {
dec_label_pc_16c80:
  %tmp4 = call i8* @__decompiler_undefined_function_1()
  %v4_16c84 = ptrtoint i8* %tmp4 to i32
  store i32 %v4_16c84, i32* @ebx, align 4
  %v2_16c94 = load i8, i8* %tmp4, align 1
  %v9_16c94 = icmp eq i8 %v2_16c94, 0
  br i1 %v9_16c94, label %bb, label %dec_label_pc_16c99

bb:                                               ; preds = %dec_label_pc_16c80
  %v0_16c88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16c97 = call i32 @function_16ca7(i32 %v0_16c88)
  %v0_16c99.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_16c99

dec_label_pc_16c99:                               ; preds = %bb, %dec_label_pc_16c80
  %v0_16c99 = phi i32 [ %v0_16c99.pre, %bb ], [ %v4_16c84, %dec_label_pc_16c80 ]
  %v1_16c99 = add i32 %v0_16c99, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_16c99
}

define i32 @function_16ca7(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ca7:
  %v1_16cab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16cab = xor i32 %v1_16cab, %arg1
  %v3_16cab = icmp eq i32 %v2_16cab, 0
  %v1_16cb2 = icmp eq i1 %v3_16cab, false
  br i1 %v1_16cb2, label %dec_label_pc_16cb9, label %dec_label_pc_16cb4

dec_label_pc_16cb4:                               ; preds = %dec_label_pc_16ca7
  ret i32 %v2_16cab

dec_label_pc_16cb9:                               ; preds = %dec_label_pc_16ca7
  ret i32 %v2_16cab

; uselistorder directives
  uselistorder i32 %v2_16cab, { 1, 0, 2 }
}

define i32 @_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_PKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16cc0:
  ret i32 %arg2
}

define i32 @function_16cf0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16cf0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16cf0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16cf0 = add i32 %v0_16cf0, -1996217228
  %v2_16cf0 = inttoptr i32 %v1_16cf0 to i32*
  %v3_16cf0 = load i32, i32* %v2_16cf0, align 4
  %v4_16cf0 = sub i32 %v3_16cf0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_16cf0, i32* %v2_16cf0, align 4
  %v0_16cf6 = load i32, i32* %eax.global-to-local, align 4
  %v2_16cf6 = load i1, i1* %cf.global-to-local, align 1
  %v3_16cf6 = zext i1 %v2_16cf6 to i32
  %v4_16cf6 = add i32 %v0_16cf6, 220
  %v5_16cf6 = add i32 %v4_16cf6, %v3_16cf6
  %v31_16cf6 = urem i32 %v5_16cf6, 256
  %v33_16cf6 = and i32 %v0_16cf6, -256
  %v34_16cf6 = or i32 %v31_16cf6, %v33_16cf6
  store i32 %v34_16cf6, i32* %eax.global-to-local, align 4
  %v1_16d05 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_16d05 = icmp eq i32 %v1_16d05, %arg1
  %v0_16d0c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_16d0c, i32* %eax.global-to-local, align 4
  %v1_16d0e = icmp eq i1 %v3_16d05, false
  br i1 %v1_16d0e, label %dec_label_pc_16d18, label %dec_label_pc_16d10

dec_label_pc_16d10:                               ; preds = %dec_label_pc_16cf0
  %v0_16d10 = load i32, i32* @esp, align 4
  %v5_16d10 = icmp ugt i32 %v0_16d10, -37
  store i1 %v5_16d10, i1* %cf.global-to-local, align 1
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_16d0c

dec_label_pc_16d18:                               ; preds = %dec_label_pc_16cf0
  ret i32 %v0_16d0c

; uselistorder directives
  uselistorder i32 %v0_16d0c, { 1, 0, 2 }
  uselistorder i32 %v0_16cf6, { 1, 0 }
}

define i32 @_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16d30:
  ret i32 %arg2
}

define i32 @function_16d6a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16d6a:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_16d6a = load i32, i32* %ebx.global-to-local, align 4
  %v1_16d6a = add i32 %v0_16d6a, 1696343124
  %v2_16d6a = inttoptr i32 %v1_16d6a to i32*
  %v3_16d6a = load i32, i32* %v2_16d6a, align 4
  %v4_16d6a = add i32 %v3_16d6a, -1
  store i32 %v4_16d6a, i32* %v2_16d6a, align 4
  %v0_16d70 = load i32, i32* %edx.global-to-local, align 4
  %v1_16d70 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16d70 = xor i32 %v1_16d70, %v0_16d70
  %v3_16d70 = icmp eq i32 %v2_16d70, 0
  store i32 %v2_16d70, i32* %edx.global-to-local, align 4
  %v0_16d76 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16d78 = icmp eq i1 %v3_16d70, false
  br i1 %v1_16d78, label %dec_label_pc_16d88, label %dec_label_pc_16d7a

dec_label_pc_16d7a:                               ; preds = %dec_label_pc_16d6a
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_16d76

dec_label_pc_16d88:                               ; preds = %dec_label_pc_16d6a
  ret i32 %v0_16d76

; uselistorder directives
  uselistorder i32 %v0_16d76, { 1, 0 }
}

define i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_16da0:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v0_16da0 = load i32, i32* @edi, align 4
  %v0_16da1 = load i32, i32* @esi, align 4
  %v0_16da2 = load i32, i32* @ebx, align 4
  store i32 %tmp4, i32* @edi, align 4
  %v0_16daa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16db6 = add i32 %tmp4, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_16db6 = inttoptr i32 %v1_16db6 to i32*
  %v3_16db6 = load i32, i32* %v2_16db6, align 4
  store i32 %v3_16db6, i32* @esi, align 4
  %v2_16db9 = load i32, i32* %arg1, align 4
  store i32 %v2_16db9, i32* @ebx, align 4
  %v12_16dbb = icmp eq i32 %v3_16db6, %v2_16db9
  br i1 %v12_16dbb, label %bb, label %dec_label_pc_16dbf

bb:                                               ; preds = %dec_label_pc_16da0
  %v5_16dbd = call i32 @function_16dd1(i32 %v0_16daa, i32 %v0_16da2, i32 %v0_16da1, i32 %v0_16da0)
  %v0_16dc0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_16dbf

dec_label_pc_16dbf:                               ; preds = %bb, %dec_label_pc_16da0
  %v16_16dc3 = phi i32 [ %v5_16dbd, %bb ], [ 0, %dec_label_pc_16da0 ]
  %v0_16dc0 = phi i32 [ %v0_16dc0.pre, %bb ], [ %v2_16db9, %dec_label_pc_16da0 ]
  %v1_16dc3 = add i32 %v0_16dc0, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_16dc3, i32* @ebx, align 4
  ret i32 %v16_16dc3

; uselistorder directives
  uselistorder i32 %v2_16db9, { 1, 0, 2 }
}

define i32 @function_16dd1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16dd1:
  %v0_16dd1 = load i32, i32* @ebx, align 4
  %v1_16dd1 = icmp eq i32 %v0_16dd1, 0
  br i1 %v1_16dd1, label %bb, label %dec_label_pc_16dd5

bb:                                               ; preds = %dec_label_pc_16dd1
  %v1_16dd3 = call i32 @function_16df8()
  br label %dec_label_pc_16dd5

dec_label_pc_16dd5:                               ; preds = %bb, %dec_label_pc_16dd1
  %v1_16dd9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16dd9 = xor i32 %v1_16dd9, %arg1
  %v3_16dd9 = icmp eq i32 %v2_16dd9, 0
  store i32 %v2_16dd9, i32* @eax, align 4
  %v1_16de0 = icmp eq i1 %v3_16dd9, false
  br i1 %v1_16de0, label %bb7, label %dec_label_pc_16de2

bb7:                                              ; preds = %dec_label_pc_16dd5
  %v2_16de0 = call i32 @function_16e0c()
  br label %dec_label_pc_16de2

dec_label_pc_16de2:                               ; preds = %bb7, %dec_label_pc_16dd5
  %v5_16deb = phi i32 [ %v2_16de0, %bb7 ], [ %v2_16dd9, %dec_label_pc_16dd5 ]
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v5_16deb
}

define i32 @function_16df8() local_unnamed_addr {
dec_label_pc_16df8:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_16dfc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16dfc = xor i32 %v1_16dfc, %tmp8
  %v3_16dfc = icmp eq i32 %v2_16dfc, 0
  store i32 %v2_16dfc, i32* @eax, align 4
  %v1_16e03 = icmp eq i1 %v3_16dfc, false
  br i1 %v1_16e03, label %bb, label %dec_label_pc_16e05

bb:                                               ; preds = %dec_label_pc_16df8
  %v2_16e03 = call i32 @function_16e0c()
  br label %dec_label_pc_16e05

dec_label_pc_16e05:                               ; preds = %bb, %dec_label_pc_16df8
  %v0_16e0b = phi i32 [ %v2_16e03, %bb ], [ %v2_16dfc, %dec_label_pc_16df8 ]
  ret i32 %v0_16e0b

; uselistorder directives
  uselistorder i32 ()* @function_16e0c, { 1, 0 }
}

define i32 @function_16e0c() local_unnamed_addr {
dec_label_pc_16e0c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16e20:
  %v1_16e39 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_16e39
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ed0:
  %v4_16ed0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_16ed5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %v4_16ed0)
  ret i32 %v1_16ed5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_16ee0:
  store i32 0, i32* @eax, align 4
  %v2_16f0a = call i32 @function_2dcf0(i32 0, i32 %arg1)
  store i32 undef, i32* null, align 536870912
  store i8* bitcast (i32* @global_var_39164.3423 to i8*), i8** @global_var_8.3277, align 4
  store i32 ptrtoint (i32* @global_var_39174.3425 to i32), i32* @global_var_1c.3271, align 4
  ret i32 %v2_16f0a
}

define i32 @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f50:
  ret i32 0
}

define i32 @function_17023(i32 %arg1) local_unnamed_addr {
dec_label_pc_17023:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_17032(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17032:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17034 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17034 = add i32 %v0_17034, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_17034, i32* %ebx.global-to-local, align 4
  %v0_17035 = load i32, i32* %eax.global-to-local, align 4
  %v1_17035 = trunc i32 %v0_17035 to i8
  %v2_17035 = load i1, i1* %cf.global-to-local, align 1
  %v3_17035 = zext i1 %v2_17035 to i32
  %v4_17035 = sub i32 %v0_17035, zext (i8 ptrtoint (i32* @global_var_50.3473 to i8) to i32)
  %v5_17035 = add i32 %v4_17035, %v3_17035
  %v16_17035 = icmp ult i8 %v1_17035, 80
  %v17_17035 = or i1 %v2_17035, %v16_17035
  store i1 %v17_17035, i1* %cf.global-to-local, align 1
  %v30_17035 = and i32 %v5_17035, 255
  %v32_17035 = and i32 %v0_17035, -256
  %v33_17035 = or i32 %v30_17035, %v32_17035
  store i32 %v33_17035, i32* %eax.global-to-local, align 4
  %v4_17037 = inttoptr i32 %v1_17034 to i32*
  store i32 %arg1, i32* %v4_17037, align 4
  %v0_17039 = load i32, i32* %ecx.global-to-local, align 4
  %v1_17039 = add i32 %v0_17039, -1994644412
  %v2_17039 = inttoptr i32 %v1_17039 to i8*
  %v3_17039 = load i8, i8* %v2_17039, align 1
  %v5_17039 = trunc i32 %v0_17039 to i8
  %v6_17039 = add i8 %v3_17039, %v5_17039
  %v11_17039 = icmp ult i8 %v6_17039, %v3_17039
  store i1 %v11_17039, i1* %cf.global-to-local, align 1
  store i8 %v6_17039, i8* %v2_17039, align 1
  %v0_1703f = load i32, i32* %eax.global-to-local, align 4
  %v1_1703f = trunc i32 %v0_1703f to i8
  %v2_1703f = load i1, i1* %cf.global-to-local, align 1
  %v17_1703f = icmp ult i8 %v1_1703f, 36
  %v18_1703f = or i1 %v2_1703f, %v17_1703f
  store i1 %v18_1703f, i1* %cf.global-to-local, align 1
  %v0_1704a = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v1_1705c = call i32 @function_17023(i32 %v0_1704a)
  store i32 %v1_1705c, i32* %eax.global-to-local, align 4
  ret i32 %v1_1705c

; uselistorder directives
  uselistorder i1 %v2_17035, { 1, 0 }
  uselistorder i32 %v0_17035, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1705e() local_unnamed_addr {
dec_label_pc_1705e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1705e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1705e
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17060:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v1_17075 = add i32 %tmp6, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_17075 = inttoptr i32 %v1_17075 to i8*
  %v3_17075 = load i8, i8* %v2_17075, align 1
  %v10_17075 = icmp eq i8 %v3_17075, 0
  %v1_17079 = icmp eq i1 %v10_17075, false
  br i1 %v1_17079, label %dec_label_pc_17090, label %dec_label_pc_1707b

dec_label_pc_1707b:                               ; preds = %dec_label_pc_17060
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_17088

bb:                                               ; preds = %dec_label_pc_1707b
  br label %dec_label_pc_17088

dec_label_pc_17088:                               ; preds = %bb, %dec_label_pc_1707b
  ret i32 0

dec_label_pc_17090:                               ; preds = %dec_label_pc_17060
  ret i32 %tmp6
}

define i32 @function_170ab() local_unnamed_addr {
dec_label_pc_170ab:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_170c1() local_unnamed_addr {
dec_label_pc_170c1:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_170c1 = add i32 %tmp91, -390761280
  %v2_170c1 = inttoptr i32 %v1_170c1 to i32*
  %v3_170c1 = load i32, i32* %v2_170c1, align 4
  %v4_170c1 = add i32 %v3_170c1, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_170c1, i32* %v2_170c1, align 4
  %v8_170c7 = load i32, i32* %edx.global-to-local, align 4
  %v9_170c7 = inttoptr i32 %v8_170c7 to i32*
  store i32 0, i32* %v9_170c7, align 4
  %v2_170c9 = load i32, i32* @eax, align 4
  %v4_170c9 = mul i32 %v2_170c9, 2
  %v21_170c9 = inttoptr i32 %v2_170c9 to i32*
  store i32 %v4_170c9, i32* %v21_170c9, align 4
  %v0_170d0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_170d0 = add i32 %v0_170d0, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_170d0 = inttoptr i32 %v1_170d0 to i8*
  store i8 0, i8* %v2_170d0, align 1
  %v0_170d4 = call i32 @function_170ab()
  ret i32 %v0_170d4

; uselistorder directives
  uselistorder i32 %v2_170c9, { 1, 0 }
}

define i32 @function_170d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_170d6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_170f7() local_unnamed_addr {
dec_label_pc_170f7:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_170f7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_170f7 = lshr i32 %v0_170f7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_170f7 = load i32, i32* %eax.global-to-local, align 4
  %v5_170f7 = add i32 %v1_170f7, %v3_170f7
  %v20_170f7 = mul i32 %v5_170f7, 256
  %v22_170f7 = and i32 %v20_170f7, 65280
  %v23_170f7 = and i32 %v0_170f7, -65281
  %v24_170f7 = or i32 %v22_170f7, %v23_170f7
  store i32 %v24_170f7, i32* %ebx.global-to-local, align 4
  %v2_170f9 = add i32 %v3_170f7, 36
  %v16_170f9 = and i32 %v2_170f9, 255
  %v18_170f9 = and i32 %v3_170f7, -256
  %v19_170f9 = or i32 %v16_170f9, %v18_170f9
  store i32 %v19_170f9, i32* %eax.global-to-local, align 4
  ret i32 %v19_170f9

; uselistorder directives
  uselistorder i32 %v3_170f7, { 2, 0, 1 }
}

define i32 @_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_4CKeyESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17110:
  %v1_1712f = icmp eq i32 %arg2, 0
  br i1 %v1_1712f, label %bb, label %dec_label_pc_17137

bb:                                               ; preds = %dec_label_pc_17110
  %v2_17131 = call i32 @function_17264(i32 %arg1)
  br label %dec_label_pc_17137

dec_label_pc_17137:                               ; preds = %bb, %dec_label_pc_17110
  %v1_17137 = add i32 %arg2, 12
  %v2_17137 = inttoptr i32 %v1_17137 to i32*
  %v3_17137 = load i32, i32* %v2_17137, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_17148 = call i32 @function_2e220(i32 %arg1, i32 %v3_17137)
  %v1_1714d = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1714d = inttoptr i32 %v1_1714d to i32*
  %v3_1714d = load i32, i32* %v2_1714d, align 4
  ret i32 %v3_1714d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_17190() local_unnamed_addr {
dec_label_pc_17190:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_17207() local_unnamed_addr {
dec_label_pc_17207:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_17215() local_unnamed_addr {
dec_label_pc_17215:
  %eax.global-to-local = alloca i32, align 4
  %v3_17215 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_17215
}

define i32 @function_1722c() local_unnamed_addr {
dec_label_pc_1722c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1722c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1722c = add i32 %v0_1722c, -2062015372
  %v2_1722c = inttoptr i32 %v1_1722c to i32*
  %v3_1722c = load i32, i32* %v2_1722c, align 4
  %v4_1722c = sub i32 %v3_1722c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1722c, i32* %v2_1722c, align 4
  %v0_17232 = load i32, i32* %edi.global-to-local, align 4
  %v1_17232 = load i32, i32* %ebp.global-to-local, align 4
  %v2_17232 = mul i32 %v1_17232, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_17232 = add i32 %v0_17232, -117
  %v4_17232 = add i32 %v3_17232, %v2_17232
  %v5_17232 = inttoptr i32 %v4_17232 to i8*
  %v6_17232 = load i8, i8* %v5_17232, align 1
  %v7_17232 = load i32, i32* %eax.global-to-local, align 4
  %v8_17232 = trunc i32 %v7_17232 to i16
  %v9_17232 = zext i8 %v6_17232 to i16
  %v10_17232 = udiv i16 %v8_17232, %v9_17232
  %v13_17232 = and i32 %v7_17232, -65536
  %v15_17232 = urem i16 %v8_17232, %v9_17232
  %v16_17232 = zext i16 %v15_17232 to i32
  %v18_17232 = shl i32 %v16_17232, ptrtoint (i8** @global_var_8.3277 to i32)
  %tmp97 = urem i16 %v10_17232, 256
  %v11_17232.masked = zext i16 %tmp97 to i32
  %v19_17232 = or i32 %v11_17232.masked, %v13_17232
  %v20_17232 = or i32 %v19_17232, %v18_17232
  store i32 %v20_17232, i32* %eax.global-to-local, align 4
  %v0_17236 = load i32, i32* %edx.global-to-local, align 4
  %v1_17236 = trunc i32 %v0_17236 to i16
  %v2_17236 = call i8 @__asm_insb(i16 %v1_17236)
  %v3_17236 = load i32, i32* %edi.global-to-local, align 4
  %v4_17236 = inttoptr i32 %v3_17236 to i8*
  store i8 %v2_17236, i8* %v4_17236, align 1
  %v0_17237 = load i32, i32* %eax.global-to-local, align 4
  %v11_17237 = and i32 %v0_17237, or (i32 zext (i8 ptrtoint (i32* @global_var_18.3278 to i8) to i32), i32 -256)
  store i32 %v11_17237, i32* %eax.global-to-local, align 4
  ret i32 %v11_17237

; uselistorder directives
  uselistorder i32 %v11_17237, { 1, 0 }
}

define i32 @function_17240() local_unnamed_addr {
dec_label_pc_17240:
  %eax.global-to-local = alloca i32, align 4
  %v3_17258 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_17258
}

define i32 @function_17264(i32 %arg1) local_unnamed_addr {
dec_label_pc_17264:
  %v1_17268 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17268 = xor i32 %v1_17268, %arg1
  %v3_17268 = icmp eq i32 %v2_17268, 0
  %v1_1726f = icmp eq i1 %v3_17268, false
  br i1 %v1_1726f, label %dec_label_pc_17296, label %dec_label_pc_17271

dec_label_pc_17271:                               ; preds = %dec_label_pc_17264
  ret i32 %v2_17268

dec_label_pc_17296:                               ; preds = %dec_label_pc_17264
  ret i32 %v2_17268

; uselistorder directives
  uselistorder i32 %v2_17268, { 1, 0, 2 }
}

define i32 @function_17279() local_unnamed_addr {
dec_label_pc_17279:
  %stack_var_36 = alloca i32, align 4
  %v2_17279 = ptrtoint i32* %stack_var_36 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_36, align 4
  %v1_1728c = call i32 @function_2cba0(i32 %v2_17279)
  store i32 %v1_1728c, i32* @eax, align 4
  %v0_17291 = call i32 @function_283e0()
  ret i32 %v0_17291
}

define i32 @_ZNSt8_Rb_treeI9CScriptIDSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_172b0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_172b0 = load i32, i32* %edi.global-to-local, align 4
  %v0_172b1 = load i32, i32* %esi.global-to-local, align 4
  %v0_172b2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_172ba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_172ca = icmp eq i32 %arg2, 0
  %v1_172cc = icmp eq i1 %v1_172ca, false
  br i1 %v1_172cc, label %dec_label_pc_172d2, label %dec_label_pc_172ce

dec_label_pc_172ce:                               ; preds = %dec_label_pc_172b0
  %v4_172ce = call i32 @function_172ff(i32 %v0_172ba, i32 %v0_172b2, i32 %v0_172b1, i32 %v0_172b0)
  ret i32 %v4_172ce

dec_label_pc_172d2:                               ; preds = %dec_label_pc_172b0
  %v1_172d2 = add i32 %arg2, 12
  %v2_172d2 = inttoptr i32 %v1_172d2 to i32*
  %v3_172d2 = load i32, i32* %v2_172d2, align 4
  store i32 %v3_172d2, i32* @eax, align 4
  %v2_172dc = call i32 @function_2e560(i32 %arg1, i32 %v3_172d2)
  %v1_172e1 = add i32 %arg2, 36
  %v2_172e1 = inttoptr i32 %v1_172e1 to i32*
  %v3_172e1 = load i32, i32* %v2_172e1, align 4
  store i32 %v3_172e1, i32* @eax, align 4
  %v1_172e4 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_172e4 = inttoptr i32 %v1_172e4 to i32*
  %v3_172e4 = load i32, i32* %v2_172e4, align 4
  store i32 %v3_172e4, i32* %esi.global-to-local, align 4
  %v1_172e7 = icmp eq i32 %v3_172e1, 0
  br i1 %v1_172e7, label %bb, label %dec_label_pc_172eb

bb:                                               ; preds = %dec_label_pc_172d2
  %v1_172e9 = call i32 @function_172f3()
  br label %dec_label_pc_172eb

dec_label_pc_172eb:                               ; preds = %bb, %dec_label_pc_172d2
  %v0_172eb = phi i32 [ %v1_172e9, %bb ], [ %v3_172e1, %dec_label_pc_172d2 ]
  ret i32 %v0_172eb

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_172f3() local_unnamed_addr {
dec_label_pc_172f3:
  %v3_172f3 = load i32, i32* @eax, align 4
  ret i32 %v3_172f3
}

define i32 @function_172ff(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_172ff:
  %v1_17303 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17303 = xor i32 %v1_17303, %arg1
  %v3_17303 = icmp eq i32 %v2_17303, 0
  %v1_1730a = icmp eq i1 %v3_17303, false
  br i1 %v1_1730a, label %dec_label_pc_17313, label %dec_label_pc_1730c

dec_label_pc_1730c:                               ; preds = %dec_label_pc_172ff
  ret i32 %v2_17303

dec_label_pc_17313:                               ; preds = %dec_label_pc_172ff
  ret i32 %v2_17303

; uselistorder directives
  uselistorder i32 %v2_17303, { 1, 0, 2 }
}

define i32 @_ZN14CBasicKeyStoreD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17320:
  %v1_17334 = add i32 %arg1, 120
  %v2_17334 = inttoptr i32 %v1_17334 to i32*
  %v3_17334 = load i32, i32* %v2_17334, align 4
  ret i32 %v3_17334
}

define i32 @function_1736e() local_unnamed_addr {
dec_label_pc_1736e:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1736e = add i32 %tmp91, -2094959168
  %v2_1736e = inttoptr i32 %v1_1736e to i32*
  %v3_1736e = load i32, i32* %v2_1736e, align 4
  %v4_1736e = add i32 %v3_1736e, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1736e, i32* %v2_1736e, align 4
  %v0_17374 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17374
}

define i32 @function_1737d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1737d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1737d = load i32, i32* %ebp.global-to-local, align 4
  %v1_1737d = add i32 %v0_1737d, -1959037504
  %v2_1737d = inttoptr i32 %v1_1737d to i32*
  %v3_1737d = load i32, i32* %v2_1737d, align 4
  %v4_1737d = add i32 %v3_1737d, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1737d, i32* %v2_1737d, align 4
  %v0_17384 = load i32, i32* %eax.global-to-local, align 4
  %v11_17384 = and i32 %v0_17384, -212
  store i32 %v11_17384, i32* %eax.global-to-local, align 4
  %v1_17386 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17386 = xor i32 %v1_17386, %v11_17384
  %v3_17386 = icmp eq i32 %v2_17386, 0
  store i32 %v2_17386, i32* %eax.global-to-local, align 4
  %v1_1738d = icmp eq i1 %v3_17386, false
  br i1 %v1_1738d, label %dec_label_pc_173b8, label %dec_label_pc_1738f

dec_label_pc_1738f:                               ; preds = %dec_label_pc_1737d
  ret i32 %v2_17386

dec_label_pc_173b8:                               ; preds = %dec_label_pc_1737d
  ret i32 %v2_17386

; uselistorder directives
  uselistorder i32 %v2_17386, { 1, 0, 2, 3 }
}

define i32 @function_17394() local_unnamed_addr {
dec_label_pc_17394:
  %eax.global-to-local = alloca i32, align 4
  %v0_173b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_173b3
}

define i32 @_ZN14CBasicKeyStoreD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17410:
  %v1_17424 = add i32 %arg1, 120
  %v2_17424 = inttoptr i32 %v1_17424 to i32*
  %v3_17424 = load i32, i32* %v2_17424, align 4
  ret i32 %v3_17424
}

define i32 @function_1746d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1746d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1746d = load i32, i32* %ebp.global-to-local, align 4
  %v1_1746d = add i32 %v0_1746d, -1960544832
  %v2_1746d = inttoptr i32 %v1_1746d to i32*
  %v3_1746d = load i32, i32* %v2_1746d, align 4
  %v4_1746d = add i32 %v3_1746d, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1746d, i32* %v2_1746d, align 4
  %v0_17474 = load i32, i32* %eax.global-to-local, align 4
  %v11_17474 = and i32 %v0_17474, -212
  store i32 %v11_17474, i32* %eax.global-to-local, align 4
  %v1_17476 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17476 = xor i32 %v1_17476, %v11_17474
  %v3_17476 = icmp eq i32 %v2_17476, 0
  store i32 %v2_17476, i32* %eax.global-to-local, align 4
  %v1_1747d = icmp eq i1 %v3_17476, false
  br i1 %v1_1747d, label %dec_label_pc_17491, label %dec_label_pc_1747f

dec_label_pc_1747f:                               ; preds = %dec_label_pc_1746d
  br label %dec_label_pc_17491

dec_label_pc_17491:                               ; preds = %dec_label_pc_1747f, %dec_label_pc_1746d
  ret i32 %v2_17476
}

define i32 @function_174c1() local_unnamed_addr {
dec_label_pc_174c1:
  %eax.global-to-local = alloca i32, align 4
  %v0_174c1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_174c1
}

define i32 @_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_S1_I7CPubKeySt6vectorIhSaIhEEEESt10_Select1stIS8_ESt4lessIS0_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_174e0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_174e0 = load i32, i32* %edi.global-to-local, align 4
  %v0_174e1 = load i32, i32* %esi.global-to-local, align 4
  %v0_174e2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_174ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_174fa = icmp eq i32 %arg2, 0
  %v1_174fc = icmp eq i1 %v1_174fa, false
  br i1 %v1_174fc, label %dec_label_pc_17502, label %dec_label_pc_174fe

dec_label_pc_174fe:                               ; preds = %dec_label_pc_174e0
  %v4_174fe = call i32 @function_1752f(i32 %v0_174ea, i32 %v0_174e2, i32 %v0_174e1, i32 %v0_174e0)
  ret i32 %v4_174fe

dec_label_pc_17502:                               ; preds = %dec_label_pc_174e0
  %v1_17502 = add i32 %arg2, 12
  %v2_17502 = inttoptr i32 %v1_17502 to i32*
  %v3_17502 = load i32, i32* %v2_17502, align 4
  store i32 %v3_17502, i32* @eax, align 4
  %v2_1750c = call i32 @function_2e9c0(i32 %arg1, i32 %v3_17502)
  %v1_17511 = add i32 %arg2, ptrtoint (i32* @global_var_68.3484 to i32)
  %v2_17511 = inttoptr i32 %v1_17511 to i32*
  %v3_17511 = load i32, i32* %v2_17511, align 4
  store i32 %v3_17511, i32* @eax, align 4
  %v1_17514 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_17514 = inttoptr i32 %v1_17514 to i32*
  %v3_17514 = load i32, i32* %v2_17514, align 4
  store i32 %v3_17514, i32* %esi.global-to-local, align 4
  %v1_17517 = icmp eq i32 %v3_17511, 0
  br i1 %v1_17517, label %bb, label %dec_label_pc_1751b

bb:                                               ; preds = %dec_label_pc_17502
  %v1_17519 = call i32 @function_17523()
  br label %dec_label_pc_1751b

dec_label_pc_1751b:                               ; preds = %bb, %dec_label_pc_17502
  %v0_1751b = phi i32 [ %v1_17519, %bb ], [ %v3_17511, %dec_label_pc_17502 ]
  ret i32 %v0_1751b

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_17523() local_unnamed_addr {
dec_label_pc_17523:
  %v3_17523 = load i32, i32* @eax, align 4
  ret i32 %v3_17523
}

define i32 @function_1752f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1752f:
  %v1_17533 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17533 = xor i32 %v1_17533, %arg1
  %v3_17533 = icmp eq i32 %v2_17533, 0
  %v1_1753a = icmp eq i1 %v3_17533, false
  br i1 %v1_1753a, label %dec_label_pc_17543, label %dec_label_pc_1753c

dec_label_pc_1753c:                               ; preds = %dec_label_pc_1752f
  ret i32 %v2_17533

dec_label_pc_17543:                               ; preds = %dec_label_pc_1752f
  ret i32 %v2_17533

; uselistorder directives
  uselistorder i32 %v2_17533, { 1, 0, 2 }
}

define i32 @_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17550:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17553 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v0_1755b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v0_1756b = load i32, i32* %esi.global-to-local, align 4
  %v4_1756f = ptrtoint i8* %arg2 to i32
  store i32 %v4_1756f, i32* @esi, align 4
  %v0_17573 = load i32, i32* %edi.global-to-local, align 4
  %v1_17577 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_17577 = inttoptr i32 %v1_17577 to i32*
  %v3_17577 = load i32, i32* %v2_17577, align 4
  store i32 %v3_17577, i32* @eax, align 4
  %v2_1757a = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1757a = inttoptr i32 %v2_1757a to i32*
  %v4_1757a = load i32, i32* %v3_1757a, align 4
  %v15_1757a = icmp eq i32 %v3_17577, %v4_1757a
  %v0_1757d = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v15_1757a, label %bb, label %dec_label_pc_17583

bb:                                               ; preds = %dec_label_pc_17550
  %v2_17581 = call i32 @function_175e8(i32 %v0_1755b)
  br label %dec_label_pc_17583

dec_label_pc_17583:                               ; preds = %bb, %dec_label_pc_17550
  %v0_17589 = phi i32 [ %v2_17581, %bb ], [ %v3_17577, %dec_label_pc_17550 ]
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_17585 = icmp eq i32 %v0_17589, 0
  br i1 %v1_17585, label %dec_label_pc_17583.dec_label_pc_17592_crit_edge, label %dec_label_pc_17589

dec_label_pc_17583.dec_label_pc_17592_crit_edge:  ; preds = %dec_label_pc_17583
  %v1_17595.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_17592

dec_label_pc_17589:                               ; preds = %dec_label_pc_17583
  %v1_17589 = add i32 %v0_17589, -1
  %v2_17589 = inttoptr i32 %v1_17589 to i8*
  %v3_17589 = load i8, i8* %v2_17589, align 1
  %v4_17589 = zext i8 %v3_17589 to i32
  store i32 %v4_17589, i32* %ecx.global-to-local, align 4
  %v3_1758d = inttoptr i32 %v0_17589 to i8*
  store i8 %v3_17589, i8* %v3_1758d, align 1
  %v0_1758f = load i32, i32* @ebx, align 4
  %v1_1758f = add i32 %v0_1758f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1758f = inttoptr i32 %v1_1758f to i32*
  %v3_1758f = load i32, i32* %v2_1758f, align 4
  store i32 %v3_1758f, i32* %ecx.global-to-local, align 4
  %phitmp = add i32 %v3_1758f, ptrtoint (i8** @global_var_1.3274 to i32)
  br label %dec_label_pc_17592

dec_label_pc_17592:                               ; preds = %dec_label_pc_17583.dec_label_pc_17592_crit_edge, %dec_label_pc_17589
  %v1_17595 = phi i32 [ %v0_1758f, %dec_label_pc_17589 ], [ %v1_17595.pre, %dec_label_pc_17583.dec_label_pc_17592_crit_edge ]
  %v0_17592 = phi i32 [ %phitmp, %dec_label_pc_17589 ], [ ptrtoint (i8** @global_var_1.3274 to i32), %dec_label_pc_17583.dec_label_pc_17592_crit_edge ]
  %v2_17595 = add i32 %v1_17595, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_17595 = inttoptr i32 %v2_17595 to i32*
  store i32 %v0_17592, i32* %v3_17595, align 4
  %v0_17598 = load i32, i32* %ecx.global-to-local, align 4
  %v1_17598 = add i32 %v0_17598, -1
  %v0_1759b = load i32, i32* %edx.global-to-local, align 4
  %v1_1759b = inttoptr i32 %v0_1759b to i8*
  %v2_1759b = load i8, i8* %v1_1759b, align 1
  %v3_1759b = zext i8 %v2_1759b to i32
  store i32 %v3_1759b, i32* %ebx.global-to-local, align 4
  %v1_1759e = load i32, i32* @esi, align 4
  %v2_1759e = sub i32 %v1_17598, %v1_1759e
  %v12_1759e = icmp eq i32 %v2_1759e, 0
  %v1_175a0 = icmp eq i1 %v12_1759e, false
  br i1 %v1_175a0, label %dec_label_pc_175d0, label %dec_label_pc_175a2

dec_label_pc_175a2:                               ; preds = %dec_label_pc_17592
  %v3_175a2 = inttoptr i32 %v1_1759e to i8*
  store i8 %v2_1759b, i8* %v3_175a2, align 1
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb120, label %dec_label_pc_175b5

bb120:                                            ; preds = %dec_label_pc_175a2
  br label %dec_label_pc_175b5

dec_label_pc_175b5:                               ; preds = %bb120, %dec_label_pc_175a2
  store i32 %v0_17553, i32* %ebx.global-to-local, align 4
  store i32 %v0_1756b, i32* %esi.global-to-local, align 4
  store i32 %v0_17573, i32* %edi.global-to-local, align 4
  store i32 %v0_1757d, i32* %ebp.global-to-local, align 4
  ret i32 0

dec_label_pc_175d0:                               ; preds = %dec_label_pc_17592
  %v2_175d0 = sub i32 %v0_17598, %v2_1759e
  store i32 %v2_175d0, i32* %ecx.global-to-local, align 4
  ret i32 %v2_1759e

; uselistorder directives
  uselistorder i32 %v0_17589, { 1, 0, 2 }
  uselistorder i32 %v3_17577, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17592, { 1, 0 }
}

define i32 @function_175e2() local_unnamed_addr {
dec_label_pc_175e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_175e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_175e2
}

define i32 @function_175e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_175e8:
  %ecx.global-to-local = alloca i32, align 4
  %v2_175e8 = load i32, i32* @ebx, align 4
  store i32 %v2_175e8, i32* %ecx.global-to-local, align 4
  %v0_175ea = load i32, i32* @eax, align 4
  %v2_175ea = sub i32 %v0_175ea, %v2_175e8
  store i32 %v2_175ea, i32* @eax, align 4
  %v10_175ec = icmp eq i32 %v2_175ea, -1
  br i1 %v10_175ec, label %bb, label %dec_label_pc_175f5

bb:                                               ; preds = %dec_label_pc_175e8
  %v1_175ef = call i32 @function_176a8()
  %v1_175fc.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_175f5

dec_label_pc_175f5:                               ; preds = %bb, %dec_label_pc_175e8
  %v4_17619 = phi i32 [ %v1_175ef, %bb ], [ %v2_175ea, %dec_label_pc_175e8 ]
  %v1_175fc = phi i32 [ %v1_175fc.pre, %bb ], [ %v2_175e8, %dec_label_pc_175e8 ]
  %v0_175f5 = load i32, i32* @esi, align 4
  %v2_175fc = sub i32 %v0_175f5, %v1_175fc
  %v1_175fe = icmp eq i32 %v4_17619, 0
  store i32 %v2_175fc, i32* %ecx.global-to-local, align 4
  br i1 %v1_175fe, label %dec_label_pc_17611, label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175f5
  br label %dec_label_pc_17611

dec_label_pc_17611:                               ; preds = %dec_label_pc_17604, %dec_label_pc_175f5
  ret i32 %v4_17619

; uselistorder directives
  uselistorder i32 %v2_175ea, { 1, 0, 2 }
}

define i32 @function_1767a() local_unnamed_addr {
dec_label_pc_1767a:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1767a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1767a = add i32 %v0_1767a, -1961089972
  %v2_1767a = inttoptr i32 %v1_1767a to i32*
  %v3_1767a = load i32, i32* %v2_1767a, align 4
  %v4_1767a = sub i32 %v3_1767a, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1767a, i32* %v2_1767a, align 4
  %v2_17683 = load i32, i32* %ebx.global-to-local, align 4
  %v0_17685 = load i32, i32* %ecx.global-to-local, align 4
  %v1_17685 = load i32, i32* %edx.global-to-local, align 4
  %v2_17685 = mul i32 %v1_17685, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_17685 = add i32 %v2_17685, %v0_17685
  store i32 %v3_17685, i32* %esi.global-to-local, align 4
  %v1_17688 = icmp eq i32 %v2_17683, 0
  br i1 %v1_17688, label %dec_label_pc_17694, label %dec_label_pc_1768c

dec_label_pc_1768c:                               ; preds = %dec_label_pc_1767a
  br label %dec_label_pc_17694

dec_label_pc_17694:                               ; preds = %dec_label_pc_1768c, %dec_label_pc_1767a
  %v0_17694 = load i32, i32* %edi.global-to-local, align 4
  %v2_17694 = inttoptr i32 %v2_17683 to i32*
  store i32 %v0_17694, i32* %v2_17694, align 4
  %v0_17696 = load i32, i32* %edi.global-to-local, align 4
  %v1_17696 = load i32, i32* %ebp.global-to-local, align 4
  %v2_17696 = add i32 %v1_17696, %v0_17696
  store i32 %v2_17696, i32* %edi.global-to-local, align 4
  %v0_17698 = load i32, i32* %esi.global-to-local, align 4
  %v1_17698 = load i32, i32* %ebx.global-to-local, align 4
  %v2_17698 = add i32 %v1_17698, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_17698 = inttoptr i32 %v2_17698 to i32*
  store i32 %v0_17698, i32* %v3_17698, align 4
  %v0_1769b = load i32, i32* %edi.global-to-local, align 4
  %v1_1769b = load i32, i32* %ebx.global-to-local, align 4
  %v2_1769b = add i32 %v1_1769b, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1769b = inttoptr i32 %v2_1769b to i32*
  store i32 %v0_1769b, i32* %v3_1769b, align 4
  ret i32 %v2_17683

; uselistorder directives
  uselistorder i32 %v2_17683, { 1, 0, 2 }
}

define i32 @function_176a3() local_unnamed_addr {
dec_label_pc_176a3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_176a8() local_unnamed_addr {
dec_label_pc_176a8:
  %v0_176af = load i32, i32* @eax, align 4
  ret i32 %v0_176af
}

define i32 @_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_176c0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v0_176c3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* @eax, align 4
  %v0_176e0 = load i32, i32* %esi.global-to-local, align 4
  %v1_176e4 = inttoptr i32 %arg2 to i32*
  %v2_176e4 = load i32, i32* %v1_176e4, align 4
  store i32 %v2_176e4, i32* %edx.global-to-local, align 4
  %v0_176e6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_176ea = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_176ea = inttoptr i32 %v1_176ea to i32*
  %v3_176ea = load i32, i32* %v2_176ea, align 4
  %v4_176ea = inttoptr i32 %v3_176ea to i8*
  store i32 %v3_176ea, i32* %esi.global-to-local, align 4
  %v0_176ef = load i32, i32* %edi.global-to-local, align 4
  store i32 %tmp108, i32* %edi.global-to-local, align 4
  %v2_176f7 = sub i32 %arg3, %v2_176e4
  store i32 %v2_176f7, i32* %ebp.global-to-local, align 4
  %v3_176f9 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v4_176f9 = inttoptr i32 %v3_176f9 to i32*
  %v5_176f9 = load i32, i32* %v4_176f9, align 4
  %v16_176f9 = icmp eq i32 %v3_176ea, %v5_176f9
  br i1 %v16_176f9, label %dec_label_pc_17702, label %dec_label_pc_176fe

dec_label_pc_176fe:                               ; preds = %dec_label_pc_176c0
  %v13_176fe = icmp eq i32 %v3_176ea, %arg3
  br i1 %v13_176fe, label %dec_label_pc_17740, label %dec_label_pc_17702

dec_label_pc_17702:                               ; preds = %dec_label_pc_176fe, %dec_label_pc_176c0
  %v1_1770d = call i32 @function_2ec10(i32 %arg2)
  store i32 %v1_1770d, i32* %eax.global-to-local, align 4
  %v0_17712 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17712 = inttoptr i32 %v0_17712 to i32*
  %v2_17712 = load i32, i32* %v1_17712, align 4
  store i32 %v2_17712, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_17714

dec_label_pc_17714:                               ; preds = %dec_label_pc_17750, %dec_label_pc_17702
  %v0_17714 = phi i32 [ %v0_17714.pre, %dec_label_pc_17750 ], [ %v2_17712, %dec_label_pc_17702 ]
  %v1_17714 = load i32, i32* %ebp.global-to-local, align 4
  %v2_17714 = add i32 %v1_17714, %v0_17714
  %v0_17716 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_17716, i32* %eax.global-to-local, align 4
  %v2_17718 = inttoptr i32 %v0_17716 to i32*
  store i32 %v2_17714, i32* %v2_17718, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 false, label %dec_label_pc_17758, label %dec_label_pc_17727

dec_label_pc_17727:                               ; preds = %dec_label_pc_17714
  store i32 %v0_176c3, i32* %ebx.global-to-local, align 4
  store i32 %v0_176e0, i32* %esi.global-to-local, align 4
  store i32 %v0_176ef, i32* %edi.global-to-local, align 4
  store i32 %v0_176e6, i32* %ebp.global-to-local, align 4
  %v0_1773a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1773a

dec_label_pc_17740:                               ; preds = %dec_label_pc_176fe
  %v2_17742 = icmp eq i32 %v3_176ea, 0
  br i1 %v2_17742, label %dec_label_pc_17750, label %dec_label_pc_17746

dec_label_pc_17746:                               ; preds = %dec_label_pc_17740
  %v1_17746 = inttoptr i32 %arg4 to i8*
  %v2_17746 = load i8, i8* %v1_17746, align 1
  %v3_17746 = zext i8 %v2_17746 to i32
  store i32 %v3_17746, i32* %eax.global-to-local, align 4
  store i8 %v2_17746, i8* %v4_176ea, align 1
  %v0_1774b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1774b = add i32 %v0_1774b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1774b = inttoptr i32 %v1_1774b to i32*
  %v3_1774b = load i32, i32* %v2_1774b, align 4
  %v1_1774e = inttoptr i32 %v0_1774b to i32*
  %v2_1774e = load i32, i32* %v1_1774e, align 4
  store i32 %v2_1774e, i32* %edx.global-to-local, align 4
  %phitmp = add i32 %v3_1774b, ptrtoint (i8** @global_var_1.3274 to i32)
  br label %dec_label_pc_17750

dec_label_pc_17750:                               ; preds = %dec_label_pc_17746, %dec_label_pc_17740
  %v1_17753 = phi i32 [ %v0_1774b, %dec_label_pc_17746 ], [ %arg2, %dec_label_pc_17740 ]
  %v0_17750 = phi i32 [ %phitmp, %dec_label_pc_17746 ], [ ptrtoint (i8** @global_var_1.3274 to i32), %dec_label_pc_17740 ]
  %v2_17753 = add i32 %v1_17753, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_17753 = inttoptr i32 %v2_17753 to i32*
  store i32 %v0_17750, i32* %v3_17753, align 4
  %v0_17714.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_17714

dec_label_pc_17758:                               ; preds = %dec_label_pc_17714
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_176ea, { 2, 0, 1, 4, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 4, 3, 5 }
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheISsNS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17760:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17763 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_1776b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_17777 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1777b = load i32, i32* %edi.global-to-local, align 4
  %v1_1777f = add i32 %arg1, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1777f = inttoptr i32 %v1_1777f to i32*
  %v3_1777f = load i32, i32* %v2_1777f, align 4
  store i32 %v3_1777f, i32* @eax, align 4
  %v1_17785 = icmp eq i32 %v3_1777f, 0
  br i1 %v1_17785, label %bb, label %dec_label_pc_17789

bb:                                               ; preds = %dec_label_pc_17760
  %v5_17787 = call i32 @function_177c2(i32 %v0_1776b, i32 %v0_17777, i32 %v0_17763, i32 %v0_1777b)
  store i32 %v5_17787, i32* @eax, align 4
  %v0_17789.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_17789

dec_label_pc_17789:                               ; preds = %bb, %dec_label_pc_17760
  %v0_1779b4 = phi i32 [ %v5_17787, %bb ], [ %v3_1777f, %dec_label_pc_17760 ]
  %v0_17789 = phi i32 [ %v0_17789.pre, %bb ], [ %arg1, %dec_label_pc_17760 ]
  %v1_17789 = add i32 %v0_17789, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_17789 = inttoptr i32 %v1_17789 to i32*
  %v3_17789 = load i32, i32* %v2_17789, align 4
  store i32 %v3_17789, i32* @edx, align 4
  %tmp119 = icmp ult i32 %v3_17789, 10
  br i1 %tmp119, label %bb113, label %dec_label_pc_17798

bb113:                                            ; preds = %dec_label_pc_17789
  %v3_17792 = call i32 @function_17839()
  store i32 %v3_17792, i32* @eax, align 4
  %v0_17798.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_17798

dec_label_pc_17798:                               ; preds = %bb113, %dec_label_pc_17789
  %v0_1779b = phi i32 [ %v3_17792, %bb113 ], [ %v0_1779b4, %dec_label_pc_17789 ]
  %v0_17798 = phi i32 [ %v0_17798.pre, %bb113 ], [ %v0_17789, %dec_label_pc_17789 ]
  %v1_17798 = add i32 %v0_17798, ptrtoint (i8** @global_var_8.3277 to i32)
  %v12_1779b = icmp eq i32 %v0_1779b, %v1_17798
  br i1 %v12_1779b, label %bb114, label %dec_label_pc_177a3

bb114:                                            ; preds = %dec_label_pc_17798
  %v1_1779d = call i32 @function_17830()
  store i32 %v1_1779d, i32* @eax, align 4
  %v0_177a3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_177a3

dec_label_pc_177a3:                               ; preds = %bb114, %dec_label_pc_17798
  %v0_177ba9 = phi i32 [ %v1_1779d, %bb114 ], [ %v0_1779b, %dec_label_pc_17798 ]
  %v0_177a3 = phi i32 [ %v0_177a3.pre, %bb114 ], [ %v0_17798, %dec_label_pc_17798 ]
  %v1_177a3 = add i32 %v0_177a3, ptrtoint (i32* @global_var_88.3507 to i32)
  %v2_177a3 = inttoptr i32 %v1_177a3 to i32*
  %v3_177a3 = load i32, i32* %v2_177a3, align 4
  store i32 %v3_177a3, i32* @ecx, align 4
  %v0_177a9 = load i32, i32* @edx, align 4
  %v7_177a9 = icmp ult i32 %v0_177a9, %v3_177a3
  br i1 %v7_177a9, label %bb115, label %dec_label_pc_177b1

bb115:                                            ; preds = %dec_label_pc_177a3
  %v1_177ab = call i32 @function_17839()
  store i32 %v1_177ab, i32* @eax, align 4
  br label %dec_label_pc_177b1

dec_label_pc_177b1:                               ; preds = %bb115, %dec_label_pc_177a3
  %v0_177ba8 = phi i32 [ %v1_177ab, %bb115 ], [ %v0_177ba9, %dec_label_pc_177a3 ]
  %v1_177b1 = icmp eq i32 %v3_177a3, 0
  %v1_177b3 = icmp eq i1 %v1_177b1, false
  br i1 %v1_177b3, label %bb116, label %dec_label_pc_177b5

bb116:                                            ; preds = %dec_label_pc_177b1
  %v2_177b3 = call i32 @function_177f8()
  br label %dec_label_pc_177b5

dec_label_pc_177b5:                               ; preds = %bb116, %dec_label_pc_177b1
  %v0_177ba7 = phi i32 [ %v2_177b3, %bb116 ], [ %v0_177ba8, %dec_label_pc_177b1 ]
  %v0_177b5 = load i32, i32* @edx, align 4
  %tmp120 = icmp ult i32 %v0_177b5, 11
  br i1 %tmp120, label %bb118, label %dec_label_pc_177ba

bb118:                                            ; preds = %dec_label_pc_177b5
  %v7_177b8 = call i32 @function_177c2(i32 %v0_1777b, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_177ba

dec_label_pc_177ba:                               ; preds = %bb118, %dec_label_pc_177b5
  %v0_177ba = phi i32 [ %v7_177b8, %bb118 ], [ %v0_177ba7, %dec_label_pc_177b5 ]
  ret i32 %v0_177ba

; uselistorder directives
  uselistorder i32 %v0_1779b, { 1, 0 }
  uselistorder i32 ()* @function_17839, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_177c2, { 1, 0 }
}

define i32 @function_177c2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_177c2:
  %v2_177c2 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_177c2 = icmp eq i8 %v2_177c2, 0
  br i1 %v9_177c2, label %bb, label %dec_label_pc_177c7

bb:                                               ; preds = %dec_label_pc_177c2
  %v1_177c5 = call i32 @function_177d5()
  br label %dec_label_pc_177c7

dec_label_pc_177c7:                               ; preds = %bb, %dec_label_pc_177c2
  %v0_177c7 = load i32, i32* @esi, align 4
  %v1_177c7 = add i32 %v0_177c7, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_177c7
}

define i32 @function_177d5() local_unnamed_addr {
dec_label_pc_177d5:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_177d9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_177d9 = xor i32 %v1_177d9, %tmp5
  %v3_177d9 = icmp eq i32 %v2_177d9, 0
  store i32 %v2_177d9, i32* @eax, align 4
  %v1_177e0 = icmp eq i1 %v3_177d9, false
  br i1 %v1_177e0, label %bb, label %dec_label_pc_177e2

bb:                                               ; preds = %dec_label_pc_177d5
  %v2_177e0 = call i32 @function_1783e()
  br label %dec_label_pc_177e2

dec_label_pc_177e2:                               ; preds = %bb, %dec_label_pc_177d5
  %v0_177f1 = phi i32 [ %v2_177e0, %bb ], [ %v2_177d9, %dec_label_pc_177d5 ]
  ret i32 %v0_177f1
}

define i32 @function_177f8() local_unnamed_addr {
dec_label_pc_177f8:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_177f8 = load i32, i32* @ecx, align 4
  %v2_177f8 = mul i32 %v0_177f8, 2
  %v3_177f8 = add i32 %v0_177f8, -3
  %v4_177f8 = add i32 %v3_177f8, %v2_177f8
  %v0_177fc = load i32, i32* @eax, align 4
  %v2_177fc = mul i32 %v4_177f8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_177fc = add i32 %v2_177fc, %v0_177fc
  store i32 %v3_177fc, i32* %ebx.global-to-local, align 4
  %tmp2 = mul i32 %v0_177f8, -12
  %v2_17807 = add i32 %v3_177fc, %tmp2
  store i32 %v2_17807, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_17810

dec_label_pc_17810:                               ; preds = %dec_label_pc_17810, %dec_label_pc_177f8
  %v0_17810 = phi i32 [ %v1_17818, %dec_label_pc_17810 ], [ %v3_177fc, %dec_label_pc_177f8 ]
  %v1_17813 = call i32 @function_2de50(i32 %v0_17810)
  store i32 %v1_17813, i32* @eax, align 4
  %v0_17818 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17818 = add i32 %v0_17818, -12
  store i32 %v1_17818, i32* %ebx.global-to-local, align 4
  %v0_1781b = load i32, i32* %edi.global-to-local, align 4
  %v7_1781b = icmp ult i32 %v0_1781b, %v1_17818
  br i1 %v7_1781b, label %dec_label_pc_17810, label %dec_label_pc_1781f

dec_label_pc_1781f:                               ; preds = %dec_label_pc_17810
  %v0_1781f = load i32, i32* @esi, align 4
  %v1_1781f = add i32 %v0_1781f, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1781f = inttoptr i32 %v1_1781f to i32*
  %v3_1781f = load i32, i32* %v2_1781f, align 4
  store i32 %v3_1781f, i32* @edx, align 4
  %v1_17825 = add i32 %v0_1781f, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_17825 = inttoptr i32 %v1_17825 to i32*
  %v3_17825 = load i32, i32* %v2_17825, align 4
  ret i32 %v3_17825

; uselistorder directives
  uselistorder i32 %v1_17818, { 1, 2, 0 }
  uselistorder i32 %v3_177fc, { 1, 0, 2 }
  uselistorder i32 %v0_177f8, { 0, 2, 1 }
}

define i32 @function_17830() local_unnamed_addr {
dec_label_pc_17830:
  %v0_17833 = load i32, i32* @eax, align 4
  ret i32 %v0_17833
}

define i32 @function_17839() local_unnamed_addr {
dec_label_pc_17839:
  %v0_17839 = call i32 @function_28fde()
  ret i32 %v0_17839
}

define i32 @function_1783e() local_unnamed_addr {
dec_label_pc_1783e:
  %v0_1783e = load i32, i32* @eax, align 4
  ret i32 %v0_1783e
}

define i32 @function_17846() local_unnamed_addr {
dec_label_pc_17846:
  %eax.global-to-local = alloca i32, align 4
  %v0_17846 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17846
}

define i32 @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17860:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17860 = load i32, i32* %edi.global-to-local, align 4
  %v0_17861 = load i32, i32* %esi.global-to-local, align 4
  %v0_17862 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1787a = icmp eq i32 %arg2, 0
  %v1_1787c = icmp eq i1 %v1_1787a, false
  br i1 %v1_1787c, label %dec_label_pc_17882, label %dec_label_pc_178a0

dec_label_pc_17880:                               ; preds = %dec_label_pc_17882
  store i32 %v3_17891, i32* %ebx.global-to-local, align 4
  %v0_17885.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_17882

dec_label_pc_17882:                               ; preds = %dec_label_pc_17860, %dec_label_pc_17880
  %v0_17885 = phi i32 [ %v0_17885.pre, %dec_label_pc_17880 ], [ %arg1, %dec_label_pc_17860 ]
  %v0_17882 = phi i32 [ %v3_17891, %dec_label_pc_17880 ], [ %arg2, %dec_label_pc_17860 ]
  %v1_17882 = add i32 %v0_17882, 12
  %v2_17882 = inttoptr i32 %v1_17882 to i32*
  %v3_17882 = load i32, i32* %v2_17882, align 4
  store i32 %v3_17882, i32* @eax, align 4
  %v2_1788c = call i32 @function_2f0c0(i32 %v0_17885, i32 %v3_17882)
  %v0_17891 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17891 = add i32 %v0_17891, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_17891 = inttoptr i32 %v1_17891 to i32*
  %v3_17891 = load i32, i32* %v2_17891, align 4
  store i32 %v3_17891, i32* %esi.global-to-local, align 4
  %v1_1789c = icmp eq i32 %v3_17891, 0
  %v1_1789e = icmp eq i1 %v1_1789c, false
  br i1 %v1_1789e, label %dec_label_pc_17880, label %dec_label_pc_178a0

dec_label_pc_178a0:                               ; preds = %dec_label_pc_17882, %dec_label_pc_17860
  br i1 false, label %dec_label_pc_178b4, label %dec_label_pc_178ad

dec_label_pc_178ad:                               ; preds = %dec_label_pc_178a0
  store i32 %v0_17862, i32* %ebx.global-to-local, align 4
  store i32 %v0_17861, i32* %esi.global-to-local, align 4
  store i32 %v0_17860, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_178b4:                               ; preds = %dec_label_pc_178a0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_17891, { 2, 3, 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_17882, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI6CKeyIDSt4pairIKS0_12CKeyMetadataESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_178c0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_178c0 = load i32, i32* %edi.global-to-local, align 4
  %v0_178c1 = load i32, i32* %esi.global-to-local, align 4
  %v0_178c2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_178da = icmp eq i32 %arg2, 0
  %v1_178dc = icmp eq i1 %v1_178da, false
  br i1 %v1_178dc, label %dec_label_pc_178e2, label %dec_label_pc_17900

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178e2
  store i32 %v3_178f1, i32* %ebx.global-to-local, align 4
  %v0_178e5.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_178e2

dec_label_pc_178e2:                               ; preds = %dec_label_pc_178c0, %dec_label_pc_178e0
  %v0_178e5 = phi i32 [ %v0_178e5.pre, %dec_label_pc_178e0 ], [ %arg1, %dec_label_pc_178c0 ]
  %v0_178e2 = phi i32 [ %v3_178f1, %dec_label_pc_178e0 ], [ %arg2, %dec_label_pc_178c0 ]
  %v1_178e2 = add i32 %v0_178e2, 12
  %v2_178e2 = inttoptr i32 %v1_178e2 to i32*
  %v3_178e2 = load i32, i32* %v2_178e2, align 4
  store i32 %v3_178e2, i32* @eax, align 4
  %v2_178ec = call i32 @function_2f180(i32 %v0_178e5, i32 %v3_178e2)
  %v0_178f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_178f1 = add i32 %v0_178f1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_178f1 = inttoptr i32 %v1_178f1 to i32*
  %v3_178f1 = load i32, i32* %v2_178f1, align 4
  store i32 %v3_178f1, i32* %esi.global-to-local, align 4
  %v1_178fc = icmp eq i32 %v3_178f1, 0
  %v1_178fe = icmp eq i1 %v1_178fc, false
  br i1 %v1_178fe, label %dec_label_pc_178e0, label %dec_label_pc_17900

dec_label_pc_17900:                               ; preds = %dec_label_pc_178e2, %dec_label_pc_178c0
  br i1 false, label %dec_label_pc_17914, label %dec_label_pc_1790d

dec_label_pc_1790d:                               ; preds = %dec_label_pc_17900
  store i32 %v0_178c2, i32* %ebx.global-to-local, align 4
  store i32 %v0_178c1, i32* %esi.global-to-local, align 4
  store i32 %v0_178c0, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_17914:                               ; preds = %dec_label_pc_17900
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_178f1, { 2, 3, 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_178e2, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKj10CMasterKeyESt10_Select1stIS3_ESt4lessIjESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17920:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17920 = load i32, i32* %edi.global-to-local, align 4
  %v0_17921 = load i32, i32* %esi.global-to-local, align 4
  %v0_17922 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v0_1792a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1793a = icmp eq i32 %arg2, 0
  %v1_1793c = icmp eq i1 %v1_1793a, false
  br i1 %v1_1793c, label %dec_label_pc_17942, label %dec_label_pc_1793e

dec_label_pc_1793e:                               ; preds = %dec_label_pc_17920
  %v4_1793e = call i32 @function_1798d(i32 %v0_1792a, i32 %v0_17922, i32 %v0_17921, i32 %v0_17920)
  ret i32 %v4_1793e

dec_label_pc_17942:                               ; preds = %dec_label_pc_17920
  %v1_17942 = add i32 %arg2, 12
  %v2_17942 = inttoptr i32 %v1_17942 to i32*
  %v3_17942 = load i32, i32* %v2_17942, align 4
  store i32 %v3_17942, i32* @eax, align 4
  %v2_1794c = call i32 @function_2f240(i32 %arg1, i32 %v3_17942)
  %v1_17951 = add i32 %arg2, ptrtoint (i32* @global_var_34.3466 to i32)
  %v2_17951 = inttoptr i32 %v1_17951 to i32*
  %v3_17951 = load i32, i32* %v2_17951, align 4
  %v1_17954 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_17954 = inttoptr i32 %v1_17954 to i32*
  %v3_17954 = load i32, i32* %v2_17954, align 4
  store i32 %v3_17954, i32* %esi.global-to-local, align 4
  %v1_17957 = icmp eq i32 %v3_17951, 0
  br i1 %v1_17957, label %bb, label %dec_label_pc_1795b

bb:                                               ; preds = %dec_label_pc_17942
  %v1_17959 = call i32 @function_17963()
  br label %dec_label_pc_1795b

dec_label_pc_1795b:                               ; preds = %bb, %dec_label_pc_17942
  %v0_1795b = phi i32 [ %v1_17959, %bb ], [ %v3_17951, %dec_label_pc_17942 ]
  ret i32 %v0_1795b

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_17963() local_unnamed_addr {
dec_label_pc_17963:
  %v0_17963 = load i32, i32* @ebx, align 4
  %v1_17963 = add i32 %v0_17963, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_17963 = inttoptr i32 %v1_17963 to i32*
  %v3_17963 = load i32, i32* %v2_17963, align 4
  %v1_17966 = icmp eq i32 %v3_17963, 0
  br i1 %v1_17966, label %bb, label %dec_label_pc_1796a

bb:                                               ; preds = %dec_label_pc_17963
  %v1_17968 = call i32 @function_17972()
  br label %dec_label_pc_1796a

dec_label_pc_1796a:                               ; preds = %bb, %dec_label_pc_17963
  %v3_1796a = phi i32 [ %v1_17968, %bb ], [ %v3_17963, %dec_label_pc_17963 ]
  ret i32 %v3_1796a
}

define i32 @function_17972() local_unnamed_addr {
dec_label_pc_17972:
  %v0_17972 = load i32, i32* @ebx, align 4
  %v1_17972 = add i32 %v0_17972, 20
  %v2_17972 = inttoptr i32 %v1_17972 to i32*
  %v3_17972 = load i32, i32* %v2_17972, align 4
  ret i32 %v3_17972
}

define i32 @function_1798d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1798d:
  %v1_17991 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17991 = xor i32 %v1_17991, %arg1
  %v3_17991 = icmp eq i32 %v2_17991, 0
  %v1_17998 = icmp eq i1 %v3_17991, false
  br i1 %v1_17998, label %dec_label_pc_179a1, label %dec_label_pc_1799a

dec_label_pc_1799a:                               ; preds = %dec_label_pc_1798d
  ret i32 %v2_17991

dec_label_pc_179a1:                               ; preds = %dec_label_pc_1798d
  ret i32 %v2_17991

; uselistorder directives
  uselistorder i32 %v2_17991, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_179b0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_179b0 = load i32, i32* %edi.global-to-local, align 4
  %v0_179b1 = load i32, i32* %esi.global-to-local, align 4
  %v0_179b2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_179ca = icmp eq i32 %arg2, 0
  %v1_179cc = icmp eq i1 %v1_179ca, false
  br i1 %v1_179cc, label %dec_label_pc_179d2, label %dec_label_pc_179f0

dec_label_pc_179d0:                               ; preds = %dec_label_pc_179d2
  store i32 %v3_179e1, i32* %ebx.global-to-local, align 4
  %v0_179d5.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_179d2

dec_label_pc_179d2:                               ; preds = %dec_label_pc_179b0, %dec_label_pc_179d0
  %v0_179d5 = phi i32 [ %v0_179d5.pre, %dec_label_pc_179d0 ], [ %arg1, %dec_label_pc_179b0 ]
  %v0_179d2 = phi i32 [ %v3_179e1, %dec_label_pc_179d0 ], [ %arg2, %dec_label_pc_179b0 ]
  %v1_179d2 = add i32 %v0_179d2, 12
  %v2_179d2 = inttoptr i32 %v1_179d2 to i32*
  %v3_179d2 = load i32, i32* %v2_179d2, align 4
  store i32 %v3_179d2, i32* @eax, align 4
  %v2_179dc = call i32 @function_2f360(i32 %v0_179d5, i32 %v3_179d2)
  %v0_179e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_179e1 = add i32 %v0_179e1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_179e1 = inttoptr i32 %v1_179e1 to i32*
  %v3_179e1 = load i32, i32* %v2_179e1, align 4
  store i32 %v3_179e1, i32* %esi.global-to-local, align 4
  %v1_179ec = icmp eq i32 %v3_179e1, 0
  %v1_179ee = icmp eq i1 %v1_179ec, false
  br i1 %v1_179ee, label %dec_label_pc_179d0, label %dec_label_pc_179f0

dec_label_pc_179f0:                               ; preds = %dec_label_pc_179d2, %dec_label_pc_179b0
  br i1 false, label %dec_label_pc_17a04, label %dec_label_pc_179fd

dec_label_pc_179fd:                               ; preds = %dec_label_pc_179f0
  store i32 %v0_179b2, i32* %ebx.global-to-local, align 4
  store i32 %v0_179b1, i32* %esi.global-to-local, align 4
  store i32 %v0_179b0, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_17a04:                               ; preds = %dec_label_pc_179f0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_179e1, { 2, 3, 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_179d2, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESt4pairIKS8_SsESt10_Select1stISB_ESt4lessIS8_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17a10:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17a13 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_17a1b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_17a27 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_17a33 = icmp eq i32 %arg2, 0
  br i1 %v1_17a33, label %bb, label %dec_label_pc_17a37

bb:                                               ; preds = %dec_label_pc_17a10
  %v0_17a2f = load i32, i32* %edi.global-to-local, align 4
  %v5_17a35 = call i32 @function_17a98(i32 %v0_17a1b, i32 %v0_17a13, i32 %v0_17a27, i32 %v0_17a2f)
  %v0_17a3a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_17a37

dec_label_pc_17a37:                               ; preds = %bb, %dec_label_pc_17a10
  %v0_17a3a = phi i32 [ %v0_17a3a.pre, %bb ], [ %arg1, %dec_label_pc_17a10 ]
  %v1_17a37 = add i32 %arg2, 12
  %v2_17a37 = inttoptr i32 %v1_17a37 to i32*
  %v3_17a37 = load i32, i32* %v2_17a37, align 4
  store i32 %v3_17a37, i32* @eax, align 4
  %v4_17a41 = call i32 @function_2f420(i32 %v0_17a3a, i32 %v3_17a37)
  %v1_17a49 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_17a49 = inttoptr i32 %v1_17a49 to i32*
  %v3_17a49 = load i32, i32* %v2_17a49, align 4
  store i32 %v3_17a49, i32* %edi.global-to-local, align 4
  %v1_17a54 = add i32 %arg2, 16
  %v2_17a54 = inttoptr i32 %v1_17a54 to i32*
  %v3_17a54 = load i32, i32* %v2_17a54, align 4
  %v2_17a59 = ashr i32 %v3_17a54, 31
  %v2_17a5c = xor i32 %v2_17a59, %v3_17a54
  store i32 %v2_17a5c, i32* @eax, align 4
  %tmp119 = icmp ult i32 %v2_17a5c, 20
  br i1 %tmp119, label %bb118, label %dec_label_pc_17a63

bb118:                                            ; preds = %dec_label_pc_17a37
  %v1_17a46 = add i32 %arg2, 40
  %v5_17a61 = call i32 @function_17ab8(i32 %v1_17a46)
  br label %dec_label_pc_17a63

dec_label_pc_17a63:                               ; preds = %bb118, %dec_label_pc_17a37
  %v3_17a7b = phi i32 [ %v5_17a61, %bb118 ], [ %v2_17a5c, %dec_label_pc_17a37 ]
  ret i32 %v3_17a7b

; uselistorder directives
  uselistorder i32 %v2_17a5c, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
}

define i32 @function_17a98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17a98:
  %v1_17a9c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17a9c = xor i32 %v1_17a9c, %arg1
  %v3_17a9c = icmp eq i32 %v2_17a9c, 0
  store i32 %v2_17a9c, i32* @eax, align 4
  %v1_17aa3 = icmp eq i1 %v3_17a9c, false
  br i1 %v1_17aa3, label %bb, label %dec_label_pc_17aa5

bb:                                               ; preds = %dec_label_pc_17a98
  %v2_17aa3 = call i32 @function_17ad5()
  br label %dec_label_pc_17aa5

dec_label_pc_17aa5:                               ; preds = %bb, %dec_label_pc_17a98
  %v0_17ab4 = phi i32 [ %v2_17aa3, %bb ], [ %v2_17a9c, %dec_label_pc_17a98 ]
  store i32 %arg3, i32* @esi, align 4
  ret i32 %v0_17ab4
}

define i32 @function_17ab8(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ab8:
  %v0_17ab8 = load i32, i32* @eax, align 4
  ret i32 %v0_17ab8
}

define i32 @function_17ac0() local_unnamed_addr {
dec_label_pc_17ac0:
  %eax.global-to-local = alloca i32, align 4
  %v0_17ad0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17ad0
}

define i32 @function_17ad5() local_unnamed_addr {
dec_label_pc_17ad5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI9COutPointS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17b30:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17b30 = load i32, i32* %edi.global-to-local, align 4
  %v0_17b31 = load i32, i32* %esi.global-to-local, align 4
  %v0_17b32 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_17b4a = icmp eq i32 %arg2, 0
  %v1_17b4c = icmp eq i1 %v1_17b4a, false
  br i1 %v1_17b4c, label %dec_label_pc_17b52, label %dec_label_pc_17b70

dec_label_pc_17b50:                               ; preds = %dec_label_pc_17b52
  store i32 %v3_17b61, i32* %ebx.global-to-local, align 4
  %v0_17b55.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_17b52

dec_label_pc_17b52:                               ; preds = %dec_label_pc_17b30, %dec_label_pc_17b50
  %v0_17b55 = phi i32 [ %v0_17b55.pre, %dec_label_pc_17b50 ], [ %arg1, %dec_label_pc_17b30 ]
  %v0_17b52 = phi i32 [ %v3_17b61, %dec_label_pc_17b50 ], [ %arg2, %dec_label_pc_17b30 ]
  %v1_17b52 = add i32 %v0_17b52, 12
  %v2_17b52 = inttoptr i32 %v1_17b52 to i32*
  %v3_17b52 = load i32, i32* %v2_17b52, align 4
  store i32 %v3_17b52, i32* @eax, align 4
  %v2_17b5c = call i32 @function_2f660(i32 %v0_17b55, i32 %v3_17b52)
  %v0_17b61 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17b61 = add i32 %v0_17b61, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_17b61 = inttoptr i32 %v1_17b61 to i32*
  %v3_17b61 = load i32, i32* %v2_17b61, align 4
  store i32 %v3_17b61, i32* %esi.global-to-local, align 4
  %v1_17b6c = icmp eq i32 %v3_17b61, 0
  %v1_17b6e = icmp eq i1 %v1_17b6c, false
  br i1 %v1_17b6e, label %dec_label_pc_17b50, label %dec_label_pc_17b70

dec_label_pc_17b70:                               ; preds = %dec_label_pc_17b52, %dec_label_pc_17b30
  br i1 false, label %dec_label_pc_17b84, label %dec_label_pc_17b7d

dec_label_pc_17b7d:                               ; preds = %dec_label_pc_17b70
  store i32 %v0_17b32, i32* %ebx.global-to-local, align 4
  store i32 %v0_17b31, i32* %esi.global-to-local, align 4
  store i32 %v0_17b30, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_17b84:                               ; preds = %dec_label_pc_17b70
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_17b61, { 2, 3, 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_17b52, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17b90:
  %v1_17bab = icmp eq i32 %arg2, 0
  %v1_17bad = icmp eq i1 %v1_17bab, false
  br i1 %v1_17bad, label %dec_label_pc_17bba, label %dec_label_pc_17baf

dec_label_pc_17baf:                               ; preds = %dec_label_pc_17b90
  %v0_17b9b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_17baf = call i32 @function_17bee(i32 %v0_17b9b)
  ret i32 %v1_17baf

dec_label_pc_17bba:                               ; preds = %dec_label_pc_17b90
  %v1_17bba = add i32 %arg2, 12
  %v2_17bba = inttoptr i32 %v1_17bba to i32*
  %v3_17bba = load i32, i32* %v2_17bba, align 4
  store i32 %v3_17bba, i32* @eax, align 4
  %v1_17bc7 = call i32 @function_2f720(i32 %v3_17bba)
  %v1_17bcf = add i32 %arg2, 20
  ret i32 %v1_17bcf
}

define i32 @function_17bee(i32 %arg1) local_unnamed_addr {
dec_label_pc_17bee:
  %v1_17bf2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17bf2 = xor i32 %v1_17bf2, %arg1
  %v3_17bf2 = icmp eq i32 %v2_17bf2, 0
  %v1_17bf9 = icmp eq i1 %v3_17bf2, false
  br i1 %v1_17bf9, label %dec_label_pc_17c03, label %dec_label_pc_17bfb

dec_label_pc_17bfb:                               ; preds = %dec_label_pc_17bee
  ret i32 %v2_17bf2

dec_label_pc_17c03:                               ; preds = %dec_label_pc_17bee
  ret i32 %v2_17bf2

; uselistorder directives
  uselistorder i32 %v2_17bf2, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_9CWalletTxESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17c10:
  store i32 0, i32* @eax, align 4
  %v1_17c2f = icmp eq i32 %arg2, 0
  br i1 %v1_17c2f, label %bb, label %dec_label_pc_17c3b

bb:                                               ; preds = %dec_label_pc_17c10
  %v2_17c35 = call i32 @function_17e7a(i32 0)
  br label %dec_label_pc_17c3b

dec_label_pc_17c3b:                               ; preds = %bb, %dec_label_pc_17c10
  %v1_17c3f = add i32 %arg2, 12
  %v2_17c3f = inttoptr i32 %v1_17c3f to i32*
  %v3_17c3f = load i32, i32* %v2_17c3f, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_17c4d = call i32 @function_2f820(i32 %arg1, i32 %v3_17c3f)
  %v1_17c61 = add i32 %arg2, 204
  %v2_17c61 = inttoptr i32 %v1_17c61 to i32*
  %v3_17c61 = load i32, i32* %v2_17c61, align 4
  %v1_17c67 = icmp eq i32 %v3_17c61, 0
  br i1 %v1_17c67, label %bb110, label %dec_label_pc_17c6b

bb110:                                            ; preds = %dec_label_pc_17c3b
  %v1_17c56 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_17c56 = inttoptr i32 %v1_17c56 to i32*
  %v3_17c56 = load i32, i32* %v2_17c56, align 4
  %v2_17c69 = call i32 @function_17c73(i32 %v3_17c56)
  br label %dec_label_pc_17c6b

dec_label_pc_17c6b:                               ; preds = %bb110, %dec_label_pc_17c3b
  %v0_17c6b = phi i32 [ %v2_17c69, %bb110 ], [ %v3_17c61, %dec_label_pc_17c3b ]
  ret i32 %v0_17c6b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17c73(i32 %arg1) local_unnamed_addr {
dec_label_pc_17c73:
  %v1_17c77 = add i32 %arg1, 200
  ret i32 %v1_17c77
}

define i32 @function_17ca5() local_unnamed_addr {
dec_label_pc_17ca5:
  %eax.global-to-local = alloca i32, align 4
  %v0_17ca5 = load i32, i32* %eax.global-to-local, align 4
  %v11_17ca5 = and i32 %v0_17ca5, or (i32 zext (i8 ptrtoint (i8* @global_var_83.3312 to i8) to i32), i32 -256)
  store i32 %v11_17ca5, i32* %eax.global-to-local, align 4
  ret i32 %v11_17ca5

; uselistorder directives
  uselistorder i32 %v11_17ca5, { 1, 0 }
}

define i32 @function_17d0f() local_unnamed_addr {
dec_label_pc_17d0f:
  %eax.global-to-local = alloca i32, align 4
  %v0_17d0f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17d0f
}

define i32 @function_17d58() local_unnamed_addr {
dec_label_pc_17d58:
  %eax.global-to-local = alloca i32, align 4
  %v0_17d58 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17d58
}

define i32 @function_17d5d() local_unnamed_addr {
dec_label_pc_17d5d:
  %v0_17d5d = call i32 @function_85105f8b()
  ret i32 %v0_17d5d
}

define i32 @function_17d90() local_unnamed_addr {
dec_label_pc_17d90:
  %eax.global-to-local = alloca i32, align 4
  %v0_17d90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17d90
}

define i32 @function_17d95() local_unnamed_addr {
dec_label_pc_17d95:
  %v0_17d95 = call i32 @function_85045f8b()
  ret i32 %v0_17d95
}

define i32 @function_17e08() local_unnamed_addr {
dec_label_pc_17e08:
  %eax.global-to-local = alloca i32, align 4
  %v0_17e08 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17e08
}

define i32 @function_17e0d() local_unnamed_addr {
dec_label_pc_17e0d:
  %v0_17e0d = call i32 @function_1c24548b()
  ret i32 %v0_17e0d
}

define i32 @function_17e40() local_unnamed_addr {
dec_label_pc_17e40:
  %eax.global-to-local = alloca i32, align 4
  %v0_17e40 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17e40
}

define i32 @function_17e45() local_unnamed_addr {
dec_label_pc_17e45:
  %v0_17e45 = call i32 @function_1c24548b()
  ret i32 %v0_17e45

; uselistorder directives
  uselistorder i32 ()* @function_1c24548b, { 1, 0 }
}

define i32 @function_17e64() local_unnamed_addr {
dec_label_pc_17e64:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_17e64 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17e64 = add i32 %v0_17e64, -2060966788
  %v2_17e64 = inttoptr i32 %v1_17e64 to i32*
  %v3_17e64 = load i32, i32* %v2_17e64, align 4
  %v4_17e64 = sub i32 %v3_17e64, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_17e64, i32* %v2_17e64, align 4
  %v0_17e6f = load i32, i32* %eax.global-to-local, align 4
  %v11_17e6f = and i32 %v0_17e6f, -216
  store i32 %v11_17e6f, i32* %eax.global-to-local, align 4
  ret i32 %v11_17e6f

; uselistorder directives
  uselistorder i32 %v11_17e6f, { 1, 0 }
}

define i32 @function_17e7a(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e7a:
  %v1_17e7e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_17e7e = icmp eq i32 %v1_17e7e, %arg1
  %v1_17e85 = icmp eq i1 %v3_17e7e, false
  br i1 %v1_17e85, label %dec_label_pc_17e8f, label %dec_label_pc_17e87

dec_label_pc_17e87:                               ; preds = %dec_label_pc_17e7a
  %v0_17e8e = load i32, i32* @eax, align 4
  ret i32 %v0_17e8e

dec_label_pc_17e8f:                               ; preds = %dec_label_pc_17e7a
  %v1_17e8e = load i32, i32* @eax, align 4
  ret i32 %v1_17e8e
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ea0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_17ea3 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_17eab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_17eb7 = load i32, i32* %ebx.global-to-local, align 4
  %v0_17ebb = load i32, i32* %edi.global-to-local, align 4
  %v1_17ebf = add i32 %arg1, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_17ebf = inttoptr i32 %v1_17ebf to i32*
  %v3_17ebf = load i32, i32* %v2_17ebf, align 4
  store i32 %v3_17ebf, i32* @eax, align 4
  %v1_17ec5 = icmp eq i32 %v3_17ebf, 0
  br i1 %v1_17ec5, label %bb, label %dec_label_pc_17ec9

bb:                                               ; preds = %dec_label_pc_17ea0
  %v5_17ec7 = call i32 @function_17ef7(i32 %v0_17eab, i32 %v0_17eb7, i32 %v0_17ea3, i32 %v0_17ebb)
  store i32 %v5_17ec7, i32* @eax, align 4
  %v0_17ec9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_17ec9

dec_label_pc_17ec9:                               ; preds = %bb, %dec_label_pc_17ea0
  %v0_17ed84 = phi i32 [ %v5_17ec7, %bb ], [ %v3_17ebf, %dec_label_pc_17ea0 ]
  %v0_17ec9 = phi i32 [ %v0_17ec9.pre, %bb ], [ %arg1, %dec_label_pc_17ea0 ]
  %v1_17ec9 = add i32 %v0_17ec9, 124
  %v2_17ec9 = inttoptr i32 %v1_17ec9 to i32*
  %v3_17ec9 = load i32, i32* %v2_17ec9, align 4
  store i32 %v3_17ec9, i32* @edx, align 4
  %tmp119 = icmp ult i32 %v3_17ec9, 10
  br i1 %tmp119, label %bb113, label %dec_label_pc_17ed5

bb113:                                            ; preds = %dec_label_pc_17ec9
  %v3_17ecf = call i32 @function_17f61()
  store i32 %v3_17ecf, i32* @eax, align 4
  %v0_17ed5.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_17ed5

dec_label_pc_17ed5:                               ; preds = %bb113, %dec_label_pc_17ec9
  %v0_17ed8 = phi i32 [ %v3_17ecf, %bb113 ], [ %v0_17ed84, %dec_label_pc_17ec9 ]
  %v0_17ed5 = phi i32 [ %v0_17ed5.pre, %bb113 ], [ %v0_17ec9, %dec_label_pc_17ec9 ]
  %v1_17ed5 = add i32 %v0_17ed5, ptrtoint (i16** @global_var_4.3276 to i32)
  %v12_17ed8 = icmp eq i32 %v0_17ed8, %v1_17ed5
  br i1 %v12_17ed8, label %bb114, label %dec_label_pc_17edc

bb114:                                            ; preds = %dec_label_pc_17ed5
  %v1_17eda = call i32 @function_17f58()
  store i32 %v1_17eda, i32* @eax, align 4
  %v0_17edc.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %bb114, %dec_label_pc_17ed5
  %v0_17eef9 = phi i32 [ %v1_17eda, %bb114 ], [ %v0_17ed8, %dec_label_pc_17ed5 ]
  %v0_17edc = phi i32 [ %v0_17edc.pre, %bb114 ], [ %v0_17ed5, %dec_label_pc_17ed5 ]
  %v1_17edc = add i32 %v0_17edc, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_17edc = inttoptr i32 %v1_17edc to i32*
  %v3_17edc = load i32, i32* %v2_17edc, align 4
  store i32 %v3_17edc, i32* @ecx, align 4
  %v0_17ee2 = load i32, i32* @edx, align 4
  %v7_17ee2 = icmp ult i32 %v0_17ee2, %v3_17edc
  br i1 %v7_17ee2, label %bb115, label %dec_label_pc_17ee6

bb115:                                            ; preds = %dec_label_pc_17edc
  %v1_17ee4 = call i32 @function_17f61()
  store i32 %v1_17ee4, i32* @eax, align 4
  br label %dec_label_pc_17ee6

dec_label_pc_17ee6:                               ; preds = %bb115, %dec_label_pc_17edc
  %v0_17eef8 = phi i32 [ %v1_17ee4, %bb115 ], [ %v0_17eef9, %dec_label_pc_17edc ]
  %v1_17ee6 = icmp eq i32 %v3_17edc, 0
  %v1_17ee8 = icmp eq i1 %v1_17ee6, false
  br i1 %v1_17ee8, label %bb116, label %dec_label_pc_17eea

bb116:                                            ; preds = %dec_label_pc_17ee6
  %v2_17ee8 = call i32 @function_17f20()
  br label %dec_label_pc_17eea

dec_label_pc_17eea:                               ; preds = %bb116, %dec_label_pc_17ee6
  %v0_17eef7 = phi i32 [ %v2_17ee8, %bb116 ], [ %v0_17eef8, %dec_label_pc_17ee6 ]
  %v0_17eea = load i32, i32* @edx, align 4
  %tmp120 = icmp ult i32 %v0_17eea, 11
  br i1 %tmp120, label %bb118, label %dec_label_pc_17eef

bb118:                                            ; preds = %dec_label_pc_17eea
  %v7_17eed = call i32 @function_17ef7(i32 %v0_17ebb, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_17eef

dec_label_pc_17eef:                               ; preds = %bb118, %dec_label_pc_17eea
  %v0_17eef = phi i32 [ %v7_17eed, %bb118 ], [ %v0_17eef7, %dec_label_pc_17eea ]
  ret i32 %v0_17eef

; uselistorder directives
  uselistorder i32 %v0_17ed8, { 1, 0 }
  uselistorder i32 ()* @function_17f61, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_17ef7, { 1, 0 }
}

define i32 @function_17ef7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17ef7:
  %v2_17ef7 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_17ef7 = icmp eq i8 %v2_17ef7, 0
  br i1 %v9_17ef7, label %dec_label_pc_17eff, label %dec_label_pc_17efc

dec_label_pc_17efc:                               ; preds = %dec_label_pc_17ef7
  %v0_17efc = load i32, i32* @esi, align 4
  %v1_17efc = inttoptr i32 %v0_17efc to i8*
  store i8 0, i8* %v1_17efc, align 1
  br label %dec_label_pc_17eff

dec_label_pc_17eff:                               ; preds = %dec_label_pc_17efc, %dec_label_pc_17ef7
  %v1_17f03 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17f03 = xor i32 %v1_17f03, %arg1
  %v3_17f03 = icmp eq i32 %v2_17f03, 0
  store i32 %v2_17f03, i32* @eax, align 4
  %v1_17f0a = icmp eq i1 %v3_17f03, false
  br i1 %v1_17f0a, label %bb, label %dec_label_pc_17f0c

bb:                                               ; preds = %dec_label_pc_17eff
  %v2_17f0a = call i32 @function_17f66()
  br label %dec_label_pc_17f0c

dec_label_pc_17f0c:                               ; preds = %bb, %dec_label_pc_17eff
  %v0_17f1b = phi i32 [ %v2_17f0a, %bb ], [ %v2_17f03, %dec_label_pc_17eff ]
  store i32 %arg3, i32* @esi, align 4
  ret i32 %v0_17f1b
}

define i32 @function_17f20() local_unnamed_addr {
dec_label_pc_17f20:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_17f20 = load i32, i32* @ecx, align 4
  %v2_17f20 = mul i32 %v0_17f20, 2
  %v3_17f20 = add i32 %v0_17f20, -3
  %v4_17f20 = add i32 %v3_17f20, %v2_17f20
  %v0_17f24 = load i32, i32* @eax, align 4
  %v2_17f24 = mul i32 %v4_17f20, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_17f24 = add i32 %v2_17f24, %v0_17f24
  store i32 %v3_17f24, i32* %ebx.global-to-local, align 4
  %tmp2 = mul i32 %v0_17f20, -12
  %v2_17f2f = add i32 %v3_17f24, %tmp2
  store i32 %v2_17f2f, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_17f38

dec_label_pc_17f38:                               ; preds = %dec_label_pc_17f38, %dec_label_pc_17f20
  %v0_17f38 = phi i32 [ %v1_17f40, %dec_label_pc_17f38 ], [ %v3_17f24, %dec_label_pc_17f20 ]
  %v1_17f3b = call i32 @function_2e590(i32 %v0_17f38)
  store i32 %v1_17f3b, i32* @eax, align 4
  %v0_17f40 = load i32, i32* %ebx.global-to-local, align 4
  %v1_17f40 = add i32 %v0_17f40, -12
  store i32 %v1_17f40, i32* %ebx.global-to-local, align 4
  %v0_17f43 = load i32, i32* %edi.global-to-local, align 4
  %v7_17f43 = icmp ult i32 %v0_17f43, %v1_17f40
  br i1 %v7_17f43, label %dec_label_pc_17f38, label %dec_label_pc_17f47

dec_label_pc_17f47:                               ; preds = %dec_label_pc_17f38
  %v0_17f47 = load i32, i32* @esi, align 4
  %v1_17f47 = add i32 %v0_17f47, 124
  %v2_17f47 = inttoptr i32 %v1_17f47 to i32*
  %v3_17f47 = load i32, i32* %v2_17f47, align 4
  store i32 %v3_17f47, i32* @edx, align 4
  %v1_17f4a = add i32 %v0_17f47, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_17f4a = inttoptr i32 %v1_17f4a to i32*
  %v3_17f4a = load i32, i32* %v2_17f4a, align 4
  ret i32 %v3_17f4a

; uselistorder directives
  uselistorder i32 %v1_17f40, { 1, 2, 0 }
  uselistorder i32 %v3_17f24, { 1, 0, 2 }
  uselistorder i32 %v0_17f20, { 0, 2, 1 }
}

define i32 @function_17f58() local_unnamed_addr {
dec_label_pc_17f58:
  %v0_17f5b = load i32, i32* @eax, align 4
  ret i32 %v0_17f5b
}

define i32 @function_17f61() local_unnamed_addr {
dec_label_pc_17f61:
  %v0_17f61 = call i32 @function_2971e()
  ret i32 %v0_17f61
}

define i32 @function_17f66() local_unnamed_addr {
dec_label_pc_17f66:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost11filesystem311path_traits8dispatchISsEEvRKSsRT_RKSt7codecvtIwc11__mbstate_tE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f80:
  %ecx.global-to-local = alloca i32, align 4
  %v0_17f84 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  %v2_17f98 = load i32, i32* %arg1, align 4
  %v1_17f9a = add i32 %v2_17f98, -12
  %v2_17f9a = inttoptr i32 %v1_17f9a to i32*
  %v3_17f9a = load i32, i32* %v2_17f9a, align 4
  %v1_17f9d = icmp eq i32 %v3_17f9a, 0
  br i1 %v1_17f9d, label %bb, label %dec_label_pc_17fa1

bb:                                               ; preds = %dec_label_pc_17f80
  %v2_17f9f = call i32 @function_17fc2(i32 %v0_17f84)
  %v0_17fa1.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_17fa1

dec_label_pc_17fa1:                               ; preds = %bb, %dec_label_pc_17f80
  %v0_17fb6 = phi i32 [ %v0_17fa1.pre, %bb ], [ %arg2, %dec_label_pc_17f80 ]
  %v1_17fa1 = inttoptr i32 %v0_17fb6 to i32*
  %v2_17fa1 = load i32, i32* %v1_17fa1, align 4
  %v1_17fb3 = add i32 %v2_17fa1, -12
  %v2_17fb3 = inttoptr i32 %v1_17fb3 to i32*
  %v3_17fb3 = load i32, i32* %v2_17fb3, align 4
  ret i32 %v3_17fb3
}

define i32 @function_17fc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_17fc2:
  %v1_17fc6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_17fc6 = xor i32 %v1_17fc6, %arg1
  %v3_17fc6 = icmp eq i32 %v2_17fc6, 0
  %v1_17fcd = icmp eq i1 %v3_17fc6, false
  br i1 %v1_17fcd, label %dec_label_pc_17fd4, label %dec_label_pc_17fcf

dec_label_pc_17fcf:                               ; preds = %dec_label_pc_17fc2
  ret i32 %v2_17fc6

dec_label_pc_17fd4:                               ; preds = %dec_label_pc_17fc2
  ret i32 %v2_17fc6

; uselistorder directives
  uselistorder i32 %v2_17fc6, { 1, 0, 2 }
}

define i32 @_ZNSt6vectorISsSaISsEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17fe0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_17fe0 = load i32, i32* %edi.global-to-local, align 4
  %v0_17fe1 = load i32, i32* %esi.global-to-local, align 4
  %v0_17fe2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp102, i32* %edi.global-to-local, align 4
  %v1_17ff6 = add i32 %tmp102, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_17ff6 = inttoptr i32 %v1_17ff6 to i32*
  %v3_17ff6 = load i32, i32* %v2_17ff6, align 4
  store i32 %v3_17ff6, i32* %esi.global-to-local, align 4
  %v2_17ff9 = load i32, i32* %arg1, align 4
  store i32 %v2_17ff9, i32* %ebx.global-to-local, align 4
  %v12_17ffb = icmp eq i32 %v3_17ff6, %v2_17ff9
  br i1 %v12_17ffb, label %dec_label_pc_18011, label %dec_label_pc_18000

dec_label_pc_18000:                               ; preds = %dec_label_pc_17fe0, %dec_label_pc_18000
  %v1_180031 = phi i32 [ %v1_18003, %dec_label_pc_18000 ], [ %v2_17ff9, %dec_label_pc_17fe0 ]
  %v1_18003 = add i32 %v1_180031, ptrtoint (i16** @global_var_4.3276 to i32)
  %v12_1800b = icmp eq i32 %v3_17ff6, %v1_18003
  %v1_1800d = icmp eq i1 %v12_1800b, false
  br i1 %v1_1800d, label %dec_label_pc_18000, label %dec_label_pc_1800f

dec_label_pc_1800f:                               ; preds = %dec_label_pc_18000
  store i32 %v1_18003, i32* %ebx.global-to-local, align 4
  %v2_1800f = load i32, i32* %arg1, align 4
  store i32 %v2_1800f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_18011

dec_label_pc_18011:                               ; preds = %dec_label_pc_1800f, %dec_label_pc_17fe0
  %v0_18011 = phi i32 [ %v2_1800f, %dec_label_pc_1800f ], [ %v2_17ff9, %dec_label_pc_17fe0 ]
  %v1_18011 = icmp eq i32 %v0_18011, 0
  br i1 %v1_18011, label %bb, label %dec_label_pc_18015

bb:                                               ; preds = %dec_label_pc_18011
  %v1_18013 = call i32 @function_18038()
  br label %dec_label_pc_18015

dec_label_pc_18015:                               ; preds = %bb, %dec_label_pc_18011
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb108, label %dec_label_pc_18022

bb108:                                            ; preds = %dec_label_pc_18015
  br label %dec_label_pc_18022

dec_label_pc_18022:                               ; preds = %bb108, %dec_label_pc_18015
  store i32 %v0_17fe2, i32* %ebx.global-to-local, align 4
  store i32 %v0_17fe1, i32* %esi.global-to-local, align 4
  store i32 %v0_17fe0, i32* %edi.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_18003, { 1, 0, 2 }
  uselistorder i32 %v2_17ff9, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_18000, { 1, 0 }
}

define i32 @function_18038() local_unnamed_addr {
dec_label_pc_18038:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_1803c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1803c = xor i32 %v1_1803c, %tmp8
  %v3_1803c = icmp eq i32 %v2_1803c, 0
  store i32 %v2_1803c, i32* @eax, align 4
  %v1_18043 = icmp eq i1 %v3_1803c, false
  br i1 %v1_18043, label %bb, label %dec_label_pc_18045

bb:                                               ; preds = %dec_label_pc_18038
  %v2_18043 = call i32 @function_1804c()
  br label %dec_label_pc_18045

dec_label_pc_18045:                               ; preds = %bb, %dec_label_pc_18038
  %v0_1804b = phi i32 [ %v2_18043, %bb ], [ %v2_1803c, %dec_label_pc_18038 ]
  ret i32 %v0_1804b
}

define i32 @function_1804c() local_unnamed_addr {
dec_label_pc_1804c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8auto_ptrIN5boost6threadEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_18060:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v2_18074 = load i32, i32* %arg1, align 4
  %v1_18076 = icmp eq i32 %v2_18074, 0
  br i1 %v1_18076, label %bb, label %dec_label_pc_1807a

bb:                                               ; preds = %dec_label_pc_18060
  %v0_18064 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18078 = call i32 @function_180a0(i32 %v0_18064)
  br label %dec_label_pc_1807a

dec_label_pc_1807a:                               ; preds = %bb, %dec_label_pc_18060
  %v3_1807a = phi i32 [ %v2_18078, %bb ], [ %tmp99, %dec_label_pc_18060 ]
  ret i32 %v3_1807a
}

define i32 @function_180a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_180a0:
  %v1_180a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_180a4 = xor i32 %v1_180a4, %arg1
  %v3_180a4 = icmp eq i32 %v2_180a4, 0
  %v1_180ab = icmp eq i1 %v3_180a4, false
  br i1 %v1_180ab, label %dec_label_pc_180b2, label %dec_label_pc_180ad

dec_label_pc_180ad:                               ; preds = %dec_label_pc_180a0
  ret i32 %v2_180a4

dec_label_pc_180b2:                               ; preds = %dec_label_pc_180a0
  ret i32 %v2_180a4

; uselistorder directives
  uselistorder i32 %v2_180a4, { 1, 0, 2 }
}

define i32 @_ZN5boost12thread_group13create_threadIPFvvEEEPNS_6threadET_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_180c0:
  %stack_var_-40 = alloca i32, align 4
  %v2_180cb = ptrtoint i32* %stack_var_-40 to i32
  %v1_180e7 = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_180e7, i32* @eax, align 4
  %v4_180ee = call i32 @function_2e1d0(i32 %v2_180cb, i32 %v1_180e7)
  ret i32 %v4_180ee
}

define i32 @function_18140() local_unnamed_addr {
dec_label_pc_18140:
  %eax.global-to-local = alloca i32, align 4
  %v0_18140 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18140
}

define i32 @function_1816f() local_unnamed_addr {
dec_label_pc_1816f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1816f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1816f = add i32 %v0_1816f, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1816f, i32* %ebx.global-to-local, align 4
  %v0_18170 = load i32, i32* %eax.global-to-local, align 4
  %v2_18170 = add i32 %v0_18170, zext (i8 ptrtoint (i8* @global_var_39.3508 to i8) to i32)
  %v16_18170 = and i32 %v2_18170, 255
  %v18_18170 = and i32 %v0_18170, -256
  %v19_18170 = or i32 %v16_18170, %v18_18170
  store i32 %v19_18170, i32* %eax.global-to-local, align 4
  ret i32 %v19_18170

; uselistorder directives
  uselistorder i32 %v0_18170, { 1, 0 }
}

define i32 @function_18193(i32 %arg1) local_unnamed_addr {
dec_label_pc_18193:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_181d1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_181d1:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %v0_181d1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_181d1 = add i32 %v0_181d1, -1992809380
  %v2_181d1 = inttoptr i32 %v1_181d1 to i32*
  %v3_181d1 = load i32, i32* %v2_181d1, align 4
  %v4_181d1 = sub i32 %v3_181d1, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_181d1, i32* %v2_181d1, align 4
  %v0_181d7 = load i32, i32* %eax.global-to-local, align 4
  %v2_181d7 = add i32 %v0_181d7, 220
  %v16_181d7 = and i32 %v2_181d7, 255
  %v18_181d7 = and i32 %v0_181d7, -256
  %v19_181d7 = or i32 %v16_181d7, %v18_181d7
  store i32 %v19_181d7, i32* @eax, align 4
  %v1_181e1 = call i32 @function_2dd50(i32 0)
  store i32 %v1_181e1, i32* %eax.global-to-local, align 4
  %v1_181ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_181ea = icmp eq i32 %v1_181ea, %arg1
  %v0_181f1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_181f1, i32* %eax.global-to-local, align 4
  %v1_181f3 = icmp eq i1 %v3_181ea, false
  br i1 %v1_181f3, label %dec_label_pc_1820a, label %dec_label_pc_181f5

dec_label_pc_181f5:                               ; preds = %dec_label_pc_181d1
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  ret i32 %v0_181f1

dec_label_pc_1820a:                               ; preds = %dec_label_pc_181d1
  %v2_18211 = ptrtoint i32* %stack_var_48 to i32
  store i32 %v2_18211, i32* @eax, align 4
  %v2_18218 = call i32 @function_2bb20(i32 %v2_18211)
  %v0_1821d = load i32, i32* %edi.global-to-local, align 4
  %v1_1821d = add i32 %v0_1821d, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1821d, i32* @eax, align 4
  %v2_18223 = call i32 @function_2bb20(i32 %v1_1821d)
  store i32 %v2_18223, i32* @eax, align 4
  %v0_18230 = load i32, i32* %ebp.global-to-local, align 4
  %v2_18233 = call i32 @function_2dd50(i32 %v0_18230)
  %v2_18248 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_18248, i32* %eax.global-to-local, align 4
  ret i32 %v2_18248

; uselistorder directives
  uselistorder i32 %v0_181d7, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2dd50, { 1, 0 }
}

define i32 @function_18254() local_unnamed_addr {
dec_label_pc_18254:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_18254 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18254 = add i32 %v0_18254, 607422915
  %v2_18254 = inttoptr i32 %v1_18254 to i32*
  %v3_18254 = load i32, i32* %v2_18254, align 4
  %v4_18254 = add i32 %v3_18254, -1
  store i32 %v4_18254, i32* %v2_18254, align 4
  %v0_1825f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1825f
}

define i32 @function_18261() local_unnamed_addr {
dec_label_pc_18261:
  %eax.global-to-local = alloca i32, align 4
  %v0_18261 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18261
}

define i32 @function_18266() local_unnamed_addr {
dec_label_pc_18266:
  %eax.global-to-local = alloca i32, align 4
  %v0_18266 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18266
}

define i32 @function_1826b() local_unnamed_addr {
dec_label_pc_1826b:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1826b = add i32 %tmp91, -352311692
  %v2_1826b = inttoptr i32 %v1_1826b to i32*
  %v3_1826b = load i32, i32* %v2_1826b, align 4
  %v4_1826b = sub i32 %v3_1826b, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1826b, i32* %v2_1826b, align 4
  %v0_18271 = load i32, i32* %edx.global-to-local, align 4
  %v1_18271 = and i32 %v0_18271, -65281
  %v2_18271 = or i32 %v1_18271, 35072
  store i32 %v2_18271, i32* %edx.global-to-local, align 4
  %v0_18273 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18273
}

define i32 @function_18274() local_unnamed_addr {
dec_label_pc_18274:
  %eax.global-to-local = alloca i32, align 4
  %v0_18274 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18274
}

define i32 @function_18276() local_unnamed_addr {
dec_label_pc_18276:
  %stack_var_56 = alloca i32, align 4
  %v2_18278 = ptrtoint i32* %stack_var_56 to i32
  store i32 %v2_18278, i32* @eax, align 4
  %v1_1827f = call i32 @function_30120(i32 %v2_18278)
  ret i32 %v1_1827f
}

define i32 @function_18286() local_unnamed_addr {
dec_label_pc_18286:
  %tmp94 = call i32 @__decompiler_undefined_function_0()
  %v1_18288 = add i32 %tmp94, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_18288, i32* @eax, align 4
  %v2_1828e = call i32 @function_2bb20(i32 %v1_18288)
  ret i32 %v2_1828e

; uselistorder directives
  uselistorder i32 (i32)* @function_2bb20, { 2, 1, 0 }
}

define i32 @function_18295() local_unnamed_addr {
dec_label_pc_18295:
  %eax.global-to-local = alloca i32, align 4
  %v0_18295 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18295
}

define i32 @_ZN5boost12thread_group13create_threadINS_3_bi6bind_tIvPFvRKSsENS2_5list1INS_17reference_wrapperISsEEEEEEEEPNS_6threadET_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_182a0:
  %stack_var_-40 = alloca i32, align 4
  %v2_182ab = ptrtoint i32* %stack_var_-40 to i32
  %v1_182d2 = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_182d2, i32* @eax, align 4
  %v4_182d9 = call i32 @function_2e3b0(i32 %v2_182ab, i32 %v1_182d2)
  ret i32 %v4_182d9
}

define i32 @function_182f9() local_unnamed_addr {
dec_label_pc_182f9:
  %eax.global-to-local = alloca i32, align 4
  %v0_182f9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_182f9
}

define i32 @function_1832c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1832c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %v0_1832c = load i32, i32* %edi.global-to-local, align 4
  %v1_1832c = add i32 %v0_1832c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1832c, i32* %edi.global-to-local, align 4
  %v0_1832e = load i32, i32* %eax.global-to-local, align 4
  %v1_1832e = add i32 %v0_1832e, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_1832e = trunc i32 %v1_1832e to i8
  %v2_1832f = add i8 %v11_1832e, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_1832f = zext i8 %v2_1832f to i32
  %v18_1832f = and i32 %v1_1832e, -256
  %v19_1832f = or i32 %v16_1832f, %v18_1832f
  store i32 %v19_1832f, i32* %eax.global-to-local, align 4
  %v1_18331 = inttoptr i32 %v19_1832f to i8*
  %v2_18331 = load i8, i8* %v1_18331, align 1
  %v5_18331 = add i8 %v2_18331, %v2_1832f
  store i8 %v5_18331, i8* %v1_18331, align 1
  %v0_18333 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18333 = add i32 %v0_18333, 138463174
  %v2_18333 = inttoptr i32 %v1_18333 to i8*
  %v3_18333 = load i8, i8* %v2_18333, align 1
  %v5_18333 = trunc i32 %v0_18333 to i8
  %v6_18333 = add i8 %v3_18333, %v5_18333
  store i8 %v6_18333, i8* %v2_18333, align 1
  %v0_18339 = load i32, i32* %eax.global-to-local, align 4
  %v1_18339 = inttoptr i32 %v0_18339 to i32*
  %v2_18339 = load i32, i32* %v1_18339, align 4
  %v4_18339 = add i32 %v2_18339, %v0_18339
  store i32 %v4_18339, i32* %v1_18339, align 4
  %v0_1833b = load i32, i32* %eax.global-to-local, align 4
  %v1_1833b = inttoptr i32 %v0_1833b to i8*
  %v2_1833b = load i8, i8* %v1_1833b, align 1
  %v4_1833b = trunc i32 %v0_1833b to i8
  %v5_1833b = add i8 %v2_1833b, %v4_1833b
  store i8 %v5_1833b, i8* %v1_1833b, align 1
  %v0_1833d = load i32, i32* %eax.global-to-local, align 4
  %v1_1833d = inttoptr i32 %v0_1833d to i32*
  store i32 ptrtoint (%vtable_399a0_type* @global_var_399a0.3509 to i32), i32* %v1_1833d, align 4
  %v0_18343 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18343 = load i32, i32* %eax.global-to-local, align 4
  %v2_18343 = add i32 %v1_18343, 12
  %v3_18343 = inttoptr i32 %v2_18343 to i32*
  store i32 %v0_18343, i32* %v3_18343, align 4
  %v0_18346 = load i32, i32* %eax.global-to-local, align 4
  %v1_18346 = load i32, i32* %edi.global-to-local, align 4
  %v2_18346 = add i32 %v1_18346, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_18346 = inttoptr i32 %v2_18346 to i32*
  store i32 %v0_18346, i32* %v3_18346, align 4
  %v0_18349 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18349 = add i32 %v0_18349, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_18349 = inttoptr i32 %v1_18349 to i32*
  %v3_18349 = load i32, i32* %v2_18349, align 4
  store i32 %v3_18349, i32* %eax.global-to-local, align 4
  %v1_1834c = icmp eq i32 %v3_18349, 0
  br i1 %v1_1834c, label %dec_label_pc_18357, label %dec_label_pc_18350

dec_label_pc_18350:                               ; preds = %dec_label_pc_1832c
  %v1_18350 = add i32 %v3_18349, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18350 = inttoptr i32 %v1_18350 to i32*
  %v3_18350 = load i32, i32* %v2_18350, align 4
  store i32 %v3_18350, i32* @eax, align 4
  %v1_18353 = icmp eq i32 %v3_18350, 0
  %v1_18355 = icmp eq i1 %v1_18353, false
  br i1 %v1_18355, label %dec_label_pc_18397, label %dec_label_pc_18357

dec_label_pc_18357:                               ; preds = %dec_label_pc_18350, %dec_label_pc_1832c
  %v3_18357 = load i32, i32* %v2_18349, align 4
  store i32 %v3_18357, i32* %eax.global-to-local, align 4
  %v0_1835a = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1835a, i32* %stack_var_48, align 4
  %v1_18362 = add i32 %v0_1835a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18362 = inttoptr i32 %v1_18362 to i32*
  %v3_18362 = load i32, i32* %v2_18362, align 4
  %v4_18362 = add i32 %v3_18362, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_18362, i32* %v2_18362, align 4
  %v0_18366 = load i32, i32* %esi.global-to-local, align 4
  %v12_18366 = icmp eq i32 %v0_18366, %v3_18357
  %v0_18368 = load i32, i32* %ebx.global-to-local, align 4
  %v2_18368 = add i32 %v0_18368, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_18368 = inttoptr i32 %v2_18368 to i32*
  store i32 %v0_18368, i32* %v3_18368, align 4
  br i1 %v12_18366, label %dec_label_pc_1838b, label %dec_label_pc_1836d

dec_label_pc_1836d:                               ; preds = %dec_label_pc_18357
  %v0_1836d = load i32, i32* %esi.global-to-local, align 4
  %v1_1836d = icmp eq i32 %v0_1836d, 0
  br i1 %v1_1836d, label %dec_label_pc_18375, label %dec_label_pc_18371

dec_label_pc_18371:                               ; preds = %dec_label_pc_1836d
  %v1_18371 = add i32 %v0_1836d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_18371 = inttoptr i32 %v1_18371 to i32*
  %v3_18371 = load i32, i32* %v2_18371, align 4
  %v4_18371 = add i32 %v3_18371, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_18371, i32* %v2_18371, align 4
  br label %dec_label_pc_18375

dec_label_pc_18375:                               ; preds = %dec_label_pc_18371, %dec_label_pc_1836d
  %v1_18375 = icmp eq i32 %v3_18357, 0
  br i1 %v1_18375, label %dec_label_pc_18388, label %dec_label_pc_18379

dec_label_pc_18379:                               ; preds = %dec_label_pc_18375
  %v1_1837e = add i32 %v3_18357, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1837e = inttoptr i32 %v1_1837e to i32*
  %v3_1837e = load i32, i32* %v2_1837e, align 4
  %v5_1837e = add i32 %v3_1837e, -1
  %v15_1837e = icmp eq i32 %v5_1837e, 0
  store i32 %v5_1837e, i32* %v2_1837e, align 4
  br i1 %v15_1837e, label %dec_label_pc_183f8, label %dec_label_pc_18388

dec_label_pc_18388:                               ; preds = %dec_label_pc_183f8, %dec_label_pc_18379, %dec_label_pc_18375
  %v0_18388 = load i32, i32* %esi.global-to-local, align 4
  %v1_18388 = load i32, i32* %ebx.global-to-local, align 4
  %v2_18388 = add i32 %v1_18388, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_18388 = inttoptr i32 %v2_18388 to i32*
  store i32 %v0_18388, i32* %v3_18388, align 4
  br label %dec_label_pc_1838b

dec_label_pc_1838b:                               ; preds = %dec_label_pc_18388, %dec_label_pc_18357
  %v2_1838b = ptrtoint i32* %stack_var_48 to i32
  store i32 %v2_1838b, i32* @eax, align 4
  %v2_18392 = call i32 @function_2bd00(i32 %v2_1838b)
  store i32 %v2_18392, i32* @eax, align 4
  br label %dec_label_pc_18397

dec_label_pc_18397:                               ; preds = %dec_label_pc_1838b, %dec_label_pc_18350
  %v1_183b4 = phi i32 [ %v2_18392, %dec_label_pc_1838b ], [ %v3_18350, %dec_label_pc_18350 ]
  %v0_18397 = load i32, i32* %edi.global-to-local, align 4
  %v10_183af = icmp eq i32 %v1_183b4, -8
  br i1 %v10_183af, label %dec_label_pc_183b7, label %dec_label_pc_183b4

dec_label_pc_183b4:                               ; preds = %dec_label_pc_18397
  %v2_183b4 = add i32 %v1_183b4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_183b4 = inttoptr i32 %v2_183b4 to i32*
  store i32 %v0_18397, i32* %v3_183b4, align 4
  br label %dec_label_pc_183b7

dec_label_pc_183b7:                               ; preds = %dec_label_pc_183b4, %dec_label_pc_18397
  store i32 %v0_18397, i32* %ebx.global-to-local, align 4
  %v1_183d6 = call i32 @function_2df30(i32 %arg1)
  store i32 %v1_183d6, i32* %eax.global-to-local, align 4
  %v1_183df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_183df = icmp eq i32 %v1_183df, %arg2
  store i32 %v0_18397, i32* %eax.global-to-local, align 4
  %v1_183e8 = icmp eq i1 %v3_183df, false
  br i1 %v1_183e8, label %dec_label_pc_18402, label %dec_label_pc_183ea

dec_label_pc_183ea:                               ; preds = %dec_label_pc_183b7
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_18397

dec_label_pc_183f8:                               ; preds = %dec_label_pc_18379
  br label %dec_label_pc_18388

dec_label_pc_18402:                               ; preds = %dec_label_pc_183b7
  %v2_18409 = ptrtoint i32* %stack_var_48 to i32
  store i32 %v2_18409, i32* @eax, align 4
  %v2_18410 = call i32 @function_2bd00(i32 %v2_18409)
  %v0_18415 = load i32, i32* %edi.global-to-local, align 4
  %v1_18415 = add i32 %v0_18415, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_18415, i32* @eax, align 4
  %v2_1841b = call i32 @function_2bd00(i32 %v1_18415)
  store i32 %v2_1841b, i32* @eax, align 4
  %v0_18428 = load i32, i32* %ebp.global-to-local, align 4
  %v2_1842b = call i32 @function_2df30(i32 %v0_18428)
  store i32 %v2_1842b, i32* %eax.global-to-local, align 4
  %v0_18440 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18440 = inttoptr i32 %v0_18440 to i32*
  %v2_18440 = load i32, i32* %v1_18440, align 4
  store i32 %v2_18440, i32* %eax.global-to-local, align 4
  ret i32 %v2_18440

; uselistorder directives
  uselistorder i32 %v0_18397, { 1, 0, 3, 2 }
  uselistorder i32 %v1_183b4, { 1, 0 }
  uselistorder i32 %v0_18368, { 1, 0 }
  uselistorder i32 %v3_18357, { 1, 2, 0, 3 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2df30, { 1, 0 }
}

define i32 @function_18459() local_unnamed_addr {
dec_label_pc_18459:
  %eax.global-to-local = alloca i32, align 4
  %v0_18459 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18459
}

define i32 @function_1845b() local_unnamed_addr {
dec_label_pc_1845b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1845b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1845b
}

define i32 @function_18460() local_unnamed_addr {
dec_label_pc_18460:
  %eax.global-to-local = alloca i32, align 4
  %v0_18460 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18460
}

define i32 @function_18466() local_unnamed_addr {
dec_label_pc_18466:
  %eax.global-to-local = alloca i32, align 4
  %v0_18466 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18466
}

define i32 @function_18468() local_unnamed_addr {
dec_label_pc_18468:
  %eax.global-to-local = alloca i32, align 4
  %v0_18468 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18468
}

define i32 @function_1846c() local_unnamed_addr {
dec_label_pc_1846c:
  %stack_var_56 = alloca i32, align 4
  %v2_1846e = ptrtoint i32* %stack_var_56 to i32
  store i32 %v2_1846e, i32* @eax, align 4
  %v1_18475 = call i32 @function_30300(i32 %v2_1846e)
  ret i32 %v1_18475
}

define i32 @function_1847c() local_unnamed_addr {
dec_label_pc_1847c:
  %tmp94 = call i32 @__decompiler_undefined_function_0()
  %v1_1847e = add i32 %tmp94, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1847e, i32* @eax, align 4
  %v2_18484 = call i32 @function_2bd00(i32 %v1_1847e)
  ret i32 %v2_18484

; uselistorder directives
  uselistorder i32 (i32)* @function_2bd00, { 3, 2, 1, 0 }
}

define i32 @function_1848b() local_unnamed_addr {
dec_label_pc_1848b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1848b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1848b
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS0_10connectionES6_EEENS0_5mutexEE12slot_invokerEED1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_18490:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_18493 = load i32, i32* %esi.global-to-local, align 4
  %v4_18497 = ptrtoint i8* %arg1 to i32
  store i32 %v4_18497, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_184a7 = load i32, i32* %ebx.global-to-local, align 4
  %v0_184ab = load i32, i32* %edi.global-to-local, align 4
  %v1_184af = add i32 %v4_18497, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_184af = inttoptr i32 %v1_184af to i32*
  %v3_184af = load i32, i32* %v2_184af, align 4
  store i32 %v3_184af, i32* @eax, align 4
  %v1_184b5 = icmp eq i32 %v3_184af, 0
  br i1 %v1_184b5, label %dec_label_pc_184e7, label %dec_label_pc_184b9

dec_label_pc_184b9:                               ; preds = %dec_label_pc_18490
  %v1_184b9 = add i32 %v4_18497, 124
  %v2_184b9 = inttoptr i32 %v1_184b9 to i32*
  %v3_184b9 = load i32, i32* %v2_184b9, align 4
  %tmp117 = icmp ult i32 %v3_184b9, 10
  br i1 %tmp117, label %dec_label_pc_18551, label %dec_label_pc_184c5

dec_label_pc_184c5:                               ; preds = %dec_label_pc_184b9
  %v1_184c5 = add i32 %v4_18497, ptrtoint (i16** @global_var_4.3276 to i32)
  %v12_184c8 = icmp eq i32 %v3_184af, %v1_184c5
  br i1 %v12_184c8, label %dec_label_pc_18548, label %dec_label_pc_184cc

dec_label_pc_184cc:                               ; preds = %dec_label_pc_18548, %dec_label_pc_184c5
  %v1_184cc = add i32 %v4_18497, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_184cc = inttoptr i32 %v1_184cc to i32*
  %v3_184cc = load i32, i32* %v2_184cc, align 4
  %v7_184d2 = icmp ult i32 %v3_184b9, %v3_184cc
  br i1 %v7_184d2, label %dec_label_pc_18551, label %dec_label_pc_184d6

dec_label_pc_184d6:                               ; preds = %dec_label_pc_184cc
  %v1_184d6 = icmp eq i32 %v3_184cc, 0
  %v1_184d8 = icmp eq i1 %v1_184d6, false
  br i1 %v1_184d8, label %dec_label_pc_18510, label %dec_label_pc_184da

dec_label_pc_184da:                               ; preds = %dec_label_pc_18537, %dec_label_pc_18510, %dec_label_pc_184d6
  %v0_184e75 = phi i32 [ %v0_18537, %dec_label_pc_18537 ], [ %v4_18497, %dec_label_pc_18510 ], [ %v4_18497, %dec_label_pc_184d6 ]
  %v0_184da = phi i32 [ %v3_18537, %dec_label_pc_18537 ], [ %v3_184b9, %dec_label_pc_18510 ], [ %v3_184b9, %dec_label_pc_184d6 ]
  %tmp118 = icmp ult i32 %v0_184da, 11
  br i1 %tmp118, label %dec_label_pc_184e7, label %dec_label_pc_184df

dec_label_pc_184df:                               ; preds = %dec_label_pc_184da
  br label %dec_label_pc_184e7

dec_label_pc_184e7:                               ; preds = %dec_label_pc_184df, %dec_label_pc_184da, %dec_label_pc_18490
  %v0_184ec = phi i32 [ %v0_184e75, %dec_label_pc_184df ], [ %v0_184e75, %dec_label_pc_184da ], [ %v4_18497, %dec_label_pc_18490 ]
  %v1_184e7 = inttoptr i32 %v0_184ec to i8*
  %v2_184e7 = load i8, i8* %v1_184e7, align 1
  %v9_184e7 = icmp eq i8 %v2_184e7, 0
  br i1 %v9_184e7, label %dec_label_pc_184ef, label %dec_label_pc_184ec

dec_label_pc_184ec:                               ; preds = %dec_label_pc_184e7
  store i8 0, i8* %v1_184e7, align 1
  br label %dec_label_pc_184ef

dec_label_pc_184ef:                               ; preds = %dec_label_pc_184ec, %dec_label_pc_184e7
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 false, label %dec_label_pc_18556, label %dec_label_pc_184fc

dec_label_pc_184fc:                               ; preds = %dec_label_pc_184ef
  store i32 %v0_184a7, i32* %ebx.global-to-local, align 4
  store i32 %v0_18493, i32* %esi.global-to-local, align 4
  store i32 %v0_184ab, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_18510:                               ; preds = %dec_label_pc_184d6
  %v2_18510 = mul i32 %v3_184cc, 2
  %v3_18510 = add i32 %v3_184cc, -3
  %v4_18510 = add i32 %v3_18510, %v2_18510
  %v2_18514 = mul i32 %v4_18510, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_18514 = add i32 %v2_18514, %v3_184af
  store i32 %v3_18514, i32* %ebx.global-to-local, align 4
  %v2_1851c = mul i32 %v3_184cc, 12
  %v3_1851c = icmp eq i32 %v2_1851c, 0
  %v2_1851f = sub i32 %v3_18514, %v2_1851c
  store i32 %v2_1851f, i32* %edi.global-to-local, align 4
  %v7_18521 = icmp ult i32 %v3_18514, %v2_1851f
  %v2_18523 = or i1 %v3_1851c, %v7_18521
  br i1 %v2_18523, label %dec_label_pc_184da, label %dec_label_pc_18528

dec_label_pc_18528:                               ; preds = %dec_label_pc_18510, %dec_label_pc_18528
  %v0_18528 = phi i32 [ %v1_18530, %dec_label_pc_18528 ], [ %v3_18514, %dec_label_pc_18510 ]
  %v1_1852b = call i32 @function_2eb80(i32 %v0_18528)
  store i32 %v1_1852b, i32* @eax, align 4
  %v0_18530 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18530 = add i32 %v0_18530, -12
  store i32 %v1_18530, i32* %ebx.global-to-local, align 4
  %v0_18533 = load i32, i32* %edi.global-to-local, align 4
  %v7_18533 = icmp ult i32 %v0_18533, %v1_18530
  br i1 %v7_18533, label %dec_label_pc_18528, label %dec_label_pc_18537

dec_label_pc_18537:                               ; preds = %dec_label_pc_18528
  %v0_18537 = load i32, i32* %esi.global-to-local, align 4
  %v1_18537 = add i32 %v0_18537, 124
  %v2_18537 = inttoptr i32 %v1_18537 to i32*
  %v3_18537 = load i32, i32* %v2_18537, align 4
  %v1_1853a = add i32 %v0_18537, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1853a = inttoptr i32 %v1_1853a to i32*
  %v3_1853a = load i32, i32* %v2_1853a, align 4
  store i32 %v3_1853a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_184da

dec_label_pc_18548:                               ; preds = %dec_label_pc_184c5
  %v10_18548 = icmp eq i32 %v3_184b9, 10
  br i1 %v10_18548, label %dec_label_pc_184cc, label %dec_label_pc_18551

dec_label_pc_18551:                               ; preds = %dec_label_pc_18548, %dec_label_pc_184cc, %dec_label_pc_184b9
  %v0_18551 = call i32 @function_29d0e()
  store i32 %v0_18551, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18556

dec_label_pc_18556:                               ; preds = %dec_label_pc_18551, %dec_label_pc_184ef
  %v0_185658 = phi i32 [ %v0_18551, %dec_label_pc_18551 ], [ 0, %dec_label_pc_184ef ]
  %v0_1855b = load i32, i32* %esi.global-to-local, align 4
  %v1_1855b = inttoptr i32 %v0_1855b to i8*
  %v2_1855b = load i8, i8* %v1_1855b, align 1
  %v9_1855b = icmp eq i8 %v2_1855b, 0
  br i1 %v9_1855b, label %dec_label_pc_18565, label %dec_label_pc_18562

dec_label_pc_18562:                               ; preds = %dec_label_pc_18556
  store i8 0, i8* %v1_1855b, align 1
  %v0_18565.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18565

dec_label_pc_18565:                               ; preds = %dec_label_pc_18562, %dec_label_pc_18556
  %v0_18565 = phi i32 [ %v0_18565.pre, %dec_label_pc_18562 ], [ %v0_185658, %dec_label_pc_18556 ]
  ret i32 %v0_18565

; uselistorder directives
  uselistorder i32 %v0_18537, { 1, 2, 0 }
  uselistorder i32 %v1_18530, { 1, 2, 0 }
  uselistorder i32 %v3_184b9, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v3_184af, { 1, 0, 2, 3 }
  uselistorder i32 %v4_18497, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %esi.global-to-local, { 3, 2, 1, 4, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_18528, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI7NetworkS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18570:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_18570 = load i32, i32* @edi, align 4
  %v0_18572 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1858a = icmp eq i32 %arg2, 0
  %v1_1858c = icmp eq i1 %v1_1858a, false
  br i1 %v1_1858c, label %dec_label_pc_18592, label %dec_label_pc_185b0

dec_label_pc_18590:                               ; preds = %dec_label_pc_18592
  store i32 %v3_185a1, i32* %ebx.global-to-local, align 4
  %v0_18595.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_18592

dec_label_pc_18592:                               ; preds = %dec_label_pc_18570, %dec_label_pc_18590
  %v0_18595 = phi i32 [ %v0_18595.pre, %dec_label_pc_18590 ], [ %arg1, %dec_label_pc_18570 ]
  %v0_18592 = phi i32 [ %v3_185a1, %dec_label_pc_18590 ], [ %arg2, %dec_label_pc_18570 ]
  %v1_18592 = add i32 %v0_18592, 12
  %v2_18592 = inttoptr i32 %v1_18592 to i32*
  %v3_18592 = load i32, i32* %v2_18592, align 4
  store i32 %v3_18592, i32* @eax, align 4
  %v2_1859c = call i32 @function_30ae0(i32 %v0_18595, i32 %v3_18592)
  %v0_185a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_185a1 = add i32 %v0_185a1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_185a1 = inttoptr i32 %v1_185a1 to i32*
  %v3_185a1 = load i32, i32* %v2_185a1, align 4
  %v1_185ac = icmp eq i32 %v3_185a1, 0
  %v1_185ae = icmp eq i1 %v1_185ac, false
  br i1 %v1_185ae, label %dec_label_pc_18590, label %dec_label_pc_185b0

dec_label_pc_185b0:                               ; preds = %dec_label_pc_18592, %dec_label_pc_18570
  br i1 false, label %dec_label_pc_185c4, label %dec_label_pc_185bd

dec_label_pc_185bd:                               ; preds = %dec_label_pc_185b0
  store i32 %v0_18572, i32* %ebx.global-to-local, align 4
  store i32 %v0_18570, i32* %edi.global-to-local, align 4
  ret i32 0

dec_label_pc_185c4:                               ; preds = %dec_label_pc_185b0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_185a1, { 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_18592, { 1, 0 }
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_185d0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg1 to i32
  %v0_185d0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_185d1 = load i32, i32* %edi.global-to-local, align 4
  %v0_185d2 = load i32, i32* %esi.global-to-local, align 4
  %v0_185d3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* @ebx, align 4
  store i32 0, i32* @eax, align 4
  store i32 %tmp119, i32* @edi, align 4
  store i32 %arg2, i32* @esi, align 4
  %v12_185f7 = icmp eq i32 %arg4, %arg3
  br i1 %v12_185f7, label %dec_label_pc_18660, label %dec_label_pc_185fb

dec_label_pc_185fb:                               ; preds = %dec_label_pc_185d0
  %v1_185fb = add i32 %tmp119, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_185fb = inttoptr i32 %v1_185fb to i32*
  %v3_185fb = load i32, i32* %v2_185fb, align 4
  store i32 %v3_185fb, i32* @ecx, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  %v1_18600 = add i32 %tmp119, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_18600 = inttoptr i32 %v1_18600 to i32*
  %v3_18600 = load i32, i32* %v2_18600, align 4
  %v2_18603 = sub i32 %arg4, %arg3
  %v12_18603 = icmp eq i32 %v2_18603, 0
  store i32 %v2_18603, i32* @ebp, align 4
  %v2_18605 = sub i32 %v3_18600, %v3_185fb
  store i32 %v2_18605, i32* %eax.global-to-local, align 4
  %tmp134 = icmp ugt i32 %v2_18603, %v2_18605
  br i1 %tmp134, label %dec_label_pc_18680, label %dec_label_pc_1860b

dec_label_pc_1860b:                               ; preds = %dec_label_pc_185fb
  %v2_1860d = sub i32 %v3_185fb, %arg2
  store i32 %v2_1860d, i32* %edx.global-to-local, align 4
  %v7_1860f = icmp ult i32 %v2_18603, %v2_1860d
  %v1_18615 = icmp eq i1 %v7_1860f, false
  br i1 %v1_18615, label %bb, label %dec_label_pc_1861b

bb:                                               ; preds = %dec_label_pc_1860b
  %v4_18615 = call i32 @function_18790(i32 %v2_1860d, i32 %arg3)
  store i32 %v4_18615, i32* %eax.global-to-local, align 4
  %v0_1861b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1861b

dec_label_pc_1861b:                               ; preds = %bb, %dec_label_pc_1860b
  %v0_18623 = phi i32 [ %v0_1861b.pre, %bb ], [ %v3_185fb, %dec_label_pc_1860b ]
  %v2_1861d = sub i32 %v0_18623, %v2_18603
  store i32 %v0_18623, i32* %eax.global-to-local, align 4
  br i1 %v12_18603, label %dec_label_pc_1861b.dec_label_pc_18646_crit_edge, label %dec_label_pc_1862b

dec_label_pc_1861b.dec_label_pc_18646_crit_edge:  ; preds = %dec_label_pc_1861b
  %v1_18648.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_18646

dec_label_pc_1862b:                               ; preds = %dec_label_pc_1861b
  store i32 %v2_1861d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_18630

dec_label_pc_18630:                               ; preds = %dec_label_pc_18639, %dec_label_pc_1862b
  %v1_1863f9 = phi i32 [ %v1_1863f, %dec_label_pc_18639 ], [ %v0_18623, %dec_label_pc_1862b ]
  %v2_18637 = phi i32 [ %v1_1863c, %dec_label_pc_18639 ], [ %v0_18623, %dec_label_pc_1862b ]
  %v0_18634 = phi i32 [ %v1_18639, %dec_label_pc_18639 ], [ %v2_1861d, %dec_label_pc_1862b ]
  %v1_18630 = icmp eq i32 %v2_18637, 0
  br i1 %v1_18630, label %dec_label_pc_18639, label %dec_label_pc_18634

dec_label_pc_18634:                               ; preds = %dec_label_pc_18630
  %v1_18634 = inttoptr i32 %v0_18634 to i8*
  %v2_18634 = load i8, i8* %v1_18634, align 1
  %v3_18634 = zext i8 %v2_18634 to i32
  store i32 %v3_18634, i32* %ebx.global-to-local, align 4
  %v3_18637 = inttoptr i32 %v2_18637 to i8*
  store i8 %v2_18634, i8* %v3_18637, align 1
  %v0_18639.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1863c.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_1863f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_18639

dec_label_pc_18639:                               ; preds = %dec_label_pc_18634, %dec_label_pc_18630
  %v1_1863f = phi i32 [ %v1_1863f.pre, %dec_label_pc_18634 ], [ %v1_1863f9, %dec_label_pc_18630 ]
  %v0_1863c = phi i32 [ %v0_1863c.pre, %dec_label_pc_18634 ], [ 0, %dec_label_pc_18630 ]
  %v0_18639 = phi i32 [ %v0_18639.pre, %dec_label_pc_18634 ], [ %v0_18634, %dec_label_pc_18630 ]
  %v1_18639 = add i32 %v0_18639, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_18639, i32* %edx.global-to-local, align 4
  %v1_1863c = add i32 %v0_1863c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1863c, i32* %eax.global-to-local, align 4
  %v12_1863f = icmp eq i32 %v1_18639, %v1_1863f
  %v1_18641 = icmp eq i1 %v12_1863f, false
  br i1 %v1_18641, label %dec_label_pc_18630, label %dec_label_pc_18643

dec_label_pc_18643:                               ; preds = %dec_label_pc_18639
  %v0_18643 = load i32, i32* @edi, align 4
  %v1_18643 = add i32 %v0_18643, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18643 = inttoptr i32 %v1_18643 to i32*
  %v3_18643 = load i32, i32* %v2_18643, align 4
  store i32 %v3_18643, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18646

dec_label_pc_18646:                               ; preds = %dec_label_pc_1861b.dec_label_pc_18646_crit_edge, %dec_label_pc_18643
  %v1_18648 = phi i32 [ %v0_18643, %dec_label_pc_18643 ], [ %v1_18648.pre, %dec_label_pc_1861b.dec_label_pc_18646_crit_edge ]
  %v0_18646 = phi i32 [ %v3_18643, %dec_label_pc_18643 ], [ %v0_18623, %dec_label_pc_1861b.dec_label_pc_18646_crit_edge ]
  %v2_18646 = add i32 %v0_18646, %v2_18603
  %v2_18648 = add i32 %v1_18648, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_18648 = inttoptr i32 %v2_18648 to i32*
  store i32 %v2_18646, i32* %v3_18648, align 4
  %v1_1864f = load i32, i32* @esi, align 4
  %v2_1864f = sub i32 %v2_1861d, %v1_1864f
  %v12_1864f = icmp eq i32 %v2_1864f, 0
  store i32 %v2_1864f, i32* @eax, align 4
  %v1_18651 = icmp eq i1 %v12_1864f, false
  br i1 %v1_18651, label %bb128, label %dec_label_pc_18657

bb128:                                            ; preds = %dec_label_pc_18646
  %v2_18651 = call i32 @function_18848()
  store i32 %v2_18651, i32* @eax, align 4
  br label %dec_label_pc_18657

dec_label_pc_18657:                               ; preds = %bb128, %dec_label_pc_18646
  %v0_1867815 = phi i32 [ %v2_18651, %bb128 ], [ %v2_1864f, %dec_label_pc_18646 ]
  %v1_18659 = icmp eq i1 %v12_18603, false
  br i1 %v1_18659, label %bb129, label %dec_label_pc_18660

bb129:                                            ; preds = %dec_label_pc_18657
  %v2_18659 = call i32 @function_18830()
  store i32 %v2_18659, i32* @eax, align 4
  br label %dec_label_pc_18660

dec_label_pc_18660:                               ; preds = %dec_label_pc_18657, %bb129, %dec_label_pc_185d0
  %v0_1867814 = phi i32 [ %v0_1867815, %dec_label_pc_18657 ], [ %v2_18659, %bb129 ], [ 0, %dec_label_pc_185d0 ]
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 false, label %bb130, label %dec_label_pc_18671

bb130:                                            ; preds = %dec_label_pc_18660
  br label %dec_label_pc_18671

dec_label_pc_18671:                               ; preds = %bb130, %dec_label_pc_18660
  store i32 %v0_185d3, i32* %ebx.global-to-local, align 4
  store i32 %v0_185d2, i32* %esi.global-to-local, align 4
  store i32 %v0_185d1, i32* %edi.global-to-local, align 4
  store i32 %v0_185d0, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1867814

dec_label_pc_18680:                               ; preds = %dec_label_pc_185fb
  %v2_18680 = load i32, i32* %arg1, align 4
  %v2_18682 = sub i32 %v3_185fb, %v2_18680
  store i32 %v2_18682, i32* %ecx.global-to-local, align 4
  %v1_1868a = sub i32 -1, %v2_18682
  store i32 %v1_1868a, i32* @eax, align 4
  %tmp135 = icmp ugt i32 %v2_18603, %v1_1868a
  br i1 %tmp135, label %bb132, label %dec_label_pc_18694

bb132:                                            ; preds = %dec_label_pc_18680
  %v6_1868e = call i32 @function_18864(i32 %arg3, i32 %v2_18680)
  store i32 %v6_1868e, i32* @eax, align 4
  %v1_18694.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_18694

dec_label_pc_18694:                               ; preds = %dec_label_pc_18680, %bb132
  %v3_186ad3 = phi i32 [ %v1_1868a, %dec_label_pc_18680 ], [ %v6_1868e, %bb132 ]
  %v2_18696 = phi i32 [ %v2_18682, %dec_label_pc_18680 ], [ %v1_18694.pre, %bb132 ]
  %v7_18694 = icmp ult i32 %v2_18603, %v2_18696
  %v3_18696 = select i1 %v7_18694, i32 %v2_18696, i32 %v2_18603
  store i32 %v3_18696, i32* %ebp.global-to-local, align 4
  %v2_18699 = add i32 %v3_18696, %v2_18696
  %v7_18699 = icmp ult i32 %v2_18699, %v2_18696
  store i32 %v2_18699, i32* @ecx, align 4
  %v1_186a3 = icmp eq i1 %v7_18699, false
  br i1 %v1_186a3, label %bb133, label %dec_label_pc_186a9

bb133:                                            ; preds = %dec_label_pc_18694
  %v3_186a3 = call i32 @function_18770(i32 -1)
  store i32 %v3_186a3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_186a9

dec_label_pc_186a9:                               ; preds = %bb133, %dec_label_pc_18694
  %v3_186ad = phi i32 [ %v3_186a3, %bb133 ], [ %v3_186ad3, %dec_label_pc_18694 ]
  store i32 -1, i32* %edx.global-to-local, align 4
  ret i32 %v3_186ad

; uselistorder directives
  uselistorder i32 %v2_18696, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1868a, { 2, 0, 1 }
  uselistorder i32 %v2_18682, { 1, 0, 2 }
  uselistorder i32 %v1_1863c, { 1, 0 }
  uselistorder i32 %v1_18639, { 0, 2, 1 }
  uselistorder i32 %v2_1861d, { 2, 0, 1 }
  uselistorder i32 %v0_18623, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v12_18603, { 1, 0 }
  uselistorder i32 %v2_18603, { 3, 4, 0, 2, 5, 6, 1, 7, 8 }
  uselistorder i32 %v3_185fb, { 2, 0, 1, 3, 4 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 1, 6 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_18694, { 1, 0 }
  uselistorder label %dec_label_pc_18660, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18646, { 1, 0 }
}

define i32 @function_186bf(i32 %arg1) local_unnamed_addr {
dec_label_pc_186bf:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %v4_186bf = load i32, i32* @esi, align 4
  %v15_186bf = icmp eq i32 %tmp24, %v4_186bf
  store i32 %arg1, i32* %ebp.global-to-local, align 4
  br i1 %v15_186bf, label %dec_label_pc_186ed, label %dec_label_pc_186c9

dec_label_pc_186c9:                               ; preds = %dec_label_pc_186bf
  store i32 %arg1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_186d0

dec_label_pc_186d0:                               ; preds = %dec_label_pc_186d9, %dec_label_pc_186c9
  %v1_186df5 = phi i32 [ %v0_186e3, %dec_label_pc_186d9 ], [ %v4_186bf, %dec_label_pc_186c9 ]
  %v0_186d4 = phi i32 [ %v1_186d9, %dec_label_pc_186d9 ], [ %tmp24, %dec_label_pc_186c9 ]
  %v2_186d7 = phi i32 [ %v1_186dc, %dec_label_pc_186d9 ], [ %arg1, %dec_label_pc_186c9 ]
  %v1_186d0 = icmp eq i32 %v2_186d7, 0
  br i1 %v1_186d0, label %dec_label_pc_186d9, label %dec_label_pc_186d4

dec_label_pc_186d4:                               ; preds = %dec_label_pc_186d0
  %v1_186d4 = inttoptr i32 %v0_186d4 to i8*
  %v2_186d4 = load i8, i8* %v1_186d4, align 1
  %v3_186d4 = zext i8 %v2_186d4 to i32
  store i32 %v3_186d4, i32* %ecx.global-to-local, align 4
  %v3_186d7 = inttoptr i32 %v2_186d7 to i8*
  store i8 %v2_186d4, i8* %v3_186d7, align 1
  %v0_186d9.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_186dc.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_186df.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_186d9

dec_label_pc_186d9:                               ; preds = %dec_label_pc_186d4, %dec_label_pc_186d0
  %v0_186e3 = phi i32 [ %v1_186df.pre, %dec_label_pc_186d4 ], [ %v1_186df5, %dec_label_pc_186d0 ]
  %v0_186dc = phi i32 [ %v0_186dc.pre, %dec_label_pc_186d4 ], [ 0, %dec_label_pc_186d0 ]
  %v0_186d9 = phi i32 [ %v0_186d9.pre, %dec_label_pc_186d4 ], [ %v0_186d4, %dec_label_pc_186d0 ]
  %v1_186d9 = add i32 %v0_186d9, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_186d9, i32* %edx.global-to-local, align 4
  %v1_186dc = add i32 %v0_186dc, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_186dc, i32* %eax.global-to-local, align 4
  %v12_186df = icmp eq i32 %v1_186d9, %v0_186e3
  %v1_186e1 = icmp eq i1 %v12_186df, false
  br i1 %v1_186e1, label %dec_label_pc_186d0, label %dec_label_pc_186e3

dec_label_pc_186e3:                               ; preds = %dec_label_pc_186d9
  %v5_186e5 = sub i32 %v0_186e3, %tmp24
  %v5_186e9 = add i32 %v5_186e5, %arg1
  store i32 %v5_186e9, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_186ed

dec_label_pc_186ed:                               ; preds = %dec_label_pc_186e3, %dec_label_pc_186bf
  %v0_186f1 = phi i32 [ %v5_186e9, %dec_label_pc_186e3 ], [ %arg1, %dec_label_pc_186bf ]
  store i32 %v0_186f1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_186f8

dec_label_pc_186f8:                               ; preds = %dec_label_pc_18701, %dec_label_pc_186ed
  %v0_186fc = phi i32 [ %v1_18701, %dec_label_pc_18701 ], [ %tmp22, %dec_label_pc_186ed ]
  %v2_186ff = phi i32 [ %v1_18704, %dec_label_pc_18701 ], [ %v0_186f1, %dec_label_pc_186ed ]
  %v1_186f8 = icmp eq i32 %v2_186ff, 0
  br i1 %v1_186f8, label %dec_label_pc_18701, label %dec_label_pc_186fc

dec_label_pc_186fc:                               ; preds = %dec_label_pc_186f8
  %v1_186fc = inttoptr i32 %v0_186fc to i8*
  %v2_186fc = load i8, i8* %v1_186fc, align 1
  %v3_186fc = zext i8 %v2_186fc to i32
  store i32 %v3_186fc, i32* %ecx.global-to-local, align 4
  %v3_186ff = inttoptr i32 %v2_186ff to i8*
  store i8 %v2_186fc, i8* %v3_186ff, align 1
  %v0_18701.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_18704.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_18701

dec_label_pc_18701:                               ; preds = %dec_label_pc_186fc, %dec_label_pc_186f8
  %v0_18704 = phi i32 [ %v0_18704.pre, %dec_label_pc_186fc ], [ 0, %dec_label_pc_186f8 ]
  %v0_18701 = phi i32 [ %v0_18701.pre, %dec_label_pc_186fc ], [ %v0_186fc, %dec_label_pc_186f8 ]
  %v1_18701 = add i32 %v0_18701, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_18701, i32* %eax.global-to-local, align 4
  %v1_18704 = add i32 %v0_18704, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_18704, i32* %edx.global-to-local, align 4
  %v1_18707 = load i32, i32* @ebx, align 4
  %v12_18707 = icmp eq i32 %v1_18701, %v1_18707
  %v1_18709 = icmp eq i1 %v12_18707, false
  br i1 %v1_18709, label %dec_label_pc_186f8, label %dec_label_pc_1870b

dec_label_pc_1870b:                               ; preds = %dec_label_pc_18701
  %v5_1870b = sub i32 %v1_18701, %tmp22
  store i32 %v5_1870b, i32* %eax.global-to-local, align 4
  %v0_1870f = load i32, i32* %ebp.global-to-local, align 4
  %v2_1870f = add i32 %v0_1870f, %v5_1870b
  store i32 %v2_1870f, i32* @ebp, align 4
  %v0_18711 = load i32, i32* @edi, align 4
  %v1_18711 = add i32 %v0_18711, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18711 = inttoptr i32 %v1_18711 to i32*
  %v3_18711 = load i32, i32* %v2_18711, align 4
  store i32 %v3_18711, i32* %eax.global-to-local, align 4
  %v1_18714 = load i32, i32* @esi, align 4
  %v12_18714 = icmp eq i32 %v3_18711, %v1_18714
  br i1 %v12_18714, label %dec_label_pc_18737, label %dec_label_pc_18718

dec_label_pc_18718:                               ; preds = %dec_label_pc_1870b
  store i32 %v1_18714, i32* %edx.global-to-local, align 4
  store i32 %v2_1870f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_18720

dec_label_pc_18720:                               ; preds = %dec_label_pc_18729, %dec_label_pc_18718
  %v1_1872f16 = phi i32 [ %v1_1872f, %dec_label_pc_18729 ], [ %v3_18711, %dec_label_pc_18718 ]
  %v0_18724 = phi i32 [ %v1_18729, %dec_label_pc_18729 ], [ %v1_18714, %dec_label_pc_18718 ]
  %v2_18727 = phi i32 [ %v1_1872c, %dec_label_pc_18729 ], [ %v2_1870f, %dec_label_pc_18718 ]
  %v1_18720 = icmp eq i32 %v2_18727, 0
  br i1 %v1_18720, label %dec_label_pc_18729, label %dec_label_pc_18724

dec_label_pc_18724:                               ; preds = %dec_label_pc_18720
  %v1_18724 = inttoptr i32 %v0_18724 to i8*
  %v2_18724 = load i8, i8* %v1_18724, align 1
  %v3_18727 = inttoptr i32 %v2_18727 to i8*
  store i8 %v2_18724, i8* %v3_18727, align 1
  %v0_18729.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_1872c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_1872f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18729

dec_label_pc_18729:                               ; preds = %dec_label_pc_18724, %dec_label_pc_18720
  %v1_1872f = phi i32 [ %v1_1872f.pre, %dec_label_pc_18724 ], [ %v1_1872f16, %dec_label_pc_18720 ]
  %v0_1872c = phi i32 [ %v0_1872c.pre, %dec_label_pc_18724 ], [ 0, %dec_label_pc_18720 ]
  %v0_18729 = phi i32 [ %v0_18729.pre, %dec_label_pc_18724 ], [ %v0_18724, %dec_label_pc_18720 ]
  %v1_18729 = add i32 %v0_18729, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_18729, i32* %edx.global-to-local, align 4
  %v1_1872c = add i32 %v0_1872c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1872c, i32* %ecx.global-to-local, align 4
  %v12_1872f = icmp eq i32 %v1_18729, %v1_1872f
  %v1_18731 = icmp eq i1 %v12_1872f, false
  br i1 %v1_18731, label %dec_label_pc_18720, label %dec_label_pc_18733

dec_label_pc_18733:                               ; preds = %dec_label_pc_18729
  %v1_18733 = load i32, i32* @esi, align 4
  %v2_18733 = sub i32 %v1_18729, %v1_18733
  store i32 %v2_18733, i32* %edx.global-to-local, align 4
  %v0_18735 = load i32, i32* @ebp, align 4
  %v2_18735 = add i32 %v0_18735, %v2_18733
  store i32 %v2_18735, i32* @ebp, align 4
  %v2_18737.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_18737

dec_label_pc_18737:                               ; preds = %dec_label_pc_18733, %dec_label_pc_1870b
  %v2_18737 = phi i32 [ %v2_18737.pre, %dec_label_pc_18733 ], [ %v0_18711, %dec_label_pc_1870b ]
  %v1_18739 = add i32 %v2_18737, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_18739 = inttoptr i32 %v1_18739 to i32*
  %v3_18739 = load i32, i32* %v2_18739, align 4
  store i32 %v3_18739, i32* %eax.global-to-local, align 4
  %v1_1873c = icmp eq i32 %v2_18737, 0
  br i1 %v1_1873c, label %bb, label %dec_label_pc_18740

bb:                                               ; preds = %dec_label_pc_18737
  %v1_1873e = call i32 @function_18756()
  store i32 %v1_1873e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18740

dec_label_pc_18740:                               ; preds = %bb, %dec_label_pc_18737
  %v0_18740 = phi i32 [ %v1_1873e, %bb ], [ %v3_18739, %dec_label_pc_18737 ]
  %v2_18740 = sub i32 %v0_18740, %v2_18737
  store i32 %v2_18740, i32* %eax.global-to-local, align 4
  ret i32 %v2_18740

; uselistorder directives
  uselistorder i32 %v2_18737, { 2, 1, 0 }
  uselistorder i32 %v1_1872c, { 1, 0 }
  uselistorder i32 %v1_18729, { 1, 0, 3, 2 }
  uselistorder i32 %v1_18714, { 1, 2, 0 }
  uselistorder i32 %v3_18711, { 1, 0, 2 }
  uselistorder i32 %v1_18704, { 1, 0 }
  uselistorder i32 %v1_18701, { 1, 0, 3, 2 }
  uselistorder i32 %v1_186dc, { 1, 0 }
  uselistorder i32 %v1_186d9, { 0, 2, 1 }
  uselistorder i32 %v0_186e3, { 1, 0, 2 }
  uselistorder i32 %v4_186bf, { 1, 0 }
  uselistorder i32 %tmp24, { 2, 1, 0 }
  uselistorder i32 %tmp22, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
}

define i32 @function_18756() local_unnamed_addr {
dec_label_pc_18756:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_1875a = load i32, i32* @ebp, align 4
  %v1_1875a = load i32, i32* @edi, align 4
  %v2_1875a = add i32 %v1_1875a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1875a = inttoptr i32 %v2_1875a to i32*
  store i32 %v0_1875a, i32* %v3_1875a, align 4
  %v0_1875d = load i32, i32* %eax.global-to-local, align 4
  %v1_1875d = load i32, i32* @edi, align 4
  %v2_1875d = inttoptr i32 %v1_1875d to i32*
  store i32 %v0_1875d, i32* %v2_1875d, align 4
  %v0_1875f = load i32, i32* %eax.global-to-local, align 4
  %v5_1875f = add i32 %v0_1875f, %tmp
  store i32 %v5_1875f, i32* %eax.global-to-local, align 4
  %v1_18763 = load i32, i32* @edi, align 4
  %v2_18763 = add i32 %v1_18763, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_18763 = inttoptr i32 %v2_18763 to i32*
  store i32 %v5_1875f, i32* %v3_18763, align 4
  %v0_18766 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18766
}

define i32 @function_18770(i32 %arg1) local_unnamed_addr {
dec_label_pc_18770:
  %v0_18770 = load i32, i32* @ecx, align 4
  %v1_18770 = icmp eq i32 %v0_18770, 0
  %v1_18772 = icmp eq i1 %v1_18770, false
  br i1 %v1_18772, label %bb, label %dec_label_pc_18778

bb:                                               ; preds = %dec_label_pc_18770
  %v2_18772 = call i32 @function_18870()
  br label %dec_label_pc_18778

dec_label_pc_18778:                               ; preds = %bb, %dec_label_pc_18770
  %v1_18788 = call i32 @function_186bf(i32 0)
  ret i32 %v1_18788
}

define i32 @function_18790(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18790:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %v0_18794 = load i32, i32* @ecx, align 4
  store i32 %v0_18794, i32* %eax.global-to-local, align 4
  %v5_18796 = add i32 %arg2, %arg1
  store i32 %v5_18796, i32* %edx.global-to-local, align 4
  %v0_1879a = load i32, i32* @ebx, align 4
  %v12_1879a = icmp eq i32 %v0_1879a, %v5_18796
  br i1 %v12_1879a, label %dec_label_pc_18790.dec_label_pc_187c2_crit_edge, label %dec_label_pc_187a8

dec_label_pc_18790.dec_label_pc_187c2_crit_edge:  ; preds = %dec_label_pc_18790
  %v1_187ca.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_187c2

dec_label_pc_187a8:                               ; preds = %dec_label_pc_18790, %dec_label_pc_187b1
  %v1_187b75 = phi i32 [ %v1_187b7, %dec_label_pc_187b1 ], [ %v0_1879a, %dec_label_pc_18790 ]
  %v0_187ac = phi i32 [ %v1_187b1, %dec_label_pc_187b1 ], [ %v5_18796, %dec_label_pc_18790 ]
  %v2_187af = phi i32 [ %v1_187b4, %dec_label_pc_187b1 ], [ %v0_18794, %dec_label_pc_18790 ]
  %v1_187a8 = icmp eq i32 %v2_187af, 0
  br i1 %v1_187a8, label %dec_label_pc_187b1, label %dec_label_pc_187ac

dec_label_pc_187ac:                               ; preds = %dec_label_pc_187a8
  %v1_187ac = inttoptr i32 %v0_187ac to i8*
  %v2_187ac = load i8, i8* %v1_187ac, align 1
  %v3_187af = inttoptr i32 %v2_187af to i8*
  store i8 %v2_187ac, i8* %v3_187af, align 1
  %v0_187b1.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_187b4.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_187b7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_187b1

dec_label_pc_187b1:                               ; preds = %dec_label_pc_187ac, %dec_label_pc_187a8
  %v1_187b7 = phi i32 [ %v1_187b7.pre, %dec_label_pc_187ac ], [ %v1_187b75, %dec_label_pc_187a8 ]
  %v0_187b4 = phi i32 [ %v0_187b4.pre, %dec_label_pc_187ac ], [ 0, %dec_label_pc_187a8 ]
  %v0_187b1 = phi i32 [ %v0_187b1.pre, %dec_label_pc_187ac ], [ %v0_187ac, %dec_label_pc_187a8 ]
  %v1_187b1 = add i32 %v0_187b1, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_187b1, i32* %edx.global-to-local, align 4
  %v1_187b4 = add i32 %v0_187b4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_187b4, i32* %eax.global-to-local, align 4
  %v12_187b7 = icmp eq i32 %v1_187b1, %v1_187b7
  %v1_187b9 = icmp eq i1 %v12_187b7, false
  br i1 %v1_187b9, label %dec_label_pc_187a8, label %dec_label_pc_187bb

dec_label_pc_187bb:                               ; preds = %dec_label_pc_187b1
  store i32 %v0_18794, i32* @ecx, align 4
  %v0_187bf = load i32, i32* @edi, align 4
  %v1_187bf = add i32 %v0_187bf, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_187bf = inttoptr i32 %v1_187bf to i32*
  %v3_187bf = load i32, i32* %v2_187bf, align 4
  store i32 %v3_187bf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_187c2

dec_label_pc_187c2:                               ; preds = %dec_label_pc_18790.dec_label_pc_187c2_crit_edge, %dec_label_pc_187bb
  %v1_187ca = phi i32 [ %v0_187bf, %dec_label_pc_187bb ], [ %v1_187ca.pre, %dec_label_pc_18790.dec_label_pc_187c2_crit_edge ]
  %v1_187c6 = phi i32 [ %v3_187bf, %dec_label_pc_187bb ], [ %v0_18794, %dec_label_pc_18790.dec_label_pc_187c2_crit_edge ]
  %v0_187c2 = load i32, i32* @ebp, align 4
  %v5_187c2 = sub i32 %v0_187c2, %arg1
  %v2_187c6 = add i32 %v5_187c2, %v1_187c6
  store i32 %v2_187c6, i32* %ebp.global-to-local, align 4
  %v1_187c8 = load i32, i32* @esi, align 4
  %v12_187c8 = icmp eq i32 %v0_18794, %v1_187c8
  %v2_187ca = add i32 %v1_187ca, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_187ca = inttoptr i32 %v2_187ca to i32*
  store i32 %v2_187c6, i32* %v3_187ca, align 4
  br i1 %v12_187c8, label %dec_label_pc_187c2.dec_label_pc_187ef_crit_edge, label %dec_label_pc_187cf

dec_label_pc_187c2.dec_label_pc_187ef_crit_edge:  ; preds = %dec_label_pc_187c2
  %v0_187f3.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_187fb.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_187ef

dec_label_pc_187cf:                               ; preds = %dec_label_pc_187c2
  %v0_187cf = load i32, i32* @esi, align 4
  store i32 %v0_187cf, i32* %eax.global-to-local, align 4
  %v0_187d8.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_187d8

dec_label_pc_187d8:                               ; preds = %dec_label_pc_187e2, %dec_label_pc_187cf
  %v0_187dc = phi i32 [ %v1_187e2, %dec_label_pc_187e2 ], [ %v0_187cf, %dec_label_pc_187cf ]
  %v2_187df = phi i32 [ %v1_187e5, %dec_label_pc_187e2 ], [ %v0_187d8.pre, %dec_label_pc_187cf ]
  %v1_187d8 = icmp eq i32 %v2_187df, 0
  br i1 %v1_187d8, label %dec_label_pc_187e2, label %dec_label_pc_187dc

dec_label_pc_187dc:                               ; preds = %dec_label_pc_187d8
  %v1_187dc = inttoptr i32 %v0_187dc to i8*
  %v2_187dc = load i8, i8* %v1_187dc, align 1
  %v3_187dc = zext i8 %v2_187dc to i32
  store i32 %v3_187dc, i32* %edx.global-to-local, align 4
  %v3_187df = inttoptr i32 %v2_187df to i8*
  store i8 %v2_187dc, i8* %v3_187df, align 1
  %v0_187e2.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_187e5.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_187e2

dec_label_pc_187e2:                               ; preds = %dec_label_pc_187dc, %dec_label_pc_187d8
  %v0_187e5 = phi i32 [ %v0_187e5.pre, %dec_label_pc_187dc ], [ 0, %dec_label_pc_187d8 ]
  %v0_187e2 = phi i32 [ %v0_187e2.pre, %dec_label_pc_187dc ], [ %v0_187dc, %dec_label_pc_187d8 ]
  %v1_187e2 = add i32 %v0_187e2, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_187e2, i32* %eax.global-to-local, align 4
  %v1_187e5 = add i32 %v0_187e5, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_187e5, i32* %ebp.global-to-local, align 4
  %v1_187e8 = load i32, i32* @ecx, align 4
  %v12_187e8 = icmp eq i32 %v1_187e2, %v1_187e8
  %v1_187ea = icmp eq i1 %v12_187e8, false
  br i1 %v1_187ea, label %dec_label_pc_187d8, label %dec_label_pc_187ec

dec_label_pc_187ec:                               ; preds = %dec_label_pc_187e2
  %v0_187ec = load i32, i32* @edi, align 4
  %v1_187ec = add i32 %v0_187ec, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_187ec = inttoptr i32 %v1_187ec to i32*
  %v3_187ec = load i32, i32* %v2_187ec, align 4
  store i32 %v3_187ec, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_187ef

dec_label_pc_187ef:                               ; preds = %dec_label_pc_187c2.dec_label_pc_187ef_crit_edge, %dec_label_pc_187ec
  %v1_187fb = phi i32 [ %v1_187fb.pre, %dec_label_pc_187c2.dec_label_pc_187ef_crit_edge ], [ %v0_187ec, %dec_label_pc_187ec ]
  %v0_187f3 = phi i32 [ %v0_187f3.pre, %dec_label_pc_187c2.dec_label_pc_187ef_crit_edge ], [ %v3_187ec, %dec_label_pc_187ec ]
  %v5_187f3 = add i32 %v0_187f3, %arg1
  store i32 %v5_187f3, i32* %ebp.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_187fb = add i32 %v1_187fb, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_187fb = inttoptr i32 %v2_187fb to i32*
  store i32 %v5_187f3, i32* %v3_187fb, align 4
  %v1_18808 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18808 = xor i32 %v1_18808, %tmp24
  %v3_18808 = icmp eq i32 %v2_18808, 0
  store i32 %v2_18808, i32* %edx.global-to-local, align 4
  %v1_1880f = icmp eq i1 %v3_18808, false
  br i1 %v1_1880f, label %bb, label %dec_label_pc_187ef.dec_label_pc_18811_crit_edge

dec_label_pc_187ef.dec_label_pc_18811_crit_edge:  ; preds = %dec_label_pc_187ef
  %v5_18827.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18811

bb:                                               ; preds = %dec_label_pc_187ef
  %v2_1880f = call i32 @function_1885f()
  store i32 %v2_1880f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18811

dec_label_pc_18811:                               ; preds = %dec_label_pc_187ef.dec_label_pc_18811_crit_edge, %bb
  %v5_18827 = phi i32 [ %v5_18827.pre, %dec_label_pc_187ef.dec_label_pc_18811_crit_edge ], [ %v2_1880f, %bb ]
  store i32 %arg2, i32* %edx.global-to-local, align 4
  ret i32 %v5_18827

; uselistorder directives
  uselistorder i32 %v1_187e5, { 1, 0 }
  uselistorder i32 %v1_187e2, { 0, 2, 1 }
  uselistorder i32 %v1_187b4, { 1, 0 }
  uselistorder i32 %v1_187b1, { 0, 2, 1 }
  uselistorder i32 %v0_1879a, { 1, 0 }
  uselistorder i32 %v5_18796, { 1, 0, 2 }
  uselistorder i32 %v0_18794, { 0, 2, 3, 1, 4 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_18811, { 1, 0 }
  uselistorder label %dec_label_pc_187ef, { 1, 0 }
  uselistorder label %dec_label_pc_187c2, { 1, 0 }
  uselistorder label %dec_label_pc_187a8, { 1, 0 }
}

define i32 @function_18830() local_unnamed_addr {
dec_label_pc_18830:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_18834 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_18834 = icmp eq i32 %v1_18834, %tmp2
  %v1_1883b = icmp eq i1 %v3_18834, false
  br i1 %v1_1883b, label %bb, label %dec_label_pc_18830.dec_label_pc_1883d_crit_edge

dec_label_pc_18830.dec_label_pc_1883d_crit_edge:  ; preds = %dec_label_pc_18830
  %v0_18841.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1883d

bb:                                               ; preds = %dec_label_pc_18830
  %v2_1883b = call i32 @function_1885f()
  br label %dec_label_pc_1883d

dec_label_pc_1883d:                               ; preds = %dec_label_pc_18830.dec_label_pc_1883d_crit_edge, %bb
  %v0_18841 = phi i32 [ %v0_18841.pre, %dec_label_pc_18830.dec_label_pc_1883d_crit_edge ], [ %v2_1883b, %bb ]
  ret i32 %v0_18841

; uselistorder directives
  uselistorder i32 ()* @function_1885f, { 1, 0 }
  uselistorder label %dec_label_pc_1883d, { 1, 0 }
}

define i32 @function_18848() local_unnamed_addr {
dec_label_pc_18848:
  %v1_18848 = load i32, i32* @eax, align 4
  ret i32 %v1_18848
}

define i32 @function_1885a() local_unnamed_addr {
dec_label_pc_1885a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1885a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1885a
}

define i32 @function_1885f() local_unnamed_addr {
dec_label_pc_1885f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18864(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18864:
  %v0_1886b = load i32, i32* @eax, align 4
  ret i32 %v0_1886b
}

define i32 @function_18870() local_unnamed_addr {
dec_label_pc_18870:
  %v0_18874 = load i32, i32* @eax, align 4
  ret i32 %v0_18874
}

define i32 @_ZNSsC1IPcEET_S1_RKSaIcE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18880:
  store i32 %arg3, i32* @ebp, align 4
  %v0_18893 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg4, i32* @eax, align 4
  %v12_188b0 = icmp eq i32 %arg2, %arg3
  br i1 %v12_188b0, label %bb, label %dec_label_pc_188b4

bb:                                               ; preds = %dec_label_pc_18880
  %v2_188b2 = call i32 @function_18928(i32 %v0_18893)
  store i32 %v2_188b2, i32* @eax, align 4
  br label %dec_label_pc_188b4

dec_label_pc_188b4:                               ; preds = %bb, %dec_label_pc_18880
  %v3_188c62 = phi i32 [ %v2_188b2, %bb ], [ %arg4, %dec_label_pc_18880 ]
  %v1_188b4 = icmp eq i32 %arg2, 0
  br i1 %v1_188b4, label %bb111, label %dec_label_pc_188b8

bb111:                                            ; preds = %dec_label_pc_188b4
  %v1_188b6 = call i32 @function_18930()
  br label %dec_label_pc_188b8

dec_label_pc_188b8:                               ; preds = %bb111, %dec_label_pc_188b4
  %v3_188c6 = phi i32 [ %v1_188b6, %bb111 ], [ %v3_188c62, %dec_label_pc_188b4 ]
  ret i32 %v3_188c6

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_188d2() local_unnamed_addr {
dec_label_pc_188d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_188d2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_188d2
}

define i32 @function_188d8() local_unnamed_addr {
dec_label_pc_188d8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_188f0() local_unnamed_addr {
dec_label_pc_188f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_188f8() local_unnamed_addr {
dec_label_pc_188f8:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_188fc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_188fc = xor i32 %v1_188fc, %tmp6
  %v3_188fc = icmp eq i32 %v2_188fc, 0
  store i32 %v2_188fc, i32* @eax, align 4
  %v0_18903 = load i32, i32* @esi, align 4
  %v1_18903 = load i32, i32* @edi, align 4
  %v2_18903 = inttoptr i32 %v1_18903 to i32*
  store i32 %v0_18903, i32* %v2_18903, align 4
  %v1_18905 = icmp eq i1 %v3_188fc, false
  br i1 %v1_18905, label %bb, label %dec_label_pc_188f8.dec_label_pc_18907_crit_edge

dec_label_pc_188f8.dec_label_pc_18907_crit_edge:  ; preds = %dec_label_pc_188f8
  %v0_1891a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18907

bb:                                               ; preds = %dec_label_pc_188f8
  %v2_18905 = call i32 @function_18964()
  br label %dec_label_pc_18907

dec_label_pc_18907:                               ; preds = %dec_label_pc_188f8.dec_label_pc_18907_crit_edge, %bb
  %v0_1891a = phi i32 [ %v0_1891a.pre, %dec_label_pc_188f8.dec_label_pc_18907_crit_edge ], [ %v2_18905, %bb ]
  ret i32 %v0_1891a

; uselistorder directives
  uselistorder label %dec_label_pc_18907, { 1, 0 }
}

define i32 @function_18920() local_unnamed_addr {
dec_label_pc_18920:
  %edx.global-to-local = alloca i32, align 4
  %v2_18920 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_18920 = zext i8 %v2_18920 to i32
  store i32 %v3_18920, i32* @eax, align 4
  %v2_18923 = load i32, i32* %edx.global-to-local, align 4
  %v3_18923 = add i32 %v2_18923, 12
  %v4_18923 = inttoptr i32 %v3_18923 to i8*
  store i8 %v2_18920, i8* %v4_18923, align 1
  %v0_18926 = call i32 @function_188f0()
  ret i32 %v0_18926
}

define i32 @function_18928(i32 %arg1) local_unnamed_addr {
dec_label_pc_18928:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18930() local_unnamed_addr {
dec_label_pc_18930:
  %v0_18930 = load i32, i32* @ebp, align 4
  %v1_18930 = icmp eq i32 %v0_18930, 0
  br i1 %v1_18930, label %bb, label %dec_label_pc_18930.dec_label_pc_18934_crit_edge

dec_label_pc_18930.dec_label_pc_18934_crit_edge:  ; preds = %dec_label_pc_18930
  %v3_18934.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18934

bb:                                               ; preds = %dec_label_pc_18930
  %v1_18932 = call i32 @function_18940()
  br label %dec_label_pc_18934

dec_label_pc_18934:                               ; preds = %dec_label_pc_18930.dec_label_pc_18934_crit_edge, %bb
  %v3_18934 = phi i32 [ %v3_18934.pre, %dec_label_pc_18930.dec_label_pc_18934_crit_edge ], [ %v1_18932, %bb ]
  ret i32 %v3_18934

; uselistorder directives
  uselistorder label %dec_label_pc_18934, { 1, 0 }
}

define i32 @function_18940() local_unnamed_addr {
dec_label_pc_18940:
  store i32 0, i32* @ebp, align 4
  %v2_1894e = load i32, i32* @eax, align 4
  ret i32 %v2_1894e
}

define i32 @function_18959() local_unnamed_addr {
dec_label_pc_18959:
  %ecx.global-to-local = alloca i32, align 4
  %v0_18959 = load i32, i32* %ecx.global-to-local, align 4
  %v1_18959 = add i32 %v0_18959, 208702914
  %v2_18959 = inttoptr i32 %v1_18959 to i32*
  %v3_18959 = load i32, i32* %v2_18959, align 4
  %v4_18959 = add i32 %v3_18959, -1
  store i32 %v4_18959, i32* %v2_18959, align 4
  %v0_1895f = call i32 @function_188d8()
  ret i32 %v0_1895f
}

define i32 @function_18964() local_unnamed_addr {
dec_label_pc_18964:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18969() local_unnamed_addr {
dec_label_pc_18969:
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_18969 = load i32, i32* %edx.global-to-local, align 4
  %v1_18969 = add i32 %v0_18969, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_18969 = inttoptr i32 %v1_18969 to i32*
  store i32 0, i32* %v2_18969, align 4
  %v0_18970 = load i32, i32* %ebp.global-to-local, align 4
  %v1_18970 = load i32, i32* %edx.global-to-local, align 4
  %v2_18970 = inttoptr i32 %v1_18970 to i32*
  store i32 %v0_18970, i32* %v2_18970, align 4
  %v0_18972 = load i32, i32* @esi, align 4
  %v1_18972 = load i32, i32* %ebp.global-to-local, align 4
  %v2_18972 = mul i32 %v1_18972, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_18972 = add i32 %v2_18972, %v0_18972
  %v4_18972 = inttoptr i32 %v3_18972 to i8*
  store i8 0, i8* %v4_18972, align 1
  %v0_18976 = call i32 @function_188f8()
  ret i32 %v0_18976
}

define i32 @_ZN5boost11unique_lockI14AnnotatedMixinINS_15recursive_mutexEEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_18980:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_18980 = load i32, i32* %edi.global-to-local, align 4
  %v0_18981 = load i32, i32* %esi.global-to-local, align 4
  %v0_18982 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v0_1898a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  %v1_18996 = add i32 %tmp100, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18996 = inttoptr i32 %v1_18996 to i8*
  %v3_18996 = load i8, i8* %v2_18996, align 1
  %v10_18996 = icmp eq i8 %v3_18996, 0
  %v1_1899a = icmp eq i1 %v10_18996, false
  br i1 %v1_1899a, label %bb, label %dec_label_pc_189a0

bb:                                               ; preds = %dec_label_pc_18980
  %v6_1899a = call i32 @function_18a61(i32 %v0_1898a, i32 %v0_18982, i32 %v0_18981, i32 %v0_18980)
  %v0_189a0.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_189a0

dec_label_pc_189a0:                               ; preds = %bb, %dec_label_pc_18980
  %v3_189a2 = phi i32 [ %v6_1899a, %bb ], [ 0, %dec_label_pc_18980 ]
  %v0_189a0 = phi i32 [ %v0_189a0.pre, %bb ], [ %tmp100, %dec_label_pc_18980 ]
  %v1_189a0 = inttoptr i32 %v0_189a0 to i32*
  %v2_189a0 = load i32, i32* %v1_189a0, align 4
  store i32 %v2_189a0, i32* %ebx.global-to-local, align 4
  ret i32 %v3_189a2

; uselistorder directives
  uselistorder i32* %edi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_189aa() local_unnamed_addr {
dec_label_pc_189aa:
  %v0_189aa = load i32, i32* @eax, align 4
  %v1_189aa = icmp eq i32 %v0_189aa, 0
  %v1_189ac = icmp eq i1 %v1_189aa, false
  br i1 %v1_189ac, label %bb, label %dec_label_pc_189b2

bb:                                               ; preds = %dec_label_pc_189aa
  %v2_189ac = call i32 @function_18a5c()
  store i32 %v2_189ac, i32* @eax, align 4
  br label %dec_label_pc_189b2

dec_label_pc_189b2:                               ; preds = %bb, %dec_label_pc_189aa
  %v0_189c4 = phi i32 [ %v2_189ac, %bb ], [ %v0_189aa, %dec_label_pc_189aa ]
  store i32 0, i32* @edx, align 4
  %v0_189b4 = load i32, i32* @ebx, align 4
  %v1_189b4 = add i32 %v0_189b4, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_189b4 = inttoptr i32 %v1_189b4 to i8*
  %v3_189b4 = load i8, i8* %v2_189b4, align 1
  %v10_189b4 = icmp eq i8 %v3_189b4, 0
  br i1 %v10_189b4, label %dec_label_pc_189c9, label %dec_label_pc_189ba

dec_label_pc_189ba:                               ; preds = %dec_label_pc_189b2
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* @edx, align 4
  %v2_189c4 = add i32 %v0_189b4, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v3_189c4 = inttoptr i32 %v2_189c4 to i32*
  %v4_189c4 = load i32, i32* %v3_189c4, align 4
  %v15_189c4 = icmp eq i32 %v0_189c4, %v4_189c4
  br i1 %v15_189c4, label %bb98, label %dec_label_pc_189c9

bb98:                                             ; preds = %dec_label_pc_189ba
  %v1_189c7 = call i32 @function_18a1c()
  store i32 %v1_189c7, i32* @eax, align 4
  br label %dec_label_pc_189c9

dec_label_pc_189c9:                               ; preds = %bb98, %dec_label_pc_189ba, %dec_label_pc_189b2
  %v0_189cc = call i32 @function_189e4()
  ret i32 %v0_189cc
}

define i32 @function_189d0() local_unnamed_addr {
dec_label_pc_189d0:
  %v3_189d4 = load i32, i32* @eax, align 4
  ret i32 %v3_189d4
}

define i32 @function_189e4() local_unnamed_addr {
dec_label_pc_189e4:
  %v0_189e4 = load i32, i32* @edx, align 4
  %v4_189e4 = trunc i32 %v0_189e4 to i8
  %v5_189e4 = icmp eq i8 %v4_189e4, 0
  %v1_189e6 = icmp eq i1 %v5_189e4, false
  br i1 %v1_189e6, label %bb, label %dec_label_pc_189e8

bb:                                               ; preds = %dec_label_pc_189e4
  %v2_189e6 = call i32 @function_189d0()
  store i32 %v2_189e6, i32* @eax, align 4
  br label %dec_label_pc_189e8

dec_label_pc_189e8:                               ; preds = %bb, %dec_label_pc_189e4
  %v0_189e8 = load i32, i32* @ebx, align 4
  %v1_189e8 = add i32 %v0_189e8, ptrtoint (i32* @global_var_50.3473 to i32)
  %v2_189e8 = inttoptr i32 %v1_189e8 to i32*
  %v3_189e8 = load i32, i32* %v2_189e8, align 4
  %v4_189e8 = add i32 %v3_189e8, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_189e8, i32* %v2_189e8, align 4
  %v0_189ec = load i32, i32* @ebx, align 4
  %v1_189ec = add i32 %v0_189ec, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_189ec = inttoptr i32 %v1_189ec to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_189ec, align 1
  %v3_189ec = load i32, i32* @eax, align 4
  ret i32 %v3_189ec
}

define i32 @function_18a04(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a04:
  %zf.global-to-local = alloca i1, align 1
  %v1_18a08 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18a08 = xor i32 %v1_18a08, %arg1
  %v3_18a08 = icmp eq i32 %v2_18a08, 0
  store i1 %v3_18a08, i1* %zf.global-to-local, align 1
  store i32 %v2_18a08, i32* @eax, align 4
  %v0_18a0f = load i32, i32* @edi, align 4
  %v1_18a0f = add i32 %v0_18a0f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18a0f = inttoptr i32 %v1_18a0f to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_18a0f, align 1
  %v0_18a13 = load i1, i1* %zf.global-to-local, align 1
  %v1_18a13 = icmp eq i1 %v0_18a13, false
  br i1 %v1_18a13, label %bb, label %dec_label_pc_18a04.dec_label_pc_18a15_crit_edge

dec_label_pc_18a04.dec_label_pc_18a15_crit_edge:  ; preds = %dec_label_pc_18a04
  %v0_18a1b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18a15

bb:                                               ; preds = %dec_label_pc_18a04
  %v2_18a13 = call i32 @function_18a7d()
  br label %dec_label_pc_18a15

dec_label_pc_18a15:                               ; preds = %dec_label_pc_18a04.dec_label_pc_18a15_crit_edge, %bb
  %v0_18a1b = phi i32 [ %v0_18a1b.pre, %dec_label_pc_18a04.dec_label_pc_18a15_crit_edge ], [ %v2_18a13, %bb ]
  %v0_18a15 = load i32, i32* @esp, align 4
  %v9_18a15 = icmp eq i32 %v0_18a15, -32
  store i1 %v9_18a15, i1* %zf.global-to-local, align 1
  ret i32 %v0_18a1b

; uselistorder directives
  uselistorder label %dec_label_pc_18a15, { 1, 0 }
}

define i32 @function_18a1c() local_unnamed_addr {
dec_label_pc_18a1c:
  %v0_18a1c = load i32, i32* @ebx, align 4
  %v1_18a1c = add i32 %v0_18a1c, ptrtoint (i32* @global_var_50.3473 to i32)
  %v2_18a1c = inttoptr i32 %v1_18a1c to i32*
  %v3_18a1c = load i32, i32* %v2_18a1c, align 4
  %v4_18a1c = add i32 %v3_18a1c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_18a1c, i32* %v2_18a1c, align 4
  %v0_18a28 = load i32, i32* @eax, align 4
  %v1_18a28 = icmp eq i32 %v0_18a28, 0
  br i1 %v1_18a28, label %bb, label %dec_label_pc_18a2c

bb:                                               ; preds = %dec_label_pc_18a1c
  %v0_18a20 = load i32, i32* @ebx, align 4
  %v3_18a2a = call i32 @function_18a04(i32 %v0_18a20)
  store i32 %v3_18a2a, i32* @eax, align 4
  br label %dec_label_pc_18a2c

dec_label_pc_18a2c:                               ; preds = %bb, %dec_label_pc_18a1c
  %v0_18a2c = call i32 @function_29c1c()
  ret i32 %v0_18a2c
}

define i32 @function_18a5c() local_unnamed_addr {
dec_label_pc_18a5c:
  %v0_18a5c = load i32, i32* @eax, align 4
  ret i32 %v0_18a5c
}

define i32 @function_18a61(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18a61:
  %stack_var_20 = alloca i32, align 4
  %v2_18a61 = ptrtoint i32* %stack_var_20 to i32
  store i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), i32* %stack_var_20, align 4
  %v1_18a78 = call i32 @function_2e410(i32 %v2_18a61)
  ret i32 %v1_18a78

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38fe8_type* @global_var_38fe8.3415 to i32), { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_18a7d() local_unnamed_addr {
dec_label_pc_18a7d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18a8c() local_unnamed_addr {
dec_label_pc_18a8c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18a9e() local_unnamed_addr {
dec_label_pc_18a9e:
  %v0_18a9e = load i32, i32* @eax, align 4
  %v1_18a9e = icmp eq i32 %v0_18a9e, 0
  br i1 %v1_18a9e, label %bb, label %dec_label_pc_18aa2

bb:                                               ; preds = %dec_label_pc_18a9e
  %v1_18aa0 = call i32 @function_18a8c()
  br label %dec_label_pc_18aa2

dec_label_pc_18aa2:                               ; preds = %bb, %dec_label_pc_18a9e
  %v0_18aa2 = phi i32 [ %v1_18aa0, %bb ], [ %v0_18a9e, %dec_label_pc_18a9e ]
  ret i32 %v0_18aa2
}

define i32 @_ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE20disconnect_all_slotsEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_18ab0:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_18ad6 = add i32 %tmp102, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18ad6 = inttoptr i32 %v1_18ad6 to i32*
  %v3_18ad6 = load i32, i32* %v2_18ad6, align 4
  %v1_18ad9 = icmp eq i32 %v3_18ad6, 0
  br i1 %v1_18ad9, label %dec_label_pc_18ae5, label %dec_label_pc_18ae1

dec_label_pc_18ae1:                               ; preds = %dec_label_pc_18ab0
  %v1_18ae1 = add i32 %v3_18ad6, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18ae1 = inttoptr i32 %v1_18ae1 to i32*
  %v3_18ae1 = load i32, i32* %v2_18ae1, align 4
  %v4_18ae1 = add i32 %v3_18ae1, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_18ae1, i32* %v2_18ae1, align 4
  br label %dec_label_pc_18ae5

dec_label_pc_18ae5:                               ; preds = %dec_label_pc_18ae1, %dec_label_pc_18ab0
  ret i32 %v3_18ad6

; uselistorder directives
  uselistorder i32 %v3_18ad6, { 1, 0, 2 }
}

define i32 @function_18aec(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18aec:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_18aec = load i32, i32* %ebx.global-to-local, align 4
  %v1_18aec = add i32 %v0_18aec, -2062277564
  %v2_18aec = inttoptr i32 %v1_18aec to i32*
  %v3_18aec = load i32, i32* %v2_18aec, align 4
  %v4_18aec = sub i32 %v3_18aec, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_18aec, i32* %v2_18aec, align 4
  %v0_18af7 = load i32, i32* @eax, align 4
  %v1_18af7 = icmp eq i32 %v0_18af7, 0
  br i1 %v1_18af7, label %bb, label %dec_label_pc_18aff

bb:                                               ; preds = %dec_label_pc_18aec
  %v2_18af9 = call i32 @function_18b9e(i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_18af9, i32* @eax, align 4
  br label %dec_label_pc_18aff

dec_label_pc_18aff:                               ; preds = %bb, %dec_label_pc_18aec
  %v2_18aff = phi i32 [ %v2_18af9, %bb ], [ %v0_18af7, %dec_label_pc_18aec ]
  store i32 %v2_18aff, i32* %esi.global-to-local, align 4
  %v1_18b29 = icmp eq i32* %arg1, null
  br label %dec_label_pc_18b33

dec_label_pc_18b08:                               ; preds = %dec_label_pc_18b33
  %v1_18b08 = add i32 %v0_18b08, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_18b08 = inttoptr i32 %v1_18b08 to i32*
  %v3_18b08 = load i32, i32* %v2_18b08, align 4
  store i32 %v3_18b08, i32* %ebx.global-to-local, align 4
  %v1_18b0b = icmp eq i32 %v3_18b08, 0
  br i1 %v1_18b0b, label %bb118, label %dec_label_pc_18b0f

bb118:                                            ; preds = %dec_label_pc_18b08
  %v1_18b0d = call i32 @function_18b7a()
  br label %dec_label_pc_18b0f

dec_label_pc_18b0f:                               ; preds = %bb118, %dec_label_pc_18b08
  %v1_18b19 = add i32 %v3_18b08, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18b19 = inttoptr i32 %v1_18b19 to i8*
  store i8 0, i8* %v2_18b19, align 1
  %v0_18b27 = load i32, i32* %esi.global-to-local, align 4
  %v1_18b27 = inttoptr i32 %v0_18b27 to i32*
  %v2_18b27 = load i32, i32* %v1_18b27, align 4
  store i32 %v2_18b27, i32* %esi.global-to-local, align 4
  br i1 %v1_18b29, label %dec_label_pc_18b56, label %dec_label_pc_18b2d

dec_label_pc_18b2d:                               ; preds = %dec_label_pc_18b0f
  %v2_18b2d = load i32, i32* %arg1, align 4
  store i32 %v2_18b2d, i32* @eax, align 4
  %v1_18b2f = icmp eq i32 %v2_18b2d, 0
  br i1 %v1_18b2f, label %bb119, label %dec_label_pc_18b33

bb119:                                            ; preds = %dec_label_pc_18b2d
  %v3_18b31 = call i32 @function_18b9e(i32 %v3_18b08)
  store i32 %v3_18b31, i32* @eax, align 4
  %v0_18b33.pre.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_18b33

dec_label_pc_18b33:                               ; preds = %bb119, %dec_label_pc_18b2d, %dec_label_pc_18aff
  %v0_18b08 = phi i32 [ %v2_18aff, %dec_label_pc_18aff ], [ %v2_18b27, %dec_label_pc_18b2d ], [ %v0_18b33.pre.pre, %bb119 ]
  %v1_18b33 = phi i32 [ %v2_18aff, %dec_label_pc_18aff ], [ %v2_18b2d, %dec_label_pc_18b2d ], [ %v3_18b31, %bb119 ]
  %v12_18b33 = icmp eq i32 %v0_18b08, %v1_18b33
  %v1_18b35 = icmp eq i1 %v12_18b33, false
  br i1 %v1_18b35, label %dec_label_pc_18b08, label %dec_label_pc_18b37

dec_label_pc_18b37:                               ; preds = %dec_label_pc_18b33
  %v2_18b37 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_18b37, i32* @eax, align 4
  %v2_18b3e = call i32 @function_2c510(i32 %v2_18b37)
  %v1_18b47 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_18b47 = xor i32 %v1_18b47, %arg2
  %v3_18b47 = icmp eq i32 %v2_18b47, 0
  store i32 %v2_18b47, i32* @eax, align 4
  %v1_18b4e = icmp eq i1 %v3_18b47, false
  br i1 %v1_18b4e, label %bb120, label %dec_label_pc_18b50

bb120:                                            ; preds = %dec_label_pc_18b37
  %v2_18b4e = call i32 @function_18bc2()
  br label %dec_label_pc_18b50

dec_label_pc_18b50:                               ; preds = %bb120, %dec_label_pc_18b37
  %v0_18b55 = phi i32 [ %v2_18b4e, %bb120 ], [ %v2_18b47, %dec_label_pc_18b37 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v0_18b55

dec_label_pc_18b56:                               ; preds = %dec_label_pc_18b0f
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %v2_18aff, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_18b9e, { 1, 0 }
}

define i32 @function_18b7a() local_unnamed_addr {
dec_label_pc_18b7a:
  %v3_18b92 = load i32, i32* @eax, align 4
  ret i32 %v3_18b92
}

define i32 @function_18b9e(i32 %arg1) local_unnamed_addr {
dec_label_pc_18b9e:
  %v3_18bb6 = load i32, i32* @eax, align 4
  ret i32 %v3_18bb6
}

define i32 @function_18bc2() local_unnamed_addr {
dec_label_pc_18bc2:
  %stack_var_24 = alloca i32, align 4
  %v2_18bc9 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_18bc9, i32* @eax, align 4
  %v1_18bd0 = call i32 @function_2c510(i32 %v2_18bc9)
  ret i32 %v1_18bd0

; uselistorder directives
  uselistorder i32 (i32)* @function_2c510, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_18be0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_18be0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* @ebx, align 4
  %v0_18be8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_18bf4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18bf4 = inttoptr i32 %v1_18bf4 to i32*
  %v3_18bf4 = load i32, i32* %v2_18bf4, align 4
  store i32 %v3_18bf4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39240_type* @global_var_39240.3517 to i32), i32* %arg1, align 4
  %v1_18bfd = icmp eq i32 %v3_18bf4, 0
  br i1 %v1_18bfd, label %dec_label_pc_18c2c, label %dec_label_pc_18c01

dec_label_pc_18c01:                               ; preds = %dec_label_pc_18be0
  %v2_18c04 = call i32 @function_31690(i32 %v3_18bf4)
  %v0_18c09 = load i32, i32* @ebx, align 4
  %v1_18c09 = add i32 %v0_18c09, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_18c09, i32* @eax, align 4
  %v2_18c0f = call i32 @function_2c640(i32 %v1_18c09)
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_18c1f = load i32, i32* @ebx, align 4
  %v1_18c1f = inttoptr i32 %v0_18c1f to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_18c1f, align 4
  br i1 false, label %dec_label_pc_18c01.dec_label_pc_18c31_crit_edge, label %dec_label_pc_18c27

dec_label_pc_18c01.dec_label_pc_18c31_crit_edge:  ; preds = %dec_label_pc_18c01
  br label %dec_label_pc_18c31

dec_label_pc_18c27:                               ; preds = %dec_label_pc_18c01
  store i32 %v0_18be0, i32* %ebx.global-to-local, align 4
  %v0_18c2b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18c2b

dec_label_pc_18c2c:                               ; preds = %dec_label_pc_18be0
  %v1_18c2c = call i32 @function_2a256(i32 %v0_18be8)
  store i32 %v1_18c2c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18c31

dec_label_pc_18c31:                               ; preds = %dec_label_pc_18c01.dec_label_pc_18c31_crit_edge, %dec_label_pc_18c2c
  %v2_18c2c = phi i32 [ undef, %dec_label_pc_18c01.dec_label_pc_18c31_crit_edge ], [ %v1_18c2c, %dec_label_pc_18c2c ]
  ret i32 %v2_18c2c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_18c31, { 1, 0 }
}

define i32 @function_18c36() local_unnamed_addr {
dec_label_pc_18c36:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18c43(i32 %arg1) local_unnamed_addr {
dec_label_pc_18c43:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_18c43 = load i32, i32* %ebp.global-to-local, align 4
  %v1_18c43 = add i32 %v0_18c43, 1149831251
  %v2_18c43 = inttoptr i32 %v1_18c43 to i32*
  %v3_18c43 = load i32, i32* %v2_18c43, align 4
  %v4_18c43 = add i32 %v3_18c43, -1
  store i32 %v4_18c43, i32* %v2_18c43, align 4
  %v0_18c49 = load i32, i32* %eax.global-to-local, align 4
  %v11_18c49 = and i32 %v0_18c49, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_18c49, i32* @eax, align 4
  %v0_18c4b = load i32, i32* %edx.global-to-local, align 4
  %v1_18c4e = call i32 @function_2c640(i32 %v0_18c4b)
  store i32 %arg1, i32* @eax, align 4
  %v0_18c57 = call i32 @function_18c36()
  store i32 %v0_18c57, i32* %eax.global-to-local, align 4
  ret i32 %v0_18c57

; uselistorder directives
  uselistorder i32 (i32)* @function_2c640, { 1, 0 }
}

define i32 @_ZN15CCryptoKeyStoreD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18c60:
  %v1_18c76 = add i32 %arg1, 180
  %v2_18c76 = inttoptr i32 %v1_18c76 to i32*
  %v3_18c76 = load i32, i32* %v2_18c76, align 4
  ret i32 %v3_18c76

; uselistorder directives
  uselistorder i32 180, { 1, 0 }
}

define i32 @function_18cee() local_unnamed_addr {
dec_label_pc_18cee:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_18cee = load i32, i32* %ebx.global-to-local, align 4
  %v1_18cee = add i32 %v0_18cee, 144
  %v2_18cee = inttoptr i32 %v1_18cee to i32*
  %v3_18cee = load i32, i32* %v2_18cee, align 4
  %v1_18cf8 = add i32 %v0_18cee, ptrtoint (i32* @global_var_88.3507 to i32)
  store i32 %v1_18cf8, i32* @eax, align 4
  %sext = mul i32 %v1_18cf8, 16777216
  %v1_18d01 = sdiv i32 %sext, 16777216
  %v3_18d01 = call i32 @function_30140(i32 %v1_18d01, i32 %v3_18cee)
  store i32 %v3_18d01, i32* %eax.global-to-local, align 4
  %v0_18d06 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18d06 = add i32 %v0_18d06, 120
  %v2_18d06 = inttoptr i32 %v1_18d06 to i32*
  %v3_18d06 = load i32, i32* %v2_18d06, align 4
  store i32 %v3_18d06, i32* %eax.global-to-local, align 4
  %v1_18d09 = inttoptr i32 %v0_18d06 to i32*
  store i32 ptrtoint (i8** @global_var_8.3277 to i32), i32* %v1_18d09, align 4
  %v0_18d0f = load i32, i32* %eax.global-to-local, align 4
  %v0_18d13 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18d13 = add i32 %v0_18d13, ptrtoint (i8* @global_var_70.3282 to i32)
  store i32 %v1_18d13, i32* @eax, align 4
  %sext2 = mul i32 %v1_18d13, 16777216
  %v1_18d19 = sdiv i32 %sext2, 16777216
  %v3_18d19 = call i32 @function_2ff10(i32 %v1_18d19, i32 %v0_18d0f)
  store i32 %v3_18d19, i32* %eax.global-to-local, align 4
  %v0_18d1e = load i32, i32* %ebx.global-to-local, align 4
  %v1_18d1e = add i32 %v0_18d1e, ptrtoint (i32* @global_var_60.3454 to i32)
  %v2_18d1e = inttoptr i32 %v1_18d1e to i32*
  %v3_18d1e = load i32, i32* %v2_18d1e, align 4
  %v1_18d25 = add i32 %v0_18d1e, 88
  store i32 %v1_18d25, i32* @eax, align 4
  %sext3 = mul i32 %v1_18d25, 16777216
  %v1_18d2b = sdiv i32 %sext3, 16777216
  %v3_18d2b = call i32 @function_2fd70(i32 %v1_18d2b, i32 %v3_18d1e)
  store i32 %v3_18d2b, i32* %eax.global-to-local, align 4
  ret i32 %v3_18d2b

; uselistorder directives
  uselistorder i8* @global_var_70.3282, { 1, 0 }
}

define i32 @function_18d68() local_unnamed_addr {
dec_label_pc_18d68:
  %v0_18d68 = call i32 @_ZNSsC1EPKcRKSaIcE.2600()
  ret i32 %v0_18d68
}

define i32 @function_18d6d() local_unnamed_addr {
dec_label_pc_18d6d:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_18d72() local_unnamed_addr {
dec_label_pc_18d72:
  %eax.global-to-local = alloca i32, align 4
  %v3_18d8a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_18d8a
}

define i32 @function_18d96() local_unnamed_addr {
dec_label_pc_18d96:
  %ebx.global-to-local = alloca i32, align 4
  %v0_18d96 = call i32 @function_29f64()
  %v0_18d9d = load i32, i32* %ebx.global-to-local, align 4
  %v1_18d9d = add i32 %v0_18d9d, 184
  store i32 %v1_18d9d, i32* @eax, align 4
  %v1_18da6 = call i32 @function_2c6c0(i32 %v1_18d9d)
  %v1_18dab = add i32 %v0_18d9d, 176
  %v2_18dab = inttoptr i32 %v1_18dab to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_18dab, align 4
  %v0_18db5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18db5 = add i32 %v0_18db5, ptrtoint (i32* @global_var_a0.3519 to i32)
  store i32 %v1_18db5, i32* @eax, align 4
  %v1_18dbe = call i32 @_ZZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EERKSsb10ChangeTypeNS_8functionIFvSB_SL_SN_bSO_EEEEENS1_5mutexEEEEptEvE19__PRETTY_FUNCTION__(i32 %v1_18db5)
  %v1_18dc3 = add i32 %v0_18db5, 144
  %v2_18dc3 = inttoptr i32 %v1_18dc3 to i32*
  %v3_18dc3 = load i32, i32* %v2_18dc3, align 4
  %v1_18dcd = add i32 %v0_18db5, ptrtoint (i32* @global_var_88.3507 to i32)
  store i32 %v1_18dcd, i32* @eax, align 4
  %v2_18dd6 = call i32 @function_30140(i32 %v1_18dcd, i32 %v3_18dc3)
  store i32 %v2_18dd6, i32* @eax, align 4
  %v0_18ddb = load i32, i32* %ebx.global-to-local, align 4
  %v1_18dde = call i32 @function_2ff80(i32 %v0_18ddb)
  ret i32 %v1_18dde

; uselistorder directives
  uselistorder i32 %v0_18db5, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_30140, { 1, 0 }
}

define i32 @function_18deb() local_unnamed_addr {
dec_label_pc_18deb:
  %eax.global-to-local = alloca i32, align 4
  %v0_18deb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18deb
}

define i32 @function_18e0a() local_unnamed_addr {
dec_label_pc_18e0a:
  %eax.global-to-local = alloca i32, align 4
  %v0_18e0a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18e0a
}

define i32 @_ZN15CCryptoKeyStoreD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e10:
  %ebx.global-to-local = alloca i32, align 4
  %v0_18e10 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  %v1_18e27 = call i32 @function_31a70(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_18e39

bb:                                               ; preds = %dec_label_pc_18e10
  br label %dec_label_pc_18e39

dec_label_pc_18e39:                               ; preds = %bb, %dec_label_pc_18e10
  store i32 %v0_18e10, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_18e46() local_unnamed_addr {
dec_label_pc_18e46:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_18e50:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_18e50 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_18e58 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_18e64 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18e64 = inttoptr i32 %v1_18e64 to i32*
  %v3_18e64 = load i32, i32* %v2_18e64, align 4
  store i32 %v3_18e64, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39240_type* @global_var_39240.3517 to i32), i32* %arg1, align 4
  %v0_18e6d = load i32, i32* @eax, align 4
  %v1_18e6d = icmp eq i32 %v0_18e6d, 0
  br i1 %v1_18e6d, label %bb, label %dec_label_pc_18e71

bb:                                               ; preds = %dec_label_pc_18e50
  %v2_18e6f = call i32 @function_18ea4(i32 %v0_18e58)
  store i32 %v2_18e6f, i32* @eax, align 4
  br label %dec_label_pc_18e71

dec_label_pc_18e71:                               ; preds = %bb, %dec_label_pc_18e50
  %v0_18e71 = phi i32 [ %v2_18e6f, %bb ], [ %v0_18e6d, %dec_label_pc_18e50 ]
  %v2_18e74 = call i32 @function_31900(i32 %v0_18e71)
  %v0_18e79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18e79 = add i32 %v0_18e79, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_18e79, i32* @eax, align 4
  %v2_18e7f = call i32 @function_2c8b0(i32 %v1_18e79)
  store i32 0, i32* @eax, align 4
  %v1_18e8f = inttoptr i32 %v0_18e79 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_18e8f, align 4
  br i1 false, label %bb105, label %dec_label_pc_18e71.dec_label_pc_18e97_crit_edge

dec_label_pc_18e71.dec_label_pc_18e97_crit_edge:  ; preds = %dec_label_pc_18e71
  %v5_18e9e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18e97

bb105:                                            ; preds = %dec_label_pc_18e71
  br label %dec_label_pc_18e97

dec_label_pc_18e97:                               ; preds = %dec_label_pc_18e71.dec_label_pc_18e97_crit_edge, %bb105
  %v5_18e9e = phi i32 [ %v5_18e9e.pre, %dec_label_pc_18e71.dec_label_pc_18e97_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_18e50, i32* %ebx.global-to-local, align 4
  ret i32 %v5_18e9e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_18e97, { 1, 0 }
}

define i32 @function_18ea4(i32 %arg1) local_unnamed_addr {
dec_label_pc_18ea4:
  %v0_18ec3 = load i32, i32* @eax, align 4
  ret i32 %v0_18ec3
}

define i32 @function_18ec8() local_unnamed_addr {
dec_label_pc_18ec8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18ecd() local_unnamed_addr {
dec_label_pc_18ecd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18eda(i32 %arg1) local_unnamed_addr {
dec_label_pc_18eda:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_18eda = load i32, i32* %ebp.global-to-local, align 4
  %v1_18eda = add i32 %v0_18eda, 1149831251
  %v2_18eda = inttoptr i32 %v1_18eda to i32*
  %v3_18eda = load i32, i32* %v2_18eda, align 4
  %v4_18eda = add i32 %v3_18eda, -1
  store i32 %v4_18eda, i32* %v2_18eda, align 4
  %v0_18ee0 = load i32, i32* %eax.global-to-local, align 4
  %v11_18ee0 = and i32 %v0_18ee0, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_18ee0, i32* @eax, align 4
  %v0_18ee2 = load i32, i32* %edx.global-to-local, align 4
  %v1_18ee5 = call i32 @function_2c8b0(i32 %v0_18ee2)
  store i32 %arg1, i32* @eax, align 4
  %v0_18eee = call i32 @function_18ecd()
  store i32 %v0_18eee, i32* %eax.global-to-local, align 4
  ret i32 %v0_18eee

; uselistorder directives
  uselistorder i32 (i32)* @function_2c8b0, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal1IvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_18ef0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_18ef0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_18ef8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_18f04 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18f04 = inttoptr i32 %v1_18f04 to i32*
  %v3_18f04 = load i32, i32* %v2_18f04, align 4
  store i32 %v3_18f04, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39240_type* @global_var_39240.3517 to i32), i32* %arg1, align 4
  %v0_18f0d = load i32, i32* @eax, align 4
  %v1_18f0d = icmp eq i32 %v0_18f0d, 0
  br i1 %v1_18f0d, label %bb, label %dec_label_pc_18f11

bb:                                               ; preds = %dec_label_pc_18ef0
  %v2_18f0f = call i32 @function_18f44(i32 %v0_18ef8)
  store i32 %v2_18f0f, i32* @eax, align 4
  br label %dec_label_pc_18f11

dec_label_pc_18f11:                               ; preds = %bb, %dec_label_pc_18ef0
  %v0_18f11 = phi i32 [ %v2_18f0f, %bb ], [ %v0_18f0d, %dec_label_pc_18ef0 ]
  %v2_18f14 = call i32 @function_319a0(i32 %v0_18f11)
  %v0_18f19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18f19 = add i32 %v0_18f19, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_18f19, i32* @eax, align 4
  %v2_18f1f = call i32 @function_2c950(i32 %v1_18f19)
  store i32 0, i32* @eax, align 4
  %v1_18f2f = inttoptr i32 %v0_18f19 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_18f2f, align 4
  br i1 false, label %bb105, label %dec_label_pc_18f11.dec_label_pc_18f37_crit_edge

dec_label_pc_18f11.dec_label_pc_18f37_crit_edge:  ; preds = %dec_label_pc_18f11
  %v5_18f3e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_18f37

bb105:                                            ; preds = %dec_label_pc_18f11
  br label %dec_label_pc_18f37

dec_label_pc_18f37:                               ; preds = %dec_label_pc_18f11.dec_label_pc_18f37_crit_edge, %bb105
  %v5_18f3e = phi i32 [ %v5_18f3e.pre, %dec_label_pc_18f11.dec_label_pc_18f37_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_18ef0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_18f3e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_18f37, { 1, 0 }
}

define i32 @function_18f44(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f44:
  %v0_18f44 = call i32 @function_2a566()
  ret i32 %v0_18f44
}

define i32 @function_18f49() local_unnamed_addr {
dec_label_pc_18f49:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18f4e() local_unnamed_addr {
dec_label_pc_18f4e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18f5b(i32 %arg1) local_unnamed_addr {
dec_label_pc_18f5b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_18f5b = load i32, i32* %ebp.global-to-local, align 4
  %v1_18f5b = add i32 %v0_18f5b, 1149831251
  %v2_18f5b = inttoptr i32 %v1_18f5b to i32*
  %v3_18f5b = load i32, i32* %v2_18f5b, align 4
  %v4_18f5b = add i32 %v3_18f5b, -1
  store i32 %v4_18f5b, i32* %v2_18f5b, align 4
  %v0_18f61 = load i32, i32* %eax.global-to-local, align 4
  %v11_18f61 = and i32 %v0_18f61, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_18f61, i32* @eax, align 4
  %v0_18f63 = load i32, i32* %edx.global-to-local, align 4
  %v1_18f66 = call i32 @function_2c950(i32 %v0_18f63)
  store i32 %arg1, i32* @eax, align 4
  %v0_18f6f = call i32 @function_18f4e()
  store i32 %v0_18f6f, i32* %eax.global-to-local, align 4
  ret i32 %v0_18f6f

; uselistorder directives
  uselistorder i32 (i32)* @function_2c950, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvP15CCryptoKeyStoreENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_18f80:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_18f80 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_18f88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_18f94 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_18f94 = inttoptr i32 %v1_18f94 to i32*
  %v3_18f94 = load i32, i32* %v2_18f94, align 4
  store i32 %v3_18f94, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39240_type* @global_var_39240.3517 to i32), i32* %arg1, align 4
  %v1_18f9d = icmp eq i32 %v3_18f94, 0
  br i1 %v1_18f9d, label %dec_label_pc_18fcc, label %dec_label_pc_18fa1

dec_label_pc_18fa1:                               ; preds = %dec_label_pc_18f80
  %v2_18fa4 = call i32 @function_31a30(i32 %v3_18f94)
  %v0_18fa9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18fa9 = add i32 %v0_18fa9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_18fa9, i32* @eax, align 4
  %v2_18faf = call i32 @function_2c9e0(i32 %v1_18fa9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_18fbf = inttoptr i32 %v0_18fa9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_18fbf, align 4
  br i1 false, label %dec_label_pc_18fa1.dec_label_pc_18fd1_crit_edge, label %dec_label_pc_18fc7

dec_label_pc_18fa1.dec_label_pc_18fd1_crit_edge:  ; preds = %dec_label_pc_18fa1
  br label %dec_label_pc_18fd1

dec_label_pc_18fc7:                               ; preds = %dec_label_pc_18fa1
  store i32 %v0_18f80, i32* %ebx.global-to-local, align 4
  %v0_18fcb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18fcb

dec_label_pc_18fcc:                               ; preds = %dec_label_pc_18f80
  %v1_18fcc = call i32 @function_2a5f6(i32 %v0_18f88)
  store i32 %v1_18fcc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18fd1

dec_label_pc_18fd1:                               ; preds = %dec_label_pc_18fa1.dec_label_pc_18fd1_crit_edge, %dec_label_pc_18fcc
  %v2_18fcc = phi i32 [ undef, %dec_label_pc_18fa1.dec_label_pc_18fd1_crit_edge ], [ %v1_18fcc, %dec_label_pc_18fcc ]
  ret i32 %v2_18fcc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 ptrtoint (%vtable_39240_type* @global_var_39240.3517 to i32), { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_18fd1, { 1, 0 }
}

define i32 @function_18fd6() local_unnamed_addr {
dec_label_pc_18fd6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18fe3(i32 %arg1) local_unnamed_addr {
dec_label_pc_18fe3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_18fe3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_18fe3 = add i32 %v0_18fe3, 1149831251
  %v2_18fe3 = inttoptr i32 %v1_18fe3 to i32*
  %v3_18fe3 = load i32, i32* %v2_18fe3, align 4
  %v4_18fe3 = add i32 %v3_18fe3, -1
  store i32 %v4_18fe3, i32* %v2_18fe3, align 4
  %v0_18fe9 = load i32, i32* %eax.global-to-local, align 4
  %v11_18fe9 = and i32 %v0_18fe9, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_18fe9, i32* @eax, align 4
  %v0_18feb = load i32, i32* %edx.global-to-local, align 4
  %v1_18fee = call i32 @function_2c9e0(i32 %v0_18feb)
  store i32 %arg1, i32* @eax, align 4
  %v0_18ff7 = call i32 @function_18fd6()
  store i32 %v0_18ff7, i32* %eax.global-to-local, align 4
  ret i32 %v0_18ff7

; uselistorder directives
  uselistorder i32 (i32)* @function_2c9e0, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvNS4_IPhS1_EET_SA_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19000:
  store i32 %arg4, i32* @eax, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v12_19028 = icmp eq i32 %arg3, %arg4
  br i1 %v12_19028, label %bb, label %dec_label_pc_19038

bb:                                               ; preds = %dec_label_pc_19000
  %v2_19036 = call i32 @function_190a4(i32 %arg2)
  %v0_19038.pre = load i32, i32* @ebx, align 4
  %v1_19040.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_19038

dec_label_pc_19038:                               ; preds = %bb, %dec_label_pc_19000
  %v1_19040 = phi i32 [ %v1_19040.pre, %bb ], [ %arg3, %dec_label_pc_19000 ]
  %v0_1903b = phi i32 [ %v2_19036, %bb ], [ %arg4, %dec_label_pc_19000 ]
  %v0_1903d = phi i32 [ %v0_19038.pre, %bb ], [ %arg1, %dec_label_pc_19000 ]
  %v1_19038 = add i32 %v0_1903d, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19038 = inttoptr i32 %v1_19038 to i32*
  %v3_19038 = load i32, i32* %v2_19038, align 4
  store i32 %v3_19038, i32* @ebp, align 4
  %v1_1903d = add i32 %v0_1903d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1903d = inttoptr i32 %v1_1903d to i32*
  %v3_1903d = load i32, i32* %v2_1903d, align 4
  %v2_19040 = sub i32 %v0_1903b, %v1_19040
  store i32 %v2_19040, i32* @esi, align 4
  %v2_19042 = sub i32 %v3_1903d, %v3_19038
  %tmp124 = icmp ugt i32 %v2_19040, %v2_19042
  br i1 %tmp124, label %bb120, label %dec_label_pc_1904c

bb120:                                            ; preds = %dec_label_pc_19038
  %v4_19046 = call i32 @function_190d0()
  %v0_1904c.pre = load i32, i32* @ebp, align 4
  %v0_19052.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1904c

dec_label_pc_1904c:                               ; preds = %dec_label_pc_19038, %bb120
  %v0_1905d7 = phi i32 [ %v0_1903b, %dec_label_pc_19038 ], [ %v4_19046, %bb120 ]
  %v0_19052 = phi i32 [ %v2_19040, %dec_label_pc_19038 ], [ %v0_19052.pre, %bb120 ]
  %v0_1904c = phi i32 [ %v3_19038, %dec_label_pc_19038 ], [ %v0_1904c.pre, %bb120 ]
  %v5_1904e = sub i32 %v0_1904c, %arg2
  %v15_1904e = icmp eq i32 %v5_1904e, 0
  store i32 %v5_1904e, i32* @edx, align 4
  %v7_19052 = icmp ult i32 %v0_19052, %v5_1904e
  br i1 %v7_19052, label %bb121, label %dec_label_pc_1905a

bb121:                                            ; preds = %dec_label_pc_1904c
  %v1_19054 = call i32 @function_19180()
  br label %dec_label_pc_1905a

dec_label_pc_1905a:                               ; preds = %bb121, %dec_label_pc_1904c
  %v0_1905d = phi i32 [ %v1_19054, %bb121 ], [ %v0_1905d7, %dec_label_pc_1904c ]
  %v0_1905a = load i32, i32* @edi, align 4
  %v2_1905a = mul i32 %v5_1904e, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1905a = add i32 %v0_1905a, %v2_1905a
  %v2_1905d = sub i32 %v0_1905d, %v3_1905a
  %v12_1905d = icmp eq i32 %v2_1905d, 0
  store i32 %v2_1905d, i32* @eax, align 4
  %v1_19063 = icmp eq i1 %v12_1905d, false
  br i1 %v1_19063, label %bb122, label %dec_label_pc_19069

bb122:                                            ; preds = %dec_label_pc_1905a
  %v3_19063 = call i32 @function_19248(i32 %v3_1905a)
  store i32 %v3_19063, i32* @eax, align 4
  br label %dec_label_pc_19069

dec_label_pc_19069:                               ; preds = %bb122, %dec_label_pc_1905a
  %v0_19069 = load i32, i32* @esi, align 4
  %v2_19069 = sub i32 %v0_19069, %v5_1904e
  %v0_1906b = load i32, i32* @ebp, align 4
  %v2_1906b = add i32 %v0_1906b, %v2_19069
  store i32 %v2_1906b, i32* @ebp, align 4
  %v1_1906f = load i32, i32* @ebx, align 4
  %v2_1906f = add i32 %v1_1906f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1906f = inttoptr i32 %v2_1906f to i32*
  store i32 %v2_1906b, i32* %v3_1906f, align 4
  br i1 %v15_1904e, label %bb123, label %dec_label_pc_19069.dec_label_pc_19074_crit_edge

dec_label_pc_19069.dec_label_pc_19074_crit_edge:  ; preds = %dec_label_pc_19069
  %v4_19083.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19074

bb123:                                            ; preds = %dec_label_pc_19069
  %v1_19072 = call i32 @function_19093()
  br label %dec_label_pc_19074

dec_label_pc_19074:                               ; preds = %dec_label_pc_19069.dec_label_pc_19074_crit_edge, %bb123
  %v4_19083 = phi i32 [ %v4_19083.pre, %dec_label_pc_19069.dec_label_pc_19074_crit_edge ], [ %v1_19072, %bb123 ]
  ret i32 %v4_19083

; uselistorder directives
  uselistorder i32 %v2_19040, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_19074, { 1, 0 }
  uselistorder label %dec_label_pc_1904c, { 1, 0 }
}

define i32 @function_19093() local_unnamed_addr {
dec_label_pc_19093:
  %eax.global-to-local = alloca i32, align 4
  %v0_19097 = load i32, i32* @ebp, align 4
  %v1_19097 = load i32, i32* @edx, align 4
  %v2_19097 = add i32 %v1_19097, %v0_19097
  %v1_19099 = load i32, i32* @ebx, align 4
  %v2_19099 = add i32 %v1_19099, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_19099 = inttoptr i32 %v2_19099 to i32*
  store i32 %v2_19097, i32* %v3_19099, align 4
  %v0_1909c = load i32, i32* %eax.global-to-local, align 4
  %v1_1909c = load i32, i32* @edi, align 4
  %v2_1909c = sub i32 %v0_1909c, %v1_1909c
  store i32 %v2_1909c, i32* %eax.global-to-local, align 4
  ret i32 %v2_1909c
}

define i32 @function_190a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_190a4:
  %v1_190a8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_190a8 = icmp eq i32 %v1_190a8, %arg1
  %v1_190af = icmp eq i1 %v3_190a8, false
  br i1 %v1_190af, label %bb, label %dec_label_pc_190a4.dec_label_pc_190b5_crit_edge

dec_label_pc_190a4.dec_label_pc_190b5_crit_edge:  ; preds = %dec_label_pc_190a4
  %v0_190c8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_190b5

bb:                                               ; preds = %dec_label_pc_190a4
  %v2_190af = call i32 @function_19285()
  br label %dec_label_pc_190b5

dec_label_pc_190b5:                               ; preds = %dec_label_pc_190a4.dec_label_pc_190b5_crit_edge, %bb
  %v0_190c8 = phi i32 [ %v0_190c8.pre, %dec_label_pc_190a4.dec_label_pc_190b5_crit_edge ], [ %v2_190af, %bb ]
  ret i32 %v0_190c8

; uselistorder directives
  uselistorder label %dec_label_pc_190b5, { 1, 0 }
}

define i32 @function_190d0() local_unnamed_addr {
dec_label_pc_190d0:
  %ebp.global-to-local = alloca i32, align 4
  %v2_190d0 = load i32, i32* @ebx, align 4
  store i32 %v2_190d0, i32* @eax, align 4
  %v0_190d2 = load i32, i32* @ebp, align 4
  %v2_190d2 = sub i32 %v0_190d2, %v2_190d0
  store i32 %v2_190d2, i32* %ebp.global-to-local, align 4
  %v1_190d6 = sub i32 -1, %v2_190d2
  %v0_190d8 = load i32, i32* @esi, align 4
  %tmp7 = icmp ugt i32 %v0_190d8, %v1_190d6
  br i1 %tmp7, label %bb, label %dec_label_pc_190e0

bb:                                               ; preds = %dec_label_pc_190d0
  %v4_190da = call i32 @function_1928a()
  store i32 %v4_190da, i32* @eax, align 4
  %v0_190e0.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_190e0.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_190e0

dec_label_pc_190e0:                               ; preds = %dec_label_pc_190d0, %bb
  %v3_190fb4 = phi i32 [ %v2_190d0, %dec_label_pc_190d0 ], [ %v4_190da, %bb ]
  %v0_190e2 = phi i32 [ %v0_190d8, %dec_label_pc_190d0 ], [ %v1_190e0.pre, %bb ]
  %v3_190e4 = phi i32 [ %v2_190d2, %dec_label_pc_190d0 ], [ %v0_190e0.pre, %bb ]
  %v7_190e0 = icmp ult i32 %v3_190e4, %v0_190e2
  %v1_190e4 = icmp eq i1 %v7_190e0, false
  %v4_190e4 = select i1 %v1_190e4, i32 %v3_190e4, i32 %v0_190e2
  %v2_190e7 = add i32 %v4_190e4, %v3_190e4
  %v7_190e7 = icmp ult i32 %v2_190e7, %v3_190e4
  store i32 %v2_190e7, i32* @ebp, align 4
  %v1_190f1 = icmp eq i1 %v7_190e7, false
  br i1 %v1_190f1, label %bb6, label %dec_label_pc_190f7

bb6:                                              ; preds = %dec_label_pc_190e0
  %v3_190f1 = call i32 @function_19230(i32 -1)
  br label %dec_label_pc_190f7

dec_label_pc_190f7:                               ; preds = %bb6, %dec_label_pc_190e0
  %v3_190fb = phi i32 [ %v3_190f1, %bb6 ], [ %v3_190fb4, %dec_label_pc_190e0 ]
  ret i32 %v3_190fb

; uselistorder directives
  uselistorder i32 %v3_190e4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_190d8, { 1, 0 }
  uselistorder i32 %v2_190d2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_190e0, { 1, 0 }
}

define i32 @function_19107(i32 %arg1) local_unnamed_addr {
dec_label_pc_19107:
  store i32 0, i32* @edx, align 4
  %v1_1910d = load i32, i32* @eax, align 4
  %v12_1910d = icmp eq i32 %v1_1910d, %arg1
  br i1 %v12_1910d, label %bb, label %dec_label_pc_19115

bb:                                               ; preds = %dec_label_pc_19107
  %v2_19113 = call i32 @function_1912d(i32 0)
  br label %dec_label_pc_19115

dec_label_pc_19115:                               ; preds = %bb, %dec_label_pc_19107
  %v4_19120 = phi i32 [ %v2_19113, %bb ], [ %v1_1910d, %dec_label_pc_19107 ]
  ret i32 %v4_19120

; uselistorder directives
  uselistorder i32 %v1_1910d, { 1, 0 }
}

define i32 @function_1912d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1912d:
  %edx.global-to-local = alloca i32, align 4
  %v0_1912d = load i32, i32* @edx, align 4
  %v1_1912d = load i32, i32* @ebp, align 4
  %v2_1912d = add i32 %v1_1912d, %v0_1912d
  store i32 %v2_1912d, i32* %edx.global-to-local, align 4
  %v0_1912f = load i32, i32* @esi, align 4
  %v1_1912f = icmp eq i32 %v0_1912f, 0
  %v1_19131 = icmp eq i1 %v1_1912f, false
  br i1 %v1_19131, label %bb, label %dec_label_pc_19137

bb:                                               ; preds = %dec_label_pc_1912d
  %v2_19131 = call i32 @function_19268()
  %v0_1913a.pre = load i32, i32* @esi, align 4
  %v1_1913a.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_19137

dec_label_pc_19137:                               ; preds = %bb, %dec_label_pc_1912d
  %v1_1913a = phi i32 [ %v1_1913a.pre, %bb ], [ %v2_1912d, %dec_label_pc_1912d ]
  %v0_1913a = phi i32 [ %v0_1913a.pre, %bb ], [ %v0_1912f, %dec_label_pc_1912d ]
  %v0_19137 = load i32, i32* @ebx, align 4
  %v1_19137 = add i32 %v0_19137, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19137 = inttoptr i32 %v1_19137 to i32*
  %v3_19137 = load i32, i32* %v2_19137, align 4
  %v2_1913a = add i32 %v0_1913a, %v1_1913a
  store i32 %v2_1913a, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v5_1913e = sub i32 %v3_19137, %arg1
  %v15_1913e = icmp eq i32 %v5_1913e, 0
  br i1 %v15_1913e, label %bb7, label %dec_label_pc_19144

bb7:                                              ; preds = %dec_label_pc_19137
  %v1_19142 = call i32 @function_1915a()
  br label %dec_label_pc_19144

dec_label_pc_19144:                               ; preds = %bb7, %dec_label_pc_19137
  %v0_19148 = phi i32 [ %v1_19142, %bb7 ], [ %v5_1913e, %dec_label_pc_19137 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  store i32 %v0_19148, i32* @edi, align 4
  ret i32 %v0_19148

; uselistorder directives
  uselistorder i32 %v0_19148, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1915a() local_unnamed_addr {
dec_label_pc_1915a:
  %v2_1915a = load i32, i32* @ebx, align 4
  store i32 %v2_1915a, i32* @eax, align 4
  %v0_1915c = load i32, i32* @esi, align 4
  %v1_1915c = load i32, i32* @edi, align 4
  %v2_1915c = add i32 %v1_1915c, %v0_1915c
  store i32 %v2_1915c, i32* @esi, align 4
  %v1_1915e = icmp eq i32 %v2_1915a, 0
  br i1 %v1_1915e, label %bb, label %dec_label_pc_19162

bb:                                               ; preds = %dec_label_pc_1915a
  %v1_19160 = call i32 @function_1916a()
  br label %dec_label_pc_19162

dec_label_pc_19162:                               ; preds = %bb, %dec_label_pc_1915a
  %v3_19162 = phi i32 [ %v1_19160, %bb ], [ %v2_1915a, %dec_label_pc_1915a ]
  ret i32 %v3_19162
}

define i32 @function_1916a() local_unnamed_addr {
dec_label_pc_1916a:
  %ebp.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_1916a = load i32, i32* @ebp, align 4
  %v1_1916a = load i32, i32* @ebx, align 4
  %v2_1916a = inttoptr i32 %v1_1916a to i32*
  store i32 %v0_1916a, i32* %v2_1916a, align 4
  %v0_1916c = load i32, i32* @ebp, align 4
  %v5_1916c = add i32 %v0_1916c, %tmp
  store i32 %v5_1916c, i32* %ebp.global-to-local, align 4
  %v0_19170 = load i32, i32* @esi, align 4
  %v1_19170 = load i32, i32* @ebx, align 4
  %v2_19170 = add i32 %v1_19170, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_19170 = inttoptr i32 %v2_19170 to i32*
  store i32 %v0_19170, i32* %v3_19170, align 4
  %v0_19173 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19173 = load i32, i32* @ebx, align 4
  %v2_19173 = add i32 %v1_19173, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_19173 = inttoptr i32 %v2_19173 to i32*
  store i32 %v0_19173, i32* %v3_19173, align 4
  %v1_19176 = call i32 @function_190a4(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_19176
}

define i32 @function_19180() local_unnamed_addr {
dec_label_pc_19180:
  %v0_19180 = load i32, i32* @ebp, align 4
  %v1_19184 = load i32, i32* @esi, align 4
  %v2_19184 = sub i32 %v0_19180, %v1_19184
  store i32 %v2_19184, i32* @edx, align 4
  store i32 %v0_19180, i32* @ecx, align 4
  %v12_19188 = icmp eq i32 %v1_19184, 0
  br i1 %v12_19188, label %bb, label %dec_label_pc_19190

bb:                                               ; preds = %dec_label_pc_19180
  %v2_1918e = call i32 @function_191ab(i32 0)
  br label %dec_label_pc_19190

dec_label_pc_19190:                               ; preds = %bb, %dec_label_pc_19180
  %v3_1919c = phi i32 [ %v2_1918e, %bb ], [ %v1_19184, %dec_label_pc_19180 ]
  ret i32 %v3_1919c
}

define i32 @function_191ab(i32 %arg1) local_unnamed_addr {
dec_label_pc_191ab:
  %v0_191ab = load i32, i32* @edx, align 4
  %v5_191ab = sub i32 %v0_191ab, %arg1
  %v15_191ab = icmp eq i32 %v5_191ab, 0
  store i32 %v5_191ab, i32* @edx, align 4
  %v0_191af = load i32, i32* @ecx, align 4
  %v1_191af = load i32, i32* @esi, align 4
  %v2_191af = mul i32 %v1_191af, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_191af = add i32 %v2_191af, %v0_191af
  store i32 %v3_191af, i32* @eax, align 4
  %v1_191b2 = load i32, i32* @ebx, align 4
  %v2_191b2 = add i32 %v1_191b2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_191b2 = inttoptr i32 %v2_191b2 to i32*
  store i32 %v3_191af, i32* %v3_191b2, align 4
  br i1 %v15_191ab, label %bb, label %dec_label_pc_191ab.dec_label_pc_191b7_crit_edge

dec_label_pc_191ab.dec_label_pc_191b7_crit_edge:  ; preds = %dec_label_pc_191ab
  %v4_191c4.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_191b7

bb:                                               ; preds = %dec_label_pc_191ab
  %v1_191b5 = call i32 @function_191cd()
  br label %dec_label_pc_191b7

dec_label_pc_191b7:                               ; preds = %dec_label_pc_191ab.dec_label_pc_191b7_crit_edge, %bb
  %v4_191c4 = phi i32 [ %v4_191c4.pre, %dec_label_pc_191ab.dec_label_pc_191b7_crit_edge ], [ %v1_191b5, %bb ]
  %v0_191bb = load i32, i32* @ebp, align 4
  %v1_191bb = load i32, i32* @edx, align 4
  %v2_191bb = sub i32 %v0_191bb, %v1_191bb
  store i32 %v2_191bb, i32* @ebp, align 4
  ret i32 %v4_191c4

; uselistorder directives
  uselistorder label %dec_label_pc_191b7, { 1, 0 }
}

define i32 @function_191cd() local_unnamed_addr {
dec_label_pc_191cd:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v0_191cd = load i32, i32* @esi, align 4
  %v1_191cd = icmp eq i32 %v0_191cd, 0
  br i1 %v1_191cd, label %bb, label %dec_label_pc_191d5

bb:                                               ; preds = %dec_label_pc_191cd
  %v2_191cf = call i32 @function_190a4(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_191d5

dec_label_pc_191d5:                               ; preds = %bb, %dec_label_pc_191cd
  %v1_191d9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_191d9 = xor i32 %v1_191d9, %tmp10
  %v3_191d9 = icmp eq i32 %v2_191d9, 0
  store i32 %v2_191d9, i32* @eax, align 4
  %v1_191e0 = icmp eq i1 %v3_191d9, false
  br i1 %v1_191e0, label %bb11, label %dec_label_pc_191e6

bb11:                                             ; preds = %dec_label_pc_191d5
  %v2_191e0 = call i32 @function_19285()
  br label %dec_label_pc_191e6

dec_label_pc_191e6:                               ; preds = %bb11, %dec_label_pc_191d5
  %v0_1920e = phi i32 [ %v2_191e0, %bb11 ], [ %v2_191d9, %dec_label_pc_191d5 ]
  ret i32 %v0_1920e

; uselistorder directives
  uselistorder i32 (i32)* @function_190a4, { 1, 2, 0 }
}

define i32 @function_19210(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19210:
  %v1_19214 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19214 = icmp eq i32 %v1_19214, %arg2
  %v1_1921b = icmp eq i1 %v3_19214, false
  br i1 %v1_1921b, label %bb, label %dec_label_pc_19210.dec_label_pc_1921d_crit_edge

dec_label_pc_19210.dec_label_pc_1921d_crit_edge:  ; preds = %dec_label_pc_19210
  %v0_1922d.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1921d

bb:                                               ; preds = %dec_label_pc_19210
  %v2_1921b = call i32 @function_19285()
  br label %dec_label_pc_1921d

dec_label_pc_1921d:                               ; preds = %dec_label_pc_19210.dec_label_pc_1921d_crit_edge, %bb
  %v0_1922d = phi i32 [ %v0_1922d.pre, %dec_label_pc_19210.dec_label_pc_1921d_crit_edge ], [ %v2_1921b, %bb ]
  ret i32 %v0_1922d

; uselistorder directives
  uselistorder i32 ()* @function_19285, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1921d, { 1, 0 }
}

define i32 @function_19230(i32 %arg1) local_unnamed_addr {
dec_label_pc_19230:
  %v0_19230 = load i32, i32* @ebp, align 4
  %v1_19230 = icmp eq i32 %v0_19230, 0
  %v1_19232 = icmp eq i1 %v1_19230, false
  br i1 %v1_19232, label %bb, label %dec_label_pc_19234

bb:                                               ; preds = %dec_label_pc_19230
  %v2_19232 = call i32 @function_19296()
  store i32 %v2_19232, i32* @eax, align 4
  br label %dec_label_pc_19234

dec_label_pc_19234:                               ; preds = %bb, %dec_label_pc_19230
  store i32 0, i32* @ebp, align 4
  %v1_1923e = call i32 @function_19107(i32 0)
  ret i32 %v1_1923e
}

define i32 @function_19248(i32 %arg1) local_unnamed_addr {
dec_label_pc_19248:
  %v4_19253 = load i32, i32* @eax, align 4
  ret i32 %v4_19253
}

define i32 @function_1925b() local_unnamed_addr {
dec_label_pc_1925b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1925b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1925b = add i32 %v0_1925b, 1418396779
  %v2_1925b = inttoptr i32 %v1_1925b to i32*
  %v3_1925b = load i32, i32* %v2_1925b, align 4
  %v4_1925b = add i32 %v3_1925b, -1
  store i32 %v4_1925b, i32* %v2_1925b, align 4
  %v0_19261 = load i32, i32* %eax.global-to-local, align 4
  %v11_19261 = and i32 %v0_19261, -220
  store i32 %v11_19261, i32* %eax.global-to-local, align 4
  ret i32 %v11_19261

; uselistorder directives
  uselistorder i32 %v11_19261, { 1, 0 }
}

define i32 @function_19268() local_unnamed_addr {
dec_label_pc_19268:
  %v4_19273 = load i32, i32* @eax, align 4
  ret i32 %v4_19273
}

define i32 @function_1927c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1927c:
  %eax.global-to-local = alloca i32, align 4
  %v0_19280 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19280
}

define i32 @function_19285() local_unnamed_addr {
dec_label_pc_19285:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1928a() local_unnamed_addr {
dec_label_pc_1928a:
  %v3_1928a = load i32, i32* @eax, align 4
  ret i32 %v3_1928a
}

define i32 @function_19296() local_unnamed_addr {
dec_label_pc_19296:
  %v0_1929a = load i32, i32* @eax, align 4
  ret i32 %v0_1929a
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_range_insertIPhEEvN9__gnu_cxx17__normal_iteratorIS3_S1_EET_S7_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_192a0:
  store i32 %arg4, i32* @eax, align 4
  store i32 %arg3, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v12_192c8 = icmp eq i32 %arg3, %arg4
  br i1 %v12_192c8, label %bb, label %dec_label_pc_192d8

bb:                                               ; preds = %dec_label_pc_192a0
  %v2_192d6 = call i32 @function_19344(i32 %arg2)
  %v0_192d8.pre = load i32, i32* @ebx, align 4
  %v1_192e0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_192d8

dec_label_pc_192d8:                               ; preds = %bb, %dec_label_pc_192a0
  %v1_192e0 = phi i32 [ %v1_192e0.pre, %bb ], [ %arg3, %dec_label_pc_192a0 ]
  %v0_192db = phi i32 [ %v2_192d6, %bb ], [ %arg4, %dec_label_pc_192a0 ]
  %v0_192dd = phi i32 [ %v0_192d8.pre, %bb ], [ %arg1, %dec_label_pc_192a0 ]
  %v1_192d8 = add i32 %v0_192dd, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_192d8 = inttoptr i32 %v1_192d8 to i32*
  %v3_192d8 = load i32, i32* %v2_192d8, align 4
  store i32 %v3_192d8, i32* @ebp, align 4
  %v1_192dd = add i32 %v0_192dd, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_192dd = inttoptr i32 %v1_192dd to i32*
  %v3_192dd = load i32, i32* %v2_192dd, align 4
  %v2_192e0 = sub i32 %v0_192db, %v1_192e0
  store i32 %v2_192e0, i32* @esi, align 4
  %v2_192e2 = sub i32 %v3_192dd, %v3_192d8
  %tmp124 = icmp ugt i32 %v2_192e0, %v2_192e2
  br i1 %tmp124, label %bb120, label %dec_label_pc_192ec

bb120:                                            ; preds = %dec_label_pc_192d8
  %v4_192e6 = call i32 @function_19370()
  %v0_192ec.pre = load i32, i32* @ebp, align 4
  %v0_192f2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_192ec

dec_label_pc_192ec:                               ; preds = %dec_label_pc_192d8, %bb120
  %v0_192fd7 = phi i32 [ %v0_192db, %dec_label_pc_192d8 ], [ %v4_192e6, %bb120 ]
  %v0_192f2 = phi i32 [ %v2_192e0, %dec_label_pc_192d8 ], [ %v0_192f2.pre, %bb120 ]
  %v0_192ec = phi i32 [ %v3_192d8, %dec_label_pc_192d8 ], [ %v0_192ec.pre, %bb120 ]
  %v5_192ee = sub i32 %v0_192ec, %arg2
  %v15_192ee = icmp eq i32 %v5_192ee, 0
  store i32 %v5_192ee, i32* @edx, align 4
  %v7_192f2 = icmp ult i32 %v0_192f2, %v5_192ee
  br i1 %v7_192f2, label %bb121, label %dec_label_pc_192fa

bb121:                                            ; preds = %dec_label_pc_192ec
  %v1_192f4 = call i32 @function_19420()
  br label %dec_label_pc_192fa

dec_label_pc_192fa:                               ; preds = %bb121, %dec_label_pc_192ec
  %v0_192fd = phi i32 [ %v1_192f4, %bb121 ], [ %v0_192fd7, %dec_label_pc_192ec ]
  %v0_192fa = load i32, i32* @edi, align 4
  %v2_192fa = mul i32 %v5_192ee, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_192fa = add i32 %v0_192fa, %v2_192fa
  %v2_192fd = sub i32 %v0_192fd, %v3_192fa
  %v12_192fd = icmp eq i32 %v2_192fd, 0
  store i32 %v2_192fd, i32* @eax, align 4
  %v1_19303 = icmp eq i1 %v12_192fd, false
  br i1 %v1_19303, label %bb122, label %dec_label_pc_19309

bb122:                                            ; preds = %dec_label_pc_192fa
  %v3_19303 = call i32 @function_194e8(i32 %v3_192fa)
  store i32 %v3_19303, i32* @eax, align 4
  br label %dec_label_pc_19309

dec_label_pc_19309:                               ; preds = %bb122, %dec_label_pc_192fa
  %v0_19309 = load i32, i32* @esi, align 4
  %v2_19309 = sub i32 %v0_19309, %v5_192ee
  %v0_1930b = load i32, i32* @ebp, align 4
  %v2_1930b = add i32 %v0_1930b, %v2_19309
  store i32 %v2_1930b, i32* @ebp, align 4
  %v1_1930f = load i32, i32* @ebx, align 4
  %v2_1930f = add i32 %v1_1930f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1930f = inttoptr i32 %v2_1930f to i32*
  store i32 %v2_1930b, i32* %v3_1930f, align 4
  br i1 %v15_192ee, label %bb123, label %dec_label_pc_19309.dec_label_pc_19314_crit_edge

dec_label_pc_19309.dec_label_pc_19314_crit_edge:  ; preds = %dec_label_pc_19309
  %v4_19323.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19314

bb123:                                            ; preds = %dec_label_pc_19309
  %v1_19312 = call i32 @function_19333()
  br label %dec_label_pc_19314

dec_label_pc_19314:                               ; preds = %dec_label_pc_19309.dec_label_pc_19314_crit_edge, %bb123
  %v4_19323 = phi i32 [ %v4_19323.pre, %dec_label_pc_19309.dec_label_pc_19314_crit_edge ], [ %v1_19312, %bb123 ]
  ret i32 %v4_19323

; uselistorder directives
  uselistorder i32 %v2_192e0, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_19314, { 1, 0 }
  uselistorder label %dec_label_pc_192ec, { 1, 0 }
}

define i32 @function_19333() local_unnamed_addr {
dec_label_pc_19333:
  %eax.global-to-local = alloca i32, align 4
  %v0_19337 = load i32, i32* @ebp, align 4
  %v1_19337 = load i32, i32* @edx, align 4
  %v2_19337 = add i32 %v1_19337, %v0_19337
  %v1_19339 = load i32, i32* @ebx, align 4
  %v2_19339 = add i32 %v1_19339, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_19339 = inttoptr i32 %v2_19339 to i32*
  store i32 %v2_19337, i32* %v3_19339, align 4
  %v0_1933c = load i32, i32* %eax.global-to-local, align 4
  %v1_1933c = load i32, i32* @edi, align 4
  %v2_1933c = sub i32 %v0_1933c, %v1_1933c
  store i32 %v2_1933c, i32* %eax.global-to-local, align 4
  ret i32 %v2_1933c
}

define i32 @function_19344(i32 %arg1) local_unnamed_addr {
dec_label_pc_19344:
  %v1_19348 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19348 = icmp eq i32 %v1_19348, %arg1
  %v1_1934f = icmp eq i1 %v3_19348, false
  br i1 %v1_1934f, label %bb, label %dec_label_pc_19344.dec_label_pc_19355_crit_edge

dec_label_pc_19344.dec_label_pc_19355_crit_edge:  ; preds = %dec_label_pc_19344
  %v0_19368.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19355

bb:                                               ; preds = %dec_label_pc_19344
  %v2_1934f = call i32 @function_19525()
  br label %dec_label_pc_19355

dec_label_pc_19355:                               ; preds = %dec_label_pc_19344.dec_label_pc_19355_crit_edge, %bb
  %v0_19368 = phi i32 [ %v0_19368.pre, %dec_label_pc_19344.dec_label_pc_19355_crit_edge ], [ %v2_1934f, %bb ]
  ret i32 %v0_19368

; uselistorder directives
  uselistorder label %dec_label_pc_19355, { 1, 0 }
}

define i32 @function_19370() local_unnamed_addr {
dec_label_pc_19370:
  %ebp.global-to-local = alloca i32, align 4
  %v2_19370 = load i32, i32* @ebx, align 4
  store i32 %v2_19370, i32* @eax, align 4
  %v0_19372 = load i32, i32* @ebp, align 4
  %v2_19372 = sub i32 %v0_19372, %v2_19370
  store i32 %v2_19372, i32* %ebp.global-to-local, align 4
  %v1_19376 = sub i32 -1, %v2_19372
  %v0_19378 = load i32, i32* @esi, align 4
  %tmp7 = icmp ugt i32 %v0_19378, %v1_19376
  br i1 %tmp7, label %bb, label %dec_label_pc_19380

bb:                                               ; preds = %dec_label_pc_19370
  %v4_1937a = call i32 @function_1952a()
  store i32 %v4_1937a, i32* @eax, align 4
  %v0_19380.pre = load i32, i32* @esi, align 4
  %v1_19380.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_19380

dec_label_pc_19380:                               ; preds = %dec_label_pc_19370, %bb
  %v3_1939b4 = phi i32 [ %v2_19370, %dec_label_pc_19370 ], [ %v4_1937a, %bb ]
  %v0_19387 = phi i32 [ %v2_19372, %dec_label_pc_19370 ], [ %v1_19380.pre, %bb ]
  %v3_19384 = phi i32 [ %v0_19378, %dec_label_pc_19370 ], [ %v0_19380.pre, %bb ]
  %v7_19380 = icmp ult i32 %v3_19384, %v0_19387
  %v1_19384 = icmp eq i1 %v7_19380, false
  %v4_19384 = select i1 %v1_19384, i32 %v3_19384, i32 %v0_19387
  %v2_19387 = add i32 %v4_19384, %v0_19387
  %v7_19387 = icmp ult i32 %v2_19387, %v0_19387
  store i32 %v2_19387, i32* @ebp, align 4
  %v1_19391 = icmp eq i1 %v7_19387, false
  br i1 %v1_19391, label %bb6, label %dec_label_pc_19397

bb6:                                              ; preds = %dec_label_pc_19380
  %v3_19391 = call i32 @function_194d0(i32 -1)
  br label %dec_label_pc_19397

dec_label_pc_19397:                               ; preds = %bb6, %dec_label_pc_19380
  %v3_1939b = phi i32 [ %v3_19391, %bb6 ], [ %v3_1939b4, %dec_label_pc_19380 ]
  ret i32 %v3_1939b

; uselistorder directives
  uselistorder i32 %v0_19387, { 1, 0, 2, 3 }
  uselistorder i32 %v0_19378, { 1, 0 }
  uselistorder i32 %v2_19372, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19380, { 1, 0 }
}

define i32 @function_193a7(i32 %arg1) local_unnamed_addr {
dec_label_pc_193a7:
  %edx.global-to-local = alloca i32, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_193ad = load i32, i32* @eax, align 4
  %v2_193ad = sub i32 %arg1, %v1_193ad
  %v12_193ad = icmp eq i32 %v2_193ad, 0
  br i1 %v12_193ad, label %dec_label_pc_193cd, label %dec_label_pc_193b5

dec_label_pc_193b5:                               ; preds = %dec_label_pc_193a7
  store i32 %v2_193ad, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_193cd

dec_label_pc_193cd:                               ; preds = %dec_label_pc_193b5, %dec_label_pc_193a7
  %v0_193cd = phi i32 [ %v2_193ad, %dec_label_pc_193b5 ], [ 0, %dec_label_pc_193a7 ]
  %v1_193cd = load i32, i32* @ebp, align 4
  %v2_193cd = add i32 %v1_193cd, %v0_193cd
  store i32 %v2_193cd, i32* %edx.global-to-local, align 4
  %v0_193cf = load i32, i32* @esi, align 4
  %v1_193cf = icmp eq i32 %v0_193cf, 0
  %v1_193d1 = icmp eq i1 %v1_193cf, false
  br i1 %v1_193d1, label %bb, label %dec_label_pc_193d7

bb:                                               ; preds = %dec_label_pc_193cd
  %v2_193d1 = call i32 @function_19508()
  %v0_193da.pre = load i32, i32* @esi, align 4
  %v1_193da.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_193d7

dec_label_pc_193d7:                               ; preds = %bb, %dec_label_pc_193cd
  %v1_193da = phi i32 [ %v1_193da.pre, %bb ], [ %v2_193cd, %dec_label_pc_193cd ]
  %v0_193da = phi i32 [ %v0_193da.pre, %bb ], [ %v0_193cf, %dec_label_pc_193cd ]
  %v0_193d7 = load i32, i32* @ebx, align 4
  %v1_193d7 = add i32 %v0_193d7, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_193d7 = inttoptr i32 %v1_193d7 to i32*
  %v3_193d7 = load i32, i32* %v2_193d7, align 4
  %v2_193da = add i32 %v0_193da, %v1_193da
  store i32 %v2_193da, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v5_193de = sub i32 %v3_193d7, %arg1
  %v15_193de = icmp eq i32 %v5_193de, 0
  br i1 %v15_193de, label %bb10, label %dec_label_pc_193e4

bb10:                                             ; preds = %dec_label_pc_193d7
  %v1_193e2 = call i32 @function_193fa()
  br label %dec_label_pc_193e4

dec_label_pc_193e4:                               ; preds = %bb10, %dec_label_pc_193d7
  %v0_193e8 = phi i32 [ %v1_193e2, %bb10 ], [ %v5_193de, %dec_label_pc_193d7 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  store i32 %v0_193e8, i32* @edi, align 4
  ret i32 %v0_193e8

; uselistorder directives
  uselistorder i32 %v0_193e8, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_193fa() local_unnamed_addr {
dec_label_pc_193fa:
  %v2_193fa = load i32, i32* @ebx, align 4
  store i32 %v2_193fa, i32* @eax, align 4
  %v0_193fc = load i32, i32* @esi, align 4
  %v1_193fc = load i32, i32* @edi, align 4
  %v2_193fc = add i32 %v1_193fc, %v0_193fc
  store i32 %v2_193fc, i32* @esi, align 4
  %v1_193fe = icmp eq i32 %v2_193fa, 0
  br i1 %v1_193fe, label %bb, label %dec_label_pc_19402

bb:                                               ; preds = %dec_label_pc_193fa
  %v1_19400 = call i32 @function_1940a()
  br label %dec_label_pc_19402

dec_label_pc_19402:                               ; preds = %bb, %dec_label_pc_193fa
  %v3_19402 = phi i32 [ %v1_19400, %bb ], [ %v2_193fa, %dec_label_pc_193fa ]
  ret i32 %v3_19402
}

define i32 @function_1940a() local_unnamed_addr {
dec_label_pc_1940a:
  %ebp.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_1940a = load i32, i32* @ebp, align 4
  %v1_1940a = load i32, i32* @ebx, align 4
  %v2_1940a = inttoptr i32 %v1_1940a to i32*
  store i32 %v0_1940a, i32* %v2_1940a, align 4
  %v0_1940c = load i32, i32* @ebp, align 4
  %v5_1940c = add i32 %v0_1940c, %tmp
  store i32 %v5_1940c, i32* %ebp.global-to-local, align 4
  %v0_19410 = load i32, i32* @esi, align 4
  %v1_19410 = load i32, i32* @ebx, align 4
  %v2_19410 = add i32 %v1_19410, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_19410 = inttoptr i32 %v2_19410 to i32*
  store i32 %v0_19410, i32* %v3_19410, align 4
  %v0_19413 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19413 = load i32, i32* @ebx, align 4
  %v2_19413 = add i32 %v1_19413, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_19413 = inttoptr i32 %v2_19413 to i32*
  store i32 %v0_19413, i32* %v3_19413, align 4
  %v1_19416 = call i32 @function_19344(i32 ptrtoint (i32* @0 to i32))
  ret i32 %v1_19416
}

define i32 @function_19420() local_unnamed_addr {
dec_label_pc_19420:
  %v0_19420 = load i32, i32* @ebp, align 4
  %v1_19424 = load i32, i32* @esi, align 4
  %v2_19424 = sub i32 %v0_19420, %v1_19424
  store i32 %v2_19424, i32* @edx, align 4
  store i32 %v0_19420, i32* @ecx, align 4
  %v12_19428 = icmp eq i32 %v1_19424, 0
  br i1 %v12_19428, label %bb, label %dec_label_pc_19430

bb:                                               ; preds = %dec_label_pc_19420
  %v2_1942e = call i32 @function_1944b(i32 0)
  br label %dec_label_pc_19430

dec_label_pc_19430:                               ; preds = %bb, %dec_label_pc_19420
  %v3_1943c = phi i32 [ %v2_1942e, %bb ], [ %v1_19424, %dec_label_pc_19420 ]
  ret i32 %v3_1943c
}

define i32 @function_1944b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1944b:
  %v0_1944b = load i32, i32* @edx, align 4
  %v5_1944b = sub i32 %v0_1944b, %arg1
  %v15_1944b = icmp eq i32 %v5_1944b, 0
  store i32 %v5_1944b, i32* @edx, align 4
  %v0_1944f = load i32, i32* @ecx, align 4
  %v1_1944f = load i32, i32* @esi, align 4
  %v2_1944f = mul i32 %v1_1944f, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1944f = add i32 %v2_1944f, %v0_1944f
  store i32 %v3_1944f, i32* @eax, align 4
  %v1_19452 = load i32, i32* @ebx, align 4
  %v2_19452 = add i32 %v1_19452, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_19452 = inttoptr i32 %v2_19452 to i32*
  store i32 %v3_1944f, i32* %v3_19452, align 4
  br i1 %v15_1944b, label %bb, label %dec_label_pc_1944b.dec_label_pc_19457_crit_edge

dec_label_pc_1944b.dec_label_pc_19457_crit_edge:  ; preds = %dec_label_pc_1944b
  %v4_19464.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19457

bb:                                               ; preds = %dec_label_pc_1944b
  %v1_19455 = call i32 @function_1946d()
  br label %dec_label_pc_19457

dec_label_pc_19457:                               ; preds = %dec_label_pc_1944b.dec_label_pc_19457_crit_edge, %bb
  %v4_19464 = phi i32 [ %v4_19464.pre, %dec_label_pc_1944b.dec_label_pc_19457_crit_edge ], [ %v1_19455, %bb ]
  %v0_1945b = load i32, i32* @ebp, align 4
  %v1_1945b = load i32, i32* @edx, align 4
  %v2_1945b = sub i32 %v0_1945b, %v1_1945b
  store i32 %v2_1945b, i32* @ebp, align 4
  ret i32 %v4_19464

; uselistorder directives
  uselistorder label %dec_label_pc_19457, { 1, 0 }
}

define i32 @function_1946d() local_unnamed_addr {
dec_label_pc_1946d:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v0_1946d = load i32, i32* @esi, align 4
  %v1_1946d = icmp eq i32 %v0_1946d, 0
  br i1 %v1_1946d, label %bb, label %dec_label_pc_19475

bb:                                               ; preds = %dec_label_pc_1946d
  %v2_1946f = call i32 @function_19344(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_19475

dec_label_pc_19475:                               ; preds = %bb, %dec_label_pc_1946d
  %v1_19479 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19479 = xor i32 %v1_19479, %tmp10
  %v3_19479 = icmp eq i32 %v2_19479, 0
  store i32 %v2_19479, i32* @eax, align 4
  %v1_19480 = icmp eq i1 %v3_19479, false
  br i1 %v1_19480, label %bb11, label %dec_label_pc_19486

bb11:                                             ; preds = %dec_label_pc_19475
  %v2_19480 = call i32 @function_19525()
  br label %dec_label_pc_19486

dec_label_pc_19486:                               ; preds = %bb11, %dec_label_pc_19475
  %v17_194a6 = phi i32 [ %v2_19480, %bb11 ], [ %v2_19479, %dec_label_pc_19475 ]
  ret i32 %v17_194a6

; uselistorder directives
  uselistorder i32 (i32)* @function_19344, { 1, 2, 0 }
}

define i32 @function_194ad() local_unnamed_addr {
dec_label_pc_194ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_194ad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_194ad
}

define i32 @function_194b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_194b0:
  %v1_194b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_194b4 = icmp eq i32 %v1_194b4, %arg2
  %v1_194bb = icmp eq i1 %v3_194b4, false
  br i1 %v1_194bb, label %bb, label %dec_label_pc_194b0.dec_label_pc_194bd_crit_edge

dec_label_pc_194b0.dec_label_pc_194bd_crit_edge:  ; preds = %dec_label_pc_194b0
  %v0_194cd.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_194bd

bb:                                               ; preds = %dec_label_pc_194b0
  %v2_194bb = call i32 @function_19525()
  br label %dec_label_pc_194bd

dec_label_pc_194bd:                               ; preds = %dec_label_pc_194b0.dec_label_pc_194bd_crit_edge, %bb
  %v0_194cd = phi i32 [ %v0_194cd.pre, %dec_label_pc_194b0.dec_label_pc_194bd_crit_edge ], [ %v2_194bb, %bb ]
  ret i32 %v0_194cd

; uselistorder directives
  uselistorder i32 ()* @function_19525, { 2, 1, 0 }
  uselistorder label %dec_label_pc_194bd, { 1, 0 }
}

define i32 @function_194d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_194d0:
  %v0_194d0 = load i32, i32* @ebp, align 4
  %v1_194d0 = icmp eq i32 %v0_194d0, 0
  %v1_194d2 = icmp eq i1 %v1_194d0, false
  br i1 %v1_194d2, label %bb, label %dec_label_pc_194d4

bb:                                               ; preds = %dec_label_pc_194d0
  %v2_194d2 = call i32 @function_19536()
  store i32 %v2_194d2, i32* @eax, align 4
  br label %dec_label_pc_194d4

dec_label_pc_194d4:                               ; preds = %bb, %dec_label_pc_194d0
  store i32 0, i32* @ebp, align 4
  %v1_194de = call i32 @function_193a7(i32 0)
  ret i32 %v1_194de
}

define i32 @function_194e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_194e8:
  %v4_194f3 = load i32, i32* @eax, align 4
  ret i32 %v4_194f3
}

define i32 @function_194fb() local_unnamed_addr {
dec_label_pc_194fb:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_194fb = load i32, i32* %ebx.global-to-local, align 4
  %v1_194fb = add i32 %v0_194fb, 1418396779
  %v2_194fb = inttoptr i32 %v1_194fb to i32*
  %v3_194fb = load i32, i32* %v2_194fb, align 4
  %v4_194fb = add i32 %v3_194fb, -1
  store i32 %v4_194fb, i32* %v2_194fb, align 4
  %v0_19501 = load i32, i32* %eax.global-to-local, align 4
  %v11_19501 = and i32 %v0_19501, -220
  store i32 %v11_19501, i32* %eax.global-to-local, align 4
  ret i32 %v11_19501

; uselistorder directives
  uselistorder i32 %v11_19501, { 1, 0 }
}

define i32 @function_19508() local_unnamed_addr {
dec_label_pc_19508:
  %v4_19513 = load i32, i32* @eax, align 4
  ret i32 %v4_19513
}

define i32 @function_1951c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1951c:
  %eax.global-to-local = alloca i32, align 4
  %v0_19520 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19520
}

define i32 @function_19525() local_unnamed_addr {
dec_label_pc_19525:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1952a() local_unnamed_addr {
dec_label_pc_1952a:
  %v3_1952a = load i32, i32* @eax, align 4
  ret i32 %v3_1952a
}

define i32 @function_19536() local_unnamed_addr {
dec_label_pc_19536:
  %v0_1953a = load i32, i32* @eax, align 4
  ret i32 %v0_1953a
}

define i32 @_ZN5boost8signals26detail11unique_lockINS0_5mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_19540:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  br i1 false, label %bb, label %dec_label_pc_19561

bb:                                               ; preds = %dec_label_pc_19540
  br label %dec_label_pc_19561

dec_label_pc_19561:                               ; preds = %bb, %dec_label_pc_19540
  %v2_19561 = load i32, i32* %arg1, align 4
  ret i32 %v2_19561
}

define i32 @function_1956f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1956f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_SE_SG_bSH_EEENSM_IFvRKNS0_10connectionES4_SE_SG_bSH_EEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19580:
  ret i32 0
}

define i32 @function_195bc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_195bc:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_195bc = load i32, i32* %ebx.global-to-local, align 4
  %v1_195bc = add i32 %v0_195bc, -2062277564
  %v2_195bc = inttoptr i32 %v1_195bc to i32*
  %v3_195bc = load i32, i32* %v2_195bc, align 4
  %v4_195bc = sub i32 %v3_195bc, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_195bc, i32* %v2_195bc, align 4
  %v0_195c7 = load i32, i32* @eax, align 4
  %v1_195c7 = icmp eq i32 %v0_195c7, 0
  br i1 %v1_195c7, label %bb, label %dec_label_pc_195cf

bb:                                               ; preds = %dec_label_pc_195bc
  %v2_195c9 = call i32 @function_1966e(i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_195c9, i32* @eax, align 4
  br label %dec_label_pc_195cf

dec_label_pc_195cf:                               ; preds = %bb, %dec_label_pc_195bc
  %v2_195cf = phi i32 [ %v2_195c9, %bb ], [ %v0_195c7, %dec_label_pc_195bc ]
  store i32 %v2_195cf, i32* %esi.global-to-local, align 4
  %v1_195f9 = icmp eq i32* %arg1, null
  br label %dec_label_pc_19603

dec_label_pc_195d8:                               ; preds = %dec_label_pc_19603
  %v1_195d8 = add i32 %v0_195d8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_195d8 = inttoptr i32 %v1_195d8 to i32*
  %v3_195d8 = load i32, i32* %v2_195d8, align 4
  store i32 %v3_195d8, i32* %ebx.global-to-local, align 4
  %v1_195db = icmp eq i32 %v3_195d8, 0
  br i1 %v1_195db, label %bb118, label %dec_label_pc_195df

bb118:                                            ; preds = %dec_label_pc_195d8
  %v1_195dd = call i32 @function_1964a()
  br label %dec_label_pc_195df

dec_label_pc_195df:                               ; preds = %bb118, %dec_label_pc_195d8
  %v1_195e9 = add i32 %v3_195d8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_195e9 = inttoptr i32 %v1_195e9 to i8*
  store i8 0, i8* %v2_195e9, align 1
  %v0_195f7 = load i32, i32* %esi.global-to-local, align 4
  %v1_195f7 = inttoptr i32 %v0_195f7 to i32*
  %v2_195f7 = load i32, i32* %v1_195f7, align 4
  store i32 %v2_195f7, i32* %esi.global-to-local, align 4
  br i1 %v1_195f9, label %dec_label_pc_19626, label %dec_label_pc_195fd

dec_label_pc_195fd:                               ; preds = %dec_label_pc_195df
  %v2_195fd = load i32, i32* %arg1, align 4
  store i32 %v2_195fd, i32* @eax, align 4
  %v1_195ff = icmp eq i32 %v2_195fd, 0
  br i1 %v1_195ff, label %bb119, label %dec_label_pc_19603

bb119:                                            ; preds = %dec_label_pc_195fd
  %v3_19601 = call i32 @function_1966e(i32 %v3_195d8)
  store i32 %v3_19601, i32* @eax, align 4
  %v0_19603.pre.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_19603

dec_label_pc_19603:                               ; preds = %bb119, %dec_label_pc_195fd, %dec_label_pc_195cf
  %v0_195d8 = phi i32 [ %v2_195cf, %dec_label_pc_195cf ], [ %v2_195f7, %dec_label_pc_195fd ], [ %v0_19603.pre.pre, %bb119 ]
  %v1_19603 = phi i32 [ %v2_195cf, %dec_label_pc_195cf ], [ %v2_195fd, %dec_label_pc_195fd ], [ %v3_19601, %bb119 ]
  %v12_19603 = icmp eq i32 %v0_195d8, %v1_19603
  %v1_19605 = icmp eq i1 %v12_19603, false
  br i1 %v1_19605, label %dec_label_pc_195d8, label %dec_label_pc_19607

dec_label_pc_19607:                               ; preds = %dec_label_pc_19603
  %v2_19607 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_19607, i32* @eax, align 4
  %v2_1960e = call i32 @function_2cfe0(i32 %v2_19607)
  %v1_19617 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19617 = xor i32 %v1_19617, %arg2
  %v3_19617 = icmp eq i32 %v2_19617, 0
  store i32 %v2_19617, i32* @eax, align 4
  %v1_1961e = icmp eq i1 %v3_19617, false
  br i1 %v1_1961e, label %bb120, label %dec_label_pc_19620

bb120:                                            ; preds = %dec_label_pc_19607
  %v2_1961e = call i32 @function_19692()
  br label %dec_label_pc_19620

dec_label_pc_19620:                               ; preds = %bb120, %dec_label_pc_19607
  %v0_19625 = phi i32 [ %v2_1961e, %bb120 ], [ %v2_19617, %dec_label_pc_19607 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v0_19625

dec_label_pc_19626:                               ; preds = %dec_label_pc_195df
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %v2_195cf, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1966e, { 1, 0 }
}

define i32 @function_1964a() local_unnamed_addr {
dec_label_pc_1964a:
  %v3_19662 = load i32, i32* @eax, align 4
  ret i32 %v3_19662
}

define i32 @function_1966e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1966e:
  %v3_19686 = load i32, i32* @eax, align 4
  ret i32 %v3_19686
}

define i32 @function_19692() local_unnamed_addr {
dec_label_pc_19692:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19698() local_unnamed_addr {
dec_label_pc_19698:
  %eax.global-to-local = alloca i32, align 4
  %v0_19698 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19698
}

define i32 @_ZN5boost8signals27signal5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_SD_SF_bSG_EEENSL_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_196b0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_196b0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_196b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_196c4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_196c4 = inttoptr i32 %v1_196c4 to i32*
  %v3_196c4 = load i32, i32* %v2_196c4, align 4
  store i32 %v3_196c4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39290_type* @global_var_39290.3523 to i32), i32* %arg1, align 4
  %v1_196cd = icmp eq i32 %v3_196c4, 0
  br i1 %v1_196cd, label %dec_label_pc_196fc, label %dec_label_pc_196d1

dec_label_pc_196d1:                               ; preds = %dec_label_pc_196b0
  %v2_196d4 = call i32 @function_32c30(i32 %v3_196c4)
  %v0_196d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_196d9 = add i32 %v0_196d9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_196d9, i32* @eax, align 4
  %v2_196df = call i32 @function_2d110(i32 %v1_196d9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_196ef = inttoptr i32 %v0_196d9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_196ef, align 4
  br i1 false, label %dec_label_pc_196d1.dec_label_pc_19701_crit_edge, label %dec_label_pc_196f7

dec_label_pc_196d1.dec_label_pc_19701_crit_edge:  ; preds = %dec_label_pc_196d1
  br label %dec_label_pc_19701

dec_label_pc_196f7:                               ; preds = %dec_label_pc_196d1
  store i32 %v0_196b0, i32* %ebx.global-to-local, align 4
  %v0_196fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_196fb

dec_label_pc_196fc:                               ; preds = %dec_label_pc_196b0
  %v1_196fc = call i32 @function_2ad5a(i32 %v0_196b8)
  store i32 %v1_196fc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_19701

dec_label_pc_19701:                               ; preds = %dec_label_pc_196d1.dec_label_pc_19701_crit_edge, %dec_label_pc_196fc
  %v2_196fc = phi i32 [ undef, %dec_label_pc_196d1.dec_label_pc_19701_crit_edge ], [ %v1_196fc, %dec_label_pc_196fc ]
  ret i32 %v2_196fc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_19701, { 1, 0 }
}

define i32 @function_19706() local_unnamed_addr {
dec_label_pc_19706:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19713(i32 %arg1) local_unnamed_addr {
dec_label_pc_19713:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19713 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19713 = add i32 %v0_19713, 1149831251
  %v2_19713 = inttoptr i32 %v1_19713 to i32*
  %v3_19713 = load i32, i32* %v2_19713, align 4
  %v4_19713 = add i32 %v3_19713, -1
  store i32 %v4_19713, i32* %v2_19713, align 4
  %v0_19719 = load i32, i32* %eax.global-to-local, align 4
  %v11_19719 = and i32 %v0_19719, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_19719, i32* @eax, align 4
  %v0_1971b = load i32, i32* %edx.global-to-local, align 4
  %v1_1971e = call i32 @function_2d110(i32 %v0_1971b)
  store i32 %arg1, i32* @eax, align 4
  %v0_19727 = call i32 @function_19706()
  store i32 %v0_19727, i32* %eax.global-to-local, align 4
  ret i32 %v0_19727

; uselistorder directives
  uselistorder i32 (i32)* @function_2d110, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_SD_SF_bSG_EEENSL_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_19730:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_19730 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_19738 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_19744 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19744 = inttoptr i32 %v1_19744 to i32*
  %v3_19744 = load i32, i32* %v2_19744, align 4
  store i32 %v3_19744, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39290_type* @global_var_39290.3523 to i32), i32* %arg1, align 4
  %v0_1974d = load i32, i32* @eax, align 4
  %v1_1974d = icmp eq i32 %v0_1974d, 0
  br i1 %v1_1974d, label %bb, label %dec_label_pc_19751

bb:                                               ; preds = %dec_label_pc_19730
  %v2_1974f = call i32 @function_19784(i32 %v0_19738)
  store i32 %v2_1974f, i32* @eax, align 4
  br label %dec_label_pc_19751

dec_label_pc_19751:                               ; preds = %bb, %dec_label_pc_19730
  %v0_19751 = phi i32 [ %v2_1974f, %bb ], [ %v0_1974d, %dec_label_pc_19730 ]
  %v2_19754 = call i32 @function_32cb0(i32 %v0_19751)
  %v0_19759 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19759 = add i32 %v0_19759, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_19759, i32* @eax, align 4
  %v2_1975f = call i32 @function_2d190(i32 %v1_19759)
  store i32 0, i32* @eax, align 4
  %v1_1976f = inttoptr i32 %v0_19759 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1976f, align 4
  br i1 false, label %bb105, label %dec_label_pc_19751.dec_label_pc_19777_crit_edge

dec_label_pc_19751.dec_label_pc_19777_crit_edge:  ; preds = %dec_label_pc_19751
  %v5_1977e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19777

bb105:                                            ; preds = %dec_label_pc_19751
  br label %dec_label_pc_19777

dec_label_pc_19777:                               ; preds = %dec_label_pc_19751.dec_label_pc_19777_crit_edge, %bb105
  %v5_1977e = phi i32 [ %v5_1977e.pre, %dec_label_pc_19751.dec_label_pc_19777_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_19730, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1977e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_19777, { 1, 0 }
}

define i32 @function_19784(i32 %arg1) local_unnamed_addr {
dec_label_pc_19784:
  %v0_19784 = call i32 @function_2adda()
  ret i32 %v0_19784
}

define i32 @function_19789() local_unnamed_addr {
dec_label_pc_19789:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1978e() local_unnamed_addr {
dec_label_pc_1978e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1979b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1979b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1979b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1979b = add i32 %v0_1979b, 1149831251
  %v2_1979b = inttoptr i32 %v1_1979b to i32*
  %v3_1979b = load i32, i32* %v2_1979b, align 4
  %v4_1979b = add i32 %v3_1979b, -1
  store i32 %v4_1979b, i32* %v2_1979b, align 4
  %v0_197a1 = load i32, i32* %eax.global-to-local, align 4
  %v11_197a1 = and i32 %v0_197a1, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_197a1, i32* @eax, align 4
  %v0_197a3 = load i32, i32* %edx.global-to-local, align 4
  %v1_197a6 = call i32 @function_2d190(i32 %v0_197a3)
  store i32 %arg1, i32* @eax, align 4
  %v0_197af = call i32 @function_1978e()
  store i32 %v0_197af, i32* %eax.global-to-local, align 4
  ret i32 %v0_197af

; uselistorder directives
  uselistorder i32 (i32)* @function_2d190, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionISH_EENSM_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_197c0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_197c0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_197c8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_197d4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_197d4 = inttoptr i32 %v1_197d4 to i32*
  %v3_197d4 = load i32, i32* %v2_197d4, align 4
  store i32 %v3_197d4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39290_type* @global_var_39290.3523 to i32), i32* %arg1, align 4
  %v1_197dd = icmp eq i32 %v3_197d4, 0
  br i1 %v1_197dd, label %dec_label_pc_1980c, label %dec_label_pc_197e1

dec_label_pc_197e1:                               ; preds = %dec_label_pc_197c0
  %v2_197e4 = call i32 @function_32d40(i32 %v3_197d4)
  %v0_197e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_197e9 = add i32 %v0_197e9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_197e9, i32* @eax, align 4
  %v2_197ef = call i32 @function_2d220(i32 %v1_197e9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_197ff = inttoptr i32 %v0_197e9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_197ff, align 4
  br i1 false, label %dec_label_pc_197e1.dec_label_pc_19811_crit_edge, label %dec_label_pc_19807

dec_label_pc_197e1.dec_label_pc_19811_crit_edge:  ; preds = %dec_label_pc_197e1
  br label %dec_label_pc_19811

dec_label_pc_19807:                               ; preds = %dec_label_pc_197e1
  store i32 %v0_197c0, i32* %ebx.global-to-local, align 4
  %v0_1980b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1980b

dec_label_pc_1980c:                               ; preds = %dec_label_pc_197c0
  %v1_1980c = call i32 @function_2ae6a(i32 %v0_197c8)
  store i32 %v1_1980c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_19811

dec_label_pc_19811:                               ; preds = %dec_label_pc_197e1.dec_label_pc_19811_crit_edge, %dec_label_pc_1980c
  %v2_1980c = phi i32 [ undef, %dec_label_pc_197e1.dec_label_pc_19811_crit_edge ], [ %v1_1980c, %dec_label_pc_1980c ]
  ret i32 %v2_1980c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_19811, { 1, 0 }
}

define i32 @function_19816() local_unnamed_addr {
dec_label_pc_19816:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19823(i32 %arg1) local_unnamed_addr {
dec_label_pc_19823:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19823 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19823 = add i32 %v0_19823, 1149831251
  %v2_19823 = inttoptr i32 %v1_19823 to i32*
  %v3_19823 = load i32, i32* %v2_19823, align 4
  %v4_19823 = add i32 %v3_19823, -1
  store i32 %v4_19823, i32* %v2_19823, align 4
  %v0_19829 = load i32, i32* %eax.global-to-local, align 4
  %v11_19829 = and i32 %v0_19829, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_19829, i32* @eax, align 4
  %v0_1982b = load i32, i32* %edx.global-to-local, align 4
  %v1_1982e = call i32 @function_2d220(i32 %v0_1982b)
  store i32 %arg1, i32* @eax, align 4
  %v0_19837 = call i32 @function_19816()
  store i32 %v0_19837, i32* %eax.global-to-local, align 4
  ret i32 %v0_19837

; uselistorder directives
  uselistorder i32 (i32)* @function_2d220, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EERKSsb10ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionISH_EENSM_IFvRKNS0_10connectionES3_SD_SF_bSG_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_19840:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_19840 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_19848 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_19854 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19854 = inttoptr i32 %v1_19854 to i32*
  %v3_19854 = load i32, i32* %v2_19854, align 4
  store i32 %v3_19854, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39290_type* @global_var_39290.3523 to i32), i32* %arg1, align 4
  %v0_1985d = load i32, i32* @eax, align 4
  %v1_1985d = icmp eq i32 %v0_1985d, 0
  br i1 %v1_1985d, label %bb, label %dec_label_pc_19861

bb:                                               ; preds = %dec_label_pc_19840
  %v2_1985f = call i32 @function_19894(i32 %v0_19848)
  store i32 %v2_1985f, i32* @eax, align 4
  br label %dec_label_pc_19861

dec_label_pc_19861:                               ; preds = %bb, %dec_label_pc_19840
  %v0_19861 = phi i32 [ %v2_1985f, %bb ], [ %v0_1985d, %dec_label_pc_19840 ]
  %v2_19864 = call i32 @function_32dc0(i32 %v0_19861)
  %v0_19869 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19869 = add i32 %v0_19869, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_19869, i32* @eax, align 4
  %v2_1986f = call i32 @function_2d2a0(i32 %v1_19869)
  store i32 0, i32* @eax, align 4
  %v1_1987f = inttoptr i32 %v0_19869 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1987f, align 4
  br i1 false, label %bb105, label %dec_label_pc_19861.dec_label_pc_19887_crit_edge

dec_label_pc_19861.dec_label_pc_19887_crit_edge:  ; preds = %dec_label_pc_19861
  %v5_1988e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19887

bb105:                                            ; preds = %dec_label_pc_19861
  br label %dec_label_pc_19887

dec_label_pc_19887:                               ; preds = %dec_label_pc_19861.dec_label_pc_19887_crit_edge, %bb105
  %v5_1988e = phi i32 [ %v5_1988e.pre, %dec_label_pc_19861.dec_label_pc_19887_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_19840, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1988e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 ptrtoint (%vtable_39290_type* @global_var_39290.3523 to i32), { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_19887, { 1, 0 }
}

define i32 @function_19894(i32 %arg1) local_unnamed_addr {
dec_label_pc_19894:
  %v0_19894 = call i32 @function_2aeea()
  ret i32 %v0_19894
}

define i32 @function_19899() local_unnamed_addr {
dec_label_pc_19899:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1989e() local_unnamed_addr {
dec_label_pc_1989e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_198ab(i32 %arg1) local_unnamed_addr {
dec_label_pc_198ab:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_198ab = load i32, i32* %ebp.global-to-local, align 4
  %v1_198ab = add i32 %v0_198ab, 1149831251
  %v2_198ab = inttoptr i32 %v1_198ab to i32*
  %v3_198ab = load i32, i32* %v2_198ab, align 4
  %v4_198ab = add i32 %v3_198ab, -1
  store i32 %v4_198ab, i32* %v2_198ab, align 4
  %v0_198b1 = load i32, i32* %eax.global-to-local, align 4
  %v11_198b1 = and i32 %v0_198b1, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_198b1, i32* @eax, align 4
  %v0_198b3 = load i32, i32* %edx.global-to-local, align 4
  %v1_198b6 = call i32 @function_2d2a0(i32 %v0_198b3)
  store i32 %arg1, i32* @eax, align 4
  %v0_198bf = call i32 @function_1989e()
  store i32 %v0_198bf, i32* %eax.global-to-local, align 4
  ret i32 %v0_198bf

; uselistorder directives
  uselistorder i32 (i32)* @function_2d2a0, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S7_S8_EEENSD_IFvRKNS0_10connectionES4_S7_S8_EEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_198d0:
  ret i32 0
}

define i32 @function_1990c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1990c:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_1990c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1990c = add i32 %v0_1990c, -2062277564
  %v2_1990c = inttoptr i32 %v1_1990c to i32*
  %v3_1990c = load i32, i32* %v2_1990c, align 4
  %v4_1990c = sub i32 %v3_1990c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1990c, i32* %v2_1990c, align 4
  %v0_19917 = load i32, i32* @eax, align 4
  %v1_19917 = icmp eq i32 %v0_19917, 0
  br i1 %v1_19917, label %bb, label %dec_label_pc_1991f

bb:                                               ; preds = %dec_label_pc_1990c
  %v2_19919 = call i32 @function_199be(i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_19919, i32* @eax, align 4
  br label %dec_label_pc_1991f

dec_label_pc_1991f:                               ; preds = %bb, %dec_label_pc_1990c
  %v2_1991f = phi i32 [ %v2_19919, %bb ], [ %v0_19917, %dec_label_pc_1990c ]
  store i32 %v2_1991f, i32* %esi.global-to-local, align 4
  %v1_19949 = icmp eq i32* %arg1, null
  br label %dec_label_pc_19953

dec_label_pc_19928:                               ; preds = %dec_label_pc_19953
  %v1_19928 = add i32 %v0_19928, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_19928 = inttoptr i32 %v1_19928 to i32*
  %v3_19928 = load i32, i32* %v2_19928, align 4
  store i32 %v3_19928, i32* %ebx.global-to-local, align 4
  %v1_1992b = icmp eq i32 %v3_19928, 0
  br i1 %v1_1992b, label %bb118, label %dec_label_pc_1992f

bb118:                                            ; preds = %dec_label_pc_19928
  %v1_1992d = call i32 @function_1999a()
  br label %dec_label_pc_1992f

dec_label_pc_1992f:                               ; preds = %bb118, %dec_label_pc_19928
  %v1_19939 = add i32 %v3_19928, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19939 = inttoptr i32 %v1_19939 to i8*
  store i8 0, i8* %v2_19939, align 1
  %v0_19947 = load i32, i32* %esi.global-to-local, align 4
  %v1_19947 = inttoptr i32 %v0_19947 to i32*
  %v2_19947 = load i32, i32* %v1_19947, align 4
  store i32 %v2_19947, i32* %esi.global-to-local, align 4
  br i1 %v1_19949, label %dec_label_pc_19976, label %dec_label_pc_1994d

dec_label_pc_1994d:                               ; preds = %dec_label_pc_1992f
  %v2_1994d = load i32, i32* %arg1, align 4
  store i32 %v2_1994d, i32* @eax, align 4
  %v1_1994f = icmp eq i32 %v2_1994d, 0
  br i1 %v1_1994f, label %bb119, label %dec_label_pc_19953

bb119:                                            ; preds = %dec_label_pc_1994d
  %v3_19951 = call i32 @function_199be(i32 %v3_19928)
  store i32 %v3_19951, i32* @eax, align 4
  %v0_19953.pre.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_19953

dec_label_pc_19953:                               ; preds = %bb119, %dec_label_pc_1994d, %dec_label_pc_1991f
  %v0_19928 = phi i32 [ %v2_1991f, %dec_label_pc_1991f ], [ %v2_19947, %dec_label_pc_1994d ], [ %v0_19953.pre.pre, %bb119 ]
  %v1_19953 = phi i32 [ %v2_1991f, %dec_label_pc_1991f ], [ %v2_1994d, %dec_label_pc_1994d ], [ %v3_19951, %bb119 ]
  %v12_19953 = icmp eq i32 %v0_19928, %v1_19953
  %v1_19955 = icmp eq i1 %v12_19953, false
  br i1 %v1_19955, label %dec_label_pc_19928, label %dec_label_pc_19957

dec_label_pc_19957:                               ; preds = %dec_label_pc_19953
  %v2_19957 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_19957, i32* @eax, align 4
  %v2_1995e = call i32 @function_2d330(i32 %v2_19957)
  %v1_19967 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19967 = xor i32 %v1_19967, %arg2
  %v3_19967 = icmp eq i32 %v2_19967, 0
  store i32 %v2_19967, i32* @eax, align 4
  %v1_1996e = icmp eq i1 %v3_19967, false
  br i1 %v1_1996e, label %bb120, label %dec_label_pc_19970

bb120:                                            ; preds = %dec_label_pc_19957
  %v2_1996e = call i32 @function_199e2()
  br label %dec_label_pc_19970

dec_label_pc_19970:                               ; preds = %bb120, %dec_label_pc_19957
  %v0_19975 = phi i32 [ %v2_1996e, %bb120 ], [ %v2_19967, %dec_label_pc_19957 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v0_19975

dec_label_pc_19976:                               ; preds = %dec_label_pc_1992f
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %v2_1991f, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_199be, { 1, 0 }
}

define i32 @function_1999a() local_unnamed_addr {
dec_label_pc_1999a:
  %v3_199b2 = load i32, i32* @eax, align 4
  ret i32 %v3_199b2
}

define i32 @function_199be(i32 %arg1) local_unnamed_addr {
dec_label_pc_199be:
  %v3_199d6 = load i32, i32* @eax, align 4
  ret i32 %v3_199d6
}

define i32 @function_199e2() local_unnamed_addr {
dec_label_pc_199e2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_199e8() local_unnamed_addr {
dec_label_pc_199e8:
  %eax.global-to-local = alloca i32, align 4
  %v0_199e8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_199e8
}

define i32 @_ZN5boost8signals27signal3IvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S6_S7_EEENSC_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_19a00:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_19a00 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_19a08 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_19a14 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19a14 = inttoptr i32 %v1_19a14 to i32*
  %v3_19a14 = load i32, i32* %v2_19a14, align 4
  store i32 %v3_19a14, i32* @eax, align 4
  store i32 ptrtoint (%vtable_392e0_type* @global_var_392e0.3527 to i32), i32* %arg1, align 4
  %v1_19a1d = icmp eq i32 %v3_19a14, 0
  br i1 %v1_19a1d, label %dec_label_pc_19a4c, label %dec_label_pc_19a21

dec_label_pc_19a21:                               ; preds = %dec_label_pc_19a00
  %v2_19a24 = call i32 @function_332d0(i32 %v3_19a14)
  %v0_19a29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19a29 = add i32 %v0_19a29, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_19a29, i32* @eax, align 4
  %v2_19a2f = call i32 @function_2d460(i32 %v1_19a29)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_19a3f = inttoptr i32 %v0_19a29 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_19a3f, align 4
  br i1 false, label %dec_label_pc_19a21.dec_label_pc_19a51_crit_edge, label %dec_label_pc_19a47

dec_label_pc_19a21.dec_label_pc_19a51_crit_edge:  ; preds = %dec_label_pc_19a21
  br label %dec_label_pc_19a51

dec_label_pc_19a47:                               ; preds = %dec_label_pc_19a21
  store i32 %v0_19a00, i32* %ebx.global-to-local, align 4
  %v0_19a4b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19a4b

dec_label_pc_19a4c:                               ; preds = %dec_label_pc_19a00
  %v1_19a4c = call i32 @function_2b0de(i32 %v0_19a08)
  store i32 %v1_19a4c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_19a51

dec_label_pc_19a51:                               ; preds = %dec_label_pc_19a21.dec_label_pc_19a51_crit_edge, %dec_label_pc_19a4c
  %v2_19a4c = phi i32 [ undef, %dec_label_pc_19a21.dec_label_pc_19a51_crit_edge ], [ %v1_19a4c, %dec_label_pc_19a4c ]
  ret i32 %v2_19a4c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_19a51, { 1, 0 }
}

define i32 @function_19a56() local_unnamed_addr {
dec_label_pc_19a56:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19a63(i32 %arg1) local_unnamed_addr {
dec_label_pc_19a63:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19a63 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19a63 = add i32 %v0_19a63, 1149831251
  %v2_19a63 = inttoptr i32 %v1_19a63 to i32*
  %v3_19a63 = load i32, i32* %v2_19a63, align 4
  %v4_19a63 = add i32 %v3_19a63, -1
  store i32 %v4_19a63, i32* %v2_19a63, align 4
  %v0_19a69 = load i32, i32* %eax.global-to-local, align 4
  %v11_19a69 = and i32 %v0_19a69, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_19a69, i32* @eax, align 4
  %v0_19a6b = load i32, i32* %edx.global-to-local, align 4
  %v1_19a6e = call i32 @function_2d460(i32 %v0_19a6b)
  store i32 %arg1, i32* @eax, align 4
  %v0_19a77 = call i32 @function_19a56()
  store i32 %v0_19a77, i32* %eax.global-to-local, align 4
  ret i32 %v0_19a77

; uselistorder directives
  uselistorder i32 (i32)* @function_2d460, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvP7CWalletRK7uint25610ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS8_EENSD_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_19a80:
  %ebx.global-to-local = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %v0_19a80 = load i32, i32* @ebx, align 4
  store i32 %tmp10, i32* %ebx.global-to-local, align 4
  %v1_19a94 = add i32 %tmp10, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19a94 = inttoptr i32 %v1_19a94 to i32*
  %v3_19a94 = load i32, i32* %v2_19a94, align 4
  store i32 %v3_19a94, i32* @eax, align 4
  store i32 ptrtoint (%vtable_392e0_type* @global_var_392e0.3527 to i32), i32* %arg1, align 4
  %v1_19a9d = icmp eq i32 %v3_19a94, 0
  br i1 %v1_19a9d, label %dec_label_pc_19acc, label %dec_label_pc_19aa1

dec_label_pc_19aa1:                               ; preds = %dec_label_pc_19a80
  %v2_19aa4 = call i32 @function_33350(i32 %v3_19a94)
  %v0_19aa9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19aa9 = add i32 %v0_19aa9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_19aa9, i32* @eax, align 4
  %v2_19aaf = call i32 @function_2d4e0(i32 %v1_19aa9)
  store i32 0, i32* @eax, align 4
  %v1_19abf = inttoptr i32 %v0_19aa9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_19abf, align 4
  br i1 false, label %bb, label %dec_label_pc_19aa1.dec_label_pc_19ac7_crit_edge

dec_label_pc_19aa1.dec_label_pc_19ac7_crit_edge:  ; preds = %dec_label_pc_19aa1
  %v0_19acb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19ac7

bb:                                               ; preds = %dec_label_pc_19aa1
  br label %dec_label_pc_19ac7

dec_label_pc_19ac7:                               ; preds = %dec_label_pc_19aa1.dec_label_pc_19ac7_crit_edge, %bb
  %v0_19acb = phi i32 [ %v0_19acb.pre, %dec_label_pc_19aa1.dec_label_pc_19ac7_crit_edge ], [ undef, %bb ]
  store i32 %v0_19a80, i32* %ebx.global-to-local, align 4
  ret i32 %v0_19acb

dec_label_pc_19acc:                               ; preds = %dec_label_pc_19a80
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_19ac7, { 1, 0 }
}

define i32 @function_19af0() local_unnamed_addr {
dec_label_pc_19af0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19af5() local_unnamed_addr {
dec_label_pc_19af5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19b02(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b02:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19b02 = load i32, i32* %ebp.global-to-local, align 4
  %v1_19b02 = add i32 %v0_19b02, 1149831251
  %v2_19b02 = inttoptr i32 %v1_19b02 to i32*
  %v3_19b02 = load i32, i32* %v2_19b02, align 4
  %v4_19b02 = add i32 %v3_19b02, -1
  store i32 %v4_19b02, i32* %v2_19b02, align 4
  %v0_19b08 = load i32, i32* %eax.global-to-local, align 4
  %v11_19b08 = and i32 %v0_19b08, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_19b08, i32* @eax, align 4
  %v0_19b0a = load i32, i32* %edx.global-to-local, align 4
  %v1_19b0d = call i32 @function_2d4e0(i32 %v0_19b0a)
  store i32 %arg1, i32* @eax, align 4
  %v0_19b16 = call i32 @function_19af5()
  store i32 %v0_19b16, i32* %eax.global-to-local, align 4
  ret i32 %v0_19b16

; uselistorder directives
  uselistorder i32 (i32)* @function_2d4e0, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal3IvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S6_S7_EEENSC_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_19b20:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_19b20 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_19b28 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_19b34 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19b34 = inttoptr i32 %v1_19b34 to i32*
  %v3_19b34 = load i32, i32* %v2_19b34, align 4
  store i32 %v3_19b34, i32* @eax, align 4
  store i32 ptrtoint (%vtable_392e0_type* @global_var_392e0.3527 to i32), i32* %arg1, align 4
  %v0_19b3d = load i32, i32* @eax, align 4
  %v1_19b3d = icmp eq i32 %v0_19b3d, 0
  br i1 %v1_19b3d, label %bb, label %dec_label_pc_19b41

bb:                                               ; preds = %dec_label_pc_19b20
  %v2_19b3f = call i32 @function_19b74(i32 %v0_19b28)
  store i32 %v2_19b3f, i32* @eax, align 4
  br label %dec_label_pc_19b41

dec_label_pc_19b41:                               ; preds = %bb, %dec_label_pc_19b20
  %v0_19b41 = phi i32 [ %v2_19b3f, %bb ], [ %v0_19b3d, %dec_label_pc_19b20 ]
  %v2_19b44 = call i32 @function_333f0(i32 %v0_19b41)
  %v0_19b49 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19b49 = add i32 %v0_19b49, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_19b49, i32* @eax, align 4
  %v2_19b4f = call i32 @function_2d580(i32 %v1_19b49)
  store i32 0, i32* @eax, align 4
  %v1_19b5f = inttoptr i32 %v0_19b49 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_19b5f, align 4
  br i1 false, label %bb105, label %dec_label_pc_19b41.dec_label_pc_19b67_crit_edge

dec_label_pc_19b41.dec_label_pc_19b67_crit_edge:  ; preds = %dec_label_pc_19b41
  %v5_19b6e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19b67

bb105:                                            ; preds = %dec_label_pc_19b41
  br label %dec_label_pc_19b67

dec_label_pc_19b67:                               ; preds = %dec_label_pc_19b41.dec_label_pc_19b67_crit_edge, %bb105
  %v5_19b6e = phi i32 [ %v5_19b6e.pre, %dec_label_pc_19b41.dec_label_pc_19b67_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_19b20, i32* %ebx.global-to-local, align 4
  ret i32 %v5_19b6e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_19b67, { 1, 0 }
}

define i32 @function_19b74(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b74:
  %v0_19b74 = call i32 @function_2b1fe()
  ret i32 %v0_19b74
}

define i32 @function_19b79() local_unnamed_addr {
dec_label_pc_19b79:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19b7e() local_unnamed_addr {
dec_label_pc_19b7e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19b8b(i32 %arg1) local_unnamed_addr {
dec_label_pc_19b8b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19b8b = load i32, i32* %ebp.global-to-local, align 4
  %v1_19b8b = add i32 %v0_19b8b, 1149831251
  %v2_19b8b = inttoptr i32 %v1_19b8b to i32*
  %v3_19b8b = load i32, i32* %v2_19b8b, align 4
  %v4_19b8b = add i32 %v3_19b8b, -1
  store i32 %v4_19b8b, i32* %v2_19b8b, align 4
  %v0_19b91 = load i32, i32* %eax.global-to-local, align 4
  %v11_19b91 = and i32 %v0_19b91, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_19b91, i32* @eax, align 4
  %v0_19b93 = load i32, i32* %edx.global-to-local, align 4
  %v1_19b96 = call i32 @function_2d580(i32 %v0_19b93)
  store i32 %arg1, i32* @eax, align 4
  %v0_19b9f = call i32 @function_19b7e()
  store i32 %v0_19b9f, i32* %eax.global-to-local, align 4
  ret i32 %v0_19b9f

; uselistorder directives
  uselistorder i32 (i32)* @function_2d580, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvP7CWalletRK7uint25610ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS8_EENSD_IFvRKNS0_10connectionES3_S6_S7_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_19bb0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_19bb0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_19bb8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_19bc4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19bc4 = inttoptr i32 %v1_19bc4 to i32*
  %v3_19bc4 = load i32, i32* %v2_19bc4, align 4
  store i32 %v3_19bc4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_392e0_type* @global_var_392e0.3527 to i32), i32* %arg1, align 4
  %v0_19bcd = load i32, i32* @eax, align 4
  %v1_19bcd = icmp eq i32 %v0_19bcd, 0
  br i1 %v1_19bcd, label %bb, label %dec_label_pc_19bd1

bb:                                               ; preds = %dec_label_pc_19bb0
  %v2_19bcf = call i32 @function_19c04(i32 %v0_19bb8)
  store i32 %v2_19bcf, i32* @eax, align 4
  br label %dec_label_pc_19bd1

dec_label_pc_19bd1:                               ; preds = %bb, %dec_label_pc_19bb0
  %v0_19bd1 = phi i32 [ %v2_19bcf, %bb ], [ %v0_19bcd, %dec_label_pc_19bb0 ]
  %v2_19bd4 = call i32 @function_33480(i32 %v0_19bd1)
  %v0_19bd9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19bd9 = add i32 %v0_19bd9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_19bd9, i32* @eax, align 4
  %v2_19bdf = call i32 @function_2d610(i32 %v1_19bd9)
  store i32 0, i32* @eax, align 4
  %v1_19bef = inttoptr i32 %v0_19bd9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_19bef, align 4
  br i1 false, label %bb105, label %dec_label_pc_19bd1.dec_label_pc_19bf7_crit_edge

dec_label_pc_19bd1.dec_label_pc_19bf7_crit_edge:  ; preds = %dec_label_pc_19bd1
  %v5_19bfe.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_19bf7

bb105:                                            ; preds = %dec_label_pc_19bd1
  br label %dec_label_pc_19bf7

dec_label_pc_19bf7:                               ; preds = %dec_label_pc_19bd1.dec_label_pc_19bf7_crit_edge, %bb105
  %v5_19bfe = phi i32 [ %v5_19bfe.pre, %dec_label_pc_19bd1.dec_label_pc_19bf7_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_19bb0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_19bfe

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 ptrtoint (%vtable_392e0_type* @global_var_392e0.3527 to i32), { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_19bf7, { 1, 0 }
}

define i32 @function_19c04(i32 %arg1) local_unnamed_addr {
dec_label_pc_19c04:
  %v0_19c04 = call i32 @function_2b28e()
  ret i32 %v0_19c04
}

define i32 @function_19c09() local_unnamed_addr {
dec_label_pc_19c09:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19c0e() local_unnamed_addr {
dec_label_pc_19c0e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19c1b(i32 %arg1) local_unnamed_addr {
dec_label_pc_19c1b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_19c1b = load i32, i32* %ebp.global-to-local, align 4
  %v1_19c1b = add i32 %v0_19c1b, 1149831251
  %v2_19c1b = inttoptr i32 %v1_19c1b to i32*
  %v3_19c1b = load i32, i32* %v2_19c1b, align 4
  %v4_19c1b = add i32 %v3_19c1b, -1
  store i32 %v4_19c1b, i32* %v2_19c1b, align 4
  %v0_19c21 = load i32, i32* %eax.global-to-local, align 4
  %v11_19c21 = and i32 %v0_19c21, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_19c21, i32* @eax, align 4
  %v0_19c23 = load i32, i32* %edx.global-to-local, align 4
  %v1_19c26 = call i32 @function_2d610(i32 %v0_19c23)
  store i32 %arg1, i32* @eax, align 4
  %v0_19c2f = call i32 @function_19c0e()
  store i32 %v0_19c2f, i32* %eax.global-to-local, align 4
  ret i32 %v0_19c2f

; uselistorder directives
  uselistorder i32 (i32)* @function_2d610, { 1, 0 }
}

define i32 @_Z16WriteCompactSizeI11CDataStreamEvRT_y(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19c40:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_19c40 = load i32, i32* %ebx.global-to-local, align 4
  %v0_19c48 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %v0_19c48, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v7_19c5d = icmp eq i32 %arg3, 0
  br i1 %v7_19c5d, label %dec_label_pc_19cd0, label %dec_label_pc_19c62

dec_label_pc_19c62:                               ; preds = %dec_label_pc_19c40
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v1_19c66 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19c66 = inttoptr i32 %v1_19c66 to i32*
  %v3_19c66 = load i32, i32* %v2_19c66, align 4
  store i32 %v3_19c66, i32* @eax, align 4
  %v2_19c69 = ptrtoint i32* %stack_var_-16 to i32
  %v2_19c71 = ptrtoint i8* %stack_var_-17 to i32
  store i8 ptrtoint (i8* @global_var_ff.3305 to i8), i8* %stack_var_-17, align 1
  %v4_19c8e = call i32 @function_32210(i32 %arg1, i32 %v3_19c66, i32 %v2_19c71, i32 %v2_19c69)
  %v0_19c93 = load i32, i32* %ebx.global-to-local, align 4
  %v1_19c93 = add i32 %v0_19c93, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19c93 = inttoptr i32 %v1_19c93 to i32*
  %v3_19c93 = load i32, i32* %v2_19c93, align 4
  store i32 %v3_19c93, i32* @eax, align 4
  %v2_19c96 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_19ca3

dec_label_pc_19ca3:                               ; preds = %dec_label_pc_19d40, %dec_label_pc_19d20, %dec_label_pc_19cde, %dec_label_pc_19c62
  %v0_19caf = phi i32 [ %v0_19d6e, %dec_label_pc_19d40 ], [ %arg1, %dec_label_pc_19d20 ], [ %v0_19d0b, %dec_label_pc_19cde ], [ %v0_19c93, %dec_label_pc_19c62 ]
  %v0_19cab = phi i32 [ %v2_19d71, %dec_label_pc_19d40 ], [ %v2_19d24, %dec_label_pc_19d20 ], [ %v2_19d0e, %dec_label_pc_19cde ], [ %v2_19c96, %dec_label_pc_19c62 ]
  %v0_19ca7.in = phi i32* [ %stack_var_-18, %dec_label_pc_19d40 ], [ %stack_var_-16, %dec_label_pc_19d20 ], [ %stack_var_-20, %dec_label_pc_19cde ], [ %stack_var_-28, %dec_label_pc_19c62 ]
  %v0_19ca3 = phi i32 [ %v3_19d6e, %dec_label_pc_19d40 ], [ %v3_19d28, %dec_label_pc_19d20 ], [ %v3_19d0b, %dec_label_pc_19cde ], [ %v3_19c93, %dec_label_pc_19c62 ]
  %v0_19ca7 = ptrtoint i32* %v0_19ca7.in to i32
  %v4_19cb2 = call i32 @function_32210(i32 %v0_19caf, i32 %v0_19ca3, i32 %v0_19cab, i32 %v0_19ca7)
  %v3_19cb7 = load i32, i32* %stack_var_-16, align 4
  %v1_19cbb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19cbb = xor i32 %v1_19cbb, %v3_19cb7
  %v3_19cbb = icmp eq i32 %v2_19cbb, 0
  %v1_19cc2 = icmp eq i1 %v3_19cbb, false
  br i1 %v1_19cc2, label %dec_label_pc_19d83, label %dec_label_pc_19cc8

dec_label_pc_19cc8:                               ; preds = %dec_label_pc_19ca3
  store i32 %v0_19c40, i32* %ebx.global-to-local, align 4
  ret i32 %v2_19cbb

dec_label_pc_19cd0:                               ; preds = %dec_label_pc_19c40
  %tmp124 = icmp ult i32 %arg2, 253
  br i1 %tmp124, label %dec_label_pc_19d20, label %dec_label_pc_19cd7

dec_label_pc_19cd7:                               ; preds = %dec_label_pc_19cd0
  %tmp125 = icmp ult i32 %arg2, 65536
  br i1 %tmp125, label %dec_label_pc_19d40, label %dec_label_pc_19cde

dec_label_pc_19cde:                               ; preds = %dec_label_pc_19cd7
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v1_19ce2 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19ce2 = inttoptr i32 %v1_19ce2 to i32*
  %v3_19ce2 = load i32, i32* %v2_19ce2, align 4
  store i32 %v3_19ce2, i32* @eax, align 4
  %v2_19ce5 = ptrtoint i8* %stack_var_-17 to i32
  %v2_19ce9 = ptrtoint i32* %stack_var_-16 to i32
  store i8 ptrtoint (i32* @global_var_fe.3394 to i8), i8* %stack_var_-17, align 1
  %v4_19d06 = call i32 @function_32210(i32 %arg1, i32 %v3_19ce2, i32 %v2_19ce5, i32 %v2_19ce9)
  %v0_19d0b = load i32, i32* %ebx.global-to-local, align 4
  %v1_19d0b = add i32 %v0_19d0b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19d0b = inttoptr i32 %v1_19d0b to i32*
  %v3_19d0b = load i32, i32* %v2_19d0b, align 4
  store i32 %v3_19d0b, i32* @eax, align 4
  %v2_19d0e = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_19ca3

dec_label_pc_19d20:                               ; preds = %dec_label_pc_19cd0
  %v4_19d20 = trunc i32 %arg2 to i8
  store i8 %v4_19d20, i8* %stack_var_-17, align 1
  %v2_19d24 = ptrtoint i8* %stack_var_-17 to i32
  %v1_19d28 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19d28 = inttoptr i32 %v1_19d28 to i32*
  %v3_19d28 = load i32, i32* %v2_19d28, align 4
  store i32 %v3_19d28, i32* @eax, align 4
  br label %dec_label_pc_19ca3

dec_label_pc_19d40:                               ; preds = %dec_label_pc_19cd7
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v1_19d45 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19d45 = inttoptr i32 %v1_19d45 to i32*
  %v3_19d45 = load i32, i32* %v2_19d45, align 4
  store i32 %v3_19d45, i32* @eax, align 4
  %v2_19d48 = ptrtoint i8* %stack_var_-17 to i32
  %v2_19d4c = ptrtoint i32* %stack_var_-16 to i32
  store i8 -3, i8* %stack_var_-17, align 1
  %v4_19d69 = call i32 @function_32210(i32 %arg1, i32 %v3_19d45, i32 %v2_19d48, i32 %v2_19d4c)
  %v0_19d6e = load i32, i32* %ebx.global-to-local, align 4
  %v1_19d6e = add i32 %v0_19d6e, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19d6e = inttoptr i32 %v1_19d6e to i32*
  %v3_19d6e = load i32, i32* %v2_19d6e, align 4
  store i32 %v3_19d6e, i32* @eax, align 4
  %v2_19d71 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_19ca3

dec_label_pc_19d83:                               ; preds = %dec_label_pc_19ca3
  ret i32 %v2_19cbb

; uselistorder directives
  uselistorder i32 %v3_19d6e, { 1, 0 }
  uselistorder i32 %v0_19d6e, { 1, 0 }
  uselistorder i32 %v3_19d28, { 1, 0 }
  uselistorder i32 %v3_19d0b, { 1, 0 }
  uselistorder i32 %v0_19d0b, { 1, 0 }
  uselistorder i32 %v2_19cbb, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-17, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_32210, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 4, 3, 0, 1, 5 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0, 6, 7, 8 }
}

define i32 @_Z15ReadCompactSizeI11CDataStreamEyRT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_19d90:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i8, align 1
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v0_19d90 = load i32, i32* %edi.global-to-local, align 4
  %v0_19d91 = load i32, i32* %esi.global-to-local, align 4
  %v0_19d92 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp107, i32* @ebx, align 4
  %v0_19d9a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_19da6 = add i32 %tmp107, 12
  %v2_19da6 = inttoptr i32 %v1_19da6 to i32*
  %v3_19da6 = load i32, i32* %v2_19da6, align 4
  store i32 %v3_19da6, i32* @edx, align 4
  %v2_19da9 = load i32, i32* %arg1, align 4
  store i32 %v2_19da9, i32* @ecx, align 4
  %v1_19dab = add i32 %tmp107, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19dab = inttoptr i32 %v1_19dab to i32*
  %v3_19dab = load i32, i32* %v2_19dab, align 4
  %v1_19dae = add i32 %v3_19da6, 1
  store i32 %v1_19dae, i32* @esi, align 4
  %v2_19db1 = sub i32 %v3_19dab, %v2_19da9
  store i32 %v2_19db1, i32* @eax, align 4
  %v7_19db3 = icmp ult i32 %v1_19dae, %v2_19db1
  %v12_19db3 = icmp eq i32 %v1_19dae, %v2_19db1
  br i1 %v7_19db3, label %bb, label %dec_label_pc_19dbb

bb:                                               ; preds = %dec_label_pc_19d90
  %v5_19db5 = call i32 @function_19f20(i32 %v0_19d9a, i32 %v0_19d92, i32 %v0_19d91, i32 %v0_19d90)
  store i32 %v5_19db5, i32* @eax, align 4
  %v0_19dbb.pre = load i1, i1* @cf, align 1
  %v1_19dbb.pre = load i1, i1* @zf, align 1
  br label %dec_label_pc_19dbb

dec_label_pc_19dbb:                               ; preds = %bb, %dec_label_pc_19d90
  %v1_19dbb = phi i1 [ %v1_19dbb.pre, %bb ], [ %v12_19db3, %dec_label_pc_19d90 ]
  %v0_19dbb = phi i1 [ %v0_19dbb.pre, %bb ], [ false, %dec_label_pc_19d90 ]
  %v2_19dbb = or i1 %v1_19dbb, %v0_19dbb
  br i1 %v2_19dbb, label %bb112, label %dec_label_pc_19dc1

bb112:                                            ; preds = %dec_label_pc_19dbb
  %v3_19dbb = call i32 @function_19f30()
  store i32 %v3_19dbb, i32* @eax, align 4
  br label %dec_label_pc_19dc1

dec_label_pc_19dc1:                               ; preds = %bb112, %dec_label_pc_19dbb
  %v0_19dc1 = load i32, i32* @ebx, align 4
  %v1_19dc1 = add i32 %v0_19dc1, 16
  %v2_19dc1 = inttoptr i32 %v1_19dc1 to i16*
  %v3_19dc1 = load i16, i16* %v2_19dc1, align 2
  %v4_19dc1 = zext i16 %v3_19dc1 to i32
  store i32 %v4_19dc1, i32* %esi.global-to-local, align 4
  %v1_19dc5 = add i32 %v0_19dc1, 18
  %v2_19dc5 = inttoptr i32 %v1_19dc5 to i16*
  %v3_19dc5 = load i16, i16* %v2_19dc5, align 2
  %v4_19dc5 = zext i16 %v3_19dc5 to i32
  store i32 %v4_19dc5, i32* %edi.global-to-local, align 4
  %v1_19dc9 = or i32 %v4_19dc1, 4
  store i32 %v1_19dc9, i32* %esi.global-to-local, align 4
  %v4_19dcc1 = and i32 %v4_19dc5, %v1_19dc9
  %v5_19dcc = icmp eq i32 %v4_19dcc1, 0
  %v1_19dcf = trunc i32 %v1_19dc9 to i16
  store i16 %v1_19dcf, i16* %v2_19dc1, align 2
  %v1_19dd3 = icmp eq i1 %v5_19dcc, false
  br i1 %v1_19dd3, label %bb113, label %dec_label_pc_19dd9

bb113:                                            ; preds = %dec_label_pc_19dc1
  %v2_19dd3 = call i32 @function_19fc7()
  br label %dec_label_pc_19dd9

dec_label_pc_19dd9:                               ; preds = %dec_label_pc_19dc1, %bb113
  %v2_19de6 = ptrtoint i8* %stack_var_-20 to i32
  ret i32 %v2_19de6

; uselistorder directives
  uselistorder i32 %v1_19dc9, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_19dd9, { 1, 0 }
}

define i32 @function_19e0a(i8 %arg1) local_unnamed_addr {
dec_label_pc_19e0a:
  %stack_var_24 = alloca i32, align 4
  %v4_19e0a = zext i8 %arg1 to i32
  store i32 %v4_19e0a, i32* @edx, align 4
  %tmp19 = icmp ult i8 %arg1, -3
  br i1 %tmp19, label %bb, label %dec_label_pc_19e18

bb:                                               ; preds = %dec_label_pc_19e0a
  %v3_19e12 = call i32 @function_19f00()
  %v0_19e18.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_19e18

dec_label_pc_19e18:                               ; preds = %bb, %dec_label_pc_19e0a
  %v0_19e18 = phi i32 [ %v0_19e18.pre, %bb ], [ %v4_19e0a, %dec_label_pc_19e0a ]
  %v1_19e18 = trunc i32 %v0_19e18 to i8
  %v11_19e18 = icmp eq i8 %v1_19e18, -3
  br i1 %v11_19e18, label %bb14, label %dec_label_pc_19e21

bb14:                                             ; preds = %dec_label_pc_19e18
  %v1_19e1b = call i32 @function_19f90()
  %v0_19e21.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_19e21

dec_label_pc_19e21:                               ; preds = %bb14, %dec_label_pc_19e18
  %v0_19e21 = phi i32 [ %v0_19e21.pre, %bb14 ], [ %v0_19e18, %dec_label_pc_19e18 ]
  %v1_19e21 = trunc i32 %v0_19e21 to i8
  %v11_19e21 = icmp eq i8 %v1_19e21, -2
  br i1 %v11_19e21, label %bb15, label %dec_label_pc_19e2a

bb15:                                             ; preds = %dec_label_pc_19e21
  %v1_19e24 = call i32 @function_19f40()
  br label %dec_label_pc_19e2a

dec_label_pc_19e2a:                               ; preds = %bb15, %dec_label_pc_19e21
  %v0_19e2a = load i32, i32* @ebx, align 4
  %v1_19e2a = add i32 %v0_19e2a, 12
  %v2_19e2a = inttoptr i32 %v1_19e2a to i32*
  %v3_19e2a = load i32, i32* %v2_19e2a, align 4
  store i32 %v3_19e2a, i32* @edx, align 4
  store i32 %v0_19e2a, i32* @ecx, align 4
  %v1_19e2f = add i32 %v0_19e2a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19e2f = inttoptr i32 %v1_19e2f to i32*
  %v3_19e2f = load i32, i32* %v2_19e2f, align 4
  %v1_19e32 = add i32 %v3_19e2a, 8
  store i32 %v1_19e32, i32* @esi, align 4
  %v2_19e35 = sub i32 %v3_19e2f, %v0_19e2a
  store i32 %v2_19e35, i32* @eax, align 4
  %v7_19e37 = icmp ult i32 %v1_19e32, %v2_19e35
  %v12_19e37 = icmp eq i32 %v1_19e32, %v2_19e35
  br i1 %v7_19e37, label %bb16, label %dec_label_pc_19e3f

bb16:                                             ; preds = %dec_label_pc_19e2a
  %v1_19e39 = call i32 @function_19f78()
  store i32 %v1_19e39, i32* @eax, align 4
  %v0_19e3f.pre = load i1, i1* @cf, align 1
  %v1_19e3f.pre = load i1, i1* @zf, align 1
  br label %dec_label_pc_19e3f

dec_label_pc_19e3f:                               ; preds = %bb16, %dec_label_pc_19e2a
  %v1_19e3f = phi i1 [ %v1_19e3f.pre, %bb16 ], [ %v12_19e37, %dec_label_pc_19e2a ]
  %v0_19e3f = phi i1 [ %v0_19e3f.pre, %bb16 ], [ false, %dec_label_pc_19e2a ]
  %v2_19e3f = or i1 %v1_19e3f, %v0_19e3f
  br i1 %v2_19e3f, label %bb17, label %dec_label_pc_19e45

bb17:                                             ; preds = %dec_label_pc_19e3f
  %v3_19e3f = call i32 @function_19fb8()
  store i32 %v3_19e3f, i32* @eax, align 4
  br label %dec_label_pc_19e45

dec_label_pc_19e45:                               ; preds = %bb17, %dec_label_pc_19e3f
  %v0_19e45 = load i32, i32* @ebx, align 4
  %v1_19e45 = add i32 %v0_19e45, 16
  %v2_19e45 = inttoptr i32 %v1_19e45 to i16*
  %v3_19e45 = load i16, i16* %v2_19e45, align 2
  %v4_19e45 = zext i16 %v3_19e45 to i32
  %v1_19e49 = add i32 %v0_19e45, 18
  %v2_19e49 = inttoptr i32 %v1_19e49 to i16*
  %v3_19e49 = load i16, i16* %v2_19e49, align 2
  %v4_19e49 = zext i16 %v3_19e49 to i32
  %v1_19e4d = or i32 %v4_19e45, 4
  %v4_19e501 = and i32 %v4_19e49, %v1_19e4d
  %v5_19e50 = icmp eq i32 %v4_19e501, 0
  %v1_19e53 = trunc i32 %v1_19e4d to i16
  store i16 %v1_19e53, i16* %v2_19e45, align 2
  %v1_19e57 = icmp eq i1 %v5_19e50, false
  br i1 %v1_19e57, label %bb18, label %dec_label_pc_19e5d

bb18:                                             ; preds = %dec_label_pc_19e45
  %v2_19e57 = call i32 @function_19ff6()
  br label %dec_label_pc_19e5d

dec_label_pc_19e5d:                               ; preds = %dec_label_pc_19e45, %bb18
  %v1_19e65 = load i32, i32* @edx, align 4
  %v1_19e73 = load i32, i32* @ecx, align 4
  %v2_19e73 = add i32 %v1_19e73, %v1_19e65
  %v7_19e73 = icmp ult i32 %v2_19e73, %v1_19e65
  store i1 %v7_19e73, i1* @cf, align 1
  %v12_19e73 = icmp eq i32 %v2_19e73, 0
  store i1 %v12_19e73, i1* @zf, align 1
  store i32 %v2_19e73, i32* @edx, align 4
  %v2_19e75 = ptrtoint i32* %stack_var_24 to i32
  ret i32 %v2_19e75

; uselistorder directives
  uselistorder i32 %v1_19e65, { 1, 0 }
  uselistorder i32 %v1_19e4d, { 1, 0 }
  uselistorder label %dec_label_pc_19e5d, { 1, 0 }
}

define i32 @function_19e99(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19e99:
  store i32 %arg2, i32* @edx, align 4
  store i1 false, i1* @cf, align 1
  %v7_19ea1 = icmp eq i32 %arg2, 0
  store i1 %v7_19ea1, i1* @zf, align 1
  ret i32 %arg1
}

define i32 @function_19eaa() local_unnamed_addr {
dec_label_pc_19eaa:
  %stack_var_40 = alloca i32, align 4
  %v2_19eb1 = ptrtoint i32* %stack_var_40 to i32
  store i32 %v2_19eb1, i32* @ebx, align 4
  %v3_19eb1 = load i32, i32* @eax, align 4
  ret i32 %v3_19eb1
}

define i32 @function_19ed4() local_unnamed_addr {
dec_label_pc_19ed4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19f00() local_unnamed_addr {
dec_label_pc_19f00:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v0_19f00 = load i32, i32* @edx, align 4
  %v1_19f00 = and i32 %v0_19f00, ptrtoint (i8* @global_var_ff.3305 to i32)
  store i32 %v1_19f00, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  %v1_19f09 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19f09 = icmp eq i32 %v1_19f09, %tmp8
  %v1_19f10 = icmp eq i1 %v3_19f09, false
  br i1 %v1_19f10, label %bb, label %dec_label_pc_19f16

bb:                                               ; preds = %dec_label_pc_19f00
  %v2_19f10 = call i32 @function_19fc2()
  br label %dec_label_pc_19f16

dec_label_pc_19f16:                               ; preds = %bb, %dec_label_pc_19f00
  %v0_19f1c = phi i32 [ %v2_19f10, %bb ], [ %v1_19f00, %dec_label_pc_19f00 ]
  ret i32 %v0_19f1c
}

define i32 @function_19f20(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19f20:
  %eax.global-to-local = alloca i32, align 4
  %v0_19f20 = load i32, i32* @ecx, align 4
  %v1_19f20 = load i32, i32* @edx, align 4
  %v2_19f20 = mul i32 %v1_19f20, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_19f20 = add i32 %v2_19f20, %v0_19f20
  %v4_19f20 = inttoptr i32 %v3_19f20 to i8*
  %v5_19f20 = load i8, i8* %v4_19f20, align 1
  %v6_19f20 = zext i8 %v5_19f20 to i32
  store i32 %v6_19f20, i32* %eax.global-to-local, align 4
  %v0_19f24 = load i32, i32* @esi, align 4
  %v1_19f24 = load i32, i32* @ebx, align 4
  %v2_19f24 = add i32 %v1_19f24, 12
  %v3_19f24 = inttoptr i32 %v2_19f24 to i32*
  store i32 %v0_19f24, i32* %v3_19f24, align 4
  %v0_19f27 = load i32, i32* %eax.global-to-local, align 4
  %v1_19f27 = trunc i32 %v0_19f27 to i8
  %v3_19f2b = call i32 @function_19e0a(i8 %v1_19f27)
  store i32 %v3_19f2b, i32* %eax.global-to-local, align 4
  ret i32 %v3_19f2b
}

define i32 @function_19f30() local_unnamed_addr {
dec_label_pc_19f30:
  ret i32 ptrtoint (i8** @global_var_1.3274 to i32)
}

define i32 @function_19f40() local_unnamed_addr {
dec_label_pc_19f40:
  %stack_var_36 = alloca i32, align 4
  %v2_19f40 = ptrtoint i32* %stack_var_36 to i32
  store i32 %v2_19f40, i32* @eax, align 4
  %v0_19f50 = load i32, i32* @ebx, align 4
  %v4_19f53 = call i32 @function_2e420(i32 %v0_19f50, i32 %v2_19f40, i32 ptrtoint (i16** @global_var_4.3276 to i32))
  %v3_19f5a = load i32, i32* %stack_var_36, align 4
  store i32 %v3_19f5a, i32* @eax, align 4
  %v0_19f6e = call i32 @function_19eaa()
  ret i32 %v0_19f6e
}

define i32 @function_19f78() local_unnamed_addr {
dec_label_pc_19f78:
  %eax.global-to-local = alloca i32, align 4
  %v0_19f78 = load i32, i32* @edx, align 4
  %v1_19f78 = load i32, i32* @ecx, align 4
  %v2_19f78 = add i32 %v1_19f78, %v0_19f78
  %v1_19f7a = inttoptr i32 %v2_19f78 to i32*
  %v2_19f7a = load i32, i32* %v1_19f7a, align 4
  store i32 %v2_19f7a, i32* %eax.global-to-local, align 4
  %v1_19f80 = add i32 %v2_19f78, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_19f80 = inttoptr i32 %v1_19f80 to i32*
  %v3_19f80 = load i32, i32* %v2_19f80, align 4
  store i32 %v3_19f80, i32* %eax.global-to-local, align 4
  %v0_19f83 = load i32, i32* @esi, align 4
  %v1_19f83 = load i32, i32* @ebx, align 4
  %v2_19f83 = add i32 %v1_19f83, 12
  %v3_19f83 = inttoptr i32 %v2_19f83 to i32*
  store i32 %v0_19f83, i32* %v3_19f83, align 4
  %v0_19f86 = load i32, i32* %eax.global-to-local, align 4
  %v2_19f8a = call i32 @function_19e99(i32 %v2_19f7a, i32 %v0_19f86)
  store i32 %v2_19f8a, i32* %eax.global-to-local, align 4
  ret i32 %v2_19f8a
}

define i32 @function_19f90() local_unnamed_addr {
dec_label_pc_19f90:
  %stack_var_54 = alloca i32, align 4
  %v2_19f90 = ptrtoint i32* %stack_var_54 to i32
  store i32 %v2_19f90, i32* @eax, align 4
  %v0_19fa0 = load i32, i32* @ebx, align 4
  %v3_19fa3 = call i32 @function_2e420(i32 %v0_19fa0, i32 %v2_19f90, i32 2)
  %v3_19fa8 = load i32, i32* %stack_var_54, align 4
  %v4_19fa8 = urem i32 %v3_19fa8, 65536
  store i32 0, i32* @edx, align 4
  ret i32 %v4_19fa8

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_2e420, { 1, 0 }
}

define i32 @function_19fb8() local_unnamed_addr {
dec_label_pc_19fb8:
  ret i32 ptrtoint (i8** @global_var_8.3277 to i32)
}

define i32 @function_19fc2() local_unnamed_addr {
dec_label_pc_19fc2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19fc7() local_unnamed_addr {
dec_label_pc_19fc7:
  %v3_19fce = load i32, i32* @eax, align 4
  ret i32 %v3_19fce
}

define i32 @function_19ff1() local_unnamed_addr {
dec_label_pc_19ff1:
  %v0_19ff1 = call i32 @function_19ed4()
  ret i32 %v0_19ff1
}

define i32 @function_19ff6() local_unnamed_addr {
dec_label_pc_19ff6:
  %stack_var_48 = alloca i32, align 4
  %v2_19ffd = ptrtoint i32* %stack_var_48 to i32
  store i32 %v2_19ffd, i32* @ebx, align 4
  %v3_19ffd = load i32, i32* @eax, align 4
  ret i32 %v3_19ffd
}

define i32 @function_1a020() local_unnamed_addr {
dec_label_pc_1a020:
  %v0_1a020 = call i32 @function_19ed4()
  ret i32 %v0_1a020

; uselistorder directives
  uselistorder i32 ()* @function_19ed4, { 1, 0 }
}

define i32 @function_1a025() local_unnamed_addr {
dec_label_pc_1a025:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a026() local_unnamed_addr {
dec_label_pc_1a026:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a026 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a026
}

define i32 @function_1a037() local_unnamed_addr {
dec_label_pc_1a037:
  %v0_1a037 = call i32 @function_1a025()
  ret i32 %v0_1a037
}

define i32 @function_1a039() local_unnamed_addr {
dec_label_pc_1a039:
  %v0_1a039 = call i32 @function_1a025()
  ret i32 %v0_1a039

; uselistorder directives
  uselistorder i32 ()* @function_1a025, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a040:
  ret i32 0
}

define i32 @function_1a07c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a07c:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %stack_var_24 = alloca i32, align 4
  %tmp111 = ptrtoint i32* %arg1 to i32
  %v0_1a07c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a07c = add i32 %v0_1a07c, -2062277564
  %v2_1a07c = inttoptr i32 %v1_1a07c to i32*
  %v3_1a07c = load i32, i32* %v2_1a07c, align 4
  %v4_1a07c = sub i32 %v3_1a07c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1a07c, i32* %v2_1a07c, align 4
  %v0_1a087 = load i32, i32* @eax, align 4
  %v1_1a087 = icmp eq i32 %v0_1a087, 0
  br i1 %v1_1a087, label %dec_label_pc_1a0ea, label %dec_label_pc_1a08b

dec_label_pc_1a08b:                               ; preds = %dec_label_pc_1a07c
  store i32 %v0_1a087, i32* %esi.global-to-local, align 4
  %v1_1a0b1 = icmp eq i32* %arg1, null
  br label %dec_label_pc_1a0bb

dec_label_pc_1a090:                               ; preds = %dec_label_pc_1a0bb
  %v1_1a090 = add i32 %v0_1a090, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1a090 = inttoptr i32 %v1_1a090 to i32*
  %v3_1a090 = load i32, i32* %v2_1a090, align 4
  store i32 %v3_1a090, i32* %ebx.global-to-local, align 4
  %v1_1a093 = icmp eq i32 %v3_1a090, 0
  br i1 %v1_1a093, label %dec_label_pc_1a0e5, label %dec_label_pc_1a097

dec_label_pc_1a097:                               ; preds = %dec_label_pc_1a090
  %v1_1a0a1 = add i32 %v3_1a090, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a0a1 = inttoptr i32 %v1_1a0a1 to i8*
  store i8 0, i8* %v2_1a0a1, align 1
  store i32 %tmp111, i32* @eax, align 4
  %v0_1a0af = load i32, i32* %esi.global-to-local, align 4
  %v1_1a0af = inttoptr i32 %v0_1a0af to i32*
  %v2_1a0af = load i32, i32* %v1_1a0af, align 4
  store i32 %v2_1a0af, i32* %esi.global-to-local, align 4
  br i1 %v1_1a0b1, label %dec_label_pc_1a0de, label %dec_label_pc_1a0b5

dec_label_pc_1a0b5:                               ; preds = %dec_label_pc_1a097
  %v2_1a0b5 = load i32, i32* %arg1, align 4
  store i32 %v2_1a0b5, i32* @eax, align 4
  %v1_1a0b7 = icmp eq i32 %v2_1a0b5, 0
  br i1 %v1_1a0b7, label %dec_label_pc_1a0ea, label %dec_label_pc_1a0bb

dec_label_pc_1a0bb:                               ; preds = %dec_label_pc_1a0b5, %dec_label_pc_1a08b
  %v0_1a090 = phi i32 [ %v0_1a087, %dec_label_pc_1a08b ], [ %v2_1a0af, %dec_label_pc_1a0b5 ]
  %.0 = phi i32 [ %tmp102, %dec_label_pc_1a08b ], [ %v2_1a0b5, %dec_label_pc_1a0b5 ]
  %v12_1a0bb = icmp eq i32 %v0_1a090, %.0
  %v1_1a0bd = icmp eq i1 %v12_1a0bb, false
  br i1 %v1_1a0bd, label %dec_label_pc_1a090, label %dec_label_pc_1a0bf

dec_label_pc_1a0bf:                               ; preds = %dec_label_pc_1a0bb
  %v2_1a0bf = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_1a0bf, i32* @eax, align 4
  %v1_1a0c6 = call i32 @function_2daa0(i32 %v2_1a0bf)
  %v1_1a0cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a0cf = xor i32 %v1_1a0cf, %arg2
  %v3_1a0cf = icmp eq i32 %v2_1a0cf, 0
  %v1_1a0d6 = icmp eq i1 %v3_1a0cf, false
  br i1 %v1_1a0d6, label %dec_label_pc_1a0ef, label %dec_label_pc_1a0d8

dec_label_pc_1a0d8:                               ; preds = %dec_label_pc_1a0bf
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v2_1a0cf

dec_label_pc_1a0de:                               ; preds = %dec_label_pc_1a097
  %v1_1a0e0 = call i32 @function_2b446(i32 %v3_1a090)
  store i32 %v1_1a0e0, i32* @eax, align 4
  br label %dec_label_pc_1a0e5

dec_label_pc_1a0e5:                               ; preds = %dec_label_pc_1a090, %dec_label_pc_1a0de
  %v0_1a0e5 = call i32 @function_2b4e2()
  store i32 %v0_1a0e5, i32* @eax, align 4
  br label %dec_label_pc_1a0ea

dec_label_pc_1a0ea:                               ; preds = %dec_label_pc_1a0b5, %dec_label_pc_1a0e5, %dec_label_pc_1a07c
  %v0_1a0ea = call i32 @function_2b57e()
  br label %dec_label_pc_1a0ef

dec_label_pc_1a0ef:                               ; preds = %dec_label_pc_1a0ea, %dec_label_pc_1a0bf
  %v0_1a0ef = phi i32 [ %v0_1a0ea, %dec_label_pc_1a0ea ], [ %v2_1a0cf, %dec_label_pc_1a0bf ]
  ret i32 %v0_1a0ef

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a0ea, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a0e5, { 1, 0 }
}

define i32 @function_1a0f6() local_unnamed_addr {
dec_label_pc_1a0f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a0f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a0f6
}

define i32 @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1a110:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a110 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a118 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a124 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a124 = inttoptr i32 %v1_1a124 to i32*
  %v3_1a124 = load i32, i32* %v2_1a124, align 4
  store i32 %v3_1a124, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39af8_type* @global_var_39af8.3528 to i32), i32* %arg1, align 4
  %v1_1a12d = icmp eq i32 %v3_1a124, 0
  br i1 %v1_1a12d, label %dec_label_pc_1a15c, label %dec_label_pc_1a131

dec_label_pc_1a131:                               ; preds = %dec_label_pc_1a110
  %v2_1a134 = call i32 @function_34150(i32 %v3_1a124)
  %v0_1a139 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a139 = add i32 %v0_1a139, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a139, i32* @eax, align 4
  %v2_1a13f = call i32 @function_2db70(i32 %v1_1a139)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a14f = inttoptr i32 %v0_1a139 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a14f, align 4
  br i1 false, label %dec_label_pc_1a131.dec_label_pc_1a161_crit_edge, label %dec_label_pc_1a157

dec_label_pc_1a131.dec_label_pc_1a161_crit_edge:  ; preds = %dec_label_pc_1a131
  br label %dec_label_pc_1a161

dec_label_pc_1a157:                               ; preds = %dec_label_pc_1a131
  store i32 %v0_1a110, i32* %ebx.global-to-local, align 4
  %v0_1a15b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a15b

dec_label_pc_1a15c:                               ; preds = %dec_label_pc_1a110
  %v1_1a15c = call i32 @function_2b6ea(i32 %v0_1a118)
  store i32 %v1_1a15c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a161

dec_label_pc_1a161:                               ; preds = %dec_label_pc_1a131.dec_label_pc_1a161_crit_edge, %dec_label_pc_1a15c
  %v2_1a15c = phi i32 [ undef, %dec_label_pc_1a131.dec_label_pc_1a161_crit_edge ], [ %v1_1a15c, %dec_label_pc_1a15c ]
  ret i32 %v2_1a15c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a161, { 1, 0 }
}

define i32 @function_1a166() local_unnamed_addr {
dec_label_pc_1a166:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a173(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a173:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a173 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a173 = add i32 %v0_1a173, 1149831251
  %v2_1a173 = inttoptr i32 %v1_1a173 to i32*
  %v3_1a173 = load i32, i32* %v2_1a173, align 4
  %v4_1a173 = add i32 %v3_1a173, -1
  store i32 %v4_1a173, i32* %v2_1a173, align 4
  %v0_1a179 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a179 = and i32 %v0_1a179, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a179, i32* @eax, align 4
  %v0_1a17b = load i32, i32* %edx.global-to-local, align 4
  %v1_1a17e = call i32 @function_2db70(i32 %v0_1a17b)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a187 = call i32 @function_1a166()
  store i32 %v0_1a187, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a187

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2db70, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFbRKSsS3_jENS0_10last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1a190:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a190 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a198 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a1a4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a1a4 = inttoptr i32 %v1_1a1a4 to i32*
  %v3_1a1a4 = load i32, i32* %v2_1a1a4, align 4
  store i32 %v3_1a1a4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39af8_type* @global_var_39af8.3528 to i32), i32* %arg1, align 4
  %v0_1a1ad = load i32, i32* @eax, align 4
  %v1_1a1ad = icmp eq i32 %v0_1a1ad, 0
  br i1 %v1_1a1ad, label %bb, label %dec_label_pc_1a1b1

bb:                                               ; preds = %dec_label_pc_1a190
  %v2_1a1af = call i32 @function_1a1e4(i32 %v0_1a198)
  store i32 %v2_1a1af, i32* @eax, align 4
  br label %dec_label_pc_1a1b1

dec_label_pc_1a1b1:                               ; preds = %bb, %dec_label_pc_1a190
  %v0_1a1b1 = phi i32 [ %v2_1a1af, %bb ], [ %v0_1a1ad, %dec_label_pc_1a190 ]
  %v2_1a1b4 = call i32 @function_341d0(i32 %v0_1a1b1)
  %v0_1a1b9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a1b9 = add i32 %v0_1a1b9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a1b9, i32* @eax, align 4
  %v2_1a1bf = call i32 @function_2dbf0(i32 %v1_1a1b9)
  store i32 0, i32* @eax, align 4
  %v1_1a1cf = inttoptr i32 %v0_1a1b9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a1cf, align 4
  br i1 false, label %bb105, label %dec_label_pc_1a1b1.dec_label_pc_1a1d7_crit_edge

dec_label_pc_1a1b1.dec_label_pc_1a1d7_crit_edge:  ; preds = %dec_label_pc_1a1b1
  %v5_1a1de.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a1d7

bb105:                                            ; preds = %dec_label_pc_1a1b1
  br label %dec_label_pc_1a1d7

dec_label_pc_1a1d7:                               ; preds = %dec_label_pc_1a1b1.dec_label_pc_1a1d7_crit_edge, %bb105
  %v5_1a1de = phi i32 [ %v5_1a1de.pre, %dec_label_pc_1a1b1.dec_label_pc_1a1d7_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1a190, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1a1de

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a1d7, { 1, 0 }
}

define i32 @function_1a1e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a1e4:
  %v3_1a1fc = load i32, i32* @eax, align 4
  ret i32 %v3_1a1fc
}

define i32 @function_1a208() local_unnamed_addr {
dec_label_pc_1a208:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a20d() local_unnamed_addr {
dec_label_pc_1a20d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a21a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a21a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a21a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a21a = add i32 %v0_1a21a, 1149831251
  %v2_1a21a = inttoptr i32 %v1_1a21a to i32*
  %v3_1a21a = load i32, i32* %v2_1a21a, align 4
  %v4_1a21a = add i32 %v3_1a21a, -1
  store i32 %v4_1a21a, i32* %v2_1a21a, align 4
  %v0_1a220 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a220 = and i32 %v0_1a220, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a220, i32* @eax, align 4
  %v0_1a222 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a225 = call i32 @function_2dbf0(i32 %v0_1a222)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a22e = call i32 @function_1a20d()
  store i32 %v0_1a22e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a22e

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2dbf0, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFbRKSsS3_jENS0_10last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1a230:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a230 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a238 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a244 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a244 = inttoptr i32 %v1_1a244 to i32*
  %v3_1a244 = load i32, i32* %v2_1a244, align 4
  store i32 %v3_1a244, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39af8_type* @global_var_39af8.3528 to i32), i32* %arg1, align 4
  %v1_1a24d = icmp eq i32 %v3_1a244, 0
  br i1 %v1_1a24d, label %dec_label_pc_1a27c, label %dec_label_pc_1a251

dec_label_pc_1a251:                               ; preds = %dec_label_pc_1a230
  %v2_1a254 = call i32 @function_34270(i32 %v3_1a244)
  %v0_1a259 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a259 = add i32 %v0_1a259, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a259, i32* @eax, align 4
  %v2_1a25f = call i32 @function_2dc90(i32 %v1_1a259)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a26f = inttoptr i32 %v0_1a259 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a26f, align 4
  br i1 false, label %dec_label_pc_1a251.dec_label_pc_1a281_crit_edge, label %dec_label_pc_1a277

dec_label_pc_1a251.dec_label_pc_1a281_crit_edge:  ; preds = %dec_label_pc_1a251
  br label %dec_label_pc_1a281

dec_label_pc_1a277:                               ; preds = %dec_label_pc_1a251
  store i32 %v0_1a230, i32* %ebx.global-to-local, align 4
  %v0_1a27b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a27b

dec_label_pc_1a27c:                               ; preds = %dec_label_pc_1a230
  %v1_1a27c = call i32 @function_2b80a(i32 %v0_1a238)
  store i32 %v1_1a27c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a281

dec_label_pc_1a281:                               ; preds = %dec_label_pc_1a251.dec_label_pc_1a281_crit_edge, %dec_label_pc_1a27c
  %v2_1a27c = phi i32 [ undef, %dec_label_pc_1a251.dec_label_pc_1a281_crit_edge ], [ %v1_1a27c, %dec_label_pc_1a27c ]
  ret i32 %v2_1a27c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a281, { 1, 0 }
}

define i32 @function_1a286() local_unnamed_addr {
dec_label_pc_1a286:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a293(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a293:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a293 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a293 = add i32 %v0_1a293, 1149831251
  %v2_1a293 = inttoptr i32 %v1_1a293 to i32*
  %v3_1a293 = load i32, i32* %v2_1a293, align 4
  %v4_1a293 = add i32 %v3_1a293, -1
  store i32 %v4_1a293, i32* %v2_1a293, align 4
  %v0_1a299 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a299 = and i32 %v0_1a299, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a299, i32* @eax, align 4
  %v0_1a29b = load i32, i32* %edx.global-to-local, align 4
  %v1_1a29e = call i32 @function_2dc90(i32 %v0_1a29b)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a2a7 = call i32 @function_1a286()
  store i32 %v0_1a2a7, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a2a7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2dc90, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1a2b0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a2b0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a2b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a2c4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a2c4 = inttoptr i32 %v1_1a2c4 to i32*
  %v3_1a2c4 = load i32, i32* %v2_1a2c4, align 4
  store i32 %v3_1a2c4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39af8_type* @global_var_39af8.3528 to i32), i32* %arg1, align 4
  %v0_1a2cd = load i32, i32* @eax, align 4
  %v1_1a2cd = icmp eq i32 %v0_1a2cd, 0
  br i1 %v1_1a2cd, label %bb, label %dec_label_pc_1a2d1

bb:                                               ; preds = %dec_label_pc_1a2b0
  %v2_1a2cf = call i32 @function_1a304(i32 %v0_1a2b8)
  store i32 %v2_1a2cf, i32* @eax, align 4
  br label %dec_label_pc_1a2d1

dec_label_pc_1a2d1:                               ; preds = %bb, %dec_label_pc_1a2b0
  %v0_1a2d1 = phi i32 [ %v2_1a2cf, %bb ], [ %v0_1a2cd, %dec_label_pc_1a2b0 ]
  %v2_1a2d4 = call i32 @function_342f0(i32 %v0_1a2d1)
  %v0_1a2d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a2d9 = add i32 %v0_1a2d9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a2d9, i32* @eax, align 4
  %v2_1a2df = call i32 @function_2dd10(i32 %v1_1a2d9)
  store i32 0, i32* @eax, align 4
  %v1_1a2ef = inttoptr i32 %v0_1a2d9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a2ef, align 4
  br i1 false, label %bb105, label %dec_label_pc_1a2d1.dec_label_pc_1a2f7_crit_edge

dec_label_pc_1a2d1.dec_label_pc_1a2f7_crit_edge:  ; preds = %dec_label_pc_1a2d1
  %v5_1a2fe.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a2f7

bb105:                                            ; preds = %dec_label_pc_1a2d1
  br label %dec_label_pc_1a2f7

dec_label_pc_1a2f7:                               ; preds = %dec_label_pc_1a2d1.dec_label_pc_1a2f7_crit_edge, %bb105
  %v5_1a2fe = phi i32 [ %v5_1a2fe.pre, %dec_label_pc_1a2d1.dec_label_pc_1a2f7_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1a2b0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1a2fe

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a2f7, { 1, 0 }
}

define i32 @function_1a304(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a304:
  %v0_1a304 = call i32 @function_2b88a()
  ret i32 %v0_1a304
}

define i32 @function_1a309() local_unnamed_addr {
dec_label_pc_1a309:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a30e() local_unnamed_addr {
dec_label_pc_1a30e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a31b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a31b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a31b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a31b = add i32 %v0_1a31b, 1149831251
  %v2_1a31b = inttoptr i32 %v1_1a31b to i32*
  %v3_1a31b = load i32, i32* %v2_1a31b, align 4
  %v4_1a31b = add i32 %v3_1a31b, -1
  store i32 %v4_1a31b, i32* %v2_1a31b, align 4
  %v0_1a321 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a321 = and i32 %v0_1a321, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a321, i32* @eax, align 4
  %v0_1a323 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a326 = call i32 @function_2dd10(i32 %v0_1a323)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a32f = call i32 @function_1a30e()
  store i32 %v0_1a32f, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a32f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2dd10, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a340:
  ret i32 0
}

define i32 @function_1a37c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a37c:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_1a37c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a37c = add i32 %v0_1a37c, -2062277564
  %v2_1a37c = inttoptr i32 %v1_1a37c to i32*
  %v3_1a37c = load i32, i32* %v2_1a37c, align 4
  %v4_1a37c = sub i32 %v3_1a37c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1a37c, i32* %v2_1a37c, align 4
  %v0_1a387 = load i32, i32* @eax, align 4
  %v1_1a387 = icmp eq i32 %v0_1a387, 0
  br i1 %v1_1a387, label %bb, label %dec_label_pc_1a38f

bb:                                               ; preds = %dec_label_pc_1a37c
  %v2_1a389 = call i32 @function_1a42e(i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_1a389, i32* @eax, align 4
  br label %dec_label_pc_1a38f

dec_label_pc_1a38f:                               ; preds = %bb, %dec_label_pc_1a37c
  %v2_1a38f = phi i32 [ %v2_1a389, %bb ], [ %v0_1a387, %dec_label_pc_1a37c ]
  store i32 %v2_1a38f, i32* %esi.global-to-local, align 4
  %v1_1a3b9 = icmp eq i32* %arg1, null
  br label %dec_label_pc_1a3c3

dec_label_pc_1a398:                               ; preds = %dec_label_pc_1a3c3
  %v1_1a398 = add i32 %v0_1a398, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1a398 = inttoptr i32 %v1_1a398 to i32*
  %v3_1a398 = load i32, i32* %v2_1a398, align 4
  store i32 %v3_1a398, i32* %ebx.global-to-local, align 4
  %v1_1a39b = icmp eq i32 %v3_1a398, 0
  br i1 %v1_1a39b, label %bb118, label %dec_label_pc_1a39f

bb118:                                            ; preds = %dec_label_pc_1a398
  %v1_1a39d = call i32 @function_1a40a()
  br label %dec_label_pc_1a39f

dec_label_pc_1a39f:                               ; preds = %bb118, %dec_label_pc_1a398
  %v1_1a3a9 = add i32 %v3_1a398, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a3a9 = inttoptr i32 %v1_1a3a9 to i8*
  store i8 0, i8* %v2_1a3a9, align 1
  %v0_1a3b7 = load i32, i32* %esi.global-to-local, align 4
  %v1_1a3b7 = inttoptr i32 %v0_1a3b7 to i32*
  %v2_1a3b7 = load i32, i32* %v1_1a3b7, align 4
  store i32 %v2_1a3b7, i32* %esi.global-to-local, align 4
  br i1 %v1_1a3b9, label %dec_label_pc_1a3e6, label %dec_label_pc_1a3bd

dec_label_pc_1a3bd:                               ; preds = %dec_label_pc_1a39f
  %v2_1a3bd = load i32, i32* %arg1, align 4
  store i32 %v2_1a3bd, i32* @eax, align 4
  %v1_1a3bf = icmp eq i32 %v2_1a3bd, 0
  br i1 %v1_1a3bf, label %bb119, label %dec_label_pc_1a3c3

bb119:                                            ; preds = %dec_label_pc_1a3bd
  %v3_1a3c1 = call i32 @function_1a42e(i32 %v3_1a398)
  store i32 %v3_1a3c1, i32* @eax, align 4
  %v0_1a3c3.pre.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1a3c3

dec_label_pc_1a3c3:                               ; preds = %bb119, %dec_label_pc_1a3bd, %dec_label_pc_1a38f
  %v0_1a398 = phi i32 [ %v2_1a38f, %dec_label_pc_1a38f ], [ %v2_1a3b7, %dec_label_pc_1a3bd ], [ %v0_1a3c3.pre.pre, %bb119 ]
  %v1_1a3c3 = phi i32 [ %v2_1a38f, %dec_label_pc_1a38f ], [ %v2_1a3bd, %dec_label_pc_1a3bd ], [ %v3_1a3c1, %bb119 ]
  %v12_1a3c3 = icmp eq i32 %v0_1a398, %v1_1a3c3
  %v1_1a3c5 = icmp eq i1 %v12_1a3c3, false
  br i1 %v1_1a3c5, label %dec_label_pc_1a398, label %dec_label_pc_1a3c7

dec_label_pc_1a3c7:                               ; preds = %dec_label_pc_1a3c3
  %v2_1a3c7 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_1a3c7, i32* @eax, align 4
  %v2_1a3ce = call i32 @function_2dda0(i32 %v2_1a3c7)
  %v1_1a3d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a3d7 = xor i32 %v1_1a3d7, %arg2
  %v3_1a3d7 = icmp eq i32 %v2_1a3d7, 0
  store i32 %v2_1a3d7, i32* @eax, align 4
  %v1_1a3de = icmp eq i1 %v3_1a3d7, false
  br i1 %v1_1a3de, label %bb120, label %dec_label_pc_1a3e0

bb120:                                            ; preds = %dec_label_pc_1a3c7
  %v2_1a3de = call i32 @function_1a452()
  br label %dec_label_pc_1a3e0

dec_label_pc_1a3e0:                               ; preds = %bb120, %dec_label_pc_1a3c7
  %v0_1a3e5 = phi i32 [ %v2_1a3de, %bb120 ], [ %v2_1a3d7, %dec_label_pc_1a3c7 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v0_1a3e5

dec_label_pc_1a3e6:                               ; preds = %dec_label_pc_1a39f
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %v2_1a38f, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1a42e, { 1, 0 }
}

define i32 @function_1a40a() local_unnamed_addr {
dec_label_pc_1a40a:
  %v3_1a422 = load i32, i32* @eax, align 4
  ret i32 %v3_1a422
}

define i32 @function_1a42e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a42e:
  %v3_1a446 = load i32, i32* @eax, align 4
  ret i32 %v3_1a446
}

define i32 @function_1a452() local_unnamed_addr {
dec_label_pc_1a452:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a458() local_unnamed_addr {
dec_label_pc_1a458:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a458 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a458
}

define i32 @_ZN5boost8signals27signal1IbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS6_IFbRKNS0_10connectionExEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1a470:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a470 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a478 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a484 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a484 = inttoptr i32 %v1_1a484 to i32*
  %v3_1a484 = load i32, i32* %v2_1a484, align 4
  store i32 %v3_1a484, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39ac8_type* @global_var_39ac8.3532 to i32), i32* %arg1, align 4
  %v1_1a48d = icmp eq i32 %v3_1a484, 0
  br i1 %v1_1a48d, label %dec_label_pc_1a4bc, label %dec_label_pc_1a491

dec_label_pc_1a491:                               ; preds = %dec_label_pc_1a470
  %v2_1a494 = call i32 @function_347b0(i32 %v3_1a484)
  %v0_1a499 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a499 = add i32 %v0_1a499, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a499, i32* @eax, align 4
  %v2_1a49f = call i32 @function_2ded0(i32 %v1_1a499)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a4af = inttoptr i32 %v0_1a499 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a4af, align 4
  br i1 false, label %dec_label_pc_1a491.dec_label_pc_1a4c1_crit_edge, label %dec_label_pc_1a4b7

dec_label_pc_1a491.dec_label_pc_1a4c1_crit_edge:  ; preds = %dec_label_pc_1a491
  br label %dec_label_pc_1a4c1

dec_label_pc_1a4b7:                               ; preds = %dec_label_pc_1a491
  store i32 %v0_1a470, i32* %ebx.global-to-local, align 4
  %v0_1a4bb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a4bb

dec_label_pc_1a4bc:                               ; preds = %dec_label_pc_1a470
  %v1_1a4bc = call i32 @function_2bb82(i32 %v0_1a478)
  store i32 %v1_1a4bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a4c1

dec_label_pc_1a4c1:                               ; preds = %dec_label_pc_1a491.dec_label_pc_1a4c1_crit_edge, %dec_label_pc_1a4bc
  %v2_1a4bc = phi i32 [ undef, %dec_label_pc_1a491.dec_label_pc_1a4c1_crit_edge ], [ %v1_1a4bc, %dec_label_pc_1a4bc ]
  ret i32 %v2_1a4bc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a4c1, { 1, 0 }
}

define i32 @function_1a4c6() local_unnamed_addr {
dec_label_pc_1a4c6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a4d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a4d3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a4d3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a4d3 = add i32 %v0_1a4d3, 1149831251
  %v2_1a4d3 = inttoptr i32 %v1_1a4d3 to i32*
  %v3_1a4d3 = load i32, i32* %v2_1a4d3, align 4
  %v4_1a4d3 = add i32 %v3_1a4d3, -1
  store i32 %v4_1a4d3, i32* %v2_1a4d3, align 4
  %v0_1a4d9 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a4d9 = and i32 %v0_1a4d9, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a4d9, i32* @eax, align 4
  %v0_1a4db = load i32, i32* %edx.global-to-local, align 4
  %v1_1a4de = call i32 @function_2ded0(i32 %v0_1a4db)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a4e7 = call i32 @function_1a4c6()
  store i32 %v0_1a4e7, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a4e7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2ded0, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal1IbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS6_IFbRKNS0_10connectionExEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1a4f0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a4f0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a4f8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a504 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a504 = inttoptr i32 %v1_1a504 to i32*
  %v3_1a504 = load i32, i32* %v2_1a504, align 4
  store i32 %v3_1a504, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39ac8_type* @global_var_39ac8.3532 to i32), i32* %arg1, align 4
  %v0_1a50d = load i32, i32* @eax, align 4
  %v1_1a50d = icmp eq i32 %v0_1a50d, 0
  br i1 %v1_1a50d, label %bb, label %dec_label_pc_1a511

bb:                                               ; preds = %dec_label_pc_1a4f0
  %v2_1a50f = call i32 @function_1a544(i32 %v0_1a4f8)
  store i32 %v2_1a50f, i32* @eax, align 4
  br label %dec_label_pc_1a511

dec_label_pc_1a511:                               ; preds = %bb, %dec_label_pc_1a4f0
  %v0_1a511 = phi i32 [ %v2_1a50f, %bb ], [ %v0_1a50d, %dec_label_pc_1a4f0 ]
  %v2_1a514 = call i32 @function_34830(i32 %v0_1a511)
  %v0_1a519 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a519 = add i32 %v0_1a519, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a519, i32* @eax, align 4
  %v2_1a51f = call i32 @function_2df50(i32 %v1_1a519)
  store i32 0, i32* @eax, align 4
  %v1_1a52f = inttoptr i32 %v0_1a519 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a52f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1a511.dec_label_pc_1a537_crit_edge

dec_label_pc_1a511.dec_label_pc_1a537_crit_edge:  ; preds = %dec_label_pc_1a511
  %v5_1a53e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a537

bb105:                                            ; preds = %dec_label_pc_1a511
  br label %dec_label_pc_1a537

dec_label_pc_1a537:                               ; preds = %dec_label_pc_1a511.dec_label_pc_1a537_crit_edge, %bb105
  %v5_1a53e = phi i32 [ %v5_1a53e.pre, %dec_label_pc_1a511.dec_label_pc_1a537_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1a4f0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1a53e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a537, { 1, 0 }
}

define i32 @function_1a544(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a544:
  %v0_1a544 = call i32 @function_2bc02()
  ret i32 %v0_1a544
}

define i32 @function_1a549() local_unnamed_addr {
dec_label_pc_1a549:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a54e() local_unnamed_addr {
dec_label_pc_1a54e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a55b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a55b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a55b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a55b = add i32 %v0_1a55b, 1149831251
  %v2_1a55b = inttoptr i32 %v1_1a55b to i32*
  %v3_1a55b = load i32, i32* %v2_1a55b, align 4
  %v4_1a55b = add i32 %v3_1a55b, -1
  store i32 %v4_1a55b, i32* %v2_1a55b, align 4
  %v0_1a561 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a561 = and i32 %v0_1a561, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a561, i32* @eax, align 4
  %v0_1a563 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a566 = call i32 @function_2df50(i32 %v0_1a563)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a56f = call i32 @function_1a54e()
  store i32 %v0_1a56f, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a56f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2df50, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFbxENS0_10last_valueIbEEiSt4lessIiENS_8functionIS2_EENS7_IFbRKNS0_10connectionExEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1a580:
  %ebx.global-to-local = alloca i32, align 4
  %tmp106 = ptrtoint i32* %arg1 to i32
  %v0_1a580 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp106, i32* %ebx.global-to-local, align 4
  %v1_1a594 = add i32 %tmp106, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a594 = inttoptr i32 %v1_1a594 to i32*
  %v3_1a594 = load i32, i32* %v2_1a594, align 4
  store i32 %v3_1a594, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39ac8_type* @global_var_39ac8.3532 to i32), i32* %arg1, align 4
  %v1_1a59d = icmp eq i32 %v3_1a594, 0
  br i1 %v1_1a59d, label %dec_label_pc_1a5cc, label %dec_label_pc_1a5a1

dec_label_pc_1a5a1:                               ; preds = %dec_label_pc_1a580
  %v2_1a5a4 = call i32 @function_348c0(i32 %v3_1a594)
  %v0_1a5a9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a5a9 = add i32 %v0_1a5a9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a5a9, i32* @eax, align 4
  %v2_1a5af = call i32 @function_2dfe0(i32 %v1_1a5a9)
  store i32 0, i32* @eax, align 4
  %v1_1a5bf = inttoptr i32 %v0_1a5a9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a5bf, align 4
  br i1 false, label %bb, label %dec_label_pc_1a5a1.dec_label_pc_1a5c7_crit_edge

dec_label_pc_1a5a1.dec_label_pc_1a5c7_crit_edge:  ; preds = %dec_label_pc_1a5a1
  %v0_1a5cb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a5c7

bb:                                               ; preds = %dec_label_pc_1a5a1
  br label %dec_label_pc_1a5c7

dec_label_pc_1a5c7:                               ; preds = %dec_label_pc_1a5a1.dec_label_pc_1a5c7_crit_edge, %bb
  %v0_1a5cb = phi i32 [ %v0_1a5cb.pre, %dec_label_pc_1a5a1.dec_label_pc_1a5c7_crit_edge ], [ undef, %bb ]
  store i32 %v0_1a580, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1a5cb

dec_label_pc_1a5cc:                               ; preds = %dec_label_pc_1a580
  ret i32 0

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a5c7, { 1, 0 }
}

define i32 @function_1a5f0() local_unnamed_addr {
dec_label_pc_1a5f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a5f5() local_unnamed_addr {
dec_label_pc_1a5f5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a602(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a602:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a602 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a602 = add i32 %v0_1a602, 1149831251
  %v2_1a602 = inttoptr i32 %v1_1a602 to i32*
  %v3_1a602 = load i32, i32* %v2_1a602, align 4
  %v4_1a602 = add i32 %v3_1a602, -1
  store i32 %v4_1a602, i32* %v2_1a602, align 4
  %v0_1a608 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a608 = and i32 %v0_1a608, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a608, i32* @eax, align 4
  %v0_1a60a = load i32, i32* %edx.global-to-local, align 4
  %v1_1a60d = call i32 @function_2dfe0(i32 %v0_1a60a)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a616 = call i32 @function_1a5f5()
  store i32 %v0_1a616, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a616

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2dfe0, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFbxENS0_10last_valueIbEEiSt4lessIiENS_8functionIS2_EENS7_IFbRKNS0_10connectionExEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1a620:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a620 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a628 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a634 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a634 = inttoptr i32 %v1_1a634 to i32*
  %v3_1a634 = load i32, i32* %v2_1a634, align 4
  store i32 %v3_1a634, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39ac8_type* @global_var_39ac8.3532 to i32), i32* %arg1, align 4
  %v0_1a63d = load i32, i32* @eax, align 4
  %v1_1a63d = icmp eq i32 %v0_1a63d, 0
  br i1 %v1_1a63d, label %bb, label %dec_label_pc_1a641

bb:                                               ; preds = %dec_label_pc_1a620
  %v2_1a63f = call i32 @function_1a674(i32 %v0_1a628)
  store i32 %v2_1a63f, i32* @eax, align 4
  br label %dec_label_pc_1a641

dec_label_pc_1a641:                               ; preds = %bb, %dec_label_pc_1a620
  %v0_1a641 = phi i32 [ %v2_1a63f, %bb ], [ %v0_1a63d, %dec_label_pc_1a620 ]
  %v2_1a644 = call i32 @function_34960(i32 %v0_1a641)
  %v0_1a649 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a649 = add i32 %v0_1a649, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a649, i32* @eax, align 4
  %v2_1a64f = call i32 @function_2e080(i32 %v1_1a649)
  store i32 0, i32* @eax, align 4
  %v1_1a65f = inttoptr i32 %v0_1a649 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a65f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1a641.dec_label_pc_1a667_crit_edge

dec_label_pc_1a641.dec_label_pc_1a667_crit_edge:  ; preds = %dec_label_pc_1a641
  %v5_1a66e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a667

bb105:                                            ; preds = %dec_label_pc_1a641
  br label %dec_label_pc_1a667

dec_label_pc_1a667:                               ; preds = %dec_label_pc_1a641.dec_label_pc_1a667_crit_edge, %bb105
  %v5_1a66e = phi i32 [ %v5_1a66e.pre, %dec_label_pc_1a641.dec_label_pc_1a667_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1a620, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1a66e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a667, { 1, 0 }
}

define i32 @function_1a674(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a674:
  %v0_1a674 = call i32 @function_2bd32()
  ret i32 %v0_1a674
}

define i32 @function_1a679() local_unnamed_addr {
dec_label_pc_1a679:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a67e() local_unnamed_addr {
dec_label_pc_1a67e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a68b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a68b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a68b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a68b = add i32 %v0_1a68b, 1149831251
  %v2_1a68b = inttoptr i32 %v1_1a68b to i32*
  %v3_1a68b = load i32, i32* %v2_1a68b, align 4
  %v4_1a68b = add i32 %v3_1a68b, -1
  store i32 %v4_1a68b, i32* %v2_1a68b, align 4
  %v0_1a691 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a691 = and i32 %v0_1a691, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a691, i32* @eax, align 4
  %v0_1a693 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a696 = call i32 @function_2e080(i32 %v0_1a693)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a69f = call i32 @function_1a67e()
  store i32 %v0_1a69f, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a69f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e080, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a6b0:
  ret i32 0
}

define i32 @function_1a6ec(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a6ec:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %stack_var_24 = alloca i32, align 4
  %tmp111 = ptrtoint i32* %arg1 to i32
  %v0_1a6ec = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a6ec = add i32 %v0_1a6ec, -2062277564
  %v2_1a6ec = inttoptr i32 %v1_1a6ec to i32*
  %v3_1a6ec = load i32, i32* %v2_1a6ec, align 4
  %v4_1a6ec = sub i32 %v3_1a6ec, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1a6ec, i32* %v2_1a6ec, align 4
  %v0_1a6f7 = load i32, i32* @eax, align 4
  %v1_1a6f7 = icmp eq i32 %v0_1a6f7, 0
  br i1 %v1_1a6f7, label %dec_label_pc_1a75a, label %dec_label_pc_1a6fb

dec_label_pc_1a6fb:                               ; preds = %dec_label_pc_1a6ec
  store i32 %v0_1a6f7, i32* %esi.global-to-local, align 4
  %v1_1a721 = icmp eq i32* %arg1, null
  br label %dec_label_pc_1a72b

dec_label_pc_1a700:                               ; preds = %dec_label_pc_1a72b
  %v1_1a700 = add i32 %v0_1a700, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1a700 = inttoptr i32 %v1_1a700 to i32*
  %v3_1a700 = load i32, i32* %v2_1a700, align 4
  store i32 %v3_1a700, i32* %ebx.global-to-local, align 4
  %v1_1a703 = icmp eq i32 %v3_1a700, 0
  br i1 %v1_1a703, label %dec_label_pc_1a755, label %dec_label_pc_1a707

dec_label_pc_1a707:                               ; preds = %dec_label_pc_1a700
  %v1_1a711 = add i32 %v3_1a700, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a711 = inttoptr i32 %v1_1a711 to i8*
  store i8 0, i8* %v2_1a711, align 1
  store i32 %tmp111, i32* @eax, align 4
  %v0_1a71f = load i32, i32* %esi.global-to-local, align 4
  %v1_1a71f = inttoptr i32 %v0_1a71f to i32*
  %v2_1a71f = load i32, i32* %v1_1a71f, align 4
  store i32 %v2_1a71f, i32* %esi.global-to-local, align 4
  br i1 %v1_1a721, label %dec_label_pc_1a74e, label %dec_label_pc_1a725

dec_label_pc_1a725:                               ; preds = %dec_label_pc_1a707
  %v2_1a725 = load i32, i32* %arg1, align 4
  store i32 %v2_1a725, i32* @eax, align 4
  %v1_1a727 = icmp eq i32 %v2_1a725, 0
  br i1 %v1_1a727, label %dec_label_pc_1a75a, label %dec_label_pc_1a72b

dec_label_pc_1a72b:                               ; preds = %dec_label_pc_1a725, %dec_label_pc_1a6fb
  %v0_1a700 = phi i32 [ %v0_1a6f7, %dec_label_pc_1a6fb ], [ %v2_1a71f, %dec_label_pc_1a725 ]
  %.0 = phi i32 [ %tmp102, %dec_label_pc_1a6fb ], [ %v2_1a725, %dec_label_pc_1a725 ]
  %v12_1a72b = icmp eq i32 %v0_1a700, %.0
  %v1_1a72d = icmp eq i1 %v12_1a72b, false
  br i1 %v1_1a72d, label %dec_label_pc_1a700, label %dec_label_pc_1a72f

dec_label_pc_1a72f:                               ; preds = %dec_label_pc_1a72b
  %v2_1a72f = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_1a72f, i32* @eax, align 4
  %v1_1a736 = call i32 @function_2e110(i32 %v2_1a72f)
  %v1_1a73f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a73f = xor i32 %v1_1a73f, %arg2
  %v3_1a73f = icmp eq i32 %v2_1a73f, 0
  %v1_1a746 = icmp eq i1 %v3_1a73f, false
  br i1 %v1_1a746, label %dec_label_pc_1a75f, label %dec_label_pc_1a748

dec_label_pc_1a748:                               ; preds = %dec_label_pc_1a72f
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v2_1a73f

dec_label_pc_1a74e:                               ; preds = %dec_label_pc_1a707
  %v1_1a750 = call i32 @function_2baea(i32 %v3_1a700)
  store i32 %v1_1a750, i32* @eax, align 4
  br label %dec_label_pc_1a755

dec_label_pc_1a755:                               ; preds = %dec_label_pc_1a700, %dec_label_pc_1a74e
  %v0_1a755 = call i32 @function_2bb86()
  store i32 %v0_1a755, i32* @eax, align 4
  br label %dec_label_pc_1a75a

dec_label_pc_1a75a:                               ; preds = %dec_label_pc_1a725, %dec_label_pc_1a755, %dec_label_pc_1a6ec
  %v0_1a75a = call i32 @function_2bc22()
  br label %dec_label_pc_1a75f

dec_label_pc_1a75f:                               ; preds = %dec_label_pc_1a75a, %dec_label_pc_1a72f
  %v0_1a75f = phi i32 [ %v0_1a75a, %dec_label_pc_1a75a ], [ %v2_1a73f, %dec_label_pc_1a72f ]
  ret i32 %v0_1a75f

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a75a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a755, { 1, 0 }
}

define i32 @function_1a766() local_unnamed_addr {
dec_label_pc_1a766:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a766 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a766
}

define i32 @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1a780:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a780 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a788 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a794 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a794 = inttoptr i32 %v1_1a794 to i32*
  %v3_1a794 = load i32, i32* %v2_1a794, align 4
  store i32 %v3_1a794, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a98_type* @global_var_39a98.3533 to i32), i32* %arg1, align 4
  %v1_1a79d = icmp eq i32 %v3_1a794, 0
  br i1 %v1_1a79d, label %dec_label_pc_1a7cc, label %dec_label_pc_1a7a1

dec_label_pc_1a7a1:                               ; preds = %dec_label_pc_1a780
  %v2_1a7a4 = call i32 @function_34e30(i32 %v3_1a794)
  %v0_1a7a9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a7a9 = add i32 %v0_1a7a9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a7a9, i32* @eax, align 4
  %v2_1a7af = call i32 @function_2e1e0(i32 %v1_1a7a9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a7bf = inttoptr i32 %v0_1a7a9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a7bf, align 4
  br i1 false, label %dec_label_pc_1a7a1.dec_label_pc_1a7d1_crit_edge, label %dec_label_pc_1a7c7

dec_label_pc_1a7a1.dec_label_pc_1a7d1_crit_edge:  ; preds = %dec_label_pc_1a7a1
  br label %dec_label_pc_1a7d1

dec_label_pc_1a7c7:                               ; preds = %dec_label_pc_1a7a1
  store i32 %v0_1a780, i32* %ebx.global-to-local, align 4
  %v0_1a7cb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a7cb

dec_label_pc_1a7cc:                               ; preds = %dec_label_pc_1a780
  %v1_1a7cc = call i32 @function_2bd8e(i32 %v0_1a788)
  store i32 %v1_1a7cc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a7d1

dec_label_pc_1a7d1:                               ; preds = %dec_label_pc_1a7a1.dec_label_pc_1a7d1_crit_edge, %dec_label_pc_1a7cc
  %v2_1a7cc = phi i32 [ undef, %dec_label_pc_1a7a1.dec_label_pc_1a7d1_crit_edge ], [ %v1_1a7cc, %dec_label_pc_1a7cc ]
  ret i32 %v2_1a7cc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a7d1, { 1, 0 }
}

define i32 @function_1a7d6() local_unnamed_addr {
dec_label_pc_1a7d6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a7e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a7e3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a7e3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a7e3 = add i32 %v0_1a7e3, 1149831251
  %v2_1a7e3 = inttoptr i32 %v1_1a7e3 to i32*
  %v3_1a7e3 = load i32, i32* %v2_1a7e3, align 4
  %v4_1a7e3 = add i32 %v3_1a7e3, -1
  store i32 %v4_1a7e3, i32* %v2_1a7e3, align 4
  %v0_1a7e9 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a7e9 = and i32 %v0_1a7e9, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a7e9, i32* @eax, align 4
  %v0_1a7eb = load i32, i32* %edx.global-to-local, align 4
  %v1_1a7ee = call i32 @function_2e1e0(i32 %v0_1a7eb)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a7f7 = call i32 @function_1a7d6()
  store i32 %v0_1a7f7, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a7f7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e1e0, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvRKSsENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1a800:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a800 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a808 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a814 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a814 = inttoptr i32 %v1_1a814 to i32*
  %v3_1a814 = load i32, i32* %v2_1a814, align 4
  store i32 %v3_1a814, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a98_type* @global_var_39a98.3533 to i32), i32* %arg1, align 4
  %v1_1a81d = icmp eq i32 %v3_1a814, 0
  br i1 %v1_1a81d, label %dec_label_pc_1a84c, label %dec_label_pc_1a821

dec_label_pc_1a821:                               ; preds = %dec_label_pc_1a800
  %v2_1a824 = call i32 @function_34eb0(i32 %v3_1a814)
  %v0_1a829 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a829 = add i32 %v0_1a829, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a829, i32* @eax, align 4
  %v2_1a82f = call i32 @_ZZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PNS1_22apply_visitor_unrolledET1_lE19__PRETTY_FUNCTION__(i32 %v1_1a829)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1a83f = inttoptr i32 %v0_1a829 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a83f, align 4
  br i1 false, label %dec_label_pc_1a821.dec_label_pc_1a851_crit_edge, label %dec_label_pc_1a847

dec_label_pc_1a821.dec_label_pc_1a851_crit_edge:  ; preds = %dec_label_pc_1a821
  br label %dec_label_pc_1a851

dec_label_pc_1a847:                               ; preds = %dec_label_pc_1a821
  store i32 %v0_1a800, i32* %ebx.global-to-local, align 4
  %v0_1a84b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a84b

dec_label_pc_1a84c:                               ; preds = %dec_label_pc_1a800
  %v1_1a84c = call i32 @function_2be0e(i32 %v0_1a808)
  store i32 %v1_1a84c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1a851

dec_label_pc_1a851:                               ; preds = %dec_label_pc_1a821.dec_label_pc_1a851_crit_edge, %dec_label_pc_1a84c
  %v2_1a84c = phi i32 [ undef, %dec_label_pc_1a821.dec_label_pc_1a851_crit_edge ], [ %v1_1a84c, %dec_label_pc_1a84c ]
  ret i32 %v2_1a84c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a851, { 1, 0 }
}

define i32 @function_1a856() local_unnamed_addr {
dec_label_pc_1a856:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a863(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a863:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a863 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a863 = add i32 %v0_1a863, 1149831251
  %v2_1a863 = inttoptr i32 %v1_1a863 to i32*
  %v3_1a863 = load i32, i32* %v2_1a863, align 4
  %v4_1a863 = add i32 %v3_1a863, -1
  store i32 %v4_1a863, i32* %v2_1a863, align 4
  %v0_1a869 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a869 = and i32 %v0_1a869, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a869, i32* @eax, align 4
  %v0_1a86b = load i32, i32* %edx.global-to-local, align 4
  %v1_1a86e = call i32 @_ZZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PNS1_22apply_visitor_unrolledET1_lE19__PRETTY_FUNCTION__(i32 %v0_1a86b)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a877 = call i32 @function_1a856()
  store i32 %v0_1a877, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a877

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @_ZZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PNS1_22apply_visitor_unrolledET1_lE19__PRETTY_FUNCTION__, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1a880:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a880 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a888 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a894 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a894 = inttoptr i32 %v1_1a894 to i32*
  %v3_1a894 = load i32, i32* %v2_1a894, align 4
  store i32 %v3_1a894, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a98_type* @global_var_39a98.3533 to i32), i32* %arg1, align 4
  %v0_1a89d = load i32, i32* @eax, align 4
  %v1_1a89d = icmp eq i32 %v0_1a89d, 0
  br i1 %v1_1a89d, label %bb, label %dec_label_pc_1a8a1

bb:                                               ; preds = %dec_label_pc_1a880
  %v2_1a89f = call i32 @function_1a8d4(i32 %v0_1a888)
  store i32 %v2_1a89f, i32* @eax, align 4
  br label %dec_label_pc_1a8a1

dec_label_pc_1a8a1:                               ; preds = %bb, %dec_label_pc_1a880
  %v0_1a8a1 = phi i32 [ %v2_1a89f, %bb ], [ %v0_1a89d, %dec_label_pc_1a880 ]
  %v2_1a8a4 = call i32 @function_34f30(i32 %v0_1a8a1)
  %v0_1a8a9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a8a9 = add i32 %v0_1a8a9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a8a9, i32* @eax, align 4
  %v2_1a8af = call i32 @function_2e2e0(i32 %v1_1a8a9)
  store i32 0, i32* @eax, align 4
  %v1_1a8bf = inttoptr i32 %v0_1a8a9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a8bf, align 4
  br i1 false, label %bb105, label %dec_label_pc_1a8a1.dec_label_pc_1a8c7_crit_edge

dec_label_pc_1a8a1.dec_label_pc_1a8c7_crit_edge:  ; preds = %dec_label_pc_1a8a1
  %v5_1a8ce.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a8c7

bb105:                                            ; preds = %dec_label_pc_1a8a1
  br label %dec_label_pc_1a8c7

dec_label_pc_1a8c7:                               ; preds = %dec_label_pc_1a8a1.dec_label_pc_1a8c7_crit_edge, %bb105
  %v5_1a8ce = phi i32 [ %v5_1a8ce.pre, %dec_label_pc_1a8a1.dec_label_pc_1a8c7_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1a880, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1a8ce

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a8c7, { 1, 0 }
}

define i32 @function_1a8d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8d4:
  %v0_1a8d4 = call i32 @function_2be8e()
  ret i32 %v0_1a8d4
}

define i32 @function_1a8d9() local_unnamed_addr {
dec_label_pc_1a8d9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a8de() local_unnamed_addr {
dec_label_pc_1a8de:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a8eb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a8eb:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a8eb = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a8eb = add i32 %v0_1a8eb, 1149831251
  %v2_1a8eb = inttoptr i32 %v1_1a8eb to i32*
  %v3_1a8eb = load i32, i32* %v2_1a8eb, align 4
  %v4_1a8eb = add i32 %v3_1a8eb, -1
  store i32 %v4_1a8eb, i32* %v2_1a8eb, align 4
  %v0_1a8f1 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a8f1 = and i32 %v0_1a8f1, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a8f1, i32* @eax, align 4
  %v0_1a8f3 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a8f6 = call i32 @function_2e2e0(i32 %v0_1a8f3)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a8ff = call i32 @function_1a8de()
  store i32 %v0_1a8ff, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a8ff

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e2e0, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvRKSsENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1a910:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1a910 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1a918 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1a924 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1a924 = inttoptr i32 %v1_1a924 to i32*
  %v3_1a924 = load i32, i32* %v2_1a924, align 4
  store i32 %v3_1a924, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a98_type* @global_var_39a98.3533 to i32), i32* %arg1, align 4
  %v0_1a92d = load i32, i32* @eax, align 4
  %v1_1a92d = icmp eq i32 %v0_1a92d, 0
  br i1 %v1_1a92d, label %bb, label %dec_label_pc_1a931

bb:                                               ; preds = %dec_label_pc_1a910
  %v2_1a92f = call i32 @function_1a964(i32 %v0_1a918)
  store i32 %v2_1a92f, i32* @eax, align 4
  br label %dec_label_pc_1a931

dec_label_pc_1a931:                               ; preds = %bb, %dec_label_pc_1a910
  %v0_1a931 = phi i32 [ %v2_1a92f, %bb ], [ %v0_1a92d, %dec_label_pc_1a910 ]
  %v2_1a934 = call i32 @function_34fc0(i32 %v0_1a931)
  %v0_1a939 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a939 = add i32 %v0_1a939, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1a939, i32* @eax, align 4
  %v2_1a93f = call i32 @function_2e370(i32 %v1_1a939)
  store i32 0, i32* @eax, align 4
  %v1_1a94f = inttoptr i32 %v0_1a939 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1a94f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1a931.dec_label_pc_1a957_crit_edge

dec_label_pc_1a931.dec_label_pc_1a957_crit_edge:  ; preds = %dec_label_pc_1a931
  %v5_1a95e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1a957

bb105:                                            ; preds = %dec_label_pc_1a931
  br label %dec_label_pc_1a957

dec_label_pc_1a957:                               ; preds = %dec_label_pc_1a931.dec_label_pc_1a957_crit_edge, %bb105
  %v5_1a95e = phi i32 [ %v5_1a95e.pre, %dec_label_pc_1a931.dec_label_pc_1a957_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1a910, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1a95e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1a957, { 1, 0 }
}

define i32 @function_1a964(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a964:
  %v0_1a964 = call i32 @function_2bf1e()
  ret i32 %v0_1a964
}

define i32 @function_1a969() local_unnamed_addr {
dec_label_pc_1a969:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a96e() local_unnamed_addr {
dec_label_pc_1a96e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a97b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a97b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1a97b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a97b = add i32 %v0_1a97b, 1149831251
  %v2_1a97b = inttoptr i32 %v1_1a97b to i32*
  %v3_1a97b = load i32, i32* %v2_1a97b, align 4
  %v4_1a97b = add i32 %v3_1a97b, -1
  store i32 %v4_1a97b, i32* %v2_1a97b, align 4
  %v0_1a981 = load i32, i32* %eax.global-to-local, align 4
  %v11_1a981 = and i32 %v0_1a981, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1a981, i32* @eax, align 4
  %v0_1a983 = load i32, i32* %edx.global-to-local, align 4
  %v1_1a986 = call i32 @function_2e370(i32 %v0_1a983)
  store i32 %arg1, i32* @eax, align 4
  %v0_1a98f = call i32 @function_1a96e()
  store i32 %v0_1a98f, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a98f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e370, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a9a0:
  ret i32 0
}

define i32 @function_1a9dc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a9dc:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp108 = call i32 @__decompiler_undefined_function_0()
  %stack_var_24 = alloca i32, align 4
  %tmp117 = ptrtoint i32* %arg1 to i32
  %tmp118 = call i32 @__decompiler_undefined_function_0()
  %v0_1a9dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_1a9dc = add i32 %v0_1a9dc, -2062277564
  %v2_1a9dc = inttoptr i32 %v1_1a9dc to i32*
  %v3_1a9dc = load i32, i32* %v2_1a9dc, align 4
  %v4_1a9dc = sub i32 %v3_1a9dc, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1a9dc, i32* %v2_1a9dc, align 4
  %v0_1a9e7 = load i32, i32* @eax, align 4
  %v1_1a9e7 = icmp eq i32 %v0_1a9e7, 0
  br i1 %v1_1a9e7, label %dec_label_pc_1aa4a, label %dec_label_pc_1a9eb

dec_label_pc_1a9eb:                               ; preds = %dec_label_pc_1a9dc
  store i32 %v0_1a9e7, i32* %esi.global-to-local, align 4
  %v1_1aa11 = icmp eq i32* %arg1, null
  br label %dec_label_pc_1aa1b

dec_label_pc_1a9f0:                               ; preds = %dec_label_pc_1aa1b
  %v1_1a9f0 = add i32 %v0_1a9f0, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1a9f0 = inttoptr i32 %v1_1a9f0 to i32*
  %v3_1a9f0 = load i32, i32* %v2_1a9f0, align 4
  store i32 %v3_1a9f0, i32* %ebx.global-to-local, align 4
  %v1_1a9f3 = icmp eq i32 %v3_1a9f0, 0
  br i1 %v1_1a9f3, label %dec_label_pc_1aa45, label %dec_label_pc_1a9f7

dec_label_pc_1a9f7:                               ; preds = %dec_label_pc_1a9f0
  %v1_1aa01 = add i32 %v3_1a9f0, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1aa01 = inttoptr i32 %v1_1aa01 to i8*
  store i8 0, i8* %v2_1aa01, align 1
  store i32 %tmp117, i32* @eax, align 4
  %v0_1aa0f = load i32, i32* %esi.global-to-local, align 4
  %v1_1aa0f = inttoptr i32 %v0_1aa0f to i32*
  %v2_1aa0f = load i32, i32* %v1_1aa0f, align 4
  store i32 %v2_1aa0f, i32* %esi.global-to-local, align 4
  br i1 %v1_1aa11, label %dec_label_pc_1aa3e, label %dec_label_pc_1aa15

dec_label_pc_1aa15:                               ; preds = %dec_label_pc_1a9f7
  %v2_1aa15 = load i32, i32* %arg1, align 4
  store i32 %v2_1aa15, i32* @eax, align 4
  %v1_1aa17 = icmp eq i32 %v2_1aa15, 0
  br i1 %v1_1aa17, label %dec_label_pc_1aa4a, label %dec_label_pc_1aa1b

dec_label_pc_1aa1b:                               ; preds = %dec_label_pc_1aa15, %dec_label_pc_1a9eb
  %v0_1a9f0 = phi i32 [ %v0_1a9e7, %dec_label_pc_1a9eb ], [ %v2_1aa0f, %dec_label_pc_1aa15 ]
  %stack_var_0.0 = phi i32 [ %tmp118, %dec_label_pc_1a9eb ], [ %v3_1a9f0, %dec_label_pc_1aa15 ]
  %.0 = phi i32 [ %tmp108, %dec_label_pc_1a9eb ], [ %v2_1aa15, %dec_label_pc_1aa15 ]
  %v12_1aa1b = icmp eq i32 %v0_1a9f0, %.0
  %v1_1aa1d = icmp eq i1 %v12_1aa1b, false
  br i1 %v1_1aa1d, label %dec_label_pc_1a9f0, label %dec_label_pc_1aa1f

dec_label_pc_1aa1f:                               ; preds = %dec_label_pc_1aa1b
  %v2_1aa1f = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_1aa1f, i32* @eax, align 4
  %v1_1aa26 = call i32 @_ZZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_E19__PRETTY_FUNCTION__(i32 %v2_1aa1f)
  %v1_1aa2f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1aa2f = xor i32 %v1_1aa2f, %arg2
  %v3_1aa2f = icmp eq i32 %v2_1aa2f, 0
  %v1_1aa36 = icmp eq i1 %v3_1aa2f, false
  br i1 %v1_1aa36, label %dec_label_pc_1aa4f, label %dec_label_pc_1aa38

dec_label_pc_1aa38:                               ; preds = %dec_label_pc_1aa1f
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v2_1aa2f

dec_label_pc_1aa3e:                               ; preds = %dec_label_pc_1a9f7
  %v1_1aa40 = call i32 @function_2bd72(i32 %v3_1a9f0)
  store i32 %v1_1aa40, i32* @eax, align 4
  br label %dec_label_pc_1aa45

dec_label_pc_1aa45:                               ; preds = %dec_label_pc_1a9f0, %dec_label_pc_1aa3e
  %stack_var_0.1 = phi i32 [ %v3_1a9f0, %dec_label_pc_1aa3e ], [ %stack_var_0.0, %dec_label_pc_1a9f0 ]
  %v0_1aa45 = call i32 @function_2beaa()
  store i32 %v0_1aa45, i32* @eax, align 4
  br label %dec_label_pc_1aa4a

dec_label_pc_1aa4a:                               ; preds = %dec_label_pc_1aa15, %dec_label_pc_1aa45, %dec_label_pc_1a9dc
  %stack_var_0.2 = phi i32 [ %tmp118, %dec_label_pc_1a9dc ], [ %stack_var_0.1, %dec_label_pc_1aa45 ], [ %v3_1a9f0, %dec_label_pc_1aa15 ]
  %v1_1aa4a = call i32 @function_2be0e(i32 %stack_var_0.2)
  br label %dec_label_pc_1aa4f

dec_label_pc_1aa4f:                               ; preds = %dec_label_pc_1aa4a, %dec_label_pc_1aa1f
  %v0_1aa4f = phi i32 [ %v1_1aa4a, %dec_label_pc_1aa4a ], [ %v2_1aa2f, %dec_label_pc_1aa1f ]
  ret i32 %v0_1aa4f

; uselistorder directives
  uselistorder i32 %tmp118, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_2be0e, { 1, 0 }
  uselistorder label %dec_label_pc_1aa4a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1aa45, { 1, 0 }
}

define i32 @function_1aa56() local_unnamed_addr {
dec_label_pc_1aa56:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa56 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1aa56
}

define i32 @_ZN5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1aa70:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1aa70 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1aa78 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1aa84 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1aa84 = inttoptr i32 %v1_1aa84 to i32*
  %v3_1aa84 = load i32, i32* %v2_1aa84, align 4
  store i32 %v3_1aa84, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a68_type* @global_var_39a68.3534 to i32), i32* %arg1, align 4
  %v1_1aa8d = icmp eq i32 %v3_1aa84, 0
  br i1 %v1_1aa8d, label %dec_label_pc_1aabc, label %dec_label_pc_1aa91

dec_label_pc_1aa91:                               ; preds = %dec_label_pc_1aa70
  %v2_1aa94 = call i32 @function_35410(i32 %v3_1aa84)
  %v0_1aa99 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1aa99 = add i32 %v0_1aa99, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1aa99, i32* @eax, align 4
  %v2_1aa9f = call i32 @function_2e4d0(i32 %v1_1aa99)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1aaaf = inttoptr i32 %v0_1aa99 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1aaaf, align 4
  br i1 false, label %dec_label_pc_1aa91.dec_label_pc_1aac1_crit_edge, label %dec_label_pc_1aab7

dec_label_pc_1aa91.dec_label_pc_1aac1_crit_edge:  ; preds = %dec_label_pc_1aa91
  br label %dec_label_pc_1aac1

dec_label_pc_1aab7:                               ; preds = %dec_label_pc_1aa91
  store i32 %v0_1aa70, i32* %ebx.global-to-local, align 4
  %v0_1aabb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1aabb

dec_label_pc_1aabc:                               ; preds = %dec_label_pc_1aa70
  %v1_1aabc = call i32 @function_2c016(i32 %v0_1aa78)
  store i32 %v1_1aabc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1aac1

dec_label_pc_1aac1:                               ; preds = %dec_label_pc_1aa91.dec_label_pc_1aac1_crit_edge, %dec_label_pc_1aabc
  %v2_1aabc = phi i32 [ undef, %dec_label_pc_1aa91.dec_label_pc_1aac1_crit_edge ], [ %v1_1aabc, %dec_label_pc_1aabc ]
  ret i32 %v2_1aabc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1aac1, { 1, 0 }
}

define i32 @function_1aac6() local_unnamed_addr {
dec_label_pc_1aac6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1aad3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aad3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1aad3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1aad3 = add i32 %v0_1aad3, 1149831251
  %v2_1aad3 = inttoptr i32 %v1_1aad3 to i32*
  %v3_1aad3 = load i32, i32* %v2_1aad3, align 4
  %v4_1aad3 = add i32 %v3_1aad3, -1
  store i32 %v4_1aad3, i32* %v2_1aad3, align 4
  %v0_1aad9 = load i32, i32* %eax.global-to-local, align 4
  %v11_1aad9 = and i32 %v0_1aad9, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1aad9, i32* @eax, align 4
  %v0_1aadb = load i32, i32* %edx.global-to-local, align 4
  %v1_1aade = call i32 @function_2e4d0(i32 %v0_1aadb)
  store i32 %arg1, i32* @eax, align 4
  %v0_1aae7 = call i32 @function_1aac6()
  store i32 %v0_1aae7, i32* %eax.global-to-local, align 4
  ret i32 %v0_1aae7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e4d0, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal1ISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS3_EEENS8_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1aaf0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1aaf0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1aaf8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1ab04 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ab04 = inttoptr i32 %v1_1ab04 to i32*
  %v3_1ab04 = load i32, i32* %v2_1ab04, align 4
  store i32 %v3_1ab04, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a68_type* @global_var_39a68.3534 to i32), i32* %arg1, align 4
  %v0_1ab0d = load i32, i32* @eax, align 4
  %v1_1ab0d = icmp eq i32 %v0_1ab0d, 0
  br i1 %v1_1ab0d, label %bb, label %dec_label_pc_1ab11

bb:                                               ; preds = %dec_label_pc_1aaf0
  %v2_1ab0f = call i32 @function_1ab44(i32 %v0_1aaf8)
  store i32 %v2_1ab0f, i32* @eax, align 4
  br label %dec_label_pc_1ab11

dec_label_pc_1ab11:                               ; preds = %bb, %dec_label_pc_1aaf0
  %v0_1ab11 = phi i32 [ %v2_1ab0f, %bb ], [ %v0_1ab0d, %dec_label_pc_1aaf0 ]
  %v2_1ab14 = call i32 @function_35490(i32 %v0_1ab11)
  %v0_1ab19 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ab19 = add i32 %v0_1ab19, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1ab19, i32* @eax, align 4
  %v2_1ab1f = call i32 @function_2e550(i32 %v1_1ab19)
  store i32 0, i32* @eax, align 4
  %v1_1ab2f = inttoptr i32 %v0_1ab19 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1ab2f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1ab11.dec_label_pc_1ab37_crit_edge

dec_label_pc_1ab11.dec_label_pc_1ab37_crit_edge:  ; preds = %dec_label_pc_1ab11
  %v5_1ab3e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ab37

bb105:                                            ; preds = %dec_label_pc_1ab11
  br label %dec_label_pc_1ab37

dec_label_pc_1ab37:                               ; preds = %dec_label_pc_1ab11.dec_label_pc_1ab37_crit_edge, %bb105
  %v5_1ab3e = phi i32 [ %v5_1ab3e.pre, %dec_label_pc_1ab11.dec_label_pc_1ab37_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1aaf0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1ab3e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1ab37, { 1, 0 }
}

define i32 @function_1ab44(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ab44:
  %v0_1ab44 = call i32 @function_2c096()
  ret i32 %v0_1ab44
}

define i32 @function_1ab49() local_unnamed_addr {
dec_label_pc_1ab49:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ab4e() local_unnamed_addr {
dec_label_pc_1ab4e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ab5b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ab5b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1ab5b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ab5b = add i32 %v0_1ab5b, 1149831251
  %v2_1ab5b = inttoptr i32 %v1_1ab5b to i32*
  %v3_1ab5b = load i32, i32* %v2_1ab5b, align 4
  %v4_1ab5b = add i32 %v3_1ab5b, -1
  store i32 %v4_1ab5b, i32* %v2_1ab5b, align 4
  %v0_1ab61 = load i32, i32* %eax.global-to-local, align 4
  %v11_1ab61 = and i32 %v0_1ab61, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1ab61, i32* @eax, align 4
  %v0_1ab63 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ab66 = call i32 @function_2e550(i32 %v0_1ab63)
  store i32 %arg1, i32* @eax, align 4
  %v0_1ab6f = call i32 @function_1ab4e()
  store i32 %v0_1ab6f, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ab6f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e550, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFSsPKcENS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIS4_EENS9_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1ab80:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1ab80 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1ab88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1ab94 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ab94 = inttoptr i32 %v1_1ab94 to i32*
  %v3_1ab94 = load i32, i32* %v2_1ab94, align 4
  store i32 %v3_1ab94, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a68_type* @global_var_39a68.3534 to i32), i32* %arg1, align 4
  %v1_1ab9d = icmp eq i32 %v3_1ab94, 0
  br i1 %v1_1ab9d, label %dec_label_pc_1abcc, label %dec_label_pc_1aba1

dec_label_pc_1aba1:                               ; preds = %dec_label_pc_1ab80
  %v2_1aba4 = call i32 @function_35520(i32 %v3_1ab94)
  %v0_1aba9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1aba9 = add i32 %v0_1aba9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1aba9, i32* @eax, align 4
  %v2_1abaf = call i32 @function_2e5e0(i32 %v1_1aba9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1abbf = inttoptr i32 %v0_1aba9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1abbf, align 4
  br i1 false, label %dec_label_pc_1aba1.dec_label_pc_1abd1_crit_edge, label %dec_label_pc_1abc7

dec_label_pc_1aba1.dec_label_pc_1abd1_crit_edge:  ; preds = %dec_label_pc_1aba1
  br label %dec_label_pc_1abd1

dec_label_pc_1abc7:                               ; preds = %dec_label_pc_1aba1
  store i32 %v0_1ab80, i32* %ebx.global-to-local, align 4
  %v0_1abcb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1abcb

dec_label_pc_1abcc:                               ; preds = %dec_label_pc_1ab80
  %v1_1abcc = call i32 @function_2c126(i32 %v0_1ab88)
  store i32 %v1_1abcc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1abd1

dec_label_pc_1abd1:                               ; preds = %dec_label_pc_1aba1.dec_label_pc_1abd1_crit_edge, %dec_label_pc_1abcc
  %v2_1abcc = phi i32 [ undef, %dec_label_pc_1aba1.dec_label_pc_1abd1_crit_edge ], [ %v1_1abcc, %dec_label_pc_1abcc ]
  ret i32 %v2_1abcc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1abd1, { 1, 0 }
}

define i32 @function_1abd6() local_unnamed_addr {
dec_label_pc_1abd6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1abe3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1abe3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1abe3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1abe3 = add i32 %v0_1abe3, 1149831251
  %v2_1abe3 = inttoptr i32 %v1_1abe3 to i32*
  %v3_1abe3 = load i32, i32* %v2_1abe3, align 4
  %v4_1abe3 = add i32 %v3_1abe3, -1
  store i32 %v4_1abe3, i32* %v2_1abe3, align 4
  %v0_1abe9 = load i32, i32* %eax.global-to-local, align 4
  %v11_1abe9 = and i32 %v0_1abe9, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1abe9, i32* @eax, align 4
  %v0_1abeb = load i32, i32* %edx.global-to-local, align 4
  %v1_1abee = call i32 @function_2e5e0(i32 %v0_1abeb)
  store i32 %arg1, i32* @eax, align 4
  %v0_1abf7 = call i32 @function_1abd6()
  store i32 %v0_1abf7, i32* %eax.global-to-local, align 4
  ret i32 %v0_1abf7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e5e0, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFSsPKcENS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIS4_EENS9_IFSsRKNS0_10connectionES3_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1ac00:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1ac00 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1ac08 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1ac14 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ac14 = inttoptr i32 %v1_1ac14 to i32*
  %v3_1ac14 = load i32, i32* %v2_1ac14, align 4
  store i32 %v3_1ac14, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a68_type* @global_var_39a68.3534 to i32), i32* %arg1, align 4
  %v0_1ac1d = load i32, i32* @eax, align 4
  %v1_1ac1d = icmp eq i32 %v0_1ac1d, 0
  br i1 %v1_1ac1d, label %bb, label %dec_label_pc_1ac21

bb:                                               ; preds = %dec_label_pc_1ac00
  %v2_1ac1f = call i32 @function_1ac54(i32 %v0_1ac08)
  store i32 %v2_1ac1f, i32* @eax, align 4
  br label %dec_label_pc_1ac21

dec_label_pc_1ac21:                               ; preds = %bb, %dec_label_pc_1ac00
  %v0_1ac21 = phi i32 [ %v2_1ac1f, %bb ], [ %v0_1ac1d, %dec_label_pc_1ac00 ]
  %v2_1ac24 = call i32 @function_355a0(i32 %v0_1ac21)
  %v0_1ac29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ac29 = add i32 %v0_1ac29, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1ac29, i32* @eax, align 4
  %v2_1ac2f = call i32 @function_2e660(i32 %v1_1ac29)
  store i32 0, i32* @eax, align 4
  %v1_1ac3f = inttoptr i32 %v0_1ac29 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1ac3f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1ac21.dec_label_pc_1ac47_crit_edge

dec_label_pc_1ac21.dec_label_pc_1ac47_crit_edge:  ; preds = %dec_label_pc_1ac21
  %v5_1ac4e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ac47

bb105:                                            ; preds = %dec_label_pc_1ac21
  br label %dec_label_pc_1ac47

dec_label_pc_1ac47:                               ; preds = %dec_label_pc_1ac21.dec_label_pc_1ac47_crit_edge, %bb105
  %v5_1ac4e = phi i32 [ %v5_1ac4e.pre, %dec_label_pc_1ac21.dec_label_pc_1ac47_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1ac00, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1ac4e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1ac47, { 1, 0 }
}

define i32 @function_1ac54(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac54:
  %v3_1ac6c = load i32, i32* @eax, align 4
  ret i32 %v3_1ac6c
}

define i32 @function_1ac78() local_unnamed_addr {
dec_label_pc_1ac78:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ac7d() local_unnamed_addr {
dec_label_pc_1ac7d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ac8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac8a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1ac8a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ac8a = add i32 %v0_1ac8a, 1149831251
  %v2_1ac8a = inttoptr i32 %v1_1ac8a to i32*
  %v3_1ac8a = load i32, i32* %v2_1ac8a, align 4
  %v4_1ac8a = add i32 %v3_1ac8a, -1
  store i32 %v4_1ac8a, i32* %v2_1ac8a, align 4
  %v0_1ac90 = load i32, i32* %eax.global-to-local, align 4
  %v11_1ac90 = and i32 %v0_1ac90, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1ac90, i32* @eax, align 4
  %v0_1ac92 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ac95 = call i32 @function_2e660(i32 %v0_1ac92)
  store i32 %arg1, i32* @eax, align 4
  %v0_1ac9e = call i32 @function_1ac7d()
  store i32 %v0_1ac9e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ac9e

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e660, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal0_implIvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS7_IFvRKNS0_10connectionEEEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aca0:
  ret i32 0
}

define i32 @function_1acdc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1acdc:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_1acdc = load i32, i32* %ebx.global-to-local, align 4
  %v1_1acdc = add i32 %v0_1acdc, -2062277564
  %v2_1acdc = inttoptr i32 %v1_1acdc to i32*
  %v3_1acdc = load i32, i32* %v2_1acdc, align 4
  %v4_1acdc = sub i32 %v3_1acdc, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1acdc, i32* %v2_1acdc, align 4
  %v0_1ace7 = load i32, i32* @eax, align 4
  %v1_1ace7 = icmp eq i32 %v0_1ace7, 0
  br i1 %v1_1ace7, label %bb, label %dec_label_pc_1acef

bb:                                               ; preds = %dec_label_pc_1acdc
  %v2_1ace9 = call i32 @function_1ad8e(i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_1ace9, i32* @eax, align 4
  br label %dec_label_pc_1acef

dec_label_pc_1acef:                               ; preds = %bb, %dec_label_pc_1acdc
  %v2_1acef = phi i32 [ %v2_1ace9, %bb ], [ %v0_1ace7, %dec_label_pc_1acdc ]
  store i32 %v2_1acef, i32* %esi.global-to-local, align 4
  %v1_1ad19 = icmp eq i32* %arg1, null
  br label %dec_label_pc_1ad23

dec_label_pc_1acf8:                               ; preds = %dec_label_pc_1ad23
  %v1_1acf8 = add i32 %v0_1acf8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1acf8 = inttoptr i32 %v1_1acf8 to i32*
  %v3_1acf8 = load i32, i32* %v2_1acf8, align 4
  store i32 %v3_1acf8, i32* %ebx.global-to-local, align 4
  %v1_1acfb = icmp eq i32 %v3_1acf8, 0
  br i1 %v1_1acfb, label %bb118, label %dec_label_pc_1acff

bb118:                                            ; preds = %dec_label_pc_1acf8
  %v1_1acfd = call i32 @function_1ad6a()
  br label %dec_label_pc_1acff

dec_label_pc_1acff:                               ; preds = %bb118, %dec_label_pc_1acf8
  %v1_1ad09 = add i32 %v3_1acf8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ad09 = inttoptr i32 %v1_1ad09 to i8*
  store i8 0, i8* %v2_1ad09, align 1
  %v0_1ad17 = load i32, i32* %esi.global-to-local, align 4
  %v1_1ad17 = inttoptr i32 %v0_1ad17 to i32*
  %v2_1ad17 = load i32, i32* %v1_1ad17, align 4
  store i32 %v2_1ad17, i32* %esi.global-to-local, align 4
  br i1 %v1_1ad19, label %dec_label_pc_1ad46, label %dec_label_pc_1ad1d

dec_label_pc_1ad1d:                               ; preds = %dec_label_pc_1acff
  %v2_1ad1d = load i32, i32* %arg1, align 4
  store i32 %v2_1ad1d, i32* @eax, align 4
  %v1_1ad1f = icmp eq i32 %v2_1ad1d, 0
  br i1 %v1_1ad1f, label %bb119, label %dec_label_pc_1ad23

bb119:                                            ; preds = %dec_label_pc_1ad1d
  %v3_1ad21 = call i32 @function_1ad8e(i32 %v3_1acf8)
  store i32 %v3_1ad21, i32* @eax, align 4
  %v0_1ad23.pre.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1ad23

dec_label_pc_1ad23:                               ; preds = %bb119, %dec_label_pc_1ad1d, %dec_label_pc_1acef
  %v0_1acf8 = phi i32 [ %v2_1acef, %dec_label_pc_1acef ], [ %v2_1ad17, %dec_label_pc_1ad1d ], [ %v0_1ad23.pre.pre, %bb119 ]
  %v1_1ad23 = phi i32 [ %v2_1acef, %dec_label_pc_1acef ], [ %v2_1ad1d, %dec_label_pc_1ad1d ], [ %v3_1ad21, %bb119 ]
  %v12_1ad23 = icmp eq i32 %v0_1acf8, %v1_1ad23
  %v1_1ad25 = icmp eq i1 %v12_1ad23, false
  br i1 %v1_1ad25, label %dec_label_pc_1acf8, label %dec_label_pc_1ad27

dec_label_pc_1ad27:                               ; preds = %dec_label_pc_1ad23
  %v2_1ad27 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_1ad27, i32* @eax, align 4
  %v2_1ad2e = call i32 @_ZZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEEC1ERKSM_E19__PRETTY_FUNCTION__(i32 %v2_1ad27)
  %v1_1ad37 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ad37 = xor i32 %v1_1ad37, %arg2
  %v3_1ad37 = icmp eq i32 %v2_1ad37, 0
  store i32 %v2_1ad37, i32* @eax, align 4
  %v1_1ad3e = icmp eq i1 %v3_1ad37, false
  br i1 %v1_1ad3e, label %bb120, label %dec_label_pc_1ad40

bb120:                                            ; preds = %dec_label_pc_1ad27
  %v2_1ad3e = call i32 @function_1adb2()
  br label %dec_label_pc_1ad40

dec_label_pc_1ad40:                               ; preds = %bb120, %dec_label_pc_1ad27
  %v0_1ad45 = phi i32 [ %v2_1ad3e, %bb120 ], [ %v2_1ad37, %dec_label_pc_1ad27 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v0_1ad45

dec_label_pc_1ad46:                               ; preds = %dec_label_pc_1acff
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %v2_1acef, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1ad8e, { 1, 0 }
}

define i32 @function_1ad6a() local_unnamed_addr {
dec_label_pc_1ad6a:
  %v3_1ad82 = load i32, i32* @eax, align 4
  ret i32 %v3_1ad82
}

define i32 @function_1ad8e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad8e:
  %v3_1ada6 = load i32, i32* @eax, align 4
  ret i32 %v3_1ada6
}

define i32 @function_1adb2() local_unnamed_addr {
dec_label_pc_1adb2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1adb8() local_unnamed_addr {
dec_label_pc_1adb8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1adb8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1adb8
}

define i32 @_ZN5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1add0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1add0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1add8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1ade4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ade4 = inttoptr i32 %v1_1ade4 to i32*
  %v3_1ade4 = load i32, i32* %v2_1ade4, align 4
  store i32 %v3_1ade4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a38_type* @global_var_39a38.3538 to i32), i32* %arg1, align 4
  %v1_1aded = icmp eq i32 %v3_1ade4, 0
  br i1 %v1_1aded, label %dec_label_pc_1ae1c, label %dec_label_pc_1adf1

dec_label_pc_1adf1:                               ; preds = %dec_label_pc_1add0
  %v2_1adf4 = call i32 @function_35a70(i32 %v3_1ade4)
  %v0_1adf9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1adf9 = add i32 %v0_1adf9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1adf9, i32* @eax, align 4
  %v2_1adff = call i32 @function_2e830(i32 %v1_1adf9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1ae0f = inttoptr i32 %v0_1adf9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1ae0f, align 4
  br i1 false, label %dec_label_pc_1adf1.dec_label_pc_1ae21_crit_edge, label %dec_label_pc_1ae17

dec_label_pc_1adf1.dec_label_pc_1ae21_crit_edge:  ; preds = %dec_label_pc_1adf1
  br label %dec_label_pc_1ae21

dec_label_pc_1ae17:                               ; preds = %dec_label_pc_1adf1
  store i32 %v0_1add0, i32* %ebx.global-to-local, align 4
  %v0_1ae1b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ae1b

dec_label_pc_1ae1c:                               ; preds = %dec_label_pc_1add0
  %v1_1ae1c = call i32 @function_2c516(i32 %v0_1add8)
  store i32 %v1_1ae1c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ae21

dec_label_pc_1ae21:                               ; preds = %dec_label_pc_1adf1.dec_label_pc_1ae21_crit_edge, %dec_label_pc_1ae1c
  %v2_1ae1c = phi i32 [ undef, %dec_label_pc_1adf1.dec_label_pc_1ae21_crit_edge ], [ %v1_1ae1c, %dec_label_pc_1ae1c ]
  ret i32 %v2_1ae1c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1ae21, { 1, 0 }
}

define i32 @function_1ae26() local_unnamed_addr {
dec_label_pc_1ae26:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ae33(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ae33:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1ae33 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ae33 = add i32 %v0_1ae33, 1149831251
  %v2_1ae33 = inttoptr i32 %v1_1ae33 to i32*
  %v3_1ae33 = load i32, i32* %v2_1ae33, align 4
  %v4_1ae33 = add i32 %v3_1ae33, -1
  store i32 %v4_1ae33, i32* %v2_1ae33, align 4
  %v0_1ae39 = load i32, i32* %eax.global-to-local, align 4
  %v11_1ae39 = and i32 %v0_1ae39, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1ae39, i32* @eax, align 4
  %v0_1ae3b = load i32, i32* %edx.global-to-local, align 4
  %v1_1ae3e = call i32 @function_2e830(i32 %v0_1ae3b)
  store i32 %arg1, i32* @eax, align 4
  %v0_1ae47 = call i32 @function_1ae26()
  store i32 %v0_1ae47, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ae47

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e830, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvvENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS2_EENS7_IFvRKNS0_10connectionEEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1ae50:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1ae50 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1ae58 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1ae64 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ae64 = inttoptr i32 %v1_1ae64 to i32*
  %v3_1ae64 = load i32, i32* %v2_1ae64, align 4
  store i32 %v3_1ae64, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a38_type* @global_var_39a38.3538 to i32), i32* %arg1, align 4
  %v0_1ae6d = load i32, i32* @eax, align 4
  %v1_1ae6d = icmp eq i32 %v0_1ae6d, 0
  br i1 %v1_1ae6d, label %bb, label %dec_label_pc_1ae71

bb:                                               ; preds = %dec_label_pc_1ae50
  %v2_1ae6f = call i32 @function_1aea4(i32 %v0_1ae58)
  store i32 %v2_1ae6f, i32* @eax, align 4
  br label %dec_label_pc_1ae71

dec_label_pc_1ae71:                               ; preds = %bb, %dec_label_pc_1ae50
  %v0_1ae71 = phi i32 [ %v2_1ae6f, %bb ], [ %v0_1ae6d, %dec_label_pc_1ae50 ]
  %v2_1ae74 = call i32 @function_35af0(i32 %v0_1ae71)
  %v0_1ae79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ae79 = add i32 %v0_1ae79, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1ae79, i32* @eax, align 4
  %v2_1ae7f = call i32 @function_2e8b0(i32 %v1_1ae79)
  store i32 0, i32* @eax, align 4
  %v1_1ae8f = inttoptr i32 %v0_1ae79 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1ae8f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1ae71.dec_label_pc_1ae97_crit_edge

dec_label_pc_1ae71.dec_label_pc_1ae97_crit_edge:  ; preds = %dec_label_pc_1ae71
  %v5_1ae9e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ae97

bb105:                                            ; preds = %dec_label_pc_1ae71
  br label %dec_label_pc_1ae97

dec_label_pc_1ae97:                               ; preds = %dec_label_pc_1ae71.dec_label_pc_1ae97_crit_edge, %bb105
  %v5_1ae9e = phi i32 [ %v5_1ae9e.pre, %dec_label_pc_1ae71.dec_label_pc_1ae97_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1ae50, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1ae9e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1ae97, { 1, 0 }
}

define i32 @function_1aea4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aea4:
  %v0_1aea4 = call i32 @function_2c596()
  ret i32 %v0_1aea4
}

define i32 @function_1aea9() local_unnamed_addr {
dec_label_pc_1aea9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1aeae() local_unnamed_addr {
dec_label_pc_1aeae:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1aebb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aebb:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1aebb = load i32, i32* %ebp.global-to-local, align 4
  %v1_1aebb = add i32 %v0_1aebb, 1149831251
  %v2_1aebb = inttoptr i32 %v1_1aebb to i32*
  %v3_1aebb = load i32, i32* %v2_1aebb, align 4
  %v4_1aebb = add i32 %v3_1aebb, -1
  store i32 %v4_1aebb, i32* %v2_1aebb, align 4
  %v0_1aec1 = load i32, i32* %eax.global-to-local, align 4
  %v11_1aec1 = and i32 %v0_1aec1, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1aec1, i32* @eax, align 4
  %v0_1aec3 = load i32, i32* %edx.global-to-local, align 4
  %v1_1aec6 = call i32 @function_2e8b0(i32 %v0_1aec3)
  store i32 %arg1, i32* @eax, align 4
  %v0_1aecf = call i32 @function_1aeae()
  store i32 %v0_1aecf, i32* %eax.global-to-local, align 4
  ret i32 %v0_1aecf

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e8b0, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1aee0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1aee0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1aee8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1aef4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1aef4 = inttoptr i32 %v1_1aef4 to i32*
  %v3_1aef4 = load i32, i32* %v2_1aef4, align 4
  store i32 %v3_1aef4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a38_type* @global_var_39a38.3538 to i32), i32* %arg1, align 4
  %v0_1aefd = load i32, i32* @eax, align 4
  %v1_1aefd = icmp eq i32 %v0_1aefd, 0
  br i1 %v1_1aefd, label %bb, label %dec_label_pc_1af01

bb:                                               ; preds = %dec_label_pc_1aee0
  %v2_1aeff = call i32 @function_1af34(i32 %v0_1aee8)
  store i32 %v2_1aeff, i32* @eax, align 4
  br label %dec_label_pc_1af01

dec_label_pc_1af01:                               ; preds = %bb, %dec_label_pc_1aee0
  %v0_1af01 = phi i32 [ %v2_1aeff, %bb ], [ %v0_1aefd, %dec_label_pc_1aee0 ]
  %v2_1af04 = call i32 @function_35b80(i32 %v0_1af01)
  %v0_1af09 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1af09 = add i32 %v0_1af09, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1af09, i32* @eax, align 4
  %v2_1af0f = call i32 @function_2e940(i32 %v1_1af09)
  store i32 0, i32* @eax, align 4
  %v1_1af1f = inttoptr i32 %v0_1af09 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1af1f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1af01.dec_label_pc_1af27_crit_edge

dec_label_pc_1af01.dec_label_pc_1af27_crit_edge:  ; preds = %dec_label_pc_1af01
  %v5_1af2e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1af27

bb105:                                            ; preds = %dec_label_pc_1af01
  br label %dec_label_pc_1af27

dec_label_pc_1af27:                               ; preds = %dec_label_pc_1af01.dec_label_pc_1af27_crit_edge, %bb105
  %v5_1af2e = phi i32 [ %v5_1af2e.pre, %dec_label_pc_1af01.dec_label_pc_1af27_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1aee0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1af2e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1af27, { 1, 0 }
}

define i32 @function_1af34(i32 %arg1) local_unnamed_addr {
dec_label_pc_1af34:
  %v3_1af4c = load i32, i32* @eax, align 4
  ret i32 %v3_1af4c
}

define i32 @function_1af58() local_unnamed_addr {
dec_label_pc_1af58:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1af5d() local_unnamed_addr {
dec_label_pc_1af5d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1af6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1af6a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1af6a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1af6a = add i32 %v0_1af6a, 1149831251
  %v2_1af6a = inttoptr i32 %v1_1af6a to i32*
  %v3_1af6a = load i32, i32* %v2_1af6a, align 4
  %v4_1af6a = add i32 %v3_1af6a, -1
  store i32 %v4_1af6a, i32* %v2_1af6a, align 4
  %v0_1af70 = load i32, i32* %eax.global-to-local, align 4
  %v11_1af70 = and i32 %v0_1af70, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1af70, i32* @eax, align 4
  %v0_1af72 = load i32, i32* %edx.global-to-local, align 4
  %v1_1af75 = call i32 @function_2e940(i32 %v0_1af72)
  store i32 %arg1, i32* @eax, align 4
  %v0_1af7e = call i32 @function_1af5d()
  store i32 %v0_1af7e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1af7e

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e940, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvvENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS2_EENS7_IFvRKNS0_10connectionEEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1af80:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1af80 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1af88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1af94 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1af94 = inttoptr i32 %v1_1af94 to i32*
  %v3_1af94 = load i32, i32* %v2_1af94, align 4
  store i32 %v3_1af94, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a38_type* @global_var_39a38.3538 to i32), i32* %arg1, align 4
  %v1_1af9d = icmp eq i32 %v3_1af94, 0
  br i1 %v1_1af9d, label %dec_label_pc_1afcc, label %dec_label_pc_1afa1

dec_label_pc_1afa1:                               ; preds = %dec_label_pc_1af80
  %v2_1afa4 = call i32 @function_35c20(i32 %v3_1af94)
  %v0_1afa9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1afa9 = add i32 %v0_1afa9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1afa9, i32* @eax, align 4
  %v2_1afaf = call i32 @function_2e9e0(i32 %v1_1afa9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1afbf = inttoptr i32 %v0_1afa9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1afbf, align 4
  br i1 false, label %dec_label_pc_1afa1.dec_label_pc_1afd1_crit_edge, label %dec_label_pc_1afc7

dec_label_pc_1afa1.dec_label_pc_1afd1_crit_edge:  ; preds = %dec_label_pc_1afa1
  br label %dec_label_pc_1afd1

dec_label_pc_1afc7:                               ; preds = %dec_label_pc_1afa1
  store i32 %v0_1af80, i32* %ebx.global-to-local, align 4
  %v0_1afcb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1afcb

dec_label_pc_1afcc:                               ; preds = %dec_label_pc_1af80
  %v1_1afcc = call i32 @function_2c6c6(i32 %v0_1af88)
  store i32 %v1_1afcc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1afd1

dec_label_pc_1afd1:                               ; preds = %dec_label_pc_1afa1.dec_label_pc_1afd1_crit_edge, %dec_label_pc_1afcc
  %v2_1afcc = phi i32 [ undef, %dec_label_pc_1afa1.dec_label_pc_1afd1_crit_edge ], [ %v1_1afcc, %dec_label_pc_1afcc ]
  ret i32 %v2_1afcc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1afd1, { 1, 0 }
}

define i32 @function_1afd6() local_unnamed_addr {
dec_label_pc_1afd6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1afe3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1afe3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1afe3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1afe3 = add i32 %v0_1afe3, 1149831251
  %v2_1afe3 = inttoptr i32 %v1_1afe3 to i32*
  %v3_1afe3 = load i32, i32* %v2_1afe3, align 4
  %v4_1afe3 = add i32 %v3_1afe3, -1
  store i32 %v4_1afe3, i32* %v2_1afe3, align 4
  %v0_1afe9 = load i32, i32* %eax.global-to-local, align 4
  %v11_1afe9 = and i32 %v0_1afe9, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1afe9, i32* @eax, align 4
  %v0_1afeb = load i32, i32* %edx.global-to-local, align 4
  %v1_1afee = call i32 @function_2e9e0(i32 %v0_1afeb)
  store i32 %arg1, i32* @eax, align 4
  %v0_1aff7 = call i32 @function_1afd6()
  store i32 %v0_1aff7, i32* %eax.global-to-local, align 4
  ret i32 %v0_1aff7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2e9e0, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b000:
  ret i32 0
}

define i32 @function_1b03c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b03c:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_1b03c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b03c = add i32 %v0_1b03c, -2062277564
  %v2_1b03c = inttoptr i32 %v1_1b03c to i32*
  %v3_1b03c = load i32, i32* %v2_1b03c, align 4
  %v4_1b03c = sub i32 %v3_1b03c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1b03c, i32* %v2_1b03c, align 4
  %v0_1b047 = load i32, i32* @eax, align 4
  %v1_1b047 = icmp eq i32 %v0_1b047, 0
  br i1 %v1_1b047, label %bb, label %dec_label_pc_1b04f

bb:                                               ; preds = %dec_label_pc_1b03c
  %v2_1b049 = call i32 @function_1b0ee(i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_1b049, i32* @eax, align 4
  br label %dec_label_pc_1b04f

dec_label_pc_1b04f:                               ; preds = %bb, %dec_label_pc_1b03c
  %v2_1b04f = phi i32 [ %v2_1b049, %bb ], [ %v0_1b047, %dec_label_pc_1b03c ]
  store i32 %v2_1b04f, i32* %esi.global-to-local, align 4
  %v1_1b079 = icmp eq i32* %arg1, null
  br label %dec_label_pc_1b083

dec_label_pc_1b058:                               ; preds = %dec_label_pc_1b083
  %v1_1b058 = add i32 %v0_1b058, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1b058 = inttoptr i32 %v1_1b058 to i32*
  %v3_1b058 = load i32, i32* %v2_1b058, align 4
  store i32 %v3_1b058, i32* %ebx.global-to-local, align 4
  %v1_1b05b = icmp eq i32 %v3_1b058, 0
  br i1 %v1_1b05b, label %bb118, label %dec_label_pc_1b05f

bb118:                                            ; preds = %dec_label_pc_1b058
  %v1_1b05d = call i32 @function_1b0ca()
  br label %dec_label_pc_1b05f

dec_label_pc_1b05f:                               ; preds = %bb118, %dec_label_pc_1b058
  %v1_1b069 = add i32 %v3_1b058, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b069 = inttoptr i32 %v1_1b069 to i8*
  store i8 0, i8* %v2_1b069, align 1
  %v0_1b077 = load i32, i32* %esi.global-to-local, align 4
  %v1_1b077 = inttoptr i32 %v0_1b077 to i32*
  %v2_1b077 = load i32, i32* %v1_1b077, align 4
  store i32 %v2_1b077, i32* %esi.global-to-local, align 4
  br i1 %v1_1b079, label %dec_label_pc_1b0a6, label %dec_label_pc_1b07d

dec_label_pc_1b07d:                               ; preds = %dec_label_pc_1b05f
  %v2_1b07d = load i32, i32* %arg1, align 4
  store i32 %v2_1b07d, i32* @eax, align 4
  %v1_1b07f = icmp eq i32 %v2_1b07d, 0
  br i1 %v1_1b07f, label %bb119, label %dec_label_pc_1b083

bb119:                                            ; preds = %dec_label_pc_1b07d
  %v3_1b081 = call i32 @function_1b0ee(i32 %v3_1b058)
  store i32 %v3_1b081, i32* @eax, align 4
  %v0_1b083.pre.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1b083

dec_label_pc_1b083:                               ; preds = %bb119, %dec_label_pc_1b07d, %dec_label_pc_1b04f
  %v0_1b058 = phi i32 [ %v2_1b04f, %dec_label_pc_1b04f ], [ %v2_1b077, %dec_label_pc_1b07d ], [ %v0_1b083.pre.pre, %bb119 ]
  %v1_1b083 = phi i32 [ %v2_1b04f, %dec_label_pc_1b04f ], [ %v2_1b07d, %dec_label_pc_1b07d ], [ %v3_1b081, %bb119 ]
  %v12_1b083 = icmp eq i32 %v0_1b058, %v1_1b083
  %v1_1b085 = icmp eq i1 %v12_1b083, false
  br i1 %v1_1b085, label %dec_label_pc_1b058, label %dec_label_pc_1b087

dec_label_pc_1b087:                               ; preds = %dec_label_pc_1b083
  %v2_1b087 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_1b087, i32* @eax, align 4
  %v2_1b08e = call i32 @function_2ea60(i32 %v2_1b087)
  %v1_1b097 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b097 = xor i32 %v1_1b097, %arg2
  %v3_1b097 = icmp eq i32 %v2_1b097, 0
  store i32 %v2_1b097, i32* @eax, align 4
  %v1_1b09e = icmp eq i1 %v3_1b097, false
  br i1 %v1_1b09e, label %bb120, label %dec_label_pc_1b0a0

bb120:                                            ; preds = %dec_label_pc_1b087
  %v2_1b09e = call i32 @function_1b112()
  br label %dec_label_pc_1b0a0

dec_label_pc_1b0a0:                               ; preds = %bb120, %dec_label_pc_1b087
  %v0_1b0a5 = phi i32 [ %v2_1b09e, %bb120 ], [ %v2_1b097, %dec_label_pc_1b087 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v0_1b0a5

dec_label_pc_1b0a6:                               ; preds = %dec_label_pc_1b05f
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %v2_1b04f, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1b0ee, { 1, 0 }
}

define i32 @function_1b0ca() local_unnamed_addr {
dec_label_pc_1b0ca:
  %v3_1b0e2 = load i32, i32* @eax, align 4
  ret i32 %v3_1b0e2
}

define i32 @function_1b0ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b0ee:
  %v3_1b106 = load i32, i32* @eax, align 4
  ret i32 %v3_1b106
}

define i32 @function_1b112() local_unnamed_addr {
dec_label_pc_1b112:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b118() local_unnamed_addr {
dec_label_pc_1b118:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b118 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b118
}

define i32 @_ZN5boost8signals27signal1IviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS6_IFvRKNS0_10connectionEiEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1b130:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1b130 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1b138 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1b144 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b144 = inttoptr i32 %v1_1b144 to i32*
  %v3_1b144 = load i32, i32* %v2_1b144, align 4
  store i32 %v3_1b144, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a08_type* @global_var_39a08.3542 to i32), i32* %arg1, align 4
  %v1_1b14d = icmp eq i32 %v3_1b144, 0
  br i1 %v1_1b14d, label %dec_label_pc_1b17c, label %dec_label_pc_1b151

dec_label_pc_1b151:                               ; preds = %dec_label_pc_1b130
  %v2_1b154 = call i32 @function_36130(i32 %v3_1b144)
  %v0_1b159 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b159 = add i32 %v0_1b159, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b159, i32* @eax, align 4
  %v2_1b15f = call i32 @function_2eb90(i32 %v1_1b159)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1b16f = inttoptr i32 %v0_1b159 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b16f, align 4
  br i1 false, label %dec_label_pc_1b151.dec_label_pc_1b181_crit_edge, label %dec_label_pc_1b177

dec_label_pc_1b151.dec_label_pc_1b181_crit_edge:  ; preds = %dec_label_pc_1b151
  br label %dec_label_pc_1b181

dec_label_pc_1b177:                               ; preds = %dec_label_pc_1b151
  store i32 %v0_1b130, i32* %ebx.global-to-local, align 4
  %v0_1b17b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b17b

dec_label_pc_1b17c:                               ; preds = %dec_label_pc_1b130
  %v1_1b17c = call i32 @function_2c8aa(i32 %v0_1b138)
  store i32 %v1_1b17c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1b181

dec_label_pc_1b181:                               ; preds = %dec_label_pc_1b151.dec_label_pc_1b181_crit_edge, %dec_label_pc_1b17c
  %v2_1b17c = phi i32 [ undef, %dec_label_pc_1b151.dec_label_pc_1b181_crit_edge ], [ %v1_1b17c, %dec_label_pc_1b17c ]
  ret i32 %v2_1b17c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b181, { 1, 0 }
}

define i32 @function_1b186() local_unnamed_addr {
dec_label_pc_1b186:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b193(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b193:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b193 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b193 = add i32 %v0_1b193, 1149831251
  %v2_1b193 = inttoptr i32 %v1_1b193 to i32*
  %v3_1b193 = load i32, i32* %v2_1b193, align 4
  %v4_1b193 = add i32 %v3_1b193, -1
  store i32 %v4_1b193, i32* %v2_1b193, align 4
  %v0_1b199 = load i32, i32* %eax.global-to-local, align 4
  %v11_1b199 = and i32 %v0_1b199, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1b199, i32* @eax, align 4
  %v0_1b19b = load i32, i32* %edx.global-to-local, align 4
  %v1_1b19e = call i32 @function_2eb90(i32 %v0_1b19b)
  store i32 %arg1, i32* @eax, align 4
  %v0_1b1a7 = call i32 @function_1b186()
  store i32 %v0_1b1a7, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b1a7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2eb90, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFviENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS2_EENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1b1b0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1b1b0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1b1b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1b1c4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b1c4 = inttoptr i32 %v1_1b1c4 to i32*
  %v3_1b1c4 = load i32, i32* %v2_1b1c4, align 4
  store i32 %v3_1b1c4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a08_type* @global_var_39a08.3542 to i32), i32* %arg1, align 4
  %v0_1b1cd = load i32, i32* @eax, align 4
  %v1_1b1cd = icmp eq i32 %v0_1b1cd, 0
  br i1 %v1_1b1cd, label %bb, label %dec_label_pc_1b1d1

bb:                                               ; preds = %dec_label_pc_1b1b0
  %v2_1b1cf = call i32 @function_1b204(i32 %v0_1b1b8)
  store i32 %v2_1b1cf, i32* @eax, align 4
  br label %dec_label_pc_1b1d1

dec_label_pc_1b1d1:                               ; preds = %bb, %dec_label_pc_1b1b0
  %v0_1b1d1 = phi i32 [ %v2_1b1cf, %bb ], [ %v0_1b1cd, %dec_label_pc_1b1b0 ]
  %v2_1b1d4 = call i32 @function_361b0(i32 %v0_1b1d1)
  %v0_1b1d9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b1d9 = add i32 %v0_1b1d9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b1d9, i32* @eax, align 4
  %v2_1b1df = call i32 @function_2ec10(i32 %v1_1b1d9)
  store i32 0, i32* @eax, align 4
  %v1_1b1ef = inttoptr i32 %v0_1b1d9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b1ef, align 4
  br i1 false, label %bb105, label %dec_label_pc_1b1d1.dec_label_pc_1b1f7_crit_edge

dec_label_pc_1b1d1.dec_label_pc_1b1f7_crit_edge:  ; preds = %dec_label_pc_1b1d1
  %v5_1b1fe.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1b1f7

bb105:                                            ; preds = %dec_label_pc_1b1d1
  br label %dec_label_pc_1b1f7

dec_label_pc_1b1f7:                               ; preds = %dec_label_pc_1b1d1.dec_label_pc_1b1f7_crit_edge, %bb105
  %v5_1b1fe = phi i32 [ %v5_1b1fe.pre, %dec_label_pc_1b1d1.dec_label_pc_1b1f7_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1b1b0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1b1fe

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b1f7, { 1, 0 }
}

define i32 @function_1b204(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b204:
  %v0_1b204 = call i32 @function_2c92a()
  ret i32 %v0_1b204
}

define i32 @function_1b209() local_unnamed_addr {
dec_label_pc_1b209:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b20e() local_unnamed_addr {
dec_label_pc_1b20e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b21b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b21b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b21b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b21b = add i32 %v0_1b21b, 1149831251
  %v2_1b21b = inttoptr i32 %v1_1b21b to i32*
  %v3_1b21b = load i32, i32* %v2_1b21b, align 4
  %v4_1b21b = add i32 %v3_1b21b, -1
  store i32 %v4_1b21b, i32* %v2_1b21b, align 4
  %v0_1b221 = load i32, i32* %eax.global-to-local, align 4
  %v11_1b221 = and i32 %v0_1b221, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1b221, i32* @eax, align 4
  %v0_1b223 = load i32, i32* %edx.global-to-local, align 4
  %v1_1b226 = call i32 @function_2ec10(i32 %v0_1b223)
  store i32 %arg1, i32* @eax, align 4
  %v0_1b22f = call i32 @function_1b20e()
  store i32 %v0_1b22f, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b22f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2ec10, { 2, 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFviENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS2_EENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1b240:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1b240 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1b248 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1b254 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b254 = inttoptr i32 %v1_1b254 to i32*
  %v3_1b254 = load i32, i32* %v2_1b254, align 4
  store i32 %v3_1b254, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a08_type* @global_var_39a08.3542 to i32), i32* %arg1, align 4
  %v1_1b25d = icmp eq i32 %v3_1b254, 0
  br i1 %v1_1b25d, label %dec_label_pc_1b28c, label %dec_label_pc_1b261

dec_label_pc_1b261:                               ; preds = %dec_label_pc_1b240
  %v2_1b264 = call i32 @function_36240(i32 %v3_1b254)
  %v0_1b269 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b269 = add i32 %v0_1b269, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b269, i32* @eax, align 4
  %v2_1b26f = call i32 @function_2eca0(i32 %v1_1b269)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1b27f = inttoptr i32 %v0_1b269 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b27f, align 4
  br i1 false, label %dec_label_pc_1b261.dec_label_pc_1b291_crit_edge, label %dec_label_pc_1b287

dec_label_pc_1b261.dec_label_pc_1b291_crit_edge:  ; preds = %dec_label_pc_1b261
  br label %dec_label_pc_1b291

dec_label_pc_1b287:                               ; preds = %dec_label_pc_1b261
  store i32 %v0_1b240, i32* %ebx.global-to-local, align 4
  %v0_1b28b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b28b

dec_label_pc_1b28c:                               ; preds = %dec_label_pc_1b240
  %v1_1b28c = call i32 @function_2c9ba(i32 %v0_1b248)
  store i32 %v1_1b28c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1b291

dec_label_pc_1b291:                               ; preds = %dec_label_pc_1b261.dec_label_pc_1b291_crit_edge, %dec_label_pc_1b28c
  %v2_1b28c = phi i32 [ undef, %dec_label_pc_1b261.dec_label_pc_1b291_crit_edge ], [ %v1_1b28c, %dec_label_pc_1b28c ]
  ret i32 %v2_1b28c

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b291, { 1, 0 }
}

define i32 @function_1b296() local_unnamed_addr {
dec_label_pc_1b296:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b2a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b2a3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b2a3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b2a3 = add i32 %v0_1b2a3, 1149831251
  %v2_1b2a3 = inttoptr i32 %v1_1b2a3 to i32*
  %v3_1b2a3 = load i32, i32* %v2_1b2a3, align 4
  %v4_1b2a3 = add i32 %v3_1b2a3, -1
  store i32 %v4_1b2a3, i32* %v2_1b2a3, align 4
  %v0_1b2a9 = load i32, i32* %eax.global-to-local, align 4
  %v11_1b2a9 = and i32 %v0_1b2a9, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1b2a9, i32* @eax, align 4
  %v0_1b2ab = load i32, i32* %edx.global-to-local, align 4
  %v1_1b2ae = call i32 @function_2eca0(i32 %v0_1b2ab)
  store i32 %arg1, i32* @eax, align 4
  %v0_1b2b7 = call i32 @function_1b296()
  store i32 %v0_1b2b7, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b2b7

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2eca0, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal1IviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS6_IFvRKNS0_10connectionEiEEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1b2c0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1b2c0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1b2c8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1b2d4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b2d4 = inttoptr i32 %v1_1b2d4 to i32*
  %v3_1b2d4 = load i32, i32* %v2_1b2d4, align 4
  store i32 %v3_1b2d4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_39a08_type* @global_var_39a08.3542 to i32), i32* %arg1, align 4
  %v0_1b2dd = load i32, i32* @eax, align 4
  %v1_1b2dd = icmp eq i32 %v0_1b2dd, 0
  br i1 %v1_1b2dd, label %bb, label %dec_label_pc_1b2e1

bb:                                               ; preds = %dec_label_pc_1b2c0
  %v2_1b2df = call i32 @function_1b314(i32 %v0_1b2c8)
  store i32 %v2_1b2df, i32* @eax, align 4
  br label %dec_label_pc_1b2e1

dec_label_pc_1b2e1:                               ; preds = %bb, %dec_label_pc_1b2c0
  %v0_1b2e1 = phi i32 [ %v2_1b2df, %bb ], [ %v0_1b2dd, %dec_label_pc_1b2c0 ]
  %v2_1b2e4 = call i32 @function_362c0(i32 %v0_1b2e1)
  %v0_1b2e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b2e9 = add i32 %v0_1b2e9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b2e9, i32* @eax, align 4
  %v2_1b2ef = call i32 @function_2ed20(i32 %v1_1b2e9)
  store i32 0, i32* @eax, align 4
  %v1_1b2ff = inttoptr i32 %v0_1b2e9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b2ff, align 4
  br i1 false, label %bb105, label %dec_label_pc_1b2e1.dec_label_pc_1b307_crit_edge

dec_label_pc_1b2e1.dec_label_pc_1b307_crit_edge:  ; preds = %dec_label_pc_1b2e1
  %v5_1b30e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1b307

bb105:                                            ; preds = %dec_label_pc_1b2e1
  br label %dec_label_pc_1b307

dec_label_pc_1b307:                               ; preds = %dec_label_pc_1b2e1.dec_label_pc_1b307_crit_edge, %bb105
  %v5_1b30e = phi i32 [ %v5_1b30e.pre, %dec_label_pc_1b2e1.dec_label_pc_1b307_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1b2c0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1b30e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b307, { 1, 0 }
}

define i32 @function_1b314(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b314:
  %v3_1b32c = load i32, i32* @eax, align 4
  ret i32 %v3_1b32c
}

define i32 @function_1b338() local_unnamed_addr {
dec_label_pc_1b338:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b33d() local_unnamed_addr {
dec_label_pc_1b33d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b34a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b34a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b34a = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b34a = add i32 %v0_1b34a, 1149831251
  %v2_1b34a = inttoptr i32 %v1_1b34a to i32*
  %v3_1b34a = load i32, i32* %v2_1b34a, align 4
  %v4_1b34a = add i32 %v3_1b34a, -1
  store i32 %v4_1b34a, i32* %v2_1b34a, align 4
  %v0_1b350 = load i32, i32* %eax.global-to-local, align 4
  %v11_1b350 = and i32 %v0_1b350, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1b350, i32* @eax, align 4
  %v0_1b352 = load i32, i32* %edx.global-to-local, align 4
  %v1_1b355 = call i32 @function_2ed20(i32 %v0_1b352)
  store i32 %arg1, i32* @eax, align 4
  %v0_1b35e = call i32 @function_1b33d()
  store i32 %v0_1b35e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b35e

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2ed20, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE20disconnect_all_slotsEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b360:
  ret i32 0
}

define i32 @function_1b39c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b39c:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_1b39c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b39c = add i32 %v0_1b39c, -2062277564
  %v2_1b39c = inttoptr i32 %v1_1b39c to i32*
  %v3_1b39c = load i32, i32* %v2_1b39c, align 4
  %v4_1b39c = sub i32 %v3_1b39c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1b39c, i32* %v2_1b39c, align 4
  %v0_1b3a7 = load i32, i32* @eax, align 4
  %v1_1b3a7 = icmp eq i32 %v0_1b3a7, 0
  br i1 %v1_1b3a7, label %bb, label %dec_label_pc_1b3af

bb:                                               ; preds = %dec_label_pc_1b39c
  %v2_1b3a9 = call i32 @function_1b44e(i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_1b3a9, i32* @eax, align 4
  br label %dec_label_pc_1b3af

dec_label_pc_1b3af:                               ; preds = %bb, %dec_label_pc_1b39c
  %v2_1b3af = phi i32 [ %v2_1b3a9, %bb ], [ %v0_1b3a7, %dec_label_pc_1b39c ]
  store i32 %v2_1b3af, i32* %esi.global-to-local, align 4
  %v1_1b3d9 = icmp eq i32* %arg1, null
  br label %dec_label_pc_1b3e3

dec_label_pc_1b3b8:                               ; preds = %dec_label_pc_1b3e3
  %v1_1b3b8 = add i32 %v0_1b3b8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1b3b8 = inttoptr i32 %v1_1b3b8 to i32*
  %v3_1b3b8 = load i32, i32* %v2_1b3b8, align 4
  store i32 %v3_1b3b8, i32* %ebx.global-to-local, align 4
  %v1_1b3bb = icmp eq i32 %v3_1b3b8, 0
  br i1 %v1_1b3bb, label %bb118, label %dec_label_pc_1b3bf

bb118:                                            ; preds = %dec_label_pc_1b3b8
  %v1_1b3bd = call i32 @function_1b42a()
  br label %dec_label_pc_1b3bf

dec_label_pc_1b3bf:                               ; preds = %bb118, %dec_label_pc_1b3b8
  %v1_1b3c9 = add i32 %v3_1b3b8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b3c9 = inttoptr i32 %v1_1b3c9 to i8*
  store i8 0, i8* %v2_1b3c9, align 1
  %v0_1b3d7 = load i32, i32* %esi.global-to-local, align 4
  %v1_1b3d7 = inttoptr i32 %v0_1b3d7 to i32*
  %v2_1b3d7 = load i32, i32* %v1_1b3d7, align 4
  store i32 %v2_1b3d7, i32* %esi.global-to-local, align 4
  br i1 %v1_1b3d9, label %dec_label_pc_1b406, label %dec_label_pc_1b3dd

dec_label_pc_1b3dd:                               ; preds = %dec_label_pc_1b3bf
  %v2_1b3dd = load i32, i32* %arg1, align 4
  store i32 %v2_1b3dd, i32* @eax, align 4
  %v1_1b3df = icmp eq i32 %v2_1b3dd, 0
  br i1 %v1_1b3df, label %bb119, label %dec_label_pc_1b3e3

bb119:                                            ; preds = %dec_label_pc_1b3dd
  %v3_1b3e1 = call i32 @function_1b44e(i32 %v3_1b3b8)
  store i32 %v3_1b3e1, i32* @eax, align 4
  %v0_1b3e3.pre.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_1b3e3

dec_label_pc_1b3e3:                               ; preds = %bb119, %dec_label_pc_1b3dd, %dec_label_pc_1b3af
  %v0_1b3b8 = phi i32 [ %v2_1b3af, %dec_label_pc_1b3af ], [ %v2_1b3d7, %dec_label_pc_1b3dd ], [ %v0_1b3e3.pre.pre, %bb119 ]
  %v1_1b3e3 = phi i32 [ %v2_1b3af, %dec_label_pc_1b3af ], [ %v2_1b3dd, %dec_label_pc_1b3dd ], [ %v3_1b3e1, %bb119 ]
  %v12_1b3e3 = icmp eq i32 %v0_1b3b8, %v1_1b3e3
  %v1_1b3e5 = icmp eq i1 %v12_1b3e3, false
  br i1 %v1_1b3e5, label %dec_label_pc_1b3b8, label %dec_label_pc_1b3e7

dec_label_pc_1b3e7:                               ; preds = %dec_label_pc_1b3e3
  %v2_1b3e7 = ptrtoint i32* %stack_var_24 to i32
  store i32 %v2_1b3e7, i32* @eax, align 4
  %v2_1b3ee = call i32 @function_2edc0(i32 %v2_1b3e7)
  %v1_1b3f7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b3f7 = xor i32 %v1_1b3f7, %arg2
  %v3_1b3f7 = icmp eq i32 %v2_1b3f7, 0
  store i32 %v2_1b3f7, i32* @eax, align 4
  %v1_1b3fe = icmp eq i1 %v3_1b3f7, false
  br i1 %v1_1b3fe, label %bb120, label %dec_label_pc_1b400

bb120:                                            ; preds = %dec_label_pc_1b3e7
  %v2_1b3fe = call i32 @function_1b472()
  br label %dec_label_pc_1b400

dec_label_pc_1b400:                               ; preds = %bb120, %dec_label_pc_1b3e7
  %v0_1b405 = phi i32 [ %v2_1b3fe, %bb120 ], [ %v2_1b3f7, %dec_label_pc_1b3e7 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  ret i32 %v0_1b405

dec_label_pc_1b406:                               ; preds = %dec_label_pc_1b3bf
  ret i32 %tmp115

; uselistorder directives
  uselistorder i32 %v2_1b3af, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1b44e, { 1, 0 }
}

define i32 @function_1b42a() local_unnamed_addr {
dec_label_pc_1b42a:
  %v3_1b442 = load i32, i32* @eax, align 4
  ret i32 %v3_1b442
}

define i32 @function_1b44e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b44e:
  %v3_1b466 = load i32, i32* @eax, align 4
  ret i32 %v3_1b466
}

define i32 @function_1b472() local_unnamed_addr {
dec_label_pc_1b472:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b478() local_unnamed_addr {
dec_label_pc_1b478:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b478 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b478
}

define i32 @_ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1b490:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1b490 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1b498 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1b4a4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b4a4 = inttoptr i32 %v1_1b4a4 to i32*
  %v3_1b4a4 = load i32, i32* %v2_1b4a4, align 4
  store i32 %v3_1b4a4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_399d8_type* @global_var_399d8.3546 to i32), i32* %arg1, align 4
  %v1_1b4ad = icmp eq i32 %v3_1b4a4, 0
  br i1 %v1_1b4ad, label %dec_label_pc_1b4dc, label %dec_label_pc_1b4b1

dec_label_pc_1b4b1:                               ; preds = %dec_label_pc_1b490
  %v2_1b4b4 = call i32 @function_367f0(i32 %v3_1b4a4)
  %v0_1b4b9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b4b9 = add i32 %v0_1b4b9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b4b9, i32* @eax, align 4
  %v2_1b4bf = call i32 @function_2eef0(i32 %v1_1b4b9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1b4cf = inttoptr i32 %v0_1b4b9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b4cf, align 4
  br i1 false, label %dec_label_pc_1b4b1.dec_label_pc_1b4e1_crit_edge, label %dec_label_pc_1b4d7

dec_label_pc_1b4b1.dec_label_pc_1b4e1_crit_edge:  ; preds = %dec_label_pc_1b4b1
  br label %dec_label_pc_1b4e1

dec_label_pc_1b4d7:                               ; preds = %dec_label_pc_1b4b1
  store i32 %v0_1b490, i32* %ebx.global-to-local, align 4
  %v0_1b4db = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b4db

dec_label_pc_1b4dc:                               ; preds = %dec_label_pc_1b490
  %v1_1b4dc = call i32 @function_2cc3e(i32 %v0_1b498)
  store i32 %v1_1b4dc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1b4e1

dec_label_pc_1b4e1:                               ; preds = %dec_label_pc_1b4b1.dec_label_pc_1b4e1_crit_edge, %dec_label_pc_1b4dc
  %v2_1b4dc = phi i32 [ undef, %dec_label_pc_1b4b1.dec_label_pc_1b4e1_crit_edge ], [ %v1_1b4dc, %dec_label_pc_1b4dc ]
  ret i32 %v2_1b4dc

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b4e1, { 1, 0 }
}

define i32 @function_1b4e6() local_unnamed_addr {
dec_label_pc_1b4e6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b4f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b4f3:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b4f3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b4f3 = add i32 %v0_1b4f3, 1149831251
  %v2_1b4f3 = inttoptr i32 %v1_1b4f3 to i32*
  %v3_1b4f3 = load i32, i32* %v2_1b4f3, align 4
  %v4_1b4f3 = add i32 %v3_1b4f3, -1
  store i32 %v4_1b4f3, i32* %v2_1b4f3, align 4
  %v0_1b4f9 = load i32, i32* %eax.global-to-local, align 4
  %v11_1b4f9 = and i32 %v0_1b4f9, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1b4f9, i32* @eax, align 4
  %v0_1b4fb = load i32, i32* %edx.global-to-local, align 4
  %v1_1b4fe = call i32 @function_2eef0(i32 %v0_1b4fb)
  store i32 %arg1, i32* @eax, align 4
  %v0_1b507 = call i32 @function_1b4e6()
  store i32 %v0_1b507, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b507

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2eef0, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvRK7uint25610ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS6_EENSB_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1b510:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1b510 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1b518 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1b524 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b524 = inttoptr i32 %v1_1b524 to i32*
  %v3_1b524 = load i32, i32* %v2_1b524, align 4
  store i32 %v3_1b524, i32* @eax, align 4
  store i32 ptrtoint (%vtable_399d8_type* @global_var_399d8.3546 to i32), i32* %arg1, align 4
  %v0_1b52d = load i32, i32* @eax, align 4
  %v1_1b52d = icmp eq i32 %v0_1b52d, 0
  br i1 %v1_1b52d, label %bb, label %dec_label_pc_1b531

bb:                                               ; preds = %dec_label_pc_1b510
  %v2_1b52f = call i32 @function_1b564(i32 %v0_1b518)
  store i32 %v2_1b52f, i32* @eax, align 4
  br label %dec_label_pc_1b531

dec_label_pc_1b531:                               ; preds = %bb, %dec_label_pc_1b510
  %v0_1b531 = phi i32 [ %v2_1b52f, %bb ], [ %v0_1b52d, %dec_label_pc_1b510 ]
  %v2_1b534 = call i32 @function_36870(i32 %v0_1b531)
  %v0_1b539 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b539 = add i32 %v0_1b539, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b539, i32* @eax, align 4
  %v2_1b53f = call i32 @function_2ef70(i32 %v1_1b539)
  store i32 0, i32* @eax, align 4
  %v1_1b54f = inttoptr i32 %v0_1b539 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b54f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1b531.dec_label_pc_1b557_crit_edge

dec_label_pc_1b531.dec_label_pc_1b557_crit_edge:  ; preds = %dec_label_pc_1b531
  %v5_1b55e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1b557

bb105:                                            ; preds = %dec_label_pc_1b531
  br label %dec_label_pc_1b557

dec_label_pc_1b557:                               ; preds = %dec_label_pc_1b531.dec_label_pc_1b557_crit_edge, %bb105
  %v5_1b55e = phi i32 [ %v5_1b55e.pre, %dec_label_pc_1b531.dec_label_pc_1b557_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1b510, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1b55e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b557, { 1, 0 }
}

define i32 @function_1b564(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b564:
  %v0_1b564 = call i32 @function_2ccbe()
  ret i32 %v0_1b564
}

define i32 @function_1b569() local_unnamed_addr {
dec_label_pc_1b569:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b56e() local_unnamed_addr {
dec_label_pc_1b56e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b57b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b57b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b57b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b57b = add i32 %v0_1b57b, 1149831251
  %v2_1b57b = inttoptr i32 %v1_1b57b to i32*
  %v3_1b57b = load i32, i32* %v2_1b57b, align 4
  %v4_1b57b = add i32 %v3_1b57b, -1
  store i32 %v4_1b57b, i32* %v2_1b57b, align 4
  %v0_1b581 = load i32, i32* %eax.global-to-local, align 4
  %v11_1b581 = and i32 %v0_1b581, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1b581, i32* @eax, align 4
  %v0_1b583 = load i32, i32* %edx.global-to-local, align 4
  %v1_1b586 = call i32 @function_2ef70(i32 %v0_1b583)
  store i32 %arg1, i32* @eax, align 4
  %v0_1b58f = call i32 @function_1b56e()
  store i32 %v0_1b58f, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b58f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2ef70, { 1, 0 }
}

define i32 @_ZN5boost8signals26signalIFvRK7uint25610ChangeTypeENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS6_EENSB_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED1Ev(i32* %arg1) {
dec_label_pc_1b5a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1b5a0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1b5a8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1b5b4 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b5b4 = inttoptr i32 %v1_1b5b4 to i32*
  %v3_1b5b4 = load i32, i32* %v2_1b5b4, align 4
  store i32 %v3_1b5b4, i32* @eax, align 4
  store i32 ptrtoint (%vtable_399d8_type* @global_var_399d8.3546 to i32), i32* %arg1, align 4
  %v1_1b5bd = icmp eq i32 %v3_1b5b4, 0
  br i1 %v1_1b5bd, label %dec_label_pc_1b5ec, label %dec_label_pc_1b5c1

dec_label_pc_1b5c1:                               ; preds = %dec_label_pc_1b5a0
  %v2_1b5c4 = call i32 @function_36900(i32 %v3_1b5b4)
  %v0_1b5c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b5c9 = add i32 %v0_1b5c9, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b5c9, i32* @eax, align 4
  %v2_1b5cf = call i32 @function_2f000(i32 %v1_1b5c9)
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1b5df = inttoptr i32 %v0_1b5c9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b5df, align 4
  br i1 false, label %dec_label_pc_1b5c1.dec_label_pc_1b5f1_crit_edge, label %dec_label_pc_1b5e7

dec_label_pc_1b5c1.dec_label_pc_1b5f1_crit_edge:  ; preds = %dec_label_pc_1b5c1
  br label %dec_label_pc_1b5f1

dec_label_pc_1b5e7:                               ; preds = %dec_label_pc_1b5c1
  store i32 %v0_1b5a0, i32* %ebx.global-to-local, align 4
  %v0_1b5eb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b5eb

dec_label_pc_1b5ec:                               ; preds = %dec_label_pc_1b5a0
  %v1_1b5ec = call i32 @function_2cd4e(i32 %v0_1b5a8)
  store i32 %v1_1b5ec, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1b5f1

dec_label_pc_1b5f1:                               ; preds = %dec_label_pc_1b5c1.dec_label_pc_1b5f1_crit_edge, %dec_label_pc_1b5ec
  %v2_1b5ec = phi i32 [ undef, %dec_label_pc_1b5c1.dec_label_pc_1b5f1_crit_edge ], [ %v1_1b5ec, %dec_label_pc_1b5ec ]
  ret i32 %v2_1b5ec

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b5f1, { 1, 0 }
}

define i32 @function_1b5f6() local_unnamed_addr {
dec_label_pc_1b5f6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b603(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b603:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b603 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b603 = add i32 %v0_1b603, 1149831251
  %v2_1b603 = inttoptr i32 %v1_1b603 to i32*
  %v3_1b603 = load i32, i32* %v2_1b603, align 4
  %v4_1b603 = add i32 %v3_1b603, -1
  store i32 %v4_1b603, i32* %v2_1b603, align 4
  %v0_1b609 = load i32, i32* %eax.global-to-local, align 4
  %v11_1b609 = and i32 %v0_1b609, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1b609, i32* @eax, align 4
  %v0_1b60b = load i32, i32* %edx.global-to-local, align 4
  %v1_1b60e = call i32 @function_2f000(i32 %v0_1b60b)
  store i32 %arg1, i32* @eax, align 4
  %v0_1b617 = call i32 @function_1b5f6()
  store i32 %v0_1b617, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b617

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2f000, { 1, 0 }
}

define i32 @_ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEED0Ev(i32* %arg1) {
dec_label_pc_1b620:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_1b620 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v0_1b628 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1b634 = add i32 %tmp101, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b634 = inttoptr i32 %v1_1b634 to i32*
  %v3_1b634 = load i32, i32* %v2_1b634, align 4
  store i32 %v3_1b634, i32* @eax, align 4
  store i32 ptrtoint (%vtable_399d8_type* @global_var_399d8.3546 to i32), i32* %arg1, align 4
  %v0_1b63d = load i32, i32* @eax, align 4
  %v1_1b63d = icmp eq i32 %v0_1b63d, 0
  br i1 %v1_1b63d, label %bb, label %dec_label_pc_1b641

bb:                                               ; preds = %dec_label_pc_1b620
  %v2_1b63f = call i32 @function_1b674(i32 %v0_1b628)
  store i32 %v2_1b63f, i32* @eax, align 4
  br label %dec_label_pc_1b641

dec_label_pc_1b641:                               ; preds = %bb, %dec_label_pc_1b620
  %v0_1b641 = phi i32 [ %v2_1b63f, %bb ], [ %v0_1b63d, %dec_label_pc_1b620 ]
  %v2_1b644 = call i32 @function_36980(i32 %v0_1b641)
  %v0_1b649 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b649 = add i32 %v0_1b649, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b649, i32* @eax, align 4
  %v2_1b64f = call i32 @function_2f080(i32 %v1_1b649)
  store i32 0, i32* @eax, align 4
  %v1_1b65f = inttoptr i32 %v0_1b649 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b65f, align 4
  br i1 false, label %bb105, label %dec_label_pc_1b641.dec_label_pc_1b667_crit_edge

dec_label_pc_1b641.dec_label_pc_1b667_crit_edge:  ; preds = %dec_label_pc_1b641
  %v5_1b66e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1b667

bb105:                                            ; preds = %dec_label_pc_1b641
  br label %dec_label_pc_1b667

dec_label_pc_1b667:                               ; preds = %dec_label_pc_1b641.dec_label_pc_1b667_crit_edge, %bb105
  %v5_1b66e = phi i32 [ %v5_1b66e.pre, %dec_label_pc_1b641.dec_label_pc_1b667_crit_edge ], [ undef, %bb105 ]
  store i32 %v0_1b620, i32* %ebx.global-to-local, align 4
  ret i32 %v5_1b66e

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1b667, { 1, 0 }
}

define i32 @function_1b674(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b674:
  %v0_1b674 = call i32 @function_2cdce()
  ret i32 %v0_1b674
}

define i32 @function_1b679() local_unnamed_addr {
dec_label_pc_1b679:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b67e() local_unnamed_addr {
dec_label_pc_1b67e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b68b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b68b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1b68b = load i32, i32* %ebp.global-to-local, align 4
  %v1_1b68b = add i32 %v0_1b68b, 1149831251
  %v2_1b68b = inttoptr i32 %v1_1b68b to i32*
  %v3_1b68b = load i32, i32* %v2_1b68b, align 4
  %v4_1b68b = add i32 %v3_1b68b, -1
  store i32 %v4_1b68b, i32* %v2_1b68b, align 4
  %v0_1b691 = load i32, i32* %eax.global-to-local, align 4
  %v11_1b691 = and i32 %v0_1b691, or (i32 zext (i8 ptrtoint (i32* @global_var_1c.3271 to i8) to i32), i32 -256)
  store i32 %v11_1b691, i32* @eax, align 4
  %v0_1b693 = load i32, i32* %edx.global-to-local, align 4
  %v1_1b696 = call i32 @function_2f080(i32 %v0_1b693)
  store i32 %arg1, i32* @eax, align 4
  %v0_1b69f = call i32 @function_1b67e()
  store i32 %v0_1b69f, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b69f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2f080, { 1, 0 }
}

define i32 @_ZN18CClientUIInterfaceD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b6b0:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  %v0_1b6b0 = load i32, i32* %esi.global-to-local, align 4
  %v0_1b6b1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp113, i32* @ebx, align 4
  %v1_1b6c5 = add i32 %tmp113, 88
  %v2_1b6c5 = inttoptr i32 %v1_1b6c5 to i32*
  %v3_1b6c5 = load i32, i32* %v2_1b6c5, align 4
  store i32 %v3_1b6c5, i32* @eax, align 4
  %v1_1b6c8 = add i32 %tmp113, 84
  %v2_1b6c8 = inttoptr i32 %v1_1b6c8 to i32*
  store i32 ptrtoint (%vtable_399d8_type* @global_var_399d8.3546 to i32), i32* %v2_1b6c8, align 4
  %v1_1b6cf = icmp eq i32 %v3_1b6c5, 0
  br i1 %v1_1b6cf, label %dec_label_pc_1b832, label %dec_label_pc_1b6d7

dec_label_pc_1b6d7:                               ; preds = %dec_label_pc_1b6b0
  %v2_1b6da = call i32 @function_36a10(i32 %v3_1b6c5)
  %v0_1b6df = load i32, i32* @ebx, align 4
  %v1_1b6df = add i32 %v0_1b6df, 92
  store i32 %v1_1b6df, i32* @eax, align 4
  %v2_1b6e5 = call i32 @function_2f110(i32 %v1_1b6df)
  %v0_1b6ea = load i32, i32* @ebx, align 4
  %v1_1b6ea = add i32 %v0_1b6ea, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_1b6ea = inttoptr i32 %v1_1b6ea to i32*
  %v3_1b6ea = load i32, i32* %v2_1b6ea, align 4
  store i32 %v3_1b6ea, i32* @eax, align 4
  %v1_1b6ed = add i32 %v0_1b6ea, 84
  %v2_1b6ed = inttoptr i32 %v1_1b6ed to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b6ed, align 4
  %v0_1b6f4 = load i32, i32* @ebx, align 4
  %v1_1b6f4 = add i32 %v0_1b6f4, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_1b6f4 = inttoptr i32 %v1_1b6f4 to i32*
  store i32 ptrtoint (%vtable_39a08_type* @global_var_39a08.3542 to i32), i32* %v2_1b6f4, align 4
  %v0_1b6fb = load i32, i32* @eax, align 4
  %v1_1b6fb = icmp eq i32 %v0_1b6fb, 0
  br i1 %v1_1b6fb, label %bb, label %dec_label_pc_1b703

bb:                                               ; preds = %dec_label_pc_1b6d7
  %v1_1b6fd = call i32 @function_1b898()
  store i32 %v1_1b6fd, i32* @eax, align 4
  br label %dec_label_pc_1b703

dec_label_pc_1b703:                               ; preds = %bb, %dec_label_pc_1b6d7
  %v0_1b703 = phi i32 [ %v1_1b6fd, %bb ], [ %v0_1b6fb, %dec_label_pc_1b6d7 ]
  %v2_1b706 = call i32 @function_366b0(i32 %v0_1b703)
  %v0_1b70b = load i32, i32* @ebx, align 4
  %v1_1b70b = add i32 %v0_1b70b, ptrtoint (i32* @global_var_50.3473 to i32)
  store i32 %v1_1b70b, i32* @eax, align 4
  %v2_1b711 = call i32 @function_2f110(i32 %v1_1b70b)
  %v0_1b716 = load i32, i32* @ebx, align 4
  %v1_1b716 = add i32 %v0_1b716, ptrtoint (i32* @global_var_40.3547 to i32)
  %v2_1b716 = inttoptr i32 %v1_1b716 to i32*
  %v3_1b716 = load i32, i32* %v2_1b716, align 4
  store i32 %v3_1b716, i32* @eax, align 4
  %v1_1b719 = add i32 %v0_1b716, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_1b719 = inttoptr i32 %v1_1b719 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b719, align 4
  %v0_1b720 = load i32, i32* @ebx, align 4
  %v1_1b720 = add i32 %v0_1b720, ptrtoint (i32* @global_var_3c.3471 to i32)
  %v2_1b720 = inttoptr i32 %v1_1b720 to i32*
  store i32 ptrtoint (%vtable_39a38_type* @global_var_39a38.3538 to i32), i32* %v2_1b720, align 4
  %v0_1b727 = load i32, i32* @eax, align 4
  %v1_1b727 = icmp eq i32 %v0_1b727, 0
  br i1 %v1_1b727, label %bb118, label %dec_label_pc_1b72f

bb118:                                            ; preds = %dec_label_pc_1b703
  %v1_1b729 = call i32 @function_1b893()
  store i32 %v1_1b729, i32* @eax, align 4
  br label %dec_label_pc_1b72f

dec_label_pc_1b72f:                               ; preds = %bb118, %dec_label_pc_1b703
  %v0_1b72f = phi i32 [ %v1_1b729, %bb118 ], [ %v0_1b727, %dec_label_pc_1b703 ]
  %v2_1b732 = call i32 @function_36350(i32 %v0_1b72f)
  %v0_1b737 = load i32, i32* @ebx, align 4
  %v1_1b737 = add i32 %v0_1b737, ptrtoint (i32* @global_var_44.3548 to i32)
  store i32 %v1_1b737, i32* @eax, align 4
  %v2_1b73d = call i32 @function_2f110(i32 %v1_1b737)
  %v0_1b742 = load i32, i32* @ebx, align 4
  %v1_1b742 = add i32 %v0_1b742, ptrtoint (i32* @global_var_34.3466 to i32)
  %v2_1b742 = inttoptr i32 %v1_1b742 to i32*
  %v3_1b742 = load i32, i32* %v2_1b742, align 4
  store i32 %v3_1b742, i32* @eax, align 4
  %v1_1b745 = add i32 %v0_1b742, ptrtoint (i32* @global_var_3c.3471 to i32)
  %v2_1b745 = inttoptr i32 %v1_1b745 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b745, align 4
  %v0_1b74c = load i32, i32* @ebx, align 4
  %v1_1b74c = add i32 %v0_1b74c, ptrtoint (i32* @global_var_30.3470 to i32)
  %v2_1b74c = inttoptr i32 %v1_1b74c to i32*
  store i32 ptrtoint (%vtable_39a68_type* @global_var_39a68.3534 to i32), i32* %v2_1b74c, align 4
  %v0_1b753 = load i32, i32* @eax, align 4
  %v1_1b753 = icmp eq i32 %v0_1b753, 0
  br i1 %v1_1b753, label %bb119, label %dec_label_pc_1b75b

bb119:                                            ; preds = %dec_label_pc_1b72f
  %v1_1b755 = call i32 @function_1b88e()
  store i32 %v1_1b755, i32* @eax, align 4
  br label %dec_label_pc_1b75b

dec_label_pc_1b75b:                               ; preds = %bb119, %dec_label_pc_1b72f
  %v0_1b75b = phi i32 [ %v1_1b755, %bb119 ], [ %v0_1b753, %dec_label_pc_1b72f ]
  %v2_1b75e = call i32 @function_36050(i32 %v0_1b75b)
  %v0_1b763 = load i32, i32* @ebx, align 4
  %v1_1b763 = add i32 %v0_1b763, ptrtoint (i32* @global_var_38.3456 to i32)
  store i32 %v1_1b763, i32* @eax, align 4
  %v2_1b769 = call i32 @function_2f110(i32 %v1_1b763)
  %v0_1b76e = load i32, i32* @ebx, align 4
  %v1_1b76e = add i32 %v0_1b76e, 40
  %v2_1b76e = inttoptr i32 %v1_1b76e to i32*
  %v3_1b76e = load i32, i32* %v2_1b76e, align 4
  store i32 %v3_1b76e, i32* @eax, align 4
  %v1_1b771 = add i32 %v0_1b76e, ptrtoint (i32* @global_var_30.3470 to i32)
  %v2_1b771 = inttoptr i32 %v1_1b771 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b771, align 4
  %v0_1b778 = load i32, i32* @ebx, align 4
  %v1_1b778 = add i32 %v0_1b778, 36
  %v2_1b778 = inttoptr i32 %v1_1b778 to i32*
  store i32 ptrtoint (%vtable_39a98_type* @global_var_39a98.3533 to i32), i32* %v2_1b778, align 4
  %v0_1b77f = load i32, i32* @eax, align 4
  %v1_1b77f = icmp eq i32 %v0_1b77f, 0
  br i1 %v1_1b77f, label %bb120, label %dec_label_pc_1b787

bb120:                                            ; preds = %dec_label_pc_1b75b
  %v1_1b781 = call i32 @function_1b889()
  store i32 %v1_1b781, i32* @eax, align 4
  br label %dec_label_pc_1b787

dec_label_pc_1b787:                               ; preds = %bb120, %dec_label_pc_1b75b
  %v0_1b787 = phi i32 [ %v1_1b781, %bb120 ], [ %v0_1b77f, %dec_label_pc_1b75b ]
  %v2_1b78a = call i32 @function_35d60(i32 %v0_1b787)
  %v0_1b78f = load i32, i32* @ebx, align 4
  %v1_1b78f = add i32 %v0_1b78f, 44
  store i32 %v1_1b78f, i32* @eax, align 4
  %v2_1b795 = call i32 @function_2f110(i32 %v1_1b78f)
  %v0_1b79a = load i32, i32* @ebx, align 4
  %v1_1b79a = add i32 %v0_1b79a, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_1b79a = inttoptr i32 %v1_1b79a to i32*
  %v3_1b79a = load i32, i32* %v2_1b79a, align 4
  store i32 %v3_1b79a, i32* @eax, align 4
  %v1_1b79d = add i32 %v0_1b79a, 36
  %v2_1b79d = inttoptr i32 %v1_1b79d to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b79d, align 4
  %v0_1b7a4 = load i32, i32* @ebx, align 4
  %v1_1b7a4 = add i32 %v0_1b7a4, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_1b7a4 = inttoptr i32 %v1_1b7a4 to i32*
  store i32 ptrtoint (%vtable_39a98_type* @global_var_39a98.3533 to i32), i32* %v2_1b7a4, align 4
  %v0_1b7ab = load i32, i32* @eax, align 4
  %v1_1b7ab = icmp eq i32 %v0_1b7ab, 0
  br i1 %v1_1b7ab, label %bb121, label %dec_label_pc_1b7b3

bb121:                                            ; preds = %dec_label_pc_1b787
  %v1_1b7ad = call i32 @function_1b865()
  store i32 %v1_1b7ad, i32* @eax, align 4
  br label %dec_label_pc_1b7b3

dec_label_pc_1b7b3:                               ; preds = %bb121, %dec_label_pc_1b787
  %v0_1b7b3 = phi i32 [ %v1_1b7ad, %bb121 ], [ %v0_1b7ab, %dec_label_pc_1b787 ]
  %v2_1b7b6 = call i32 @function_35d60(i32 %v0_1b7b3)
  %v0_1b7bb = load i32, i32* @ebx, align 4
  %v1_1b7bb = add i32 %v0_1b7bb, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_1b7bb, i32* @eax, align 4
  %v2_1b7c1 = call i32 @function_2f110(i32 %v1_1b7bb)
  %v0_1b7c6 = load i32, i32* @ebx, align 4
  %v1_1b7c6 = add i32 %v0_1b7c6, 16
  %v2_1b7c6 = inttoptr i32 %v1_1b7c6 to i32*
  %v3_1b7c6 = load i32, i32* %v2_1b7c6, align 4
  store i32 %v3_1b7c6, i32* @eax, align 4
  %v1_1b7c9 = add i32 %v0_1b7c6, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_1b7c9 = inttoptr i32 %v1_1b7c9 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b7c9, align 4
  %v0_1b7d0 = load i32, i32* @ebx, align 4
  %v1_1b7d0 = add i32 %v0_1b7d0, 12
  %v2_1b7d0 = inttoptr i32 %v1_1b7d0 to i32*
  store i32 ptrtoint (%vtable_39ac8_type* @global_var_39ac8.3532 to i32), i32* %v2_1b7d0, align 4
  %v0_1b7d7 = load i32, i32* @eax, align 4
  %v1_1b7d7 = icmp eq i32 %v0_1b7d7, 0
  br i1 %v1_1b7d7, label %bb122, label %dec_label_pc_1b7df

bb122:                                            ; preds = %dec_label_pc_1b7b3
  %v1_1b7d9 = call i32 @function_1b860()
  store i32 %v1_1b7d9, i32* @eax, align 4
  br label %dec_label_pc_1b7df

dec_label_pc_1b7df:                               ; preds = %bb122, %dec_label_pc_1b7b3
  %v0_1b7df = phi i32 [ %v1_1b7d9, %bb122 ], [ %v0_1b7d7, %dec_label_pc_1b7b3 ]
  %v2_1b7e2 = call i32 @function_359f0(i32 %v0_1b7df)
  %v0_1b7e7 = load i32, i32* @ebx, align 4
  %v1_1b7e7 = add i32 %v0_1b7e7, 20
  store i32 %v1_1b7e7, i32* @eax, align 4
  %v2_1b7ed = call i32 @function_2f110(i32 %v1_1b7e7)
  %v0_1b7f2 = load i32, i32* @ebx, align 4
  %v1_1b7f2 = add i32 %v0_1b7f2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1b7f2 = inttoptr i32 %v1_1b7f2 to i32*
  %v3_1b7f2 = load i32, i32* %v2_1b7f2, align 4
  store i32 %v3_1b7f2, i32* @eax, align 4
  %v1_1b7f5 = add i32 %v0_1b7f2, 12
  %v2_1b7f5 = inttoptr i32 %v1_1b7f5 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b7f5, align 4
  %v0_1b7fc = load i32, i32* @ebx, align 4
  %v1_1b7fc = inttoptr i32 %v0_1b7fc to i32*
  store i32 ptrtoint (%vtable_39af8_type* @global_var_39af8.3528 to i32), i32* %v1_1b7fc, align 4
  %v0_1b802 = load i32, i32* @eax, align 4
  %v1_1b802 = icmp eq i32 %v0_1b802, 0
  br i1 %v1_1b802, label %bb123, label %dec_label_pc_1b806

bb123:                                            ; preds = %dec_label_pc_1b7df
  %v1_1b804 = call i32 @function_1b85b()
  store i32 %v1_1b804, i32* @eax, align 4
  br label %dec_label_pc_1b806

dec_label_pc_1b806:                               ; preds = %bb123, %dec_label_pc_1b7df
  %v0_1b806 = phi i32 [ %v1_1b804, %bb123 ], [ %v0_1b802, %dec_label_pc_1b7df ]
  %v2_1b809 = call i32 @function_356f0(i32 %v0_1b806)
  %v0_1b80e = load i32, i32* @ebx, align 4
  %v1_1b80e = add i32 %v0_1b80e, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1b80e, i32* @eax, align 4
  %v2_1b814 = call i32 @function_2f110(i32 %v1_1b80e)
  store i32 0, i32* @eax, align 4
  %v0_1b824 = load i32, i32* @ebx, align 4
  %v1_1b824 = inttoptr i32 %v0_1b824 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v1_1b824, align 4
  br i1 false, label %bb124, label %dec_label_pc_1b806.dec_label_pc_1b82c_crit_edge

dec_label_pc_1b806.dec_label_pc_1b82c_crit_edge:  ; preds = %dec_label_pc_1b806
  %v0_1b831.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1b82c

bb124:                                            ; preds = %dec_label_pc_1b806
  br label %dec_label_pc_1b82c

dec_label_pc_1b82c:                               ; preds = %dec_label_pc_1b806.dec_label_pc_1b82c_crit_edge, %bb124
  %v0_1b831 = phi i32 [ %v0_1b831.pre, %dec_label_pc_1b806.dec_label_pc_1b82c_crit_edge ], [ undef, %bb124 ]
  store i32 %v0_1b6b1, i32* %ebx.global-to-local, align 4
  store i32 %v0_1b6b0, i32* %esi.global-to-local, align 4
  ret i32 %v0_1b831

dec_label_pc_1b832:                               ; preds = %dec_label_pc_1b6b0
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp113, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39ac8_type* @global_var_39ac8.3532 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_35d60, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39a68_type* @global_var_39a68.3534 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_399d8_type* @global_var_399d8.3546 to i32), { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b82c, { 1, 0 }
}

define i32 @function_1b856() local_unnamed_addr {
dec_label_pc_1b856:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b85b() local_unnamed_addr {
dec_label_pc_1b85b:
  %v0_1b85b = call i32 @function_2cc8a()
  ret i32 %v0_1b85b
}

define i32 @function_1b860() local_unnamed_addr {
dec_label_pc_1b860:
  %v0_1b860 = call i32 @function_2cdc2()
  ret i32 %v0_1b860
}

define i32 @function_1b865() local_unnamed_addr {
dec_label_pc_1b865:
  %v3_1b87d = load i32, i32* @eax, align 4
  ret i32 %v3_1b87d
}

define i32 @function_1b889() local_unnamed_addr {
dec_label_pc_1b889:
  %v0_1b889 = call i32 @function_2ccbe()
  ret i32 %v0_1b889

; uselistorder directives
  uselistorder i32 ()* @function_2ccbe, { 1, 0 }
}

define i32 @function_1b88e() local_unnamed_addr {
dec_label_pc_1b88e:
  %v0_1b88e = call i32 @function_2cc56()
  ret i32 %v0_1b88e
}

define i32 @function_1b893() local_unnamed_addr {
dec_label_pc_1b893:
  %v0_1b893 = call i32 @function_2cdf6()
  ret i32 %v0_1b893
}

define i32 @function_1b898() local_unnamed_addr {
dec_label_pc_1b898:
  %v0_1b898 = call i32 @function_2ce2a()
  %v0_1b89d = load i32, i32* @ebx, align 4
  %v1_1b89d = add i32 %v0_1b89d, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_1b89d = inttoptr i32 %v1_1b89d to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b89d, align 4
  %v0_1b8a6 = load i32, i32* @ebx, align 4
  %v1_1b8a6 = add i32 %v0_1b8a6, ptrtoint (i32* @global_var_3c.3471 to i32)
  store i32 %v1_1b8a6, i32* @eax, align 4
  %v1_1b8ac = call i32 @function_36630(i32 %v1_1b8a6)
  %v0_1b8b1 = load i32, i32* @ebx, align 4
  %v1_1b8b1 = add i32 %v0_1b8b1, ptrtoint (i32* @global_var_30.3470 to i32)
  store i32 %v1_1b8b1, i32* @eax, align 4
  %v1_1b8b7 = call i32 @function_36230(i32 %v1_1b8b1)
  %v0_1b8bc = load i32, i32* @ebx, align 4
  %v1_1b8bc = add i32 %v0_1b8bc, 36
  store i32 %v1_1b8bc, i32* @eax, align 4
  %v1_1b8c2 = call i32 @function_35eb0(i32 %v1_1b8bc)
  %v0_1b8c7 = load i32, i32* @ebx, align 4
  %v1_1b8c7 = add i32 %v0_1b8c7, ptrtoint (i32* @global_var_18.3278 to i32)
  store i32 %v1_1b8c7, i32* @eax, align 4
  %v1_1b8cd = call i32 @function_35eb0(i32 %v1_1b8c7)
  %v0_1b8d2 = load i32, i32* @ebx, align 4
  %v1_1b8d2 = add i32 %v0_1b8d2, 12
  store i32 %v1_1b8d2, i32* @eax, align 4
  %v1_1b8d8 = call i32 @function_35c30(i32 %v1_1b8d2)
  store i32 %v1_1b8d8, i32* @eax, align 4
  %v0_1b8dd = load i32, i32* @ebx, align 4
  %v1_1b8e0 = call i32 @function_358e0(i32 %v0_1b8dd)
  ret i32 %v1_1b8e0

; uselistorder directives
  uselistorder i32 (i32)* @function_35eb0, { 1, 0 }
}

define i32 @function_1b8ec() local_unnamed_addr {
dec_label_pc_1b8ec:
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1b8ec = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b8ec = add i32 %v0_1b8ec, 1346604486
  %v2_1b8ec = inttoptr i32 %v1_1b8ec to i32*
  %v3_1b8ec = load i32, i32* %v2_1b8ec, align 4
  %v4_1b8ec = add i32 %v3_1b8ec, -1
  store i32 %v4_1b8ec, i32* %v2_1b8ec, align 4
  %v0_1b8f2 = load i32, i32* @eax, align 4
  %v1_1b8f5 = call i32 @function_2f110(i32 %v0_1b8f2)
  %v0_1b8fa = load i32, i32* %esi.global-to-local, align 4
  ret i32 %v0_1b8fa
}

define i32 @function_1b8fe() local_unnamed_addr {
dec_label_pc_1b8fe:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1b900 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b900 = add i32 %v0_1b900, 84
  %v2_1b900 = inttoptr i32 %v1_1b900 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b900, align 4
  %v0_1b907 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b907 = add i32 %v0_1b907, ptrtoint (i8** @global_var_48.3313 to i32)
  store i32 %v1_1b907, i32* @eax, align 4
  %v2_1b90d = call i32 @function_368f0(i32 %v1_1b907)
  ret i32 %v2_1b90d
}

define i32 @function_1b914() local_unnamed_addr {
dec_label_pc_1b914:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1b916 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b916 = add i32 %v0_1b916, 92
  store i32 %v1_1b916, i32* @eax, align 4
  %v1_1b91c = call i32 @function_2f110(i32 %v1_1b916)
  ret i32 %v1_1b91c
}

define i32 @function_1b923() local_unnamed_addr {
dec_label_pc_1b923:
  %v0_1b923 = load i32, i32* @ebx, align 4
  %v1_1b923 = add i32 %v0_1b923, ptrtoint (i32* @global_var_30.3470 to i32)
  %v2_1b923 = inttoptr i32 %v1_1b923 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b923, align 4
  %v0_1b92a = load i32, i32* @eax, align 4
  ret i32 %v0_1b92a
}

define i32 @function_1b92e() local_unnamed_addr {
dec_label_pc_1b92e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b92e = load i32, i32* %eax.global-to-local, align 4
  %v0_1b930 = load i32, i32* @ebx, align 4
  %v1_1b930 = add i32 %v0_1b930, ptrtoint (i32* @global_var_38.3456 to i32)
  store i32 %v1_1b930, i32* @eax, align 4
  %v1_1b936 = call i32 @function_2f110(i32 %v1_1b930)
  store i32 %v0_1b92e, i32* @eax, align 4
  %v0_1b93d = call i32 @function_1b923()
  store i32 %v0_1b93d, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b93d

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1b93f() local_unnamed_addr {
dec_label_pc_1b93f:
  %v0_1b93f = load i32, i32* @ebx, align 4
  %v1_1b93f = add i32 %v0_1b93f, ptrtoint (i32* @global_var_3c.3471 to i32)
  %v2_1b93f = inttoptr i32 %v1_1b93f to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b93f, align 4
  %v0_1b946 = load i32, i32* @eax, align 4
  ret i32 %v0_1b946
}

define i32 @function_1b94d() local_unnamed_addr {
dec_label_pc_1b94d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b94d = load i32, i32* %eax.global-to-local, align 4
  %v0_1b94f = load i32, i32* @ebx, align 4
  %v1_1b94f = add i32 %v0_1b94f, ptrtoint (i32* @global_var_44.3548 to i32)
  store i32 %v1_1b94f, i32* @eax, align 4
  %v1_1b955 = call i32 @function_2f110(i32 %v1_1b94f)
  store i32 %v0_1b94d, i32* @eax, align 4
  %v0_1b95c = call i32 @function_1b93f()
  store i32 %v0_1b95c, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b95c

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1b95e() local_unnamed_addr {
dec_label_pc_1b95e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b96b() local_unnamed_addr {
dec_label_pc_1b96b:
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1b96b = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b96b = add i32 %v0_1b96b, 138644934
  %v2_1b96b = inttoptr i32 %v1_1b96b to i32*
  %v3_1b96b = load i32, i32* %v2_1b96b, align 4
  %v4_1b96b = add i32 %v3_1b96b, -1
  store i32 %v4_1b96b, i32* %v2_1b96b, align 4
  %v0_1b971 = load i32, i32* @eax, align 4
  %v1_1b974 = call i32 @function_2f110(i32 %v0_1b971)
  %v0_1b979 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1b979, i32* @eax, align 4
  %v0_1b97b = call i32 @function_1b95e()
  ret i32 %v0_1b97b
}

define i32 @function_1b97d() local_unnamed_addr {
dec_label_pc_1b97d:
  %v0_1b97d = load i32, i32* @ebx, align 4
  %v1_1b97d = add i32 %v0_1b97d, 12
  %v2_1b97d = inttoptr i32 %v1_1b97d to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b97d, align 4
  %v0_1b984 = load i32, i32* @eax, align 4
  ret i32 %v0_1b984
}

define i32 @function_1b98b() local_unnamed_addr {
dec_label_pc_1b98b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b98b = load i32, i32* %eax.global-to-local, align 4
  %v0_1b98d = load i32, i32* @ebx, align 4
  %v1_1b98d = add i32 %v0_1b98d, 20
  store i32 %v1_1b98d, i32* @eax, align 4
  %v1_1b993 = call i32 @function_2f110(i32 %v1_1b98d)
  store i32 %v0_1b98b, i32* @eax, align 4
  %v0_1b99a = call i32 @function_1b97d()
  store i32 %v0_1b99a, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b99a

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1b99c() local_unnamed_addr {
dec_label_pc_1b99c:
  %v0_1b99c = load i32, i32* @ebx, align 4
  %v1_1b99c = add i32 %v0_1b99c, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_1b99c = inttoptr i32 %v1_1b99c to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b99c, align 4
  %v0_1b9a3 = load i32, i32* @eax, align 4
  ret i32 %v0_1b9a3
}

define i32 @function_1b9aa() local_unnamed_addr {
dec_label_pc_1b9aa:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b9aa = load i32, i32* %eax.global-to-local, align 4
  %v0_1b9ac = load i32, i32* @ebx, align 4
  %v1_1b9ac = add i32 %v0_1b9ac, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_1b9ac, i32* @eax, align 4
  %v1_1b9b2 = call i32 @function_2f110(i32 %v1_1b9ac)
  store i32 %v0_1b9aa, i32* @eax, align 4
  %v0_1b9b9 = call i32 @function_1b99c()
  store i32 %v0_1b9b9, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b9b9

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1b9bb() local_unnamed_addr {
dec_label_pc_1b9bb:
  %v0_1b9bb = load i32, i32* @ebx, align 4
  %v1_1b9bb = add i32 %v0_1b9bb, 36
  %v2_1b9bb = inttoptr i32 %v1_1b9bb to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_1b9bb, align 4
  %v0_1b9c2 = load i32, i32* @eax, align 4
  ret i32 %v0_1b9c2
}

define i32 @function_1b9c9() local_unnamed_addr {
dec_label_pc_1b9c9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b9c9 = load i32, i32* %eax.global-to-local, align 4
  %v0_1b9cb = load i32, i32* @ebx, align 4
  %v1_1b9cb = add i32 %v0_1b9cb, 44
  store i32 %v1_1b9cb, i32* @eax, align 4
  %v1_1b9d1 = call i32 @function_2f110(i32 %v1_1b9cb)
  store i32 %v0_1b9c9, i32* @eax, align 4
  %v0_1b9d8 = call i32 @function_1b9bb()
  store i32 %v0_1b9d8, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b9d8

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_2f110, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNSt6vectorISsSaISsEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b9e0:
  %eax.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp100, i32* @ebp, align 4
  %v1_1ba05 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ba05 = inttoptr i32 %v1_1ba05 to i32*
  %v3_1ba05 = load i32, i32* %v2_1ba05, align 4
  store i32 %v3_1ba05, i32* %eax.global-to-local, align 4
  %v2_1ba08 = inttoptr i32 %arg2 to i32*
  %v3_1ba08 = load i32, i32* %v2_1ba08, align 4
  %v4_1ba08 = sub i32 %v3_1ba05, %v3_1ba08
  store i32 %v4_1ba08, i32* %eax.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v0_1ba11 = load i32, i32* @ebp, align 4
  %v1_1ba11 = add i32 %v0_1ba11, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ba11 = inttoptr i32 %v1_1ba11 to i32*
  store i32 0, i32* %v2_1ba11, align 4
  %v0_1ba18 = load i32, i32* %eax.global-to-local, align 4
  %v2_1ba18 = sdiv i32 %v0_1ba18, 4
  %v0_1ba18.off = add i32 %v0_1ba18, 3
  %tmp111 = icmp ult i32 %v0_1ba18.off, 7
  store i32 %v2_1ba18, i32* @eax, align 4
  %v0_1ba1d = load i32, i32* @ebp, align 4
  %v1_1ba1d = add i32 %v0_1ba1d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1ba1d = inttoptr i32 %v1_1ba1d to i32*
  store i32 0, i32* %v2_1ba1d, align 4
  br i1 %tmp111, label %bb, label %dec_label_pc_1b9e0.dec_label_pc_1ba26_crit_edge

dec_label_pc_1b9e0.dec_label_pc_1ba26_crit_edge:  ; preds = %dec_label_pc_1b9e0
  %v0_1ba26.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ba26

bb:                                               ; preds = %dec_label_pc_1b9e0
  %v2_1ba24 = call i32 @function_1ba40(i32 0)
  store i32 %v2_1ba24, i32* @eax, align 4
  br label %dec_label_pc_1ba26

dec_label_pc_1ba26:                               ; preds = %dec_label_pc_1b9e0.dec_label_pc_1ba26_crit_edge, %bb
  %v0_1ba26 = phi i32 [ %v0_1ba26.pre, %dec_label_pc_1b9e0.dec_label_pc_1ba26_crit_edge ], [ %v2_1ba24, %bb ]
  %tmp112 = icmp ult i32 %v0_1ba26, 1073741824
  br i1 %tmp112, label %dec_label_pc_1ba2d, label %bb110

bb110:                                            ; preds = %dec_label_pc_1ba26
  %v4_1ba2b = call i32 @function_1ba98()
  store i32 %v4_1ba2b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ba2d

dec_label_pc_1ba2d:                               ; preds = %dec_label_pc_1ba26, %bb110
  %v0_1ba2d = phi i32 [ %v0_1ba26, %dec_label_pc_1ba26 ], [ %v4_1ba2b, %bb110 ]
  ret i32 %v0_1ba2d

; uselistorder directives
  uselistorder i32 %v0_1ba26, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1ba2d, { 1, 0 }
  uselistorder label %dec_label_pc_1ba26, { 1, 0 }
}

define i32 @function_1ba40(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ba40:
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_1ba44 = load i32, i32* @esi, align 4
  %v2_1ba44 = add i32 %v0_1ba44, %arg1
  store i32 %v2_1ba44, i32* %esi.global-to-local, align 4
  %v1_1ba46 = load i32, i32* @ebp, align 4
  %v2_1ba46 = inttoptr i32 %v1_1ba46 to i32*
  store i32 %arg1, i32* %v2_1ba46, align 4
  %v0_1ba49 = load i32, i32* @eax, align 4
  %v1_1ba49 = load i32, i32* @ebp, align 4
  %v2_1ba49 = add i32 %v1_1ba49, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1ba49 = inttoptr i32 %v2_1ba49 to i32*
  store i32 %v0_1ba49, i32* %v3_1ba49, align 4
  %v0_1ba4c = load i32, i32* %esi.global-to-local, align 4
  %v1_1ba4c = load i32, i32* @ebp, align 4
  %v2_1ba4c = add i32 %v1_1ba4c, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1ba4c = inttoptr i32 %v2_1ba4c to i32*
  store i32 %v0_1ba4c, i32* %v3_1ba4c, align 4
  %v0_1ba4f = load i32, i32* @ebx, align 4
  %v1_1ba4f = add i32 %v0_1ba4f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ba4f = inttoptr i32 %v1_1ba4f to i32*
  %v3_1ba4f = load i32, i32* %v2_1ba4f, align 4
  store i32 %v0_1ba4f, i32* @esi, align 4
  %v12_1ba54 = icmp eq i32 %v3_1ba4f, %v0_1ba4f
  br i1 %v12_1ba54, label %bb, label %dec_label_pc_1ba40.dec_label_pc_1ba58_crit_edge

dec_label_pc_1ba40.dec_label_pc_1ba58_crit_edge:  ; preds = %dec_label_pc_1ba40
  %v0_1ba58.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ba58

bb:                                               ; preds = %dec_label_pc_1ba40
  %v1_1ba56 = call i32 @function_1ba92()
  br label %dec_label_pc_1ba58

dec_label_pc_1ba58:                               ; preds = %dec_label_pc_1ba40.dec_label_pc_1ba58_crit_edge, %bb
  %v0_1ba58 = phi i32 [ %v0_1ba58.pre, %dec_label_pc_1ba40.dec_label_pc_1ba58_crit_edge ], [ %v1_1ba56, %bb ]
  store i32 %v0_1ba58, i32* @ebx, align 4
  %v1_1ba60 = icmp eq i32 %v0_1ba58, 0
  br i1 %v1_1ba60, label %bb6, label %dec_label_pc_1ba64

bb6:                                              ; preds = %dec_label_pc_1ba58
  %v1_1ba62 = call i32 @function_1ba70()
  br label %dec_label_pc_1ba64

dec_label_pc_1ba64:                               ; preds = %bb6, %dec_label_pc_1ba58
  %v3_1ba68 = phi i32 [ %v1_1ba62, %bb6 ], [ %v0_1ba58, %dec_label_pc_1ba58 ]
  ret i32 %v3_1ba68

; uselistorder directives
  uselistorder i32 %v0_1ba58, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1ba58, { 1, 0 }
}

define i32 @function_1ba70() local_unnamed_addr {
dec_label_pc_1ba70:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_1ba73 = load i32, i32* @ebx, align 4
  %v1_1ba73 = add i32 %v0_1ba73, ptrtoint (i16** @global_var_4.3276 to i32)
  %v1_1ba7e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ba7e = xor i32 %v1_1ba7e, %tmp6
  %v3_1ba7e = icmp eq i32 %v2_1ba7e, 0
  store i32 %v2_1ba7e, i32* @eax, align 4
  %v1_1ba85 = load i32, i32* @ebp, align 4
  %v2_1ba85 = add i32 %v1_1ba85, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1ba85 = inttoptr i32 %v2_1ba85 to i32*
  store i32 %v1_1ba73, i32* %v3_1ba85, align 4
  %v1_1ba88 = icmp eq i1 %v3_1ba7e, false
  br i1 %v1_1ba88, label %bb, label %dec_label_pc_1ba70.dec_label_pc_1ba8a_crit_edge

dec_label_pc_1ba70.dec_label_pc_1ba8a_crit_edge:  ; preds = %dec_label_pc_1ba70
  %v0_1ba91.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ba8a

bb:                                               ; preds = %dec_label_pc_1ba70
  %v2_1ba88 = call i32 @function_1ba9d()
  br label %dec_label_pc_1ba8a

dec_label_pc_1ba8a:                               ; preds = %dec_label_pc_1ba70.dec_label_pc_1ba8a_crit_edge, %bb
  %v0_1ba91 = phi i32 [ %v0_1ba91.pre, %dec_label_pc_1ba70.dec_label_pc_1ba8a_crit_edge ], [ %v2_1ba88, %bb ]
  ret i32 %v0_1ba91

; uselistorder directives
  uselistorder label %dec_label_pc_1ba8a, { 1, 0 }
}

define i32 @function_1ba92() local_unnamed_addr {
dec_label_pc_1ba92:
  %v0_1ba96 = load i32, i32* @eax, align 4
  ret i32 %v0_1ba96
}

define i32 @function_1ba98() local_unnamed_addr {
dec_label_pc_1ba98:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ba9d() local_unnamed_addr {
dec_label_pc_1ba9d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1bacd() local_unnamed_addr {
dec_label_pc_1bacd:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bacd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bacd
}

define i32 @_ZNSt8_Rb_treeI7NetworkS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1baf0:
  %v0_1baf3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg5, i32* @edx, align 4
  %v1_1bb1b = icmp eq i32 %arg3, 0
  store i32 %arg4, i32* @edi, align 4
  br i1 %v1_1bb1b, label %bb, label %dec_label_pc_1bb2f

bb:                                               ; preds = %dec_label_pc_1baf0
  %v2_1bb2d = call i32 @function_1bba0(i32 %v0_1baf3)
  br label %dec_label_pc_1bb2f

dec_label_pc_1bb2f:                               ; preds = %bb, %dec_label_pc_1baf0
  %v2_1bb37 = phi i32 [ %v2_1bb2d, %bb ], [ %arg3, %dec_label_pc_1baf0 ]
  ret i32 %v2_1bb37
}

define i32 @function_1bb6c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1bb6c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1bb6c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bb6c = add i32 %v0_1bb6c, -2095307708
  %v2_1bb6c = inttoptr i32 %v1_1bb6c to i32*
  %v3_1bb6c = load i32, i32* %v2_1bb6c, align 4
  %v4_1bb6c = sub i32 %v3_1bb6c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1bb6c, i32* %v2_1bb6c, align 4
  %v0_1bb72 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bb72 = add i32 %v0_1bb72, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1bb72, i32* %ebx.global-to-local, align 4
  %v0_1bb73 = load i32, i32* %eax.global-to-local, align 4
  %v2_1bb73 = load i1, i1* %cf.global-to-local, align 1
  %v3_1bb73 = zext i1 %v2_1bb73 to i32
  %v4_1bb73 = add i32 %v0_1bb73, zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32)
  %v5_1bb73 = add i32 %v4_1bb73, %v3_1bb73
  %v25_1bb73 = urem i32 %v5_1bb73, 256
  %v27_1bb73 = and i32 %v0_1bb73, -256
  %v28_1bb73 = or i32 %v25_1bb73, %v27_1bb73
  store i32 %v28_1bb73, i32* %eax.global-to-local, align 4
  %v1_1bb79 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1bb79 = icmp eq i32 %v1_1bb79, %arg1
  %v1_1bb80 = load i32, i32* %esi.global-to-local, align 4
  %v2_1bb80 = inttoptr i32 %v1_1bb80 to i32*
  store i32 %v28_1bb73, i32* %v2_1bb80, align 4
  %v0_1bb82 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1bb82, i32* @eax, align 4
  %v1_1bb84 = icmp eq i1 %v3_1bb79, false
  br i1 %v1_1bb84, label %bb, label %dec_label_pc_1bb86

bb:                                               ; preds = %dec_label_pc_1bb6c
  %v2_1bb84 = call i32 @function_1bbb6()
  store i32 %v2_1bb84, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1bb86

dec_label_pc_1bb86:                               ; preds = %bb, %dec_label_pc_1bb6c
  %v0_1bb99 = phi i32 [ %v2_1bb84, %bb ], [ %v0_1bb82, %dec_label_pc_1bb6c ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_1bb96 = load i32, i32* @esp, align 4
  %v5_1bb96 = icmp ugt i32 %v0_1bb96, -77
  store i1 %v5_1bb96, i1* %cf.global-to-local, align 1
  ret i32 %v0_1bb99

; uselistorder directives
  uselistorder i32 %v0_1bb73, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 0 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0 }
}

define i32 @function_1bba0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bba0:
  %v0_1bba0 = load i32, i32* @edi, align 4
  %v1_1bba4 = add i32 %v0_1bba0, 16
  %v2_1bba4 = inttoptr i32 %v1_1bba4 to i32*
  %v3_1bba4 = load i32, i32* %v2_1bba4, align 4
  %v2_1bba7 = load i32, i32* @edx, align 4
  %v4_1bba7 = sub i32 %v2_1bba7, %v3_1bba4
  %v10_1bba7 = xor i32 %v2_1bba7, %v3_1bba4
  %v11_1bba7 = xor i32 %v4_1bba7, %v2_1bba7
  %v12_1bba7 = and i32 %v11_1bba7, %v10_1bba7
  %v13_1bba7 = icmp slt i32 %v12_1bba7, 0
  %v15_1bba7 = icmp slt i32 %v4_1bba7, 0
  %v2_1bba9 = icmp ne i1 %v15_1bba7, %v13_1bba7
  %v3_1bba9 = zext i1 %v2_1bba9 to i32
  %v5_1bba9 = and i32 %v3_1bba4, -256
  %v6_1bba9 = or i32 %v3_1bba9, %v5_1bba9
  %v1_1bbac = and i32 %v6_1bba9, ptrtoint (i8* @global_var_ff.3305 to i32)
  ret i32 %v1_1bbac

; uselistorder directives
  uselistorder i32 %v4_1bba7, { 1, 0 }
  uselistorder i32 %v3_1bba4, { 1, 0, 2 }
}

define i32 @function_1bbb6() local_unnamed_addr {
dec_label_pc_1bbb6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI7NetworkS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_() local_unnamed_addr {
dec_label_pc_1bbc0:
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %v0_1bbc0 = load i32, i32* @ebp, align 4
  %v0_1bbc2 = load i32, i32* @esi, align 4
  %v1_1bbdf = add i32 %tmp22, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1bbdf = inttoptr i32 %v1_1bbdf to i32*
  %v3_1bbdf = load i32, i32* %v2_1bbdf, align 4
  store i32 %v3_1bbdf, i32* @esi, align 4
  %v1_1bbe6 = icmp eq i32 %v3_1bbdf, 0
  br i1 %v1_1bbe6, label %dec_label_pc_1bc47, label %dec_label_pc_1bbea

dec_label_pc_1bbea:                               ; preds = %dec_label_pc_1bbc0
  %v1_1bbee = inttoptr i32 %tmp21 to i32*
  %v2_1bbee = load i32, i32* %v1_1bbee, align 4
  br label %dec_label_pc_1bc06

dec_label_pc_1bbf8:                               ; preds = %dec_label_pc_1bc06
  %v1_1bbf8 = add i32 %v0_1bc1c, 8
  %v2_1bbf8 = inttoptr i32 %v1_1bbf8 to i32*
  %v3_1bbf8 = load i32, i32* %v2_1bbf8, align 4
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* @ebp, align 4
  %v1_1bc00 = icmp eq i32 %v3_1bbf8, 0
  br i1 %v1_1bc00, label %dec_label_pc_1bc16, label %dec_label_pc_1bc04

dec_label_pc_1bc04:                               ; preds = %dec_label_pc_1bbf8, %dec_label_pc_1bc0d
  %v0_1bc04 = phi i32 [ %v3_1bbf8, %dec_label_pc_1bbf8 ], [ %v3_1bc0d, %dec_label_pc_1bc0d ]
  store i32 %v0_1bc04, i32* @esi, align 4
  br label %dec_label_pc_1bc06

dec_label_pc_1bc06:                               ; preds = %dec_label_pc_1bc04, %dec_label_pc_1bbea
  %v0_1bc1c = phi i32 [ %v0_1bc04, %dec_label_pc_1bc04 ], [ %v3_1bbdf, %dec_label_pc_1bbea ]
  %v1_1bc06 = add i32 %v0_1bc1c, 16
  %v2_1bc06 = inttoptr i32 %v1_1bc06 to i32*
  %v3_1bc06 = load i32, i32* %v2_1bc06, align 4
  %v8_1bc0b = icmp slt i32 %v2_1bbee, %v3_1bc06
  br i1 %v8_1bc0b, label %dec_label_pc_1bbf8, label %dec_label_pc_1bc0d

dec_label_pc_1bc0d:                               ; preds = %dec_label_pc_1bc06
  %v1_1bc0d = add i32 %v0_1bc1c, 12
  %v2_1bc0d = inttoptr i32 %v1_1bc0d to i32*
  %v3_1bc0d = load i32, i32* %v2_1bc0d, align 4
  store i32 0, i32* @ebp, align 4
  %v1_1bc12 = icmp eq i32 %v3_1bc0d, 0
  %v1_1bc14 = icmp eq i1 %v1_1bc12, false
  br i1 %v1_1bc14, label %dec_label_pc_1bc04, label %dec_label_pc_1bc16

dec_label_pc_1bc16:                               ; preds = %dec_label_pc_1bbf8, %dec_label_pc_1bc0d
  %v0_1bc1a = phi i8 [ ptrtoint (i8** @global_var_1.3274 to i8), %dec_label_pc_1bbf8 ], [ 0, %dec_label_pc_1bc0d ]
  %v5_1bc1e = icmp eq i8 %v0_1bc1a, 0
  %v1_1bc20 = icmp eq i1 %v5_1bc1e, false
  br i1 %v1_1bc20, label %dec_label_pc_1bc50, label %dec_label_pc_1bc22

dec_label_pc_1bc22:                               ; preds = %dec_label_pc_1bc16
  %v8_1bc26 = icmp sgt i32 %v2_1bbee, %v3_1bc06
  br i1 %v8_1bc26, label %bb, label %dec_label_pc_1bc28

bb:                                               ; preds = %dec_label_pc_1bc22
  %v10_1bc26 = call i32 @function_1bc70(i32 %v3_1bc06)
  %v1_1bc28.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1bc28

dec_label_pc_1bc28:                               ; preds = %bb, %dec_label_pc_1bc22
  %v1_1bc28 = phi i32 [ %v1_1bc28.pre, %bb ], [ %tmp19, %dec_label_pc_1bc22 ]
  %v0_1bc28 = phi i32 [ %v10_1bc26, %bb ], [ %v0_1bc1c, %dec_label_pc_1bc22 ]
  %v2_1bc28 = inttoptr i32 %v1_1bc28 to i32*
  store i32 %v0_1bc28, i32* %v2_1bc28, align 4
  %v0_1bc2a = load i32, i32* @ebx, align 4
  %v1_1bc2a = add i32 %v0_1bc2a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1bc2a = inttoptr i32 %v1_1bc2a to i8*
  store i8 0, i8* %v2_1bc2a, align 1
  %v0_1bc39 = load i32, i32* @ebx, align 4
  store i32 %v0_1bc39, i32* @eax, align 4
  br i1 false, label %bb33, label %dec_label_pc_1bc3d

bb33:                                             ; preds = %dec_label_pc_1bc28
  br label %dec_label_pc_1bc3d

dec_label_pc_1bc3d:                               ; preds = %bb33, %dec_label_pc_1bc28
  store i32 %v0_1bbc2, i32* @esi, align 4
  store i32 %v0_1bbc0, i32* @ebp, align 4
  ret i32 %v0_1bc39

dec_label_pc_1bc47:                               ; preds = %dec_label_pc_1bbc0
  %v1_1bc47 = add i32 %tmp22, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1bc47, i32* @esi, align 4
  br label %dec_label_pc_1bc50

dec_label_pc_1bc50:                               ; preds = %dec_label_pc_1bc47, %dec_label_pc_1bc16
  %v0_1bc50 = phi i32 [ %v1_1bc47, %dec_label_pc_1bc47 ], [ %v0_1bc1c, %dec_label_pc_1bc16 ]
  %v4_1bc5516 = phi i32 [ 0, %dec_label_pc_1bc47 ], [ %v0_1bc1c, %dec_label_pc_1bc16 ]
  %stack_var_-56.0 = phi i32 [ %tmp17, %dec_label_pc_1bc47 ], [ %v3_1bc06, %dec_label_pc_1bc16 ]
  %v2_1bc50 = add i32 %tmp22, 12
  %v3_1bc50 = inttoptr i32 %v2_1bc50 to i32*
  %v4_1bc50 = load i32, i32* %v3_1bc50, align 4
  %v15_1bc50 = icmp eq i32 %v0_1bc50, %v4_1bc50
  br i1 %v15_1bc50, label %bb35, label %dec_label_pc_1bc55

bb35:                                             ; preds = %dec_label_pc_1bc50
  %v2_1bc53 = call i32 @function_1bc70(i32 %stack_var_-56.0)
  br label %dec_label_pc_1bc55

dec_label_pc_1bc55:                               ; preds = %bb35, %dec_label_pc_1bc50
  %v4_1bc55 = phi i32 [ %v2_1bc53, %bb35 ], [ %v4_1bc5516, %dec_label_pc_1bc50 ]
  ret i32 %v4_1bc55

; uselistorder directives
  uselistorder i32 %v3_1bc0d, { 1, 0 }
  uselistorder i32 %v3_1bc06, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1bc1c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v0_1bc04, { 1, 0 }
  uselistorder i32 %v2_1bbee, { 1, 0 }
  uselistorder i32 (i32)* @function_1bc70, { 1, 0 }
  uselistorder label %dec_label_pc_1bc16, { 1, 0 }
  uselistorder label %dec_label_pc_1bc04, { 1, 0 }
}

define i32 @function_1bc70(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bc70:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %v2_1bc74 = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_1bc74, i32* @eax, align 4
  %v0_1bc7b = load i32, i32* @esi, align 4
  %v0_1bc8b = load i32, i32* @edi, align 4
  %v5_1bc8f = call i32 @function_376b0(i32 %v2_1bc74, i32 %v0_1bc8b, i32 0, i32 %v0_1bc7b, i32 %arg1)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v0_1bc9b = load i32, i32* @ebx, align 4
  %v1_1bc9b = add i32 %v0_1bc9b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1bc9b = inttoptr i32 %v1_1bc9b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_1bc9b, align 1
  %v0_1bc9f = load i32, i32* %eax.global-to-local, align 4
  %v1_1bc9f = load i32, i32* @ebx, align 4
  %v2_1bc9f = inttoptr i32 %v1_1bc9f to i32*
  store i32 %v0_1bc9f, i32* %v2_1bc9f, align 4
  %v0_1bca1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bca1
}

define i32 @function_1bca3() local_unnamed_addr {
dec_label_pc_1bca3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZSt8_DestroyIPN5boost11filesystem34pathEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bcb0:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1bcb0 = load i32, i32* %esi.global-to-local, align 4
  %v0_1bcb1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v12_1bcc9 = icmp eq i32 %arg1, %arg2
  br i1 %v12_1bcc9, label %bb, label %dec_label_pc_1bccd

bb:                                               ; preds = %dec_label_pc_1bcb0
  %v0_1bcbd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v4_1bccb = call i32 @function_1bcdf(i32 %v0_1bcbd, i32 %v0_1bcb1, i32 %v0_1bcb0)
  %v0_1bcd0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1bccd

dec_label_pc_1bccd:                               ; preds = %bb, %dec_label_pc_1bcb0
  %v16_1bcd3 = phi i32 [ %v4_1bccb, %bb ], [ 0, %dec_label_pc_1bcb0 ]
  %v0_1bcd0 = phi i32 [ %v0_1bcd0.pre, %bb ], [ %arg1, %dec_label_pc_1bcb0 ]
  %v1_1bcd3 = add i32 %v0_1bcd0, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1bcd3, i32* %ebx.global-to-local, align 4
  ret i32 %v16_1bcd3

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1bcdf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bcdf:
  %v1_1bce3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1bce3 = xor i32 %v1_1bce3, %arg1
  %v3_1bce3 = icmp eq i32 %v2_1bce3, 0
  %v1_1bcea = icmp eq i1 %v3_1bce3, false
  br i1 %v1_1bcea, label %dec_label_pc_1bcf2, label %dec_label_pc_1bcec

dec_label_pc_1bcec:                               ; preds = %dec_label_pc_1bcdf
  store i32 %arg2, i32* @ebx, align 4
  ret i32 %v2_1bce3

dec_label_pc_1bcf2:                               ; preds = %dec_label_pc_1bcdf
  ret i32 %v2_1bce3

; uselistorder directives
  uselistorder i32 %v2_1bce3, { 1, 0, 2 }
}

define i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bd00:
  store i32 %arg1, i32* @ebx, align 4
  %v0_1bd0b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg2, i32* @ebp, align 4
  %v1_1bd1f = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1bd1f = inttoptr i32 %v1_1bd1f to i32*
  %v3_1bd1f = load i32, i32* %v2_1bd1f, align 4
  store i32 %v3_1bd1f, i32* @eax, align 4
  %v2_1bd22 = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1bd22 = inttoptr i32 %v2_1bd22 to i32*
  %v4_1bd22 = load i32, i32* %v3_1bd22, align 4
  %v15_1bd22 = icmp eq i32 %v3_1bd1f, %v4_1bd22
  br i1 %v15_1bd22, label %bb, label %dec_label_pc_1bd2b

bb:                                               ; preds = %dec_label_pc_1bd00
  %v2_1bd25 = call i32 @function_1bdbb(i32 %v0_1bd0b)
  store i32 %v2_1bd25, i32* @eax, align 4
  br label %dec_label_pc_1bd2b

dec_label_pc_1bd2b:                               ; preds = %bb, %dec_label_pc_1bd00
  %v0_1bd2d = phi i32 [ %v2_1bd25, %bb ], [ %v3_1bd1f, %dec_label_pc_1bd00 ]
  store i32 0, i32* @ecx, align 4
  %v1_1bd2d = icmp eq i32 %v0_1bd2d, 0
  br i1 %v1_1bd2d, label %bb13, label %dec_label_pc_1bd31

bb13:                                             ; preds = %dec_label_pc_1bd2b
  %v1_1bd2f = call i32 @function_1bd4b()
  br label %dec_label_pc_1bd31

dec_label_pc_1bd31:                               ; preds = %bb13, %dec_label_pc_1bd2b
  %v0_1bd31 = phi i32 [ %v1_1bd2f, %bb13 ], [ %v0_1bd2d, %dec_label_pc_1bd2b ]
  ret i32 %v0_1bd31

; uselistorder directives
  uselistorder i32 %v3_1bd1f, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1bd4b() local_unnamed_addr {
dec_label_pc_1bd4b:
  %v0_1bd4b = load i32, i32* @ecx, align 4
  %v1_1bd4b = add i32 %v0_1bd4b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v1_1bd4e = load i32, i32* @ebx, align 4
  %v2_1bd4e = add i32 %v1_1bd4e, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1bd4e = inttoptr i32 %v2_1bd4e to i32*
  store i32 %v1_1bd4b, i32* %v3_1bd4e, align 4
  %v4_1bd59 = load i32, i32* @eax, align 4
  ret i32 %v4_1bd59
}

define i32 @function_1bd60() local_unnamed_addr {
dec_label_pc_1bd60:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1bd60 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1bd60 = add i32 %v0_1bd60, -394066877
  %v2_1bd60 = inttoptr i32 %v1_1bd60 to i32*
  %v3_1bd60 = load i32, i32* %v2_1bd60, align 4
  %v4_1bd60 = sub i32 %v3_1bd60, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1bd60, i32* %v2_1bd60, align 4
  %v0_1bd66 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1bd66 = add i32 %v0_1bd66, -1041356346
  %v2_1bd66 = inttoptr i32 %v1_1bd66 to i8*
  %v3_1bd66 = load i8, i8* %v2_1bd66, align 1
  %v5_1bd66 = trunc i32 %v0_1bd66 to i8
  %v6_1bd66 = or i8 %v3_1bd66, %v5_1bd66
  store i8 %v6_1bd66, i8* %v2_1bd66, align 1
  %v2_1bd6c = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v3_1bd6c = add i8 %v2_1bd6c, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_1bd6c = load i32, i32* %edx.global-to-local, align 4
  %v17_1bd6c = inttoptr i32 %v16_1bd6c to i8*
  store i8 %v3_1bd6c, i8* %v17_1bd6c, align 1
  %v0_1bd6e = load i32, i32* %esi.global-to-local, align 4
  %v1_1bd6e = icmp eq i32 %v0_1bd6e, 0
  %v2_1bd6e = icmp slt i32 %v0_1bd6e, 0
  %v3_1bd70 = icmp eq i1 %v2_1bd6e, false
  %v4_1bd70 = icmp eq i1 %v1_1bd6e, false
  %v5_1bd70 = icmp eq i1 %v3_1bd70, %v4_1bd70
  br i1 %v5_1bd70, label %dec_label_pc_1bd7a, label %dec_label_pc_1bd72

dec_label_pc_1bd72:                               ; preds = %dec_label_pc_1bd60
  %v0_1bd72 = call i32 @function_1bd8e()
  ret i32 %v0_1bd72

dec_label_pc_1bd7a:                               ; preds = %dec_label_pc_1bd60
  %v0_1bd7a = load i32, i32* @eax, align 4
  %v1_1bd7a = add i32 %v0_1bd7a, -4
  store i32 %v1_1bd7a, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1bd7a

; uselistorder directives
  uselistorder i32 %v0_1bd6e, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1bd8e() local_unnamed_addr {
dec_label_pc_1bd8e:
  %v3_1bd92 = load i32, i32* @eax, align 4
  ret i32 %v3_1bd92
}

define i32 @function_1bda2() local_unnamed_addr {
dec_label_pc_1bda2:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_1bda6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1bda6 = icmp eq i32 %v1_1bda6, %tmp10
  %v1_1bdad = icmp eq i1 %v3_1bda6, false
  br i1 %v1_1bdad, label %bb, label %dec_label_pc_1bda2.dec_label_pc_1bdb3_crit_edge

dec_label_pc_1bda2.dec_label_pc_1bdb3_crit_edge:  ; preds = %dec_label_pc_1bda2
  %v0_1bdba.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1bdb3

bb:                                               ; preds = %dec_label_pc_1bda2
  %v2_1bdad = call i32 @function_1beb0()
  br label %dec_label_pc_1bdb3

dec_label_pc_1bdb3:                               ; preds = %dec_label_pc_1bda2.dec_label_pc_1bdb3_crit_edge, %bb
  %v0_1bdba = phi i32 [ %v2_1bdad, %bb ], [ %v0_1bdba.pre, %dec_label_pc_1bda2.dec_label_pc_1bdb3_crit_edge ]
  ret i32 %v0_1bdba

; uselistorder directives
  uselistorder label %dec_label_pc_1bdb3, { 1, 0 }
}

define i32 @function_1bdbb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bdbb:
  %v2_1bdbb = load i32, i32* @ebx, align 4
  store i32 %v2_1bdbb, i32* @ecx, align 4
  %v0_1bdbd = load i32, i32* @eax, align 4
  %v2_1bdbd = sub i32 %v0_1bdbd, %v2_1bdbb
  %v2_1bdbf = sdiv i32 %v2_1bdbd, 4
  %v2_1bdbd.off = add i32 %v2_1bdbd, 3
  %tmp6 = icmp ult i32 %v2_1bdbd.off, 7
  store i32 %v2_1bdbf, i32* @eax, align 4
  br i1 %tmp6, label %bb, label %dec_label_pc_1bdca

bb:                                               ; preds = %dec_label_pc_1bdbb
  %v1_1bdc4 = call i32 @function_1be75()
  store i32 %v1_1bdc4, i32* @eax, align 4
  %v1_1bdcc.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1bdca

dec_label_pc_1bdca:                               ; preds = %bb, %dec_label_pc_1bdbb
  %v0_1bdd4 = phi i32 [ %v1_1bdc4, %bb ], [ %v2_1bdbf, %dec_label_pc_1bdbb ]
  %v1_1bdcc = phi i32 [ %v1_1bdcc.pre, %bb ], [ %v2_1bdbb, %dec_label_pc_1bdbb ]
  %v0_1bdca = load i32, i32* @ebp, align 4
  %v2_1bdcc = sub i32 %v0_1bdca, %v1_1bdcc
  %v3_1bdce = mul i32 %v0_1bdd4, 2
  %v2_1bdd1 = sdiv i32 %v2_1bdcc, 4
  store i32 %v2_1bdd1, i32* @edi, align 4
  %v2_1bdd4 = mul i32 %v0_1bdd4, -1
  %v7_1bdd4 = icmp ult i32 %v0_1bdd4, %v3_1bdce
  %v12_1bdd4 = icmp eq i32 %v2_1bdd4, 0
  %v2_1bdd6 = or i1 %v7_1bdd4, %v12_1bdd4
  br i1 %v2_1bdd6, label %bb5, label %dec_label_pc_1bddc

bb5:                                              ; preds = %dec_label_pc_1bdca
  %v3_1bdd6 = call i32 @function_1be91()
  br label %dec_label_pc_1bddc

dec_label_pc_1bddc:                               ; preds = %bb5, %dec_label_pc_1bdca
  ret i32 -4

; uselistorder directives
  uselistorder i32 %v0_1bdd4, { 2, 1, 0 }
  uselistorder i32 %v2_1bdbf, { 1, 0 }
}

define i32 @function_1bdfb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bdfb:
  %v0_1bdfb = load i32, i32* @esi, align 4
  %v1_1bdfb = load i32, i32* @edi, align 4
  %v2_1bdfb = mul i32 %v1_1bdfb, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1bdfb = sub i32 0, %v0_1bdfb
  %v1_1bdfe = icmp eq i32 %v2_1bdfb, %v3_1bdfb
  br i1 %v1_1bdfe, label %bb, label %dec_label_pc_1bdfb.dec_label_pc_1be02_crit_edge

dec_label_pc_1bdfb.dec_label_pc_1be02_crit_edge:  ; preds = %dec_label_pc_1bdfb
  %v3_1be06.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1be02

bb:                                               ; preds = %dec_label_pc_1bdfb
  %v1_1be00 = call i32 @function_1be0e()
  br label %dec_label_pc_1be02

dec_label_pc_1be02:                               ; preds = %dec_label_pc_1bdfb.dec_label_pc_1be02_crit_edge, %bb
  %v3_1be06 = phi i32 [ %v3_1be06.pre, %dec_label_pc_1bdfb.dec_label_pc_1be02_crit_edge ], [ %v1_1be00, %bb ]
  ret i32 %v3_1be06

; uselistorder directives
  uselistorder label %dec_label_pc_1be02, { 1, 0 }
}

define i32 @function_1be0e() local_unnamed_addr {
dec_label_pc_1be0e:
  %v2_1be0e = load i32, i32* @ebx, align 4
  store i32 %v2_1be0e, i32* @eax, align 4
  %v0_1be10 = load i32, i32* @esi, align 4
  store i32 %v0_1be10, i32* @ecx, align 4
  %v0_1be12 = load i32, i32* @ebp, align 4
  store i32 %v0_1be12, i32* @edx, align 4
  %v2_1be14 = call i32 @function_1c940(i32* nonnull @0)
  %v0_1be19 = load i32, i32* @ebx, align 4
  %v1_1be19 = add i32 %v0_1be19, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1be19 = inttoptr i32 %v1_1be19 to i32*
  %v3_1be19 = load i32, i32* %v2_1be19, align 4
  store i32 %v3_1be19, i32* @edx, align 4
  %v1_1be1c = add i32 %v2_1be14, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1be1c, i32* @ecx, align 4
  %v0_1be25 = load i32, i32* @ebp, align 4
  store i32 %v0_1be25, i32* @eax, align 4
  %tmp7 = inttoptr i32 %v1_1be1c to i32*
  %v3_1be27 = call i32 @function_1c940(i32* %tmp7)
  store i32 %v3_1be27, i32* @eax, align 4
  %v0_1be2c = load i32, i32* @ebx, align 4
  %v1_1be2c = add i32 %v0_1be2c, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1be2c = inttoptr i32 %v1_1be2c to i32*
  %v3_1be2c = load i32, i32* %v2_1be2c, align 4
  store i32 %v0_1be2c, i32* @edi, align 4
  %v12_1be35 = icmp eq i32 %v3_1be2c, %v0_1be2c
  br i1 %v12_1be35, label %bb, label %dec_label_pc_1be39

bb:                                               ; preds = %dec_label_pc_1be0e
  %v3_1be37 = call i32 @function_1be51(i32 %v3_1be27)
  br label %dec_label_pc_1be39

dec_label_pc_1be39:                               ; preds = %bb, %dec_label_pc_1be0e
  %v16_1be43 = phi i32 [ %v3_1be37, %bb ], [ %v3_1be27, %dec_label_pc_1be0e ]
  ret i32 %v16_1be43
}

define i32 @function_1be51(i32 %arg1) local_unnamed_addr {
dec_label_pc_1be51:
  %v0_1be51 = load i32, i32* @edi, align 4
  %v1_1be51 = icmp eq i32 %v0_1be51, 0
  br i1 %v1_1be51, label %bb, label %dec_label_pc_1be51.dec_label_pc_1be55_crit_edge

dec_label_pc_1be51.dec_label_pc_1be55_crit_edge:  ; preds = %dec_label_pc_1be51
  %v3_1be55.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1be55

bb:                                               ; preds = %dec_label_pc_1be51
  %v1_1be53 = call i32 @function_1be5d()
  br label %dec_label_pc_1be55

dec_label_pc_1be55:                               ; preds = %dec_label_pc_1be51.dec_label_pc_1be55_crit_edge, %bb
  %v3_1be55 = phi i32 [ %v3_1be55.pre, %dec_label_pc_1be51.dec_label_pc_1be55_crit_edge ], [ %v1_1be53, %bb ]
  ret i32 %v3_1be55

; uselistorder directives
  uselistorder label %dec_label_pc_1be55, { 1, 0 }
}

define i32 @function_1be5d() local_unnamed_addr {
dec_label_pc_1be5d:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1be65 = load i32, i32* @esi, align 4
  %v1_1be65 = load i32, i32* @ebx, align 4
  %v2_1be65 = inttoptr i32 %v1_1be65 to i32*
  store i32 %v0_1be65, i32* %v2_1be65, align 4
  %v0_1be67 = load i32, i32* %eax.global-to-local, align 4
  %v1_1be67 = load i32, i32* @ebx, align 4
  %v2_1be67 = add i32 %v1_1be67, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1be67 = inttoptr i32 %v2_1be67 to i32*
  store i32 %v0_1be67, i32* %v3_1be67, align 4
  %v0_1be6a = load i32, i32* @esi, align 4
  %v1_1be6a = load i32, i32* %edx.global-to-local, align 4
  %v2_1be6a = mul i32 %v1_1be6a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1be6a = add i32 %v2_1be6a, %v0_1be6a
  store i32 %v3_1be6a, i32* @eax, align 4
  %v1_1be6d = load i32, i32* @ebx, align 4
  %v2_1be6d = add i32 %v1_1be6d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1be6d = inttoptr i32 %v2_1be6d to i32*
  store i32 %v3_1be6a, i32* %v3_1be6d, align 4
  %v0_1be70 = call i32 @function_1bda2()
  store i32 %v0_1be70, i32* %eax.global-to-local, align 4
  ret i32 %v0_1be70
}

define i32 @function_1be75() local_unnamed_addr {
dec_label_pc_1be75:
  ret i32 mul (i32 ptrtoint (i8** @global_var_1.3274 to i32), i32 ptrtoint (i16** @global_var_4.3276 to i32))
}

define i32 @function_1be91() local_unnamed_addr {
dec_label_pc_1be91:
  store i32 0, i32* @esi, align 4
  %v1_1beab = call i32 @function_1bdfb(i32 0)
  ret i32 %v1_1beab
}

define i32 @function_1beb0() local_unnamed_addr {
dec_label_pc_1beb0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1beb6() local_unnamed_addr {
dec_label_pc_1beb6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1beb6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1beb6
}

define i32 @function_1bec7(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bec7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1bee7() local_unnamed_addr {
dec_label_pc_1bee7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1bf08() local_unnamed_addr {
dec_label_pc_1bf08:
  %v0_1bf08 = call i32 @function_1bee7()
  ret i32 %v0_1bf08
}

define i32 @function_1bf0b() local_unnamed_addr {
dec_label_pc_1bf0b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bf0b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bf0b
}

define i32 @function_1bf19() local_unnamed_addr {
dec_label_pc_1bf19:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_1bf1d = call i32 @function_1bec7(i32 %tmp92)
  ret i32 %v1_1bf1d
}

define i32 @_ZNSt6vectorIN5boost11filesystem34pathESaIS2_EEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bf20:
  %eax.global-to-local = alloca i32, align 4
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* @esi, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp4, i32* @ebp, align 4
  %v1_1bf45 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1bf45 = inttoptr i32 %v1_1bf45 to i32*
  %v3_1bf45 = load i32, i32* %v2_1bf45, align 4
  store i32 %v3_1bf45, i32* %eax.global-to-local, align 4
  %v2_1bf48 = inttoptr i32 %arg2 to i32*
  %v3_1bf48 = load i32, i32* %v2_1bf48, align 4
  %v4_1bf48 = sub i32 %v3_1bf45, %v3_1bf48
  store i32 %v4_1bf48, i32* %eax.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v0_1bf51 = load i32, i32* @ebp, align 4
  %v1_1bf51 = add i32 %v0_1bf51, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1bf51 = inttoptr i32 %v1_1bf51 to i32*
  store i32 0, i32* %v2_1bf51, align 4
  %v0_1bf58 = load i32, i32* %eax.global-to-local, align 4
  %v2_1bf58 = sdiv i32 %v0_1bf58, 4
  %v0_1bf58.off = add i32 %v0_1bf58, 3
  %tmp15 = icmp ult i32 %v0_1bf58.off, 7
  store i32 %v2_1bf58, i32* @eax, align 4
  %v0_1bf5d = load i32, i32* @ebp, align 4
  %v1_1bf5d = add i32 %v0_1bf5d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1bf5d = inttoptr i32 %v1_1bf5d to i32*
  store i32 0, i32* %v2_1bf5d, align 4
  br i1 %tmp15, label %bb, label %dec_label_pc_1bf20.dec_label_pc_1bf66_crit_edge

dec_label_pc_1bf20.dec_label_pc_1bf66_crit_edge:  ; preds = %dec_label_pc_1bf20
  %v0_1bf66.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1bf66

bb:                                               ; preds = %dec_label_pc_1bf20
  %v2_1bf64 = call i32 @function_1bf80(i32 0)
  store i32 %v2_1bf64, i32* @eax, align 4
  br label %dec_label_pc_1bf66

dec_label_pc_1bf66:                               ; preds = %dec_label_pc_1bf20.dec_label_pc_1bf66_crit_edge, %bb
  %v0_1bf66 = phi i32 [ %v0_1bf66.pre, %dec_label_pc_1bf20.dec_label_pc_1bf66_crit_edge ], [ %v2_1bf64, %bb ]
  %tmp16 = icmp ult i32 %v0_1bf66, 1073741824
  br i1 %tmp16, label %dec_label_pc_1bf6d, label %bb14

bb14:                                             ; preds = %dec_label_pc_1bf66
  %v4_1bf6b = call i32 @function_1bfd8()
  store i32 %v4_1bf6b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1bf6d

dec_label_pc_1bf6d:                               ; preds = %dec_label_pc_1bf66, %bb14
  %v0_1bf6d = phi i32 [ %v0_1bf66, %dec_label_pc_1bf66 ], [ %v4_1bf6b, %bb14 ]
  %v1_1bf6d = mul i32 %v0_1bf6d, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1bf6d, i32* @esi, align 4
  ret i32 %v0_1bf6d

; uselistorder directives
  uselistorder i32 %v0_1bf6d, { 1, 0 }
  uselistorder i32 %v0_1bf66, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1bf6d, { 1, 0 }
  uselistorder label %dec_label_pc_1bf66, { 1, 0 }
}

define i32 @function_1bf80(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bf80:
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  %v0_1bf84 = load i32, i32* @esi, align 4
  %v2_1bf84 = add i32 %v0_1bf84, %arg1
  store i32 %v2_1bf84, i32* %esi.global-to-local, align 4
  %v1_1bf86 = load i32, i32* @ebp, align 4
  %v2_1bf86 = inttoptr i32 %v1_1bf86 to i32*
  store i32 %arg1, i32* %v2_1bf86, align 4
  %v0_1bf89 = load i32, i32* @eax, align 4
  %v1_1bf89 = load i32, i32* @ebp, align 4
  %v2_1bf89 = add i32 %v1_1bf89, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1bf89 = inttoptr i32 %v2_1bf89 to i32*
  store i32 %v0_1bf89, i32* %v3_1bf89, align 4
  %v0_1bf8c = load i32, i32* %esi.global-to-local, align 4
  %v1_1bf8c = load i32, i32* @ebp, align 4
  %v2_1bf8c = add i32 %v1_1bf8c, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1bf8c = inttoptr i32 %v2_1bf8c to i32*
  store i32 %v0_1bf8c, i32* %v3_1bf8c, align 4
  %v0_1bf8f = load i32, i32* @ebx, align 4
  %v1_1bf8f = add i32 %v0_1bf8f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1bf8f = inttoptr i32 %v1_1bf8f to i32*
  %v3_1bf8f = load i32, i32* %v2_1bf8f, align 4
  store i32 %v3_1bf8f, i32* @edi, align 4
  store i32 %v0_1bf8f, i32* @esi, align 4
  %v12_1bf94 = icmp eq i32 %v3_1bf8f, %v0_1bf8f
  br i1 %v12_1bf94, label %bb, label %dec_label_pc_1bf80.dec_label_pc_1bf98_crit_edge

dec_label_pc_1bf80.dec_label_pc_1bf98_crit_edge:  ; preds = %dec_label_pc_1bf80
  %v0_1bf98.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1bf98

bb:                                               ; preds = %dec_label_pc_1bf80
  %v1_1bf96 = call i32 @function_1bfd2()
  br label %dec_label_pc_1bf98

dec_label_pc_1bf98:                               ; preds = %dec_label_pc_1bf80.dec_label_pc_1bf98_crit_edge, %bb
  %v0_1bf98 = phi i32 [ %v0_1bf98.pre, %dec_label_pc_1bf80.dec_label_pc_1bf98_crit_edge ], [ %v1_1bf96, %bb ]
  store i32 %v0_1bf98, i32* @ebx, align 4
  %v1_1bfa0 = icmp eq i32 %v0_1bf98, 0
  br i1 %v1_1bfa0, label %bb6, label %dec_label_pc_1bfa4

bb6:                                              ; preds = %dec_label_pc_1bf98
  %v1_1bfa2 = call i32 @function_1bfb0()
  br label %dec_label_pc_1bfa4

dec_label_pc_1bfa4:                               ; preds = %bb6, %dec_label_pc_1bf98
  %v3_1bfa8 = phi i32 [ %v1_1bfa2, %bb6 ], [ %v0_1bf98, %dec_label_pc_1bf98 ]
  ret i32 %v3_1bfa8

; uselistorder directives
  uselistorder i32 %v0_1bf98, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1bf98, { 1, 0 }
}

define i32 @function_1bfb0() local_unnamed_addr {
dec_label_pc_1bfb0:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_1bfb3 = load i32, i32* @ebx, align 4
  %v1_1bfb3 = add i32 %v0_1bfb3, ptrtoint (i16** @global_var_4.3276 to i32)
  %v1_1bfbe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1bfbe = xor i32 %v1_1bfbe, %tmp6
  %v3_1bfbe = icmp eq i32 %v2_1bfbe, 0
  store i32 %v2_1bfbe, i32* @eax, align 4
  %v1_1bfc5 = load i32, i32* @ebp, align 4
  %v2_1bfc5 = add i32 %v1_1bfc5, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1bfc5 = inttoptr i32 %v2_1bfc5 to i32*
  store i32 %v1_1bfb3, i32* %v3_1bfc5, align 4
  %v1_1bfc8 = icmp eq i1 %v3_1bfbe, false
  br i1 %v1_1bfc8, label %bb, label %dec_label_pc_1bfb0.dec_label_pc_1bfca_crit_edge

dec_label_pc_1bfb0.dec_label_pc_1bfca_crit_edge:  ; preds = %dec_label_pc_1bfb0
  %v0_1bfd1.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1bfca

bb:                                               ; preds = %dec_label_pc_1bfb0
  %v2_1bfc8 = call i32 @function_1bfdd()
  br label %dec_label_pc_1bfca

dec_label_pc_1bfca:                               ; preds = %dec_label_pc_1bfb0.dec_label_pc_1bfca_crit_edge, %bb
  %v0_1bfd1 = phi i32 [ %v0_1bfd1.pre, %dec_label_pc_1bfb0.dec_label_pc_1bfca_crit_edge ], [ %v2_1bfc8, %bb ]
  ret i32 %v0_1bfd1

; uselistorder directives
  uselistorder label %dec_label_pc_1bfca, { 1, 0 }
}

define i32 @function_1bfd2() local_unnamed_addr {
dec_label_pc_1bfd2:
  %v0_1bfd6 = load i32, i32* @eax, align 4
  ret i32 %v0_1bfd6
}

define i32 @function_1bfd8() local_unnamed_addr {
dec_label_pc_1bfd8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1bfdd() local_unnamed_addr {
dec_label_pc_1bfdd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c000() local_unnamed_addr {
dec_label_pc_1c000:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c000 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c000
}

define i32 @_ZN5boost6threadC1INS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEEET_NS_10disable_ifINS_14is_convertibleIRSG_NS_6detail13thread_move_tISG_EEEEPNS0_5dummyEE4typeE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1c020:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg2 to i32
  %v2_1c02b = ptrtoint i32* %stack_var_-68 to i32
  %v2_1c040 = ptrtoint i32* %stack_var_-52 to i32
  %v2_1c044 = load i32, i32* %arg2, align 4
  %v1_1c046 = add i32 %tmp105, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1c046, i32* @eax, align 4
  %v3_1c054 = call i32 @function_37f40(i32 %v2_1c02b, i32 %v1_1c046)
  store i32 %v2_1c044, i32* @eax, align 4
  %v3_1c068 = call i32 @function_37f40(i32 %v2_1c040, i32 %v2_1c02b)
  ret i32 %v3_1c068

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_37f40, { 1, 0 }
}

define i32 @function_1c07a() local_unnamed_addr {
dec_label_pc_1c07a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c07a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c07a
}

define i32 @function_1c149(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c149:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c16a() local_unnamed_addr {
dec_label_pc_1c16a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c16a = load i32, i32* %eax.global-to-local, align 4
  %v11_1c16a = and i32 %v0_1c16a, or (i32 zext (i8 ptrtoint (i8* @global_var_83.3312 to i8) to i32), i32 -256)
  store i32 %v11_1c16a, i32* %eax.global-to-local, align 4
  ret i32 %v11_1c16a

; uselistorder directives
  uselistorder i32 %v11_1c16a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1c18e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c18e:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1c18e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c18e = add i32 %v0_1c18e, 1699488852
  %v2_1c18e = inttoptr i32 %v1_1c18e to i32*
  %v3_1c18e = load i32, i32* %v2_1c18e, align 4
  %v4_1c18e = add i32 %v3_1c18e, -1
  store i32 %v4_1c18e, i32* %v2_1c18e, align 4
  %v0_1c194 = load i32, i32* %edx.global-to-local, align 4
  %v1_1c194 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c194 = xor i32 %v1_1c194, %v0_1c194
  %v3_1c194 = icmp eq i32 %v2_1c194, 0
  store i32 %v2_1c194, i32* %edx.global-to-local, align 4
  %v1_1c19a = icmp eq i1 %v3_1c194, false
  br i1 %v1_1c19a, label %bb, label %dec_label_pc_1c18e.dec_label_pc_1c1a0_crit_edge

dec_label_pc_1c18e.dec_label_pc_1c1a0_crit_edge:  ; preds = %dec_label_pc_1c18e
  %v0_1c1a7.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1c1a0

bb:                                               ; preds = %dec_label_pc_1c18e
  %v2_1c19a = call i32 @function_1c22a()
  br label %dec_label_pc_1c1a0

dec_label_pc_1c1a0:                               ; preds = %dec_label_pc_1c18e.dec_label_pc_1c1a0_crit_edge, %bb
  %v0_1c1a7 = phi i32 [ %v0_1c1a7.pre, %dec_label_pc_1c18e.dec_label_pc_1c1a0_crit_edge ], [ %v2_1c19a, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1c1a7

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_1c1a0, { 1, 0 }
}

define i32 @function_1c1a8() local_unnamed_addr {
dec_label_pc_1c1a8:
  %v2_1c1a8 = load i32, i32* @eax, align 4
  %v1_1c1b0 = call i32 @function_1c149(i32 %v2_1c1a8)
  ret i32 %v1_1c1b0
}

define i32 @function_1c1b3() local_unnamed_addr {
dec_label_pc_1c1b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c1b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c1b3
}

define i32 @function_1c1c0() local_unnamed_addr {
dec_label_pc_1c1c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c1cb() local_unnamed_addr {
dec_label_pc_1c1cb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c1fa() local_unnamed_addr {
dec_label_pc_1c1fa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c203() local_unnamed_addr {
dec_label_pc_1c203:
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c203 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c203 = add i32 %v0_1c203, -1259854796
  %v2_1c203 = inttoptr i32 %v1_1c203 to i32*
  %v3_1c203 = load i32, i32* %v2_1c203, align 4
  %v4_1c203 = sub i32 %v3_1c203, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1c203, i32* %v2_1c203, align 4
  store i32 0, i32* @eax, align 4
  %v0_1c20c = call i32 @function_1c1cb()
  ret i32 %v0_1c20c
}

define i32 @function_1c20f() local_unnamed_addr {
dec_label_pc_1c20f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c20f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c20f
}

define i32 @function_1c215() local_unnamed_addr {
dec_label_pc_1c215:
  %v0_1c215 = call i32 @function_1c1cb()
  ret i32 %v0_1c215
}

define i32 @function_1c217() local_unnamed_addr {
dec_label_pc_1c217:
  %v0_1c219 = call i32 @function_1c1fa()
  ret i32 %v0_1c219
}

define i32 @function_1c21b() local_unnamed_addr {
dec_label_pc_1c21b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c21b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c21b
}

define i32 @function_1c222() local_unnamed_addr {
dec_label_pc_1c222:
  %v0_1c224 = call i32 @function_1c1cb()
  ret i32 %v0_1c224

; uselistorder directives
  uselistorder i32 ()* @function_1c1cb, { 2, 1, 0 }
}

define i32 @function_1c226() local_unnamed_addr {
dec_label_pc_1c226:
  %v0_1c228 = call i32 @function_1c1c0()
  ret i32 %v0_1c228
}

define i32 @function_1c22a() local_unnamed_addr {
dec_label_pc_1c22a:
  %v1_1c22a = load i32, i32* @eax, align 4
  ret i32 %v1_1c22a
}

define i32 @function_1c236() local_unnamed_addr {
dec_label_pc_1c236:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c236 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c236
}

define i32 @_ZN5boost12thread_group13create_threadINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEEEPNS_6threadET_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1c250:
  %stack_var_-52 = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* @edi, align 4
  %v2_1c25b = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1c25b, i32* @esi, align 4
  %v2_1c263 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1c263, i32* @ebp, align 4
  %v1_1c276 = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_1c276, i32* @eax, align 4
  %v4_1c27d = call i32 @function_32360(i32 %v2_1c25b, i32 %v1_1c276)
  %v2_1c282 = load i32, i32* %arg2, align 4
  store i32 %v2_1c282, i32* @eax, align 4
  %v1_1c284 = add i32 %tmp6, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1c284, i32* @ebx, align 4
  %v4_1c292 = call i32 @function_38170(i32 %v2_1c263, i32 %v1_1c284)
  ret i32 %v4_1c292
}

define i32 @function_1c2a4() local_unnamed_addr {
dec_label_pc_1c2a4:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c2a4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c2a4
}

define i32 @function_1c2d2() local_unnamed_addr {
dec_label_pc_1c2d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c2d2 = load i32, i32* %eax.global-to-local, align 4
  %v11_1c2d2 = and i32 %v0_1c2d2, or (i32 zext (i8 ptrtoint (i8* @global_var_83.3312 to i8) to i32), i32 -256)
  store i32 %v11_1c2d2, i32* %eax.global-to-local, align 4
  ret i32 %v11_1c2d2

; uselistorder directives
  uselistorder i32 %v11_1c2d2, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1c312(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1c312:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1c312 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c312 = add i32 %v0_1c312, -1993857956
  %v2_1c312 = inttoptr i32 %v1_1c312 to i32*
  %v3_1c312 = load i32, i32* %v2_1c312, align 4
  %v4_1c312 = sub i32 %v3_1c312, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1c312, i32* %v2_1c312, align 4
  %v0_1c318 = load i32, i32* %eax.global-to-local, align 4
  %v11_1c318 = xor i32 %v0_1c318, 36
  store i32 %v11_1c318, i32* @eax, align 4
  %v1_1c322 = call i32 @function_31ee0(i32 0)
  store i32 %v1_1c322, i32* %eax.global-to-local, align 4
  %v1_1c32b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1c32b = icmp eq i32 %v1_1c32b, %arg1
  %v0_1c332 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1c332, i32* %eax.global-to-local, align 4
  %v1_1c334 = icmp eq i1 %v3_1c32b, false
  br i1 %v1_1c334, label %dec_label_pc_1c33e, label %dec_label_pc_1c336

dec_label_pc_1c336:                               ; preds = %dec_label_pc_1c312
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1c332

dec_label_pc_1c33e:                               ; preds = %dec_label_pc_1c312
  ret i32 %v0_1c332

; uselistorder directives
  uselistorder i32 %v0_1c332, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_1c344() local_unnamed_addr {
dec_label_pc_1c344:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c344 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c344
}

define i32 @function_1c351() local_unnamed_addr {
dec_label_pc_1c351:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c36c() local_unnamed_addr {
dec_label_pc_1c36c:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1c36c = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c36c = add i32 %v0_1c36c, 2078811180
  %v2_1c36c = inttoptr i32 %v1_1c36c to i32*
  %v3_1c36c = load i32, i32* %v2_1c36c, align 4
  %v4_1c36c = add i32 %v3_1c36c, -1
  store i32 %v4_1c36c, i32* %v2_1c36c, align 4
  %v0_1c372 = load i32, i32* %edx.global-to-local, align 4
  %v1_1c372 = trunc i32 %v0_1c372 to i16
  %v2_1c372 = call i8 @__asm_insb(i16 %v1_1c372)
  %v3_1c372 = load i32, i32* %edi.global-to-local, align 4
  %v4_1c372 = inttoptr i32 %v3_1c372 to i8*
  store i8 %v2_1c372, i8* %v4_1c372, align 1
  %v2_1c373 = load i32, i32* @eax, align 4
  %v4_1c373 = mul i32 %v2_1c373, 2
  %v21_1c373 = inttoptr i32 %v2_1c373 to i32*
  store i32 %v4_1c373, i32* %v21_1c373, align 4
  %v0_1c375 = call i32 @function_1c351()
  ret i32 %v0_1c375

; uselistorder directives
  uselistorder i32 %v2_1c373, { 1, 0 }
}

define i32 @function_1c377() local_unnamed_addr {
dec_label_pc_1c377:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c377 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c377
}

define i32 @function_1c37b() local_unnamed_addr {
dec_label_pc_1c37b:
  %v0_1c380 = call i32 @function_1c351()
  ret i32 %v0_1c380

; uselistorder directives
  uselistorder i32 ()* @function_1c351, { 1, 0 }
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSt6vectorINS_11filesystem34pathESaIS6_EEENS2_5list1INS2_5valueIS8_EEEEEEE3runEv(i32 %arg1) {
dec_label_pc_1c390:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %v2_1c399 = ptrtoint i32* %stack_var_-28 to i32
  %v1_1c3b0 = add i32 %arg1, 264
  store i32 %v1_1c3b0, i32* @eax, align 4
  %v2_1c3bc = call i32 @function_382b0(i32 %v2_1c399, i32 %v1_1c3b0)
  store i32 %v2_1c3bc, i32* @eax, align 4
  %v3_1c3ca = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_1c3ca, i32* @ebx, align 4
  %v12_1c3ce = icmp eq i32 %tmp98, %v3_1c3ca
  br i1 %v12_1c3ce, label %bb, label %dec_label_pc_1c3d2

bb:                                               ; preds = %dec_label_pc_1c390
  %v2_1c3d0 = call i32 @function_1c3eb(i32 %v2_1c399)
  br label %dec_label_pc_1c3d2

dec_label_pc_1c3d2:                               ; preds = %bb, %dec_label_pc_1c390
  %v16_1c3db = phi i32 [ %v2_1c3d0, %bb ], [ %v2_1c3bc, %dec_label_pc_1c390 ]
  ret i32 %v16_1c3db
}

define i32 @function_1c3eb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c3eb:
  %v0_1c3eb = load i32, i32* @ebx, align 4
  %v1_1c3eb = icmp eq i32 %v0_1c3eb, 0
  br i1 %v1_1c3eb, label %bb, label %dec_label_pc_1c3eb.dec_label_pc_1c3ef_crit_edge

dec_label_pc_1c3eb.dec_label_pc_1c3ef_crit_edge:  ; preds = %dec_label_pc_1c3eb
  %v3_1c3ef.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1c3ef

bb:                                               ; preds = %dec_label_pc_1c3eb
  %v1_1c3ed = call i32 @function_1c3f7()
  br label %dec_label_pc_1c3ef

dec_label_pc_1c3ef:                               ; preds = %dec_label_pc_1c3eb.dec_label_pc_1c3ef_crit_edge, %bb
  %v3_1c3ef = phi i32 [ %v3_1c3ef.pre, %dec_label_pc_1c3eb.dec_label_pc_1c3ef_crit_edge ], [ %v1_1c3ed, %bb ]
  ret i32 %v3_1c3ef

; uselistorder directives
  uselistorder label %dec_label_pc_1c3ef, { 1, 0 }
}

define i32 @function_1c3f7() local_unnamed_addr {
dec_label_pc_1c3f7:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_1c3fb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c3fb = xor i32 %v1_1c3fb, %tmp6
  %v3_1c3fb = icmp eq i32 %v2_1c3fb, 0
  store i32 %v2_1c3fb, i32* @eax, align 4
  %v1_1c402 = icmp eq i1 %v3_1c3fb, false
  br i1 %v1_1c402, label %bb, label %dec_label_pc_1c404

bb:                                               ; preds = %dec_label_pc_1c3f7
  %v2_1c402 = call i32 @function_1c41c()
  br label %dec_label_pc_1c404

dec_label_pc_1c404:                               ; preds = %bb, %dec_label_pc_1c3f7
  %v0_1c409 = phi i32 [ %v2_1c402, %bb ], [ %v2_1c3fb, %dec_label_pc_1c3f7 ]
  ret i32 %v0_1c409
}

define i32 @function_1c41c() local_unnamed_addr {
dec_label_pc_1c41c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c430:
  %v1_1c449 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_1c449
}

define i32 @function_1c460(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c460:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1c460 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c460 = add i32 %v0_1c460, 63376454
  %v2_1c460 = inttoptr i32 %v1_1c460 to i32*
  %v3_1c460 = load i32, i32* %v2_1c460, align 4
  %v4_1c460 = add i32 %v3_1c460, -1
  store i32 %v4_1c460, i32* %v2_1c460, align 4
  %v0_1c466 = load i32, i32* %eax.global-to-local, align 4
  %v4_1c468 = mul i32 %v0_1c466, 2
  %v14_1c468 = icmp eq i32 %v4_1c468, 0
  store i32 %v4_1c468, i32* %eax.global-to-local, align 4
  %v0_1c46a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c46a = add i32 %v0_1c46a, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1c46a = inttoptr i32 %v1_1c46a to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_1c46a, align 4
  %v1_1c473 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c473 = add i32 %v1_1c473, 12
  %v3_1c473 = inttoptr i32 %v2_1c473 to i32*
  store i32 %v4_1c468, i32* %v3_1c473, align 4
  br i1 %v14_1c468, label %dec_label_pc_1c480, label %dec_label_pc_1c478

dec_label_pc_1c478:                               ; preds = %dec_label_pc_1c460
  br label %dec_label_pc_1c480

dec_label_pc_1c480:                               ; preds = %dec_label_pc_1c478, %dec_label_pc_1c460
  %v0_1c480 = load i32, i32* %esi.global-to-local, align 4
  %v1_1c480 = add i32 %v0_1c480, 16
  %v2_1c480 = inttoptr i32 %v1_1c480 to i32*
  %v3_1c480 = load i32, i32* %v2_1c480, align 4
  store i32 %v3_1c480, i32* %eax.global-to-local, align 4
  %v0_1c483 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c483 = add i32 %v0_1c483, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1c483 = inttoptr i32 %v1_1c483 to i32*
  store i32 ptrtoint (i32* @global_var_398dc.3449 to i32), i32* %v2_1c483, align 4
  %v0_1c48a = load i32, i32* %eax.global-to-local, align 4
  %v1_1c48a = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c48a = add i32 %v1_1c48a, 16
  %v3_1c48a = inttoptr i32 %v2_1c48a to i32*
  store i32 %v0_1c48a, i32* %v3_1c48a, align 4
  %v0_1c48d = load i32, i32* %esi.global-to-local, align 4
  %v1_1c48d = add i32 %v0_1c48d, 20
  %v2_1c48d = inttoptr i32 %v1_1c48d to i32*
  %v3_1c48d = load i32, i32* %v2_1c48d, align 4
  store i32 %v3_1c48d, i32* %eax.global-to-local, align 4
  %v1_1c490 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c490 = add i32 %v1_1c490, 20
  %v3_1c490 = inttoptr i32 %v2_1c490 to i32*
  store i32 %v3_1c48d, i32* %v3_1c490, align 4
  %v0_1c493 = load i32, i32* %esi.global-to-local, align 4
  %v1_1c493 = add i32 %v0_1c493, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_1c493 = inttoptr i32 %v1_1c493 to i32*
  %v3_1c493 = load i32, i32* %v2_1c493, align 4
  store i32 %v3_1c493, i32* %eax.global-to-local, align 4
  %v0_1c496 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c496 = inttoptr i32 %v0_1c496 to i32*
  store i32 ptrtoint (%vtable_398c8_type* @global_var_398c8.3448 to i32), i32* %v1_1c496, align 4
  %v0_1c49c = load i32, i32* %eax.global-to-local, align 4
  %v1_1c49c = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c49c = add i32 %v1_1c49c, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_1c49c = inttoptr i32 %v2_1c49c to i32*
  store i32 %v0_1c49c, i32* %v3_1c49c, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_1c4a3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c4a3 = xor i32 %v1_1c4a3, %arg1
  %v3_1c4a3 = icmp eq i32 %v2_1c4a3, 0
  store i32 %v2_1c4a3, i32* %eax.global-to-local, align 4
  %v1_1c4aa = icmp eq i1 %v3_1c4a3, false
  br i1 %v1_1c4aa, label %dec_label_pc_1c4b2, label %dec_label_pc_1c4ac

dec_label_pc_1c4ac:                               ; preds = %dec_label_pc_1c480
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v2_1c4a3

dec_label_pc_1c4b2:                               ; preds = %dec_label_pc_1c480
  ret i32 %v2_1c4a3

; uselistorder directives
  uselistorder i32 %v2_1c4a3, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c468, { 2, 0, 1 }
  uselistorder i32* %esi.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %ebx.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_398c8_type* @global_var_398c8.3448 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c4e0:
  %v4_1c4e0 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_1c4e5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %v4_1c4e0)
  ret i32 %v1_1c4e5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_1c4f0:
  ret i32 0
}

define i32 @function_1c510() local_unnamed_addr {
dec_label_pc_1c510:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c510 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c510 = add i32 %v0_1c510, -1996217228
  %v2_1c510 = inttoptr i32 %v1_1c510 to i32*
  %v3_1c510 = load i32, i32* %v2_1c510, align 4
  %v4_1c510 = sub i32 %v3_1c510, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1c510, i32* %v2_1c510, align 4
  %v0_1c516 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c516
}

define i32 @function_1c519() local_unnamed_addr {
dec_label_pc_1c519:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c519 = load i32, i32* %eax.global-to-local, align 4
  %v11_1c519 = and i32 %v0_1c519, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_1c519, i32* %eax.global-to-local, align 4
  ret i32 %v11_1c519

; uselistorder directives
  uselistorder i32 %v11_1c519, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian8bad_yearEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c560:
  ret i32 0
}

define i32 @function_1c58b() local_unnamed_addr {
dec_label_pc_1c58b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c58b = load i32, i32* %eax.global-to-local, align 4
  %v11_1c58b = and i32 %v0_1c58b, or (i32 zext (i8 ptrtoint (i8* @global_var_89.3286 to i8) to i32), i32 -256)
  store i32 %v11_1c58b, i32* %eax.global-to-local, align 4
  ret i32 %v11_1c58b

; uselistorder directives
  uselistorder i32 %v11_1c58b, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1c5cc() local_unnamed_addr {
dec_label_pc_1c5cc:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c5cc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c5cc
}

define i32 @function_1c618() local_unnamed_addr {
dec_label_pc_1c618:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c627(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c627:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1c629 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c629 = add i32 %v0_1c629, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1c629, i32* %ebx.global-to-local, align 4
  %v0_1c62a = load i32, i32* %eax.global-to-local, align 4
  %v1_1c62a = trunc i32 %v0_1c62a to i8
  %v2_1c62a = load i1, i1* %cf.global-to-local, align 1
  %v3_1c62a = zext i1 %v2_1c62a to i32
  %v4_1c62a = sub i32 %v0_1c62a, zext (i8 ptrtoint (i32* @global_var_50.3473 to i8) to i32)
  %v5_1c62a = add i32 %v4_1c62a, %v3_1c62a
  %v16_1c62a = icmp ult i8 %v1_1c62a, 80
  %v17_1c62a = or i1 %v2_1c62a, %v16_1c62a
  store i1 %v17_1c62a, i1* %cf.global-to-local, align 1
  %v30_1c62a = and i32 %v5_1c62a, 255
  %v32_1c62a = and i32 %v0_1c62a, -256
  %v33_1c62a = or i32 %v30_1c62a, %v32_1c62a
  store i32 %v33_1c62a, i32* %eax.global-to-local, align 4
  %v4_1c62c = inttoptr i32 %v1_1c629 to i32*
  store i32 %arg1, i32* %v4_1c62c, align 4
  %v0_1c62e = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c62e = add i32 %v0_1c62e, -1994644412
  %v2_1c62e = inttoptr i32 %v1_1c62e to i8*
  %v3_1c62e = load i8, i8* %v2_1c62e, align 1
  %v5_1c62e = trunc i32 %v0_1c62e to i8
  %v6_1c62e = add i8 %v3_1c62e, %v5_1c62e
  %v11_1c62e = icmp ult i8 %v6_1c62e, %v3_1c62e
  store i1 %v11_1c62e, i1* %cf.global-to-local, align 1
  store i8 %v6_1c62e, i8* %v2_1c62e, align 1
  %v0_1c634 = load i32, i32* %eax.global-to-local, align 4
  %v1_1c634 = trunc i32 %v0_1c634 to i8
  %v2_1c634 = load i1, i1* %cf.global-to-local, align 1
  %v3_1c634 = zext i1 %v2_1c634 to i32
  %v4_1c634 = add i32 %v0_1c634, 220
  %v5_1c634 = add i32 %v4_1c634, %v3_1c634
  %v17_1c634 = icmp ult i8 %v1_1c634, 36
  %v18_1c634 = or i1 %v2_1c634, %v17_1c634
  store i1 %v18_1c634, i1* %cf.global-to-local, align 1
  %v31_1c634 = and i32 %v5_1c634, 255
  %v33_1c634 = and i32 %v0_1c634, -256
  %v34_1c634 = or i32 %v31_1c634, %v33_1c634
  store i32 %v34_1c634, i32* @eax, align 4
  %v1_1c636 = call i32 @function_2f150(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg2, i32* @eax, align 4
  %v0_1c63f = load i32, i32* %esi.global-to-local, align 4
  %v1_1c646 = call i32 @function_2f150(i32 %v0_1c63f)
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v0_1c651 = call i32 @function_1c618()
  store i32 %v0_1c651, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c651

; uselistorder directives
  uselistorder i1 %v2_1c634, { 1, 0 }
  uselistorder i32 %v0_1c634, { 1, 0, 2 }
  uselistorder i1 %v2_1c62a, { 1, 0 }
  uselistorder i32 %v0_1c62a, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32)* @function_2f150, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_1c653() local_unnamed_addr {
dec_label_pc_1c653:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c653 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c653
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c660:
  %v1_1c679 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_1c679
}

define i32 @function_1c690() local_unnamed_addr {
dec_label_pc_1c690:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_1c690 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c690 = add i32 %v0_1c690, 63376454
  %v2_1c690 = inttoptr i32 %v1_1c690 to i32*
  %v3_1c690 = load i32, i32* %v2_1c690, align 4
  %v4_1c690 = add i32 %v3_1c690, -1
  store i32 %v4_1c690, i32* %v2_1c690, align 4
  %v1_1c696 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v1_1c696, i32* %stack_var_-4, align 4
  %v4_1c696 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_1c696, i32* %ebp.global-to-local, align 4
  %v0_1c69a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c69a = add i32 %v0_1c69a, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1c69a = inttoptr i32 %v1_1c69a to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_1c69a, align 4
  %v0_1c6a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_1c6a1 = icmp eq i32 %v0_1c6a1, 0
  %v1_1c6a3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c6a3 = add i32 %v1_1c6a3, 12
  %v3_1c6a3 = inttoptr i32 %v2_1c6a3 to i32*
  store i32 %v0_1c6a1, i32* %v3_1c6a3, align 4
  br i1 %v1_1c6a1, label %dec_label_pc_1c6b0, label %dec_label_pc_1c6a8

dec_label_pc_1c6a8:                               ; preds = %dec_label_pc_1c690
  br label %dec_label_pc_1c6b0

dec_label_pc_1c6b0:                               ; preds = %dec_label_pc_1c6a8, %dec_label_pc_1c690
  %v0_1c6b0 = load i32, i32* %esi.global-to-local, align 4
  %v1_1c6b0 = add i32 %v0_1c6b0, 16
  %v2_1c6b0 = inttoptr i32 %v1_1c6b0 to i32*
  %v3_1c6b0 = load i32, i32* %v2_1c6b0, align 4
  store i32 %v3_1c6b0, i32* %eax.global-to-local, align 4
  %v0_1c6b3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c6b3 = add i32 %v0_1c6b3, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1c6b3 = inttoptr i32 %v1_1c6b3 to i32*
  store i32 ptrtoint (i32* @global_var_397fc.3451 to i32), i32* %v2_1c6b3, align 4
  %v0_1c6ba = load i32, i32* %eax.global-to-local, align 4
  %v1_1c6ba = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c6ba = add i32 %v1_1c6ba, 16
  %v3_1c6ba = inttoptr i32 %v2_1c6ba to i32*
  store i32 %v0_1c6ba, i32* %v3_1c6ba, align 4
  %v0_1c6bd = load i32, i32* %esi.global-to-local, align 4
  %v1_1c6bd = add i32 %v0_1c6bd, 20
  %v2_1c6bd = inttoptr i32 %v1_1c6bd to i32*
  %v3_1c6bd = load i32, i32* %v2_1c6bd, align 4
  store i32 %v3_1c6bd, i32* %eax.global-to-local, align 4
  %v1_1c6c0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c6c0 = add i32 %v1_1c6c0, 20
  %v3_1c6c0 = inttoptr i32 %v2_1c6c0 to i32*
  store i32 %v3_1c6bd, i32* %v3_1c6c0, align 4
  %v0_1c6c3 = load i32, i32* %esi.global-to-local, align 4
  %v1_1c6c3 = add i32 %v0_1c6c3, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_1c6c3 = inttoptr i32 %v1_1c6c3 to i32*
  %v3_1c6c3 = load i32, i32* %v2_1c6c3, align 4
  store i32 %v3_1c6c3, i32* %eax.global-to-local, align 4
  %v0_1c6c6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c6c6 = inttoptr i32 %v0_1c6c6 to i32*
  store i32 ptrtoint (%vtable_397e8_type* @global_var_397e8.3450 to i32), i32* %v1_1c6c6, align 4
  %v0_1c6cc = load i32, i32* %eax.global-to-local, align 4
  %v1_1c6cc = load i32, i32* %ebx.global-to-local, align 4
  %v2_1c6cc = add i32 %v1_1c6cc, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_1c6cc = inttoptr i32 %v2_1c6cc to i32*
  store i32 %v0_1c6cc, i32* %v3_1c6cc, align 4
  %v1_1c6d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1c6d3 = xor i32 %v1_1c6d3, %tmp99
  %v3_1c6d3 = icmp eq i32 %v2_1c6d3, 0
  store i32 %v2_1c6d3, i32* %eax.global-to-local, align 4
  %v1_1c6da = icmp eq i1 %v3_1c6d3, false
  br i1 %v1_1c6da, label %dec_label_pc_1c6e2, label %dec_label_pc_1c6dc

dec_label_pc_1c6dc:                               ; preds = %dec_label_pc_1c6b0
  ret i32 %v2_1c6d3

dec_label_pc_1c6e2:                               ; preds = %dec_label_pc_1c6b0
  ret i32 %v2_1c6d3

; uselistorder directives
  uselistorder i32 %v2_1c6d3, { 1, 0, 2, 3 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_397e8_type* @global_var_397e8.3450 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c710:
  %v4_1c710 = sub i32 %arg1, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v1_1c715 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %v4_1c710)
  ret i32 %v1_1c715

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_1c720:
  ret i32 0
}

define i32 @function_1c740() local_unnamed_addr {
dec_label_pc_1c740:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1c740 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c740 = add i32 %v0_1c740, -1996217228
  %v2_1c740 = inttoptr i32 %v1_1c740 to i32*
  %v3_1c740 = load i32, i32* %v2_1c740, align 4
  %v4_1c740 = sub i32 %v3_1c740, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1c740, i32* %v2_1c740, align 4
  %v0_1c746 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c746
}

define i32 @_ZN5boost15throw_exceptionINS_9gregorian9bad_monthEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c790:
  ret i32 0
}

define i32 @function_1c7bb() local_unnamed_addr {
dec_label_pc_1c7bb:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c7bb = load i32, i32* %eax.global-to-local, align 4
  %v11_1c7bb = and i32 %v0_1c7bb, or (i32 zext (i8 ptrtoint (i8* @global_var_89.3286 to i8) to i32), i32 -256)
  store i32 %v11_1c7bb, i32* %eax.global-to-local, align 4
  ret i32 %v11_1c7bb

; uselistorder directives
  uselistorder i32 %v11_1c7bb, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1c828() local_unnamed_addr {
dec_label_pc_1c828:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c828 = load i32, i32* %eax.global-to-local, align 4
  %v11_1c828 = and i32 %v0_1c828, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_1c828, i32* %eax.global-to-local, align 4
  ret i32 %v11_1c828

; uselistorder directives
  uselistorder i32 %v11_1c828, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1c848() local_unnamed_addr {
dec_label_pc_1c848:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c857(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c857:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1c859 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1c859 = add i32 %v0_1c859, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1c859, i32* %ebx.global-to-local, align 4
  %v0_1c85a = load i32, i32* %eax.global-to-local, align 4
  %v1_1c85a = trunc i32 %v0_1c85a to i8
  %v2_1c85a = load i1, i1* %cf.global-to-local, align 1
  %v3_1c85a = zext i1 %v2_1c85a to i32
  %v4_1c85a = sub i32 %v0_1c85a, zext (i8 ptrtoint (i32* @global_var_50.3473 to i8) to i32)
  %v5_1c85a = add i32 %v4_1c85a, %v3_1c85a
  %v16_1c85a = icmp ult i8 %v1_1c85a, 80
  %v17_1c85a = or i1 %v2_1c85a, %v16_1c85a
  store i1 %v17_1c85a, i1* %cf.global-to-local, align 1
  %v30_1c85a = and i32 %v5_1c85a, 255
  %v32_1c85a = and i32 %v0_1c85a, -256
  %v33_1c85a = or i32 %v30_1c85a, %v32_1c85a
  store i32 %v33_1c85a, i32* %eax.global-to-local, align 4
  %v4_1c85c = inttoptr i32 %v1_1c859 to i32*
  store i32 %arg1, i32* %v4_1c85c, align 4
  %v0_1c85e = load i32, i32* %ecx.global-to-local, align 4
  %v1_1c85e = add i32 %v0_1c85e, -1994644412
  %v2_1c85e = inttoptr i32 %v1_1c85e to i8*
  %v3_1c85e = load i8, i8* %v2_1c85e, align 1
  %v5_1c85e = trunc i32 %v0_1c85e to i8
  %v6_1c85e = add i8 %v3_1c85e, %v5_1c85e
  %v11_1c85e = icmp ult i8 %v6_1c85e, %v3_1c85e
  store i1 %v11_1c85e, i1* %cf.global-to-local, align 1
  store i8 %v6_1c85e, i8* %v2_1c85e, align 1
  %v0_1c864 = load i32, i32* %eax.global-to-local, align 4
  %v1_1c864 = trunc i32 %v0_1c864 to i8
  %v2_1c864 = load i1, i1* %cf.global-to-local, align 1
  %v3_1c864 = zext i1 %v2_1c864 to i32
  %v4_1c864 = add i32 %v0_1c864, 220
  %v5_1c864 = add i32 %v4_1c864, %v3_1c864
  %v17_1c864 = icmp ult i8 %v1_1c864, 36
  %v18_1c864 = or i1 %v2_1c864, %v17_1c864
  store i1 %v18_1c864, i1* %cf.global-to-local, align 1
  %v31_1c864 = and i32 %v5_1c864, 255
  %v33_1c864 = and i32 %v0_1c864, -256
  %v34_1c864 = or i32 %v31_1c864, %v33_1c864
  store i32 %v34_1c864, i32* @eax, align 4
  %v1_1c866 = call i32 @function_2f3f0(i32 ptrtoint (i32* @0 to i32))
  store i32 %arg2, i32* @eax, align 4
  %v0_1c86f = load i32, i32* %esi.global-to-local, align 4
  %v1_1c876 = call i32 @function_2f3f0(i32 %v0_1c86f)
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v0_1c881 = call i32 @function_1c848()
  store i32 %v0_1c881, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c881

; uselistorder directives
  uselistorder i1 %v2_1c864, { 1, 0 }
  uselistorder i32 %v0_1c864, { 1, 0, 2 }
  uselistorder i1 %v2_1c85a, { 1, 0 }
  uselistorder i32 %v0_1c85a, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32)* @function_2f3f0, { 1, 0 }
  uselistorder i32 220, { 0, 1, 2, 7, 3, 4, 5, 8, 6 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_1c883() local_unnamed_addr {
dec_label_pc_1c883:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c883 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c883
}

define i32 @_ZN5boost9date_time14microsec_clockINS_10posix_time5ptimeEE11create_timeEPFP2tmPKlS6_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c890:
  %stack_var_-60 = alloca i32, align 4
  %v2_1c8c1 = ptrtoint i32* %stack_var_-60 to i32
  ret i32 %v2_1c8c1
}

define i32 @function_1c8eb() local_unnamed_addr {
dec_label_pc_1c8eb:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c8eb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c8eb
}

define i32 @function_1c93b() local_unnamed_addr {
dec_label_pc_1c93b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1c93b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1c93b
}

define i32 @function_1c940(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c940:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_104 = alloca i32, align 4
  %stack_var_116 = alloca i32, align 4
  %stack_var_123 = alloca i32, align 4
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = ptrtoint i32* %arg1 to i32
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp38 = call i16 @__decompiler_undefined_function_4()
  %tmp39 = call i64 @__decompiler_undefined_function_6()
  %tmp41 = call i16 @__decompiler_undefined_function_4()
  %v0_1c940 = load i32, i32* @esi, align 4
  %v7_1c947 = icmp sgt i32 %v0_1c940, ptrtoint (i32* @global_var_577.3550 to i32)
  br i1 %v7_1c947, label %dec_label_pc_1c94d, label %bb

bb:                                               ; preds = %dec_label_pc_1c940
  %v8_1c947 = call i32 @function_1cc9b()
  store i32 %v8_1c947, i32* @eax, align 4
  br label %dec_label_pc_1c94d

dec_label_pc_1c94d:                               ; preds = %dec_label_pc_1c940, %bb
  %v0_1c94d = load i32, i32* @ebx, align 4
  %v1_1c94d = trunc i32 %v0_1c94d to i16
  %tmp64 = icmp ult i16 %v1_1c94d, 10001
  br i1 %tmp64, label %dec_label_pc_1c958, label %bb51

bb51:                                             ; preds = %dec_label_pc_1c94d
  %v4_1c952 = call i32 @function_1cc9b()
  store i32 %v4_1c952, i32* @eax, align 4
  br label %dec_label_pc_1c958

dec_label_pc_1c958:                               ; preds = %dec_label_pc_1c94d, %bb51
  %v0_1c958 = load i32, i32* @ecx, align 4
  %v1_1c958 = trunc i32 %v0_1c958 to i16
  %tmp65 = icmp ult i16 %v1_1c958, 12
  br i1 %tmp65, label %dec_label_pc_1cb40, label %dec_label_pc_1c962

dec_label_pc_1c962:                               ; preds = %dec_label_pc_1cbb8, %dec_label_pc_1cb54, %dec_label_pc_1c958
  %v0_1c962 = load i32, i32* @edx, align 4
  %v1_1c962 = add i32 %v0_1c962, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1c962 = inttoptr i32 %v1_1c962 to i32*
  %v3_1c962 = load i32, i32* %v2_1c962, align 4
  store i32 %v3_1c962, i32* %ecx.global-to-local, align 4
  %v0_1c965 = load i32, i32* @ebp, align 4
  %v1_1c973 = add i32 %v0_1c962, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1c973 = inttoptr i32 %v1_1c973 to i32*
  %v3_1c973 = load i32, i32* %v2_1c973, align 4
  %v2_1c976 = icmp slt i32 %v3_1c962, 0
  br i1 %v2_1c976, label %dec_label_pc_1c9d8, label %dec_label_pc_1c97a

dec_label_pc_1c97a:                               ; preds = %dec_label_pc_1c962
  %tmp66 = icmp slt i32 %v3_1c973, 0
  %v3_1c97c = icmp eq i1 %tmp66, false
  %v1_1c981 = icmp eq i1 %v3_1c97c, false
  br i1 %v1_1c981, label %dec_label_pc_1c9d8, label %dec_label_pc_1c983

dec_label_pc_1c983:                               ; preds = %dec_label_pc_1c97a
  %v3_1c983 = icmp slt i32 %v0_1c962, 0
  br i1 %v3_1c983, label %dec_label_pc_1c9d8, label %dec_label_pc_1c987

dec_label_pc_1c987:                               ; preds = %dec_label_pc_1c983
  %v3_1c98e = sext i32 %v3_1c973 to i64
  %v4_1c98e = mul nsw i64 %v3_1c98e, 3600
  %v5_1c98e = trunc i64 %v4_1c98e to i32
  %v6_1c98e = lshr i64 %v4_1c98e, ptrtoint (i32* @global_var_20.3279 to i64)
  %v7_1c98e = trunc i64 %v6_1c98e to i32
  %v2_1c99d = sext i32 %v3_1c962 to i64
  %v4_1c99d = mul nsw i64 %v2_1c99d, sext (i32 ptrtoint (i32* @global_var_3c.3471 to i32) to i64)
  %v5_1c99d = trunc i64 %v4_1c99d to i32
  %v6_1c99d = lshr i64 %v4_1c99d, ptrtoint (i32* @global_var_20.3279 to i64)
  %v7_1c99d = trunc i64 %v6_1c99d to i32
  %v6_1c99f = add i32 %v5_1c98e, %v5_1c99d
  %v11_1c99f = icmp ult i32 %v6_1c99f, %v5_1c98e
  %v6_1c9a8 = zext i1 %v11_1c99f to i32
  %v2_1c9ae = ashr i32 %v0_1c962, 31
  %v7_1c9b1 = add i32 %v6_1c99f, %v0_1c962
  %v12_1c9b1 = icmp ult i32 %v7_1c9b1, %v6_1c99f
  %v26_1c9b1 = sext i32 %v7_1c9b1 to i64
  %v6_1c9b5 = zext i1 %v12_1c9b1 to i32
  %v7_1c9a8 = add i32 %v7_1c99d, %v2_1c9ae
  %v8_1c9a8 = add i32 %v7_1c9a8, %v7_1c98e
  %v7_1c9b5 = add i32 %v8_1c9a8, %v6_1c9a8
  %v8_1c9b5 = add i32 %v7_1c9b5, %v6_1c9b5
  %v6_1c9b9 = mul i32 %v8_1c9b5, 1000000
  %v8_1c9c1 = mul nsw i64 %v26_1c9b1, 1000000
  %v9_1c9c1 = trunc i64 %v8_1c9c1 to i32
  %v10_1c9c1 = udiv i64 %v8_1c9c1, 4294967296
  %v11_1c9c1 = trunc i64 %v10_1c9c1 to i32
  %v2_1c9c9 = add i32 %v6_1c9b9, %v11_1c9c1
  %v2_1c9cf = add i32 %v9_1c9c1, %v0_1c965
  %v7_1c9cf = icmp ult i32 %v2_1c9cf, %v0_1c965
  store i32 %v2_1c9cf, i32* @esi, align 4
  %v3_1c9d1 = zext i1 %v7_1c9cf to i32
  %v5_1c9d1 = add i32 %v3_1c9d1, %v2_1c9c9
  br label %dec_label_pc_1ca41

dec_label_pc_1c9d8:                               ; preds = %dec_label_pc_1c962, %dec_label_pc_1c983, %dec_label_pc_1c97a
  %v2_1c9dc = ashr i32 %v3_1c962, 31
  %v2_1c9e4 = ashr i32 %v3_1c973, 31
  %v2_1c9e7 = xor i32 %v2_1c9dc, %v3_1c962
  %v2_1c9e9 = xor i32 %v2_1c9e4, %v3_1c973
  %v2_1c9eb = sub i32 %v2_1c9e7, %v2_1c9dc
  store i32 %v2_1c9eb, i32* %ecx.global-to-local, align 4
  %v2_1c9ed = sub i32 %v2_1c9e9, %v2_1c9e4
  %v3_1c9f1 = sext i32 %v2_1c9eb to i64
  %v4_1c9f1 = mul nsw i64 %v3_1c9f1, -60
  %v5_1c9f1 = trunc i64 %v4_1c9f1 to i32
  %v6_1c9f1 = lshr i64 %v4_1c9f1, ptrtoint (i32* @global_var_20.3279 to i64)
  %v7_1c9f1 = trunc i64 %v6_1c9f1 to i32
  %v2_1ca00 = sext i32 %v2_1c9ed to i64
  %v4_1ca00 = mul nsw i64 %v2_1ca00, -3600
  %v5_1ca00 = trunc i64 %v4_1ca00 to i32
  %v6_1ca00 = lshr i64 %v4_1ca00, ptrtoint (i32* @global_var_20.3279 to i64)
  %v7_1ca00 = trunc i64 %v6_1ca00 to i32
  %v6_1ca02 = add i32 %v5_1ca00, %v5_1c9f1
  %v11_1ca02 = icmp ult i32 %v6_1ca02, %v5_1c9f1
  %v6_1ca06 = zext i1 %v11_1ca02 to i32
  %v2_1ca0c = ashr i32 %v0_1c962, 31
  %v3_1ca11 = xor i32 %v2_1ca0c, %v0_1c962
  %v2_1ca13 = sub i32 %v3_1ca11, %v2_1ca0c
  %v6_1ca1a = sub i32 %v6_1ca02, %v2_1ca13
  %v11_1ca1a = icmp ult i32 %v6_1ca02, %v2_1ca13
  %v25_1ca1a = sext i32 %v6_1ca1a to i64
  %v6_1ca23 = zext i1 %v11_1ca1a to i32
  %tmp67 = icmp slt i32 %v2_1ca13, 0
  %v2_1ca17.neg = zext i1 %tmp67 to i32
  %v7_1ca06 = add i32 %v7_1c9f1, %v2_1ca17.neg
  %v8_1ca06 = add i32 %v7_1ca06, %v7_1ca00
  %v7_1ca23 = add i32 %v8_1ca06, %v6_1ca06
  %v8_1ca23 = add i32 %v7_1ca23, %v6_1ca23
  %v7_1ca27 = mul i32 %v8_1ca23, 1000000
  %v8_1ca2f = mul nsw i64 %v25_1ca1a, 1000000
  %v9_1ca2f = trunc i64 %v8_1ca2f to i32
  %v10_1ca2f = udiv i64 %v8_1ca2f, 4294967296
  %v11_1ca2f = trunc i64 %v10_1ca2f to i32
  %v2_1ca33 = add i32 %v7_1ca27, %v11_1ca2f
  %v5_1ca39 = sub i32 %v9_1ca2f, %v0_1c965
  %v10_1ca39 = icmp ult i32 %v9_1ca2f, %v0_1c965
  store i32 %v5_1ca39, i32* @esi, align 4
  %v6_1ca3d = zext i1 %v10_1ca39 to i32
  %v8_1ca3d = add i32 %v2_1ca33, %v6_1ca3d
  br label %dec_label_pc_1ca41

dec_label_pc_1ca41:                               ; preds = %dec_label_pc_1c9d8, %dec_label_pc_1c987
  %storemerge = phi i32 [ %v8_1ca3d, %dec_label_pc_1c9d8 ], [ %v5_1c9d1, %dec_label_pc_1c987 ]
  store i32 %storemerge, i32* @edi, align 4
  %v4_1ca4b = zext i16 %tmp41 to i32
  %v5_1ca50 = trunc i64 %tmp39 to i32
  %v6_1ca50 = sub i32 14, %v5_1ca50
  %v3_1ca56 = sext i32 %v6_1ca50 to i64
  %v4_1ca56 = mul nsw i64 %v3_1ca56, 715827883
  %v6_1ca56 = lshr i64 %v4_1ca56, ptrtoint (i32* @global_var_20.3279 to i64)
  %v7_1ca56 = trunc i64 %v6_1ca56 to i32
  %v2_1ca58 = ashr i32 %v6_1ca50, 31
  %v2_1ca5b = sdiv i32 %v7_1ca56, 2
  %v1_1ca5d = trunc i32 %v2_1ca5b to i16
  %v3_1ca5d = trunc i32 %v2_1ca58 to i16
  %v4_1ca5d = sub i16 %v1_1ca5d, %v3_1ca5d
  %v20_1ca5d = zext i16 %v4_1ca5d to i32
  %v22_1ca5d = and i32 %v2_1ca5b, -65536
  %v23_1ca5d = or i32 %v20_1ca5d, %v22_1ca5d
  %v2_1ca65 = add i16 %tmp38, ptrtoint (i16* @global_var_1a2c.3551 to i16)
  %v4_1ca6a = sub i16 %v2_1ca65, %v4_1ca5d
  %v20_1ca6a = zext i16 %v4_1ca6a to i32
  %v2_1ca70 = mul i32 %v23_1ca5d, 12
  %v3_1ca70 = add i32 %v2_1ca70, -2
  %v4_1ca70 = add i32 %v3_1ca70, %v4_1ca4b
  %v1_1ca79 = and i32 %v4_1ca70, ptrtoint (i64* @global_var_ffff.3552 to i32)
  %v3_1ca7c = mul i32 %v1_1ca79, 153
  %v1_1ca82 = or i32 %v3_1ca7c, 2
  %v3_1ca87 = sext i32 %v1_1ca82 to i64
  %v4_1ca87 = mul nsw i64 %v3_1ca87, 1717986919
  %v1_1ca89 = and i32 %v20_1ca6a, ptrtoint (i64* @global_var_ffff.3552 to i32)
  %v3_1ca8c = mul nuw nsw i32 %v1_1ca89, 365
  %v2_1ca9218 = udiv i64 %v4_1ca87, 8589934592
  %v2_1ca92 = trunc i64 %v2_1ca9218 to i32
  %div = udiv i16 %v4_1ca6a, 4
  %v3_1ca9c = zext i16 %div to i32
  %v1_1caa0 = and i32 %v3_1ca9c, and (i32 ptrtoint (i64* @global_var_ffff.3552 to i32), i32 16376)
  %v3_1caa3 = lshr i16 %v4_1ca6a, ptrtoint (i16** @global_var_4.3276 to i16)
  %v10_1caa3 = zext i16 %v3_1caa3 to i32
  %v1_1caa9 = and i32 %v10_1caa3, ptrtoint (i64* @global_var_ffff.3552 to i32)
  %v3_1caac = mul i32 %v1_1caa0, ptrtoint (i64* @global_var_147b.3553 to i32)
  %v3_1cab2 = mul i32 %v1_1caa9, ptrtoint (i64* @global_var_a3e.3554 to i32)
  %v2_1cab8 = lshr i32 %v3_1caac, ptrtoint (i32* @global_var_11.3555 to i32)
  %v2_1cabd = udiv i32 %v3_1cab2, 65536
  store i32 %v2_1cabd, i32* %ecx.global-to-local, align 4
  %v5_1ca94 = add i32 %tmp37, -32045
  %v2_1ca98 = add i32 %v5_1ca94, %v3_1ca8c
  %v2_1caa7 = add i32 %v2_1ca98, %v1_1caa0
  %v2_1cabb = add i32 %v2_1caa7, %v2_1ca92
  %v3_1cac0 = sub i32 %v2_1cabb, %v2_1cab8
  %v4_1cac0 = add i32 %v3_1cac0, %v2_1cabd
  store i32 %v4_1cac0, i32* @eax, align 4
  %v1_1cacb = icmp eq i32 %v4_1cac0, 0
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %arg1, align 4
  %v1_1cad3 = add i32 %tmp36, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1cad3 = inttoptr i32 %v1_1cad3 to i32*
  store i32 0, i32* %v2_1cad3, align 4
  br i1 %v1_1cacb, label %bb56, label %dec_label_pc_1ca41.dec_label_pc_1cae0_crit_edge

dec_label_pc_1ca41.dec_label_pc_1cae0_crit_edge:  ; preds = %dec_label_pc_1ca41
  %v0_1cae0.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1cae0

bb56:                                             ; preds = %dec_label_pc_1ca41
  %v1_1cada = call i32 @function_1cc00()
  store i32 %v1_1cada, i32* @eax, align 4
  br label %dec_label_pc_1cae0

dec_label_pc_1cae0:                               ; preds = %dec_label_pc_1ca41.dec_label_pc_1cae0_crit_edge, %bb56
  %v0_1cae0 = phi i32 [ %v0_1cae0.pre, %dec_label_pc_1ca41.dec_label_pc_1cae0_crit_edge ], [ %v1_1cada, %bb56 ]
  %v10_1cae0 = icmp eq i32 %v0_1cae0, -1
  br i1 %v10_1cae0, label %bb57, label %dec_label_pc_1cae9

bb57:                                             ; preds = %dec_label_pc_1cae0
  %v1_1cae3 = call i32 @function_1cc00()
  store i32 %v1_1cae3, i32* @eax, align 4
  br label %dec_label_pc_1cae9

dec_label_pc_1cae9:                               ; preds = %bb57, %dec_label_pc_1cae0
  %v0_1cae9 = phi i32 [ %v1_1cae3, %bb57 ], [ %v0_1cae0, %dec_label_pc_1cae0 ]
  %v10_1cae9 = icmp eq i32 %v0_1cae9, -2
  br i1 %v10_1cae9, label %bb58, label %dec_label_pc_1caf2

bb58:                                             ; preds = %dec_label_pc_1cae9
  %v1_1caec = call i32 @function_1cc00()
  store i32 %v1_1caec, i32* @eax, align 4
  br label %dec_label_pc_1caf2

dec_label_pc_1caf2:                               ; preds = %bb58, %dec_label_pc_1cae9
  %v1_1cb0514 = phi i32 [ %v1_1caec, %bb58 ], [ %v0_1cae9, %dec_label_pc_1cae9 ]
  %v0_1caf2 = load i32, i32* @edi, align 4
  %v1_1caf2 = xor i32 %v0_1caf2, -2147483648
  %v1_1caf8 = load i32, i32* @esi, align 4
  %v2_1caf8 = or i32 %v1_1caf8, %v1_1caf2
  %v3_1caf8 = icmp eq i32 %v2_1caf8, 0
  br i1 %v3_1caf8, label %bb59, label %dec_label_pc_1cb00

bb59:                                             ; preds = %dec_label_pc_1caf2
  %v1_1cafa = call i32 @function_1cc80()
  %v1_1cb10.pre = load i32, i32* @esi, align 4
  %v1_1cb12.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_1cb00

dec_label_pc_1cb00:                               ; preds = %bb59, %dec_label_pc_1caf2
  %v1_1cb12 = phi i32 [ %v1_1cb12.pre, %bb59 ], [ %v0_1caf2, %dec_label_pc_1caf2 ]
  %v1_1cb10 = phi i32 [ %v1_1cb10.pre, %bb59 ], [ %v1_1caf8, %dec_label_pc_1caf2 ]
  %v1_1cb05 = phi i32 [ %v1_1cafa, %bb59 ], [ %v1_1cb0514, %dec_label_pc_1caf2 ]
  %v3_1cb05 = mul i32 %v1_1cb05, 20
  %v3_1cb08 = zext i32 %v1_1cb05 to i64
  %v4_1cb08 = mul nuw nsw i64 %v3_1cb08, 500654080
  %v5_1cb08 = trunc i64 %v4_1cb08 to i32
  %v6_1cb08 = lshr i64 %v4_1cb08, ptrtoint (i32* @global_var_20.3279 to i64)
  %v7_1cb08 = trunc i64 %v6_1cb08 to i32
  store i32 %tmp36, i32* %ecx.global-to-local, align 4
  %v2_1cb10 = add i32 %v5_1cb08, %v1_1cb10
  %v7_1cb10 = icmp ult i32 %v2_1cb10, %v5_1cb08
  %v3_1cb12 = zext i1 %v7_1cb10 to i32
  %v2_1cb0e = add i32 %v3_1cb05, %v1_1cb12
  %v4_1cb12 = add i32 %v2_1cb0e, %v7_1cb08
  %v5_1cb12 = add i32 %v4_1cb12, %v3_1cb12
  store i32 %v2_1cb10, i32* %arg1, align 4
  %v1_1cb16 = load i32, i32* %ecx.global-to-local, align 4
  %v2_1cb16 = add i32 %v1_1cb16, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1cb16 = inttoptr i32 %v2_1cb16 to i32*
  store i32 %v5_1cb12, i32* %v3_1cb16, align 4
  %v1_1cb1d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1cb1d = icmp eq i32 %v1_1cb1d, %tmp34
  store i32 %tmp36, i32* @eax, align 4
  %v1_1cb28 = icmp eq i1 %v3_1cb1d, false
  br i1 %v1_1cb28, label %bb60, label %dec_label_pc_1cb2e

bb60:                                             ; preds = %dec_label_pc_1cb00
  %v2_1cb28 = call i32 @function_1cc96()
  br label %dec_label_pc_1cb2e

dec_label_pc_1cb2e:                               ; preds = %bb60, %dec_label_pc_1cb00
  %v0_1cb38 = phi i32 [ %v2_1cb28, %bb60 ], [ %tmp36, %dec_label_pc_1cb00 ]
  ret i32 %v0_1cb38

dec_label_pc_1cb40:                               ; preds = %dec_label_pc_1c958
  %v3_1cb45 = and i32 %v0_1c958, and (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 31)
  %v5_1cb45 = icmp eq i32 %v3_1cb45, 0
  br i1 %v5_1cb45, label %bb63, label %bb62

bb62:                                             ; preds = %dec_label_pc_1cb40
  %v6_1cb45 = shl i32 ptrtoint (i8** @global_var_1.3274 to i32), %v3_1cb45
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_1cb40, %bb62
  %v0_1cb54 = phi i32 [ ptrtoint (i8** @global_var_1.3274 to i32), %dec_label_pc_1cb40 ], [ %v6_1cb45, %bb62 ]
  store i32 30, i32* %ecx.global-to-local, align 4
  %v1_1cb4c = and i32 %v0_1cb54, 2640
  %v2_1cb4c = icmp eq i32 %v1_1cb4c, 0
  %v1_1cb52 = icmp eq i1 %v2_1cb4c, false
  br i1 %v1_1cb52, label %dec_label_pc_1cbb8, label %dec_label_pc_1cb54

dec_label_pc_1cb54:                               ; preds = %bb63
  %v1_1cb54 = and i32 %v0_1cb54, 4
  %v2_1cb54 = icmp eq i32 %v1_1cb54, 0
  br i1 %v2_1cb54, label %dec_label_pc_1c962, label %dec_label_pc_1cb5d

dec_label_pc_1cb5d:                               ; preds = %dec_label_pc_1cb54
  %v0_1cb5d = load i32, i32* @esi, align 4
  %v1_1cb5d = urem i32 %v0_1cb5d, 4
  %v2_1cb5d = icmp eq i32 %v1_1cb5d, 0
  store i32 ptrtoint (i32* @global_var_1c.3271 to i32), i32* %ecx.global-to-local, align 4
  %v1_1cb62 = icmp eq i1 %v2_1cb5d, false
  br i1 %v1_1cb62, label %dec_label_pc_1cbb8, label %dec_label_pc_1cb64

dec_label_pc_1cb64:                               ; preds = %dec_label_pc_1cb5d
  %v0_1cb64 = load i32, i32* @ebx, align 4
  %v1_1cb66 = trunc i32 %v0_1cb64 to i16
  %v3_1cb66 = udiv i32 %v0_1cb64, 4
  %v10_1cb66 = and i32 %v3_1cb66, 16376
  %v12_1cb66 = and i32 %v0_1cb64, -65536
  %v13_1cb66 = or i32 %v10_1cb66, %v12_1cb66
  %v1_1cb6a = and i32 %v13_1cb66, ptrtoint (i64* @global_var_ffff.3552 to i32)
  %v3_1cb6d = mul i32 %v1_1cb6a, ptrtoint (i64* @global_var_147b.3553 to i32)
  %v2_1cb73 = lshr i32 %v3_1cb6d, ptrtoint (i32* @global_var_11.3555 to i32)
  %v1_1cb7c = mul i32 %v2_1cb73, mul (i32 add (i32 add (i32 ptrtoint (i16** @global_var_4.3276 to i32), i32 1), i32 mul (i32 add (i32 ptrtoint (i16** @global_var_4.3276 to i32), i32 1), i32 ptrtoint (i16** @global_var_4.3276 to i32))), i32 ptrtoint (i16** @global_var_4.3276 to i32))
  store i32 ptrtoint (i32* @global_var_1d.3556 to i32), i32* %ecx.global-to-local, align 4
  %v3_1cb88 = trunc i32 %v1_1cb7c to i16
  %v14_1cb88 = icmp eq i16 %v1_1cb66, %v3_1cb88
  %v1_1cb8b = icmp eq i1 %v14_1cb88, false
  br i1 %v1_1cb8b, label %dec_label_pc_1cbb8, label %dec_label_pc_1cb8d

dec_label_pc_1cb8d:                               ; preds = %dec_label_pc_1cb64
  %v3_1cb8f = lshr i16 %v1_1cb66, ptrtoint (i16** @global_var_4.3276 to i16)
  %v10_1cb8f = zext i16 %v3_1cb8f to i32
  %v13_1cb8f = or i32 %v10_1cb8f, %v12_1cb66
  %v1_1cb93 = and i32 %v13_1cb8f, ptrtoint (i64* @global_var_ffff.3552 to i32)
  %v3_1cb96 = mul i32 %v1_1cb93, ptrtoint (i64* @global_var_a3e.3554 to i32)
  %v2_1cb9c = udiv i32 %v3_1cb96, 65536
  %v3_1cba2 = mul i32 %v2_1cb9c, add (i32 add (i32 ptrtoint (i16** @global_var_4.3276 to i32), i32 1), i32 mul (i32 add (i32 ptrtoint (i16** @global_var_4.3276 to i32), i32 1), i32 ptrtoint (i16** @global_var_4.3276 to i32)))
  %v2_1cba5 = shl i32 %v3_1cba2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1cba8 = trunc i32 %v2_1cba5 to i16
  %v14_1cba8 = icmp eq i16 %v1_1cb66, %v3_1cba8
  %v3_1cbaf = zext i1 %v14_1cba8 to i32
  %v1_1cbb3 = sub i32 sub (i32 ptrtoint (i32* @global_var_1d.3556 to i32), i32 1), %v3_1cbaf
  store i32 %v1_1cbb3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1cbb8

dec_label_pc_1cbb8:                               ; preds = %dec_label_pc_1cb8d, %dec_label_pc_1cb64, %dec_label_pc_1cb5d, %bb63
  %v2_1cbb8 = phi i32 [ %v1_1cbb3, %dec_label_pc_1cb8d ], [ ptrtoint (i32* @global_var_1d.3556 to i32), %dec_label_pc_1cb64 ], [ ptrtoint (i32* @global_var_1c.3271 to i32), %dec_label_pc_1cb5d ], [ 30, %bb63 ]
  %v0_1cbb8 = load i32, i32* @eax, align 4
  %v1_1cbb8 = trunc i32 %v0_1cbb8 to i16
  %v3_1cbb8 = trunc i32 %v2_1cbb8 to i16
  %tmp68 = icmp ugt i16 %v1_1cbb8, %v3_1cbb8
  br i1 %tmp68, label %dec_label_pc_1cbc1, label %dec_label_pc_1c962

dec_label_pc_1cbc1:                               ; preds = %dec_label_pc_1cbb8
  %v2_1cbc1 = ptrtoint i32* %stack_var_123 to i32
  %v2_1cbc5 = ptrtoint i32* %stack_var_116 to i32
  store i32 %v2_1cbc5, i32* @esi, align 4
  %v2_1cbc9 = ptrtoint i32* %stack_var_104 to i32
  store i32 %v2_1cbc9, i32* @ebx, align 4
  ret i32 %v2_1cbc1

; uselistorder directives
  uselistorder i16 %v1_1cb66, { 1, 2, 0 }
  uselistorder i32 %v0_1cb64, { 1, 0, 2 }
  uselistorder i32 %v5_1cb08, { 1, 0 }
  uselistorder i32 %v1_1cb05, { 1, 0 }
  uselistorder i32 %v0_1cae9, { 1, 0 }
  uselistorder i32 %v0_1cae0, { 1, 0 }
  uselistorder i32 %v2_1cabd, { 1, 0 }
  uselistorder i16 %v4_1ca6a, { 1, 0, 2 }
  uselistorder i32 %v2_1ca5b, { 1, 0 }
  uselistorder i32 %v2_1ca13, { 0, 2, 1 }
  uselistorder i32 %v2_1ca0c, { 1, 0 }
  uselistorder i32 %v5_1c9f1, { 1, 0 }
  uselistorder i32 %v2_1c9e4, { 1, 0 }
  uselistorder i32 %v2_1c9dc, { 1, 0 }
  uselistorder i32 %v6_1c99f, { 1, 0, 2 }
  uselistorder i32 %v5_1c98e, { 1, 0 }
  uselistorder i32 %v3_1c973, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1c965, { 2, 3, 1, 0 }
  uselistorder i32 %v3_1c962, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1c962, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32 %tmp36, { 1, 3, 2, 0 }
  uselistorder i32 ()* @function_1cc00, { 2, 1, 0 }
  uselistorder i32 65536, { 1, 2, 3, 0 }
  uselistorder i32 ptrtoint (i64* @global_var_a3e.3554 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i64* @global_var_147b.3553 to i32), { 1, 0 }
  uselistorder i16 ptrtoint (i16** @global_var_4.3276 to i16), { 1, 0 }
  uselistorder i32 16376, { 1, 0 }
  uselistorder i32 ptrtoint (i64* @global_var_ffff.3552 to i32), { 5, 4, 3, 0, 2, 1 }
  uselistorder i32 -65536, { 3, 4, 0, 2, 1 }
  uselistorder i64 1000000, { 1, 0 }
  uselistorder i64 ptrtoint (i32* @global_var_20.3279 to i64), { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 ()* @function_1cc9b, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_1cae0, { 1, 0 }
  uselistorder label %dec_label_pc_1c9d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1c958, { 1, 0 }
  uselistorder label %dec_label_pc_1c94d, { 1, 0 }
}

define i32 @function_1cc00() local_unnamed_addr {
dec_label_pc_1cc00:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_1cc00 = load i32, i32* @edi, align 4
  %v1_1cc00 = xor i32 %v0_1cc00, -2147483648
  %v1_1cc06 = load i32, i32* @esi, align 4
  %v2_1cc06 = or i32 %v1_1cc06, %v1_1cc00
  %v3_1cc06 = icmp eq i32 %v2_1cc06, 0
  br i1 %v3_1cc06, label %bb, label %dec_label_pc_1cc00.dec_label_pc_1cc0a_crit_edge

dec_label_pc_1cc00.dec_label_pc_1cc0a_crit_edge:  ; preds = %dec_label_pc_1cc00
  %v0_1cc0a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1cc0a

bb:                                               ; preds = %dec_label_pc_1cc00
  %v1_1cc08 = call i32 @function_1cc5e()
  store i32 %v1_1cc08, i32* @eax, align 4
  br label %dec_label_pc_1cc0a

dec_label_pc_1cc0a:                               ; preds = %dec_label_pc_1cc00.dec_label_pc_1cc0a_crit_edge, %bb
  %v0_1cc30 = phi i32 [ %v0_1cc0a.pre, %dec_label_pc_1cc00.dec_label_pc_1cc0a_crit_edge ], [ %v1_1cc08, %bb ]
  %v1_1cc0a = icmp eq i32 %v0_1cc30, 0
  %v10_1cc30 = icmp eq i32 %v0_1cc30, -1
  br i1 %v1_1cc0a, label %dec_label_pc_1cc30, label %dec_label_pc_1cc0e

dec_label_pc_1cc0e:                               ; preds = %dec_label_pc_1cc0a
  br i1 %v10_1cc30, label %bb6, label %dec_label_pc_1cc13

bb6:                                              ; preds = %dec_label_pc_1cc0e
  %v1_1cc11 = call i32 @function_1cc80()
  store i32 %v1_1cc11, i32* @eax, align 4
  br label %dec_label_pc_1cc13

dec_label_pc_1cc13:                               ; preds = %bb6, %dec_label_pc_1cc0e
  %v0_1cc13 = phi i32 [ %v1_1cc11, %bb6 ], [ %v0_1cc30, %dec_label_pc_1cc0e ]
  %v10_1cc13 = icmp eq i32 %v0_1cc13, -2
  br i1 %v10_1cc13, label %bb7, label %dec_label_pc_1cc18

bb7:                                              ; preds = %dec_label_pc_1cc13
  %v1_1cc16 = call i32 @function_1cc68()
  store i32 %v1_1cc16, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1cc18

dec_label_pc_1cc18:                               ; preds = %dec_label_pc_1cc35, %bb7, %dec_label_pc_1cc13
  %v1_1cc1a = phi i32 [ %v0_1cc35, %dec_label_pc_1cc35 ], [ %v1_1cc16, %bb7 ], [ %v0_1cc13, %dec_label_pc_1cc13 ]
  %v0_1cc1a = load i32, i32* @esi, align 4
  %v2_1cc1a = add i32 %v0_1cc1a, %v1_1cc1a
  %v7_1cc1a = icmp ult i32 %v2_1cc1a, %v0_1cc1a
  store i32 %v2_1cc1a, i32* @esi, align 4
  %v0_1cc1c = load i32, i32* @edi, align 4
  %v3_1cc1c = zext i1 %v7_1cc1a to i32
  %v5_1cc1c = add i32 %v3_1cc1c, %v0_1cc1c
  br label %dec_label_pc_1cc1e

dec_label_pc_1cc1e:                               ; preds = %dec_label_pc_1cc39, %dec_label_pc_1cc18
  %v0_1cc22 = phi i32 [ 0, %dec_label_pc_1cc39 ], [ %v2_1cc1a, %dec_label_pc_1cc18 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1cc39 ], [ %v5_1cc1c, %dec_label_pc_1cc18 ]
  store i32 %storemerge, i32* @edi, align 4
  %v2_1cc22 = inttoptr i32 %tmp to i32*
  store i32 %v0_1cc22, i32* %v2_1cc22, align 4
  %v0_1cc24 = load i32, i32* @edi, align 4
  %v1_1cc24 = load i32, i32* %eax.global-to-local, align 4
  %v2_1cc24 = add i32 %v1_1cc24, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1cc24 = inttoptr i32 %v2_1cc24 to i32*
  store i32 %v0_1cc24, i32* %v3_1cc24, align 4
  %v0_1cc27 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cc27

dec_label_pc_1cc30:                               ; preds = %dec_label_pc_1cc0a
  br i1 %v10_1cc30, label %bb9, label %dec_label_pc_1cc35

bb9:                                              ; preds = %dec_label_pc_1cc30
  %v1_1cc33 = call i32 @function_1cc74()
  store i32 %v1_1cc33, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1cc35

dec_label_pc_1cc35:                               ; preds = %bb9, %dec_label_pc_1cc30
  %v0_1cc35 = phi i32 [ %v1_1cc33, %bb9 ], [ 0, %dec_label_pc_1cc30 ]
  %v1_1cc35 = icmp eq i32 %v0_1cc35, 0
  %v1_1cc37 = icmp eq i1 %v1_1cc35, false
  br i1 %v1_1cc37, label %dec_label_pc_1cc18, label %dec_label_pc_1cc39

dec_label_pc_1cc39:                               ; preds = %dec_label_pc_1cc35
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_1cc1e

; uselistorder directives
  uselistorder i32 %v0_1cc35, { 1, 0 }
  uselistorder i32 %v0_1cc1a, { 1, 0 }
  uselistorder i32 %v0_1cc13, { 1, 0 }
  uselistorder i1 %v10_1cc30, { 1, 0 }
  uselistorder i32 %v0_1cc30, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1cc0a, { 1, 0 }
}

define i32 @function_1cc4e() local_unnamed_addr {
dec_label_pc_1cc4e:
  %v3_1cc4e = load i32, i32* @eax, align 4
  ret i32 %v3_1cc4e
}

define i32 @function_1cc5e() local_unnamed_addr {
dec_label_pc_1cc5e:
  %v0_1cc5e = load i32, i32* @eax, align 4
  %v10_1cc5e = icmp eq i32 %v0_1cc5e, -2
  %v1_1cc61 = icmp eq i1 %v10_1cc5e, false
  br i1 %v1_1cc61, label %bb, label %dec_label_pc_1cc63

bb:                                               ; preds = %dec_label_pc_1cc5e
  %v2_1cc61 = call i32 @function_1cc80()
  br label %dec_label_pc_1cc63

dec_label_pc_1cc63:                               ; preds = %bb, %dec_label_pc_1cc5e
  %v1_1cc64 = phi i32 [ %v2_1cc61, %bb ], [ %v0_1cc5e, %dec_label_pc_1cc5e ]
  ret i32 %v1_1cc64

; uselistorder directives
  uselistorder i32 %v0_1cc5e, { 1, 0 }
  uselistorder i32 ()* @function_1cc80, { 2, 1, 0 }
}

define i32 @function_1cc68() local_unnamed_addr {
dec_label_pc_1cc68:
  store i32 -2, i32* @esi, align 4
  store i32 2147483647, i32* @edi, align 4
  %v0_1cc72 = load i32, i32* @eax, align 4
  ret i32 %v0_1cc72
}

define i32 @function_1cc74() local_unnamed_addr {
dec_label_pc_1cc74:
  store i32 -1, i32* @esi, align 4
  store i32 2147483647, i32* @edi, align 4
  %v0_1cc7e = load i32, i32* @eax, align 4
  ret i32 %v0_1cc7e
}

define i32 @function_1cc80() local_unnamed_addr {
dec_label_pc_1cc80:
  %v0_1cc8f = call i32 @function_1cc68()
  ret i32 %v0_1cc8f

; uselistorder directives
  uselistorder i32 ()* @function_1cc68, { 1, 0 }
}

define i32 @function_1cc96() local_unnamed_addr {
dec_label_pc_1cc96:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1cc9b() local_unnamed_addr {
dec_label_pc_1cc9b:
  %v0_1cca0 = call i32 @function_2e231()
  store i32 %v0_1cca0, i32* @eax, align 4
  %v0_1cca5 = call i32 @function_2e2b9()
  store i32 %v0_1cca5, i32* @eax, align 4
  store i32 %v0_1cca5, i32* @ebx, align 4
  %v0_1ccac = call i32 @function_1cc4e()
  ret i32 %v0_1ccac
}

define i32 @_Z13GetTimeMillisv() local_unnamed_addr {
dec_label_pc_1ccb0:
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %v2_1ccbf = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1ccbf, i32* @eax, align 4
  store i32 -2147484, i32* @ebx, align 4
  %v2_1ccdf = call i32 @_ZTVN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEEE(i32 %v2_1ccbf, i32 ptrtoint (i32* @global_var_15020.3558 to i32))
  store i32 1511828489, i32* @ecx, align 4
  %v3_1ccec = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1ccec, i32* @edi, align 4
  %v1_1ccf4 = xor i32 %v3_1ccec, -2147483648
  %v2_1ccfa = or i32 %v1_1ccf4, %tmp103
  %v3_1ccfa = icmp eq i32 %v2_1ccfa, 0
  br i1 %v3_1ccfa, label %bb, label %dec_label_pc_1ccfe

bb:                                               ; preds = %dec_label_pc_1ccb0
  %v1_1ccfc = call i32 @function_1cd4c()
  %v0_1ccfe.pre = load i32, i32* @edi, align 4
  %v0_1cd00.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1ccfe

dec_label_pc_1ccfe:                               ; preds = %bb, %dec_label_pc_1ccb0
  %v0_1cd00 = phi i32 [ %v0_1cd00.pre, %bb ], [ %tmp103, %dec_label_pc_1ccb0 ]
  %v0_1ccfe = phi i32 [ %v0_1ccfe.pre, %bb ], [ %v3_1ccec, %dec_label_pc_1ccb0 ]
  %v1_1cd02 = xor i32 %v0_1ccfe, 2147483647
  %v1_1cd07 = sub i32 -1, %v0_1cd00
  %v2_1cd09 = or i32 %v1_1cd02, %v1_1cd07
  %v3_1cd09 = icmp eq i32 %v2_1cd09, 0
  br i1 %v3_1cd09, label %bb112, label %dec_label_pc_1cd0d

bb112:                                            ; preds = %dec_label_pc_1ccfe
  %v1_1cd0b = call i32 @function_1cd70()
  %v0_1cd0d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1cd0d

dec_label_pc_1cd0d:                               ; preds = %bb112, %dec_label_pc_1ccfe
  %v0_1cd1c = phi i32 [ %v1_1cd0b, %bb112 ], [ %v1_1cd02, %dec_label_pc_1ccfe ]
  %v0_1cd0d = phi i32 [ %v0_1cd0d.pre, %bb112 ], [ %v0_1cd00, %dec_label_pc_1ccfe ]
  store i32 -1511828489, i32* @ecx, align 4
  %v1_1cd14 = xor i32 %v0_1cd0d, -2
  store i32 2147483, i32* @ebx, align 4
  %v2_1cd1c = or i32 %v1_1cd14, %v0_1cd1c
  %v3_1cd1c = icmp eq i32 %v2_1cd1c, 0
  br i1 %v3_1cd1c, label %bb113, label %dec_label_pc_1cd20

bb113:                                            ; preds = %dec_label_pc_1cd0d
  %v1_1cd1e = call i32 @function_1cd4c()
  br label %dec_label_pc_1cd20

dec_label_pc_1cd20:                               ; preds = %bb113, %dec_label_pc_1cd0d
  %v4_1cd3f = phi i32 [ %v1_1cd1e, %bb113 ], [ %v2_1cd1c, %dec_label_pc_1cd0d ]
  ret i32 %v4_1cd3f

; uselistorder directives
  uselistorder i32 %v1_1cd02, { 1, 0 }
  uselistorder i32 %v0_1cd00, { 1, 0 }
  uselistorder i32 %tmp103, { 1, 0 }
}

define i32 @function_1cd4c() local_unnamed_addr {
dec_label_pc_1cd4c:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v0_1cd4c = load i32, i32* @ecx, align 4
  store i32 %v0_1cd4c, i32* @eax, align 4
  %v1_1cd54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1cd54 = icmp eq i32 %v1_1cd54, %tmp5
  %v1_1cd5b = icmp eq i1 %v3_1cd54, false
  br i1 %v1_1cd5b, label %bb, label %dec_label_pc_1cd5d

bb:                                               ; preds = %dec_label_pc_1cd4c
  %v2_1cd5b = call i32 @function_1cd7c()
  br label %dec_label_pc_1cd5d

dec_label_pc_1cd5d:                               ; preds = %bb, %dec_label_pc_1cd4c
  %v0_1cd6c = phi i32 [ %v2_1cd5b, %bb ], [ %v0_1cd4c, %dec_label_pc_1cd4c ]
  ret i32 %v0_1cd6c
}

define i32 @function_1cd70() local_unnamed_addr {
dec_label_pc_1cd70:
  store i32 -1511828489, i32* @ecx, align 4
  store i32 2147483, i32* @ebx, align 4
  %v0_1cd7a = call i32 @function_1cd4c()
  ret i32 %v0_1cd7a

; uselistorder directives
  uselistorder i32 ()* @function_1cd4c, { 2, 1, 0 }
}

define i32 @function_1cd7c() local_unnamed_addr {
dec_label_pc_1cd7c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1cd90:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1cd90 = load i32, i32* %edi.global-to-local, align 4
  %v0_1cd91 = load i32, i32* %esi.global-to-local, align 4
  %v0_1cd92 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1cd9a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1cda6 = load i32, i32* %arg1, align 4
  store i32 %v2_1cda6, i32* %ebx.global-to-local, align 4
  %v12_1cda8 = icmp eq i32 %v2_1cda6, %tmp98
  %v1_1cdaa = icmp eq i1 %v12_1cda8, false
  br i1 %v1_1cdaa, label %dec_label_pc_1cdb2, label %dec_label_pc_1cdac

dec_label_pc_1cdac:                               ; preds = %dec_label_pc_1cd90
  %v4_1cdac = call i32 @function_1cdcb(i32 %v0_1cd9a, i32 %v0_1cd92, i32 %v0_1cd91, i32 %v0_1cd90)
  ret i32 %v4_1cdac

dec_label_pc_1cdb2:                               ; preds = %dec_label_pc_1cd90
  %v1_1cdb2 = inttoptr i32 %v2_1cda6 to i32*
  %v2_1cdb2 = load i32, i32* %v1_1cdb2, align 4
  store i32 %v2_1cdb2, i32* %esi.global-to-local, align 4
  %v1_1cdb4 = add i32 %v2_1cda6, 12
  store i32 %v1_1cdb4, i32* @eax, align 4
  %v1_1cdba = call i32 @function_307f0(i32 %v1_1cdb4)
  ret i32 %v1_1cdba

; uselistorder directives
  uselistorder i32 %v2_1cda6, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1cdcb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1cdcb:
  %v1_1cdcf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1cdcf = xor i32 %v1_1cdcf, %arg1
  %v3_1cdcf = icmp eq i32 %v2_1cdcf, 0
  %v1_1cdd6 = icmp eq i1 %v3_1cdcf, false
  br i1 %v1_1cdd6, label %dec_label_pc_1cddf, label %dec_label_pc_1cdd8

dec_label_pc_1cdd8:                               ; preds = %dec_label_pc_1cdcb
  ret i32 %v2_1cdcf

dec_label_pc_1cddf:                               ; preds = %dec_label_pc_1cdcb
  ret i32 %v2_1cdcf

; uselistorder directives
  uselistorder i32 %v2_1cdcf, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1cdf0:
  store i32 %arg5, i32* @edi, align 4
  %v1_1ce2d = icmp eq i32 %arg3, 0
  br i1 %v1_1ce2d, label %bb, label %dec_label_pc_1ce35

bb:                                               ; preds = %dec_label_pc_1cdf0
  %v3_1ce2f = call i32 @function_1ceb8(i32 sext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32))
  br label %dec_label_pc_1ce35

dec_label_pc_1ce35:                               ; preds = %bb, %dec_label_pc_1cdf0
  %v2_1ce35 = phi i32 [ %v3_1ce2f, %bb ], [ %arg3, %dec_label_pc_1cdf0 ]
  ret i32 %v2_1ce35
}

define i32 @function_1ce42() local_unnamed_addr {
dec_label_pc_1ce42:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ce42 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ce42
}

define i32 @function_1ce89(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ce89:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1ce89 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1ce89 = add i32 %v0_1ce89, 340165608
  %v2_1ce89 = inttoptr i32 %v1_1ce89 to i32*
  %v3_1ce89 = load i32, i32* %v2_1ce89, align 4
  %v4_1ce89 = add i32 %v3_1ce89, -1
  store i32 %v4_1ce89, i32* %v2_1ce89, align 4
  %v0_1ce8f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ce8f = add i32 %v0_1ce8f, 1698440276
  %v2_1ce8f = inttoptr i32 %v1_1ce8f to i32*
  %v3_1ce8f = load i32, i32* %v2_1ce8f, align 4
  %v4_1ce8f = load i32, i32* %ecx.global-to-local, align 4
  %v5_1ce8f = add i32 %v4_1ce8f, %v3_1ce8f
  store i32 %v5_1ce8f, i32* %v2_1ce8f, align 4
  %v0_1ce95 = load i32, i32* %edx.global-to-local, align 4
  %v1_1ce95 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ce95 = xor i32 %v1_1ce95, %v0_1ce95
  %v3_1ce95 = icmp eq i32 %v2_1ce95, 0
  store i32 %v2_1ce95, i32* %edx.global-to-local, align 4
  %v0_1ce9b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ce9b = load i32, i32* %ebp.global-to-local, align 4
  %v2_1ce9b = inttoptr i32 %v1_1ce9b to i32*
  store i32 %v0_1ce9b, i32* %v2_1ce9b, align 4
  %v1_1ce9e = icmp eq i1 %v3_1ce95, false
  br i1 %v1_1ce9e, label %bb, label %dec_label_pc_1ce89.dec_label_pc_1cea0_crit_edge

dec_label_pc_1ce89.dec_label_pc_1cea0_crit_edge:  ; preds = %dec_label_pc_1ce89
  %v0_1ceb3.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1cea0

bb:                                               ; preds = %dec_label_pc_1ce89
  %v2_1ce9e = call i32 @function_1cf02()
  br label %dec_label_pc_1cea0

dec_label_pc_1cea0:                               ; preds = %dec_label_pc_1ce89.dec_label_pc_1cea0_crit_edge, %bb
  %v0_1ceb3 = phi i32 [ %v0_1ceb3.pre, %dec_label_pc_1ce89.dec_label_pc_1cea0_crit_edge ], [ %v2_1ce9e, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1ceb3

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_1cea0, { 1, 0 }
}

define i32 @function_1ceb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ceb8:
  %v2_1cec9 = load i32, i32* @edi, align 4
  ret i32 %v2_1cec9
}

define i32 @function_1ceec() local_unnamed_addr {
dec_label_pc_1ceec:
  %eax.global-to-local = alloca i32, align 4
  %v4_1ceec = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_1ceec
}

define i32 @function_1ceee(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ceee:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ceef = load i32, i32* %eax.global-to-local, align 4
  %v11_1ceef = and i32 %v0_1ceef, -240
  %v1_1cef1 = icmp eq i32 %v11_1ceef, 0
  %v2_1cef3 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1cef3 = select i1 %v1_1cef1, i32 %v2_1cef3, i32 %v0_1ceef
  %tmp100 = icmp slt i32 %v3_1cef3, 0
  %v2_1cef6 = zext i1 %tmp100 to i32
  store i32 %v2_1cef6, i32* %eax.global-to-local, align 4
  ret i32 %v2_1cef6

; uselistorder directives
  uselistorder i32 %v2_1cef6, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1cf02() local_unnamed_addr {
dec_label_pc_1cf02:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1cf17() local_unnamed_addr {
dec_label_pc_1cf17:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1cf2c() local_unnamed_addr {
dec_label_pc_1cf2c:
  %v0_1cf2c = call i32 @function_1cf17()
  ret i32 %v0_1cf2c
}

define i32 @function_1cf2f() local_unnamed_addr {
dec_label_pc_1cf2f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cf2f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cf2f
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_1cf40:
  store i32 0, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v1_1cf6f = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1cf6f = inttoptr i32 %v1_1cf6f to i32*
  %v3_1cf6f = load i32, i32* %v2_1cf6f, align 4
  %v1_1cf72 = icmp eq i32 %v3_1cf6f, 0
  br i1 %v1_1cf72, label %bb, label %dec_label_pc_1cf7a

bb:                                               ; preds = %dec_label_pc_1cf40
  %tmp106 = ptrtoint i32* %arg3 to i32
  %v4_1cf74 = call i32 @function_1d035(i32 %arg1, i32 %arg2, i32 %tmp106)
  br label %dec_label_pc_1cf7a

dec_label_pc_1cf7a:                               ; preds = %bb, %dec_label_pc_1cf40
  %v2_1cf7e = load i32, i32* %arg3, align 4
  ret i32 %v2_1cf7e

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_1cfdd() local_unnamed_addr {
dec_label_pc_1cfdd:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp4
}

define i32 @function_1cfe5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cfe5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1cffe() local_unnamed_addr {
dec_label_pc_1cffe:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1cffe = load i32, i32* %ebx.global-to-local, align 4
  %v1_1cffe = add i32 %v0_1cffe, -2060966828
  %v2_1cffe = inttoptr i32 %v1_1cffe to i32*
  %v3_1cffe = load i32, i32* %v2_1cffe, align 4
  %v4_1cffe = sub i32 %v3_1cffe, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1cffe, i32* %v2_1cffe, align 4
  %v2_1d004 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1d004 = lshr i8 %v2_1d004, ptrtoint (i16** @global_var_4.3276 to i8)
  %v4_1d004 = mul i8 %v2_1d004, 16
  %v5_1d004 = or i8 %v3_1d004, %v4_1d004
  %v6_1d004 = load i32, i32* %edi.global-to-local, align 4
  %v7_1d004 = inttoptr i32 %v6_1d004 to i8*
  store i8 %v5_1d004, i8* %v7_1d004, align 1
  %v0_1d007 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d007
}

define i32 @function_1d016() local_unnamed_addr {
dec_label_pc_1d016:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_1d01a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1d01a = icmp eq i32 %v1_1d01a, %tmp11
  %v1_1d025 = icmp eq i1 %v3_1d01a, false
  br i1 %v1_1d025, label %bb, label %dec_label_pc_1d02b

bb:                                               ; preds = %dec_label_pc_1d016
  %v2_1d025 = call i32 @function_1d0b6()
  br label %dec_label_pc_1d02b

dec_label_pc_1d02b:                               ; preds = %bb, %dec_label_pc_1d016
  %v0_1d032 = phi i32 [ %v2_1d025, %bb ], [ %tmp10, %dec_label_pc_1d016 ]
  ret i32 %v0_1d032
}

define i32 @function_1d035(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d035:
  %v0_1d035 = load i32, i32* @edx, align 4
  %v1_1d037 = add i32 %v0_1d035, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1d037, i32* @edi, align 4
  %v2_1d044 = add i32 %arg1, 12
  %v3_1d044 = inttoptr i32 %v2_1d044 to i32*
  %v4_1d044 = load i32, i32* %v3_1d044, align 4
  %v15_1d044 = icmp eq i32 %v1_1d037, %v4_1d044
  br i1 %v15_1d044, label %bb, label %dec_label_pc_1d035.dec_label_pc_1d049_crit_edge

dec_label_pc_1d035.dec_label_pc_1d049_crit_edge:  ; preds = %dec_label_pc_1d035
  %v4_1d049.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1d049

bb:                                               ; preds = %dec_label_pc_1d035
  %v1_1d047 = call i32 @function_1d078()
  br label %dec_label_pc_1d049

dec_label_pc_1d049:                               ; preds = %dec_label_pc_1d035.dec_label_pc_1d049_crit_edge, %bb
  %v4_1d049 = phi i32 [ %v4_1d049.pre, %dec_label_pc_1d035.dec_label_pc_1d049_crit_edge ], [ %v1_1d047, %bb ]
  ret i32 %v4_1d049

; uselistorder directives
  uselistorder label %dec_label_pc_1d049, { 1, 0 }
}

define i32 @function_1d050() local_unnamed_addr {
dec_label_pc_1d050:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1d050 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d050 = add i32 %v0_1d050, 608472002
  %v2_1d050 = inttoptr i32 %v1_1d050 to i32*
  %v3_1d050 = load i32, i32* %v2_1d050, align 4
  %v4_1d050 = add i32 %v3_1d050, -1
  store i32 %v4_1d050, i32* %v2_1d050, align 4
  %v0_1d05c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1d05c = add i32 %v0_1d05c, -12
  %v2_1d05c = inttoptr i32 %v1_1d05c to i32*
  %v3_1d05c = load i32, i32* %v2_1d05c, align 4
  %v0_1d05f = load i32, i32* %eax.global-to-local, align 4
  %v1_1d05f = add i32 %v0_1d05f, -12
  %v2_1d05f = inttoptr i32 %v1_1d05f to i32*
  %v3_1d05f = load i32, i32* %v2_1d05f, align 4
  %tmp98 = icmp ule i32 %v3_1d05f, %v3_1d05c
  %v5_1d06a = select i1 %tmp98, i32 %v3_1d05f, i32 %v3_1d05c
  store i32 %v5_1d06a, i32* @eax, align 4
  %v1_1d06d = call i32 @function_1cfe5(i32 %v0_1d05f)
  store i32 %v1_1d06d, i32* %eax.global-to-local, align 4
  ret i32 %v1_1d06d

; uselistorder directives
  uselistorder i32 %v3_1d05f, { 1, 0 }
  uselistorder i32 %v3_1d05c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1d078() local_unnamed_addr {
dec_label_pc_1d078:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_60 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v2_1d07c = ptrtoint i32* %stack_var_60 to i32
  %v0_1d083 = load i32, i32* @edi, align 4
  %v5_1d09b = call i32 @unknown_39d30(i32 %v2_1d07c, i32 %tmp3, i32 0, i32 %v0_1d083, i32 %tmp9)
  %v2_1d0ab = inttoptr i32 %tmp to i32*
  %v0_1d0ad = load i32, i32* %edx.global-to-local, align 4
  %v1_1d0ad = add i32 %v0_1d0ad, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1d0ad = inttoptr i32 %v1_1d0ad to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_1d0ad, align 1
  %v0_1d0b1 = call i32 @function_1d016()
  ret i32 %v0_1d0b1
}

define i32 @function_1d0b6() local_unnamed_addr {
dec_label_pc_1d0b6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1d0c0:
  store i32 %arg2, i32* @ebp, align 4
  %v1_1d0ed = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v12_1d0f0 = icmp eq i32 %v1_1d0ed, %arg3
  store i32 %arg1, i32* @edi, align 4
  br i1 %v12_1d0f0, label %bb, label %dec_label_pc_1d10b

bb:                                               ; preds = %dec_label_pc_1d0c0
  %v3_1d105 = call i32 @function_1d2c8(i32* %arg4)
  br label %dec_label_pc_1d10b

dec_label_pc_1d10b:                               ; preds = %dec_label_pc_1d0c0, %bb
  %v3_1d141 = phi i32 [ %v3_1d105, %bb ], [ %v1_1d0ed, %dec_label_pc_1d0c0 ]
  ret i32 %v3_1d141

; uselistorder directives
  uselistorder i32 %v1_1d0ed, { 1, 0 }
  uselistorder label %dec_label_pc_1d10b, { 1, 0 }
}

define i32 @function_1d1db() local_unnamed_addr {
dec_label_pc_1d1db:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_1d1df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d1df = xor i32 %v1_1d1df, %tmp6
  %v3_1d1df = icmp eq i32 %v2_1d1df, 0
  store i32 %v2_1d1df, i32* @ecx, align 4
  %v0_1d1e6 = load i32, i32* @edi, align 4
  store i32 %v0_1d1e6, i32* @eax, align 4
  %v1_1d1e8 = icmp eq i1 %v3_1d1df, false
  br i1 %v1_1d1e8, label %bb, label %dec_label_pc_1d1ee

bb:                                               ; preds = %dec_label_pc_1d1db
  %v2_1d1e8 = call i32 @function_1d3b2()
  br label %dec_label_pc_1d1ee

dec_label_pc_1d1ee:                               ; preds = %bb, %dec_label_pc_1d1db
  %v0_1d201 = phi i32 [ %v2_1d1e8, %bb ], [ %v0_1d1e6, %dec_label_pc_1d1db ]
  ret i32 %v0_1d201
}

define i32 @function_1d242() local_unnamed_addr {
dec_label_pc_1d242:
  %v0_1d242 = call i32 @function_89000000()
  ret i32 %v0_1d242
}

define i32 @function_1d276(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d276:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d276 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d276 = add i32 %v0_1d276, 724837452
  %v2_1d276 = inttoptr i32 %v1_1d276 to i32*
  %v3_1d276 = load i32, i32* %v2_1d276, align 4
  %v4_1d276 = add i32 %v3_1d276, -1
  store i32 %v4_1d276, i32* %v2_1d276, align 4
  %v0_1d27d = load i32, i32* %eax.global-to-local, align 4
  %v11_1d27d = and i32 %v0_1d27d, or (i32 zext (i8 ptrtoint (i32* @global_var_38.3456 to i8) to i32), i32 -256)
  %v1_1d27f = icmp eq i32 %v11_1d27d, 0
  %v2_1d281 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1d281 = select i1 %v1_1d27f, i32 %v2_1d281, i32 %v11_1d27d
  store i32 %v3_1d281, i32* %eax.global-to-local, align 4
  %v2_1d284 = icmp slt i32 %v3_1d281, 0
  %v1_1d286 = icmp eq i1 %v2_1d284, false
  br i1 %v1_1d286, label %bb, label %dec_label_pc_1d28c

bb:                                               ; preds = %dec_label_pc_1d276
  %v2_1d286 = call i32 @function_1d358()
  store i32 %v2_1d286, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1d28c

dec_label_pc_1d28c:                               ; preds = %bb, %dec_label_pc_1d276
  %v0_1d28c = load i32, i32* @esi, align 4
  %v1_1d28c = add i32 %v0_1d28c, 12
  %v2_1d28c = inttoptr i32 %v1_1d28c to i32*
  %v3_1d28c = load i32, i32* %v2_1d28c, align 4
  store i32 %v3_1d28c, i32* @eax, align 4
  %v1_1d28f = icmp eq i32 %v3_1d28c, 0
  br i1 %v1_1d28f, label %bb106, label %dec_label_pc_1d297

bb106:                                            ; preds = %dec_label_pc_1d28c
  %v1_1d291 = call i32 @function_1d380()
  store i32 %v1_1d291, i32* @eax, align 4
  br label %dec_label_pc_1d297

dec_label_pc_1d297:                               ; preds = %bb106, %dec_label_pc_1d28c
  %v0_1d29f = load i32, i32* @ecx, align 4
  %v0_1d2ab = load i32, i32* @edi, align 4
  %v2_1d2ae = call i32 @function_39eb0(i32 %v0_1d2ab, i32 %v0_1d29f)
  store i32 %v2_1d2ae, i32* %eax.global-to-local, align 4
  %v0_1d2b6 = call i32 @function_1d1db()
  store i32 %v0_1d2b6, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d2b6

; uselistorder directives
  uselistorder i32 %v11_1d27d, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 4, 3, 0 }
}

define i32 @function_1d2c0() local_unnamed_addr {
dec_label_pc_1d2c0:
  %v1_1d2c0 = load i32, i32* @edi, align 4
  %v2_1d2c0 = inttoptr i32 %v1_1d2c0 to i32*
  %v0_1d2c2 = call i32 @function_1d1db()
  ret i32 %v0_1d2c2
}

define i32 @function_1d2c8(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d2c8:
  %v0_1d2c8 = load i32, i32* @ebp, align 4
  %v1_1d2c8 = add i32 %v0_1d2c8, 20
  %v2_1d2c8 = inttoptr i32 %v1_1d2c8 to i32*
  %v3_1d2c8 = load i32, i32* %v2_1d2c8, align 4
  %v1_1d2cb = icmp eq i32 %v3_1d2c8, 0
  br i1 %v1_1d2cb, label %bb, label %dec_label_pc_1d2cf

bb:                                               ; preds = %dec_label_pc_1d2c8
  %v1_1d2cd = call i32 @function_1d308()
  %v0_1d2cf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1d2cf

dec_label_pc_1d2cf:                               ; preds = %bb, %dec_label_pc_1d2c8
  %v0_1d2cf = phi i32 [ %v0_1d2cf.pre, %bb ], [ %v0_1d2c8, %dec_label_pc_1d2c8 ]
  %v1_1d2cf = add i32 %v0_1d2cf, 16
  %v2_1d2cf = inttoptr i32 %v1_1d2cf to i32*
  %v3_1d2cf = load i32, i32* %v2_1d2cf, align 4
  %v1_1d2d6 = add i32 %v3_1d2cf, 16
  %v2_1d2d6 = inttoptr i32 %v1_1d2d6 to i32*
  %v3_1d2d6 = load i32, i32* %v2_1d2d6, align 4
  %v2_1d2dd = load i32, i32* %arg1, align 4
  %v1_1d2e2 = add i32 %v2_1d2dd, -12
  %v2_1d2e2 = inttoptr i32 %v1_1d2e2 to i32*
  %v3_1d2e2 = load i32, i32* %v2_1d2e2, align 4
  store i32 %v3_1d2e2, i32* @esi, align 4
  ret i32 %v3_1d2d6
}

define i32 @function_1d2ff() local_unnamed_addr {
dec_label_pc_1d2ff:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_1d2ff = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1d2ff = lshr i8 %v2_1d2ff, ptrtoint (i16** @global_var_4.3276 to i8)
  %v4_1d2ff = mul i8 %v2_1d2ff, 16
  %v5_1d2ff = or i8 %v3_1d2ff, %v4_1d2ff
  %v6_1d2ff = load i32, i32* %edi.global-to-local, align 4
  %v7_1d2ff = inttoptr i32 %v6_1d2ff to i8*
  store i8 %v5_1d2ff, i8* %v7_1d2ff, align 1
  %v0_1d302 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d302
}

define i32 @function_1d308() local_unnamed_addr {
dec_label_pc_1d308:
  %stack_var_72 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_1d30c = ptrtoint i32* %stack_var_72 to i32
  store i32 %v2_1d30c, i32* @eax, align 4
  %v2_1d31b = call i32 @_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE(i32 %v2_1d30c, i32 %tmp6)
  %v1_1d327 = load i32, i32* @edi, align 4
  %v2_1d327 = inttoptr i32 %v1_1d327 to i32*
  %v0_1d329 = call i32 @function_1d1db()
  ret i32 %v0_1d329
}

define i32 @function_1d33c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d33c:
  %v0_1d348 = load i32, i32* @edi, align 4
  %v2_1d34b = call i32 @function_39eb0(i32 %v0_1d348, i32 0)
  %v0_1d353 = call i32 @function_1d1db()
  ret i32 %v0_1d353
}

define i32 @function_1d358() local_unnamed_addr {
dec_label_pc_1d358:
  %stack_var_72 = alloca i32, align 4
  %v2_1d35c = ptrtoint i32* %stack_var_72 to i32
  ret i32 %v2_1d35c
}

define i32 @function_1d368(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d368:
  %v2_1d378 = call i32 @function_1d33c(i32 %arg1, i32 %arg2)
  ret i32 %v2_1d378
}

define i32 @function_1d380() local_unnamed_addr {
dec_label_pc_1d380:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_1d384 = load i32, i32* @esi, align 4
  %v2_1d38c = call i32 @function_1d33c(i32 %v0_1d384, i32 %tmp2)
  ret i32 %v2_1d38c
}

define i32 @function_1d38e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d38e:
  %v0_1d396 = load i32, i32* @eax, align 4
  %v0_1d3a2 = load i32, i32* @edi, align 4
  %v2_1d3a5 = call i32 @function_39eb0(i32 %v0_1d3a2, i32 %v0_1d396)
  %v0_1d3ad = call i32 @function_1d1db()
  ret i32 %v0_1d3ad

; uselistorder directives
  uselistorder i32 ()* @function_1d1db, { 4, 2, 0, 3, 1 }
  uselistorder i32 (i32, i32)* @function_39eb0, { 2, 1, 0 }
}

define i32 @function_1d3b2() local_unnamed_addr {
dec_label_pc_1d3b2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1d3c0:
  store i32 %arg1, i32* @eax, align 4
  %v1_1d3eb = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1d3eb = inttoptr i32 %v1_1d3eb to i32*
  %v3_1d3eb = load i32, i32* %v2_1d3eb, align 4
  %v1_1d3f5 = icmp eq i32 %v3_1d3eb, 0
  br i1 %v1_1d3f5, label %bb, label %dec_label_pc_1d3fd

bb:                                               ; preds = %dec_label_pc_1d3c0
  %v1_1d3ee = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %tmp110 = ptrtoint i32* %arg2 to i32
  %v5_1d3f7 = call i32 @function_1d50b(i32 %arg1, i32 %v1_1d3ee, i32 %tmp110)
  br label %dec_label_pc_1d3fd

dec_label_pc_1d3fd:                               ; preds = %bb, %dec_label_pc_1d3c0
  %v1_1d423 = add i32 %v3_1d3eb, 16
  %v2_1d423 = inttoptr i32 %v1_1d423 to i32*
  %v3_1d423 = load i32, i32* %v2_1d423, align 4
  ret i32 %v3_1d423

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1d452(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d452:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v15_1d456 = icmp eq i32 %tmp5, %arg1
  br i1 %v15_1d456, label %bb, label %dec_label_pc_1d45c

bb:                                               ; preds = %dec_label_pc_1d452
  %v1_1d45a = call i32 @function_1d488()
  %v0_1d45c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1d45c

dec_label_pc_1d45c:                               ; preds = %bb, %dec_label_pc_1d452
  %v0_1d45c = phi i32 [ %v0_1d45c.pre, %bb ], [ %arg1, %dec_label_pc_1d452 ]
  %v1_1d45c = add i32 %v0_1d45c, 16
  %v2_1d45c = inttoptr i32 %v1_1d45c to i32*
  %v3_1d45c = load i32, i32* %v2_1d45c, align 4
  ret i32 %v3_1d45c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1d488() local_unnamed_addr {
dec_label_pc_1d488:
  %v3_1d48c = load i32, i32* @eax, align 4
  ret i32 %v3_1d48c
}

define i32 @function_1d4f2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d4f2:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1d4f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4f2 = add i32 %v0_1d4f2, 1698440276
  %v2_1d4f2 = inttoptr i32 %v1_1d4f2 to i32*
  %v3_1d4f2 = load i32, i32* %v2_1d4f2, align 4
  %v4_1d4f2 = add i32 %v3_1d4f2, -1
  store i32 %v4_1d4f2, i32* %v2_1d4f2, align 4
  %v0_1d4f8 = load i32, i32* %edx.global-to-local, align 4
  %v1_1d4f8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d4f8 = xor i32 %v1_1d4f8, %v0_1d4f8
  %v3_1d4f8 = icmp eq i32 %v2_1d4f8, 0
  store i32 %v2_1d4f8, i32* %edx.global-to-local, align 4
  %v0_1d4fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d4fe = add i32 %v0_1d4fe, 20
  store i32 %v1_1d4fe, i32* @eax, align 4
  %v1_1d501 = icmp eq i1 %v3_1d4f8, false
  br i1 %v1_1d501, label %bb, label %dec_label_pc_1d503

bb:                                               ; preds = %dec_label_pc_1d4f2
  %v2_1d501 = call i32 @function_1d514()
  br label %dec_label_pc_1d503

dec_label_pc_1d503:                               ; preds = %bb, %dec_label_pc_1d4f2
  %v0_1d50a = phi i32 [ %v2_1d501, %bb ], [ %v1_1d4fe, %dec_label_pc_1d4f2 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1d50a

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
}

define i32 @function_1d50b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d50b:
  %v0_1d50f = call i32 @function_1d488()
  ret i32 %v0_1d50f
}

define i32 @function_1d514() local_unnamed_addr {
dec_label_pc_1d514:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d51a() local_unnamed_addr {
dec_label_pc_1d51a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d51a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d51a
}

define i32 @function_1d523() local_unnamed_addr {
dec_label_pc_1d523:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d534() local_unnamed_addr {
dec_label_pc_1d534:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d534 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d534
}

define i32 @function_1d545() local_unnamed_addr {
dec_label_pc_1d545:
  %v0_1d545 = call i32 @function_1d523()
  ret i32 %v0_1d545
}

define i32 @function_1d547() local_unnamed_addr {
dec_label_pc_1d547:
  %v0_1d54d = call i32 @function_1d523()
  ret i32 %v0_1d54d

; uselistorder directives
  uselistorder i32 ()* @function_1d523, { 1, 0 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot5IvP7CWalletRKNS0_7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_EERKSsb10ChangeTypeNS0_8functionIFvSC_SM_SO_bSP_EEEEENS2_5mutexEEEEESaISW_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d550:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d550 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d551 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d552 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d55a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d566 = load i32, i32* %arg1, align 4
  store i32 %v2_1d566, i32* %ebx.global-to-local, align 4
  %v12_1d568 = icmp eq i32 %v2_1d566, %tmp98
  %v1_1d56a = icmp eq i1 %v12_1d568, false
  br i1 %v1_1d56a, label %dec_label_pc_1d572, label %dec_label_pc_1d56c

dec_label_pc_1d56c:                               ; preds = %dec_label_pc_1d550
  %v4_1d56c = call i32 @function_1d58b(i32 %v0_1d55a, i32 %v0_1d552, i32 %v0_1d551, i32 %v0_1d550)
  ret i32 %v4_1d56c

dec_label_pc_1d572:                               ; preds = %dec_label_pc_1d550
  %v1_1d572 = inttoptr i32 %v2_1d566 to i32*
  %v2_1d572 = load i32, i32* %v1_1d572, align 4
  store i32 %v2_1d572, i32* %esi.global-to-local, align 4
  %v1_1d574 = add i32 %v2_1d566, 12
  store i32 %v1_1d574, i32* @eax, align 4
  %v1_1d57a = call i32 @function_30fb0(i32 %v1_1d574)
  ret i32 %v1_1d57a

; uselistorder directives
  uselistorder i32 %v2_1d566, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d58b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d58b:
  %v1_1d58f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d58f = xor i32 %v1_1d58f, %arg1
  %v3_1d58f = icmp eq i32 %v2_1d58f, 0
  %v1_1d596 = icmp eq i1 %v3_1d58f, false
  br i1 %v1_1d596, label %dec_label_pc_1d59f, label %dec_label_pc_1d598

dec_label_pc_1d598:                               ; preds = %dec_label_pc_1d58b
  ret i32 %v2_1d58f

dec_label_pc_1d59f:                               ; preds = %dec_label_pc_1d58b
  ret i32 %v2_1d58f

; uselistorder directives
  uselistorder i32 %v2_1d58f, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IvP7CWalletRK7uint25610ChangeTypeNS0_8functionIFvSC_SF_SG_EEEEENS2_5mutexEEEEESaISN_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d5b0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d5b0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d5b1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d5b2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d5ba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d5c6 = load i32, i32* %arg1, align 4
  store i32 %v2_1d5c6, i32* %ebx.global-to-local, align 4
  %v12_1d5c8 = icmp eq i32 %v2_1d5c6, %tmp98
  %v1_1d5ca = icmp eq i1 %v12_1d5c8, false
  br i1 %v1_1d5ca, label %dec_label_pc_1d5d2, label %dec_label_pc_1d5cc

dec_label_pc_1d5cc:                               ; preds = %dec_label_pc_1d5b0
  %v4_1d5cc = call i32 @function_1d5eb(i32 %v0_1d5ba, i32 %v0_1d5b2, i32 %v0_1d5b1, i32 %v0_1d5b0)
  ret i32 %v4_1d5cc

dec_label_pc_1d5d2:                               ; preds = %dec_label_pc_1d5b0
  %v1_1d5d2 = inttoptr i32 %v2_1d5c6 to i32*
  %v2_1d5d2 = load i32, i32* %v1_1d5d2, align 4
  store i32 %v2_1d5d2, i32* %esi.global-to-local, align 4
  %v1_1d5d4 = add i32 %v2_1d5c6, 12
  store i32 %v1_1d5d4, i32* @eax, align 4
  %v1_1d5da = call i32 @function_31010(i32 %v1_1d5d4)
  ret i32 %v1_1d5da

; uselistorder directives
  uselistorder i32 %v2_1d5c6, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d5eb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d5eb:
  %v1_1d5ef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d5ef = xor i32 %v1_1d5ef, %arg1
  %v3_1d5ef = icmp eq i32 %v2_1d5ef, 0
  %v1_1d5f6 = icmp eq i1 %v3_1d5ef, false
  br i1 %v1_1d5f6, label %dec_label_pc_1d5ff, label %dec_label_pc_1d5f8

dec_label_pc_1d5f8:                               ; preds = %dec_label_pc_1d5eb
  ret i32 %v2_1d5ef

dec_label_pc_1d5ff:                               ; preds = %dec_label_pc_1d5eb
  ret i32 %v2_1d5ef

; uselistorder directives
  uselistorder i32 %v2_1d5ef, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot3IbRKSsSC_jNS0_8functionIFbSC_SC_jEEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d610:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d610 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d611 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d612 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d61a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d626 = load i32, i32* %arg1, align 4
  store i32 %v2_1d626, i32* %ebx.global-to-local, align 4
  %v12_1d628 = icmp eq i32 %v2_1d626, %tmp98
  %v1_1d62a = icmp eq i1 %v12_1d628, false
  br i1 %v1_1d62a, label %dec_label_pc_1d632, label %dec_label_pc_1d62c

dec_label_pc_1d62c:                               ; preds = %dec_label_pc_1d610
  %v4_1d62c = call i32 @function_1d64b(i32 %v0_1d61a, i32 %v0_1d612, i32 %v0_1d611, i32 %v0_1d610)
  ret i32 %v4_1d62c

dec_label_pc_1d632:                               ; preds = %dec_label_pc_1d610
  %v1_1d632 = inttoptr i32 %v2_1d626 to i32*
  %v2_1d632 = load i32, i32* %v1_1d632, align 4
  store i32 %v2_1d632, i32* %esi.global-to-local, align 4
  %v1_1d634 = add i32 %v2_1d626, 12
  store i32 %v1_1d634, i32* @eax, align 4
  %v1_1d63a = call i32 @function_31070(i32 %v1_1d634)
  ret i32 %v1_1d63a

; uselistorder directives
  uselistorder i32 %v2_1d626, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d64b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d64b:
  %v1_1d64f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d64f = xor i32 %v1_1d64f, %arg1
  %v3_1d64f = icmp eq i32 %v2_1d64f, 0
  %v1_1d656 = icmp eq i1 %v3_1d64f, false
  br i1 %v1_1d656, label %dec_label_pc_1d65f, label %dec_label_pc_1d658

dec_label_pc_1d658:                               ; preds = %dec_label_pc_1d64b
  ret i32 %v2_1d64f

dec_label_pc_1d65f:                               ; preds = %dec_label_pc_1d64b
  ret i32 %v2_1d64f

; uselistorder directives
  uselistorder i32 %v2_1d64f, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbxNS0_8functionIFbxEEEEENS2_5mutexEEEEESaISH_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d670:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d670 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d671 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d672 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d67a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d686 = load i32, i32* %arg1, align 4
  store i32 %v2_1d686, i32* %ebx.global-to-local, align 4
  %v12_1d688 = icmp eq i32 %v2_1d686, %tmp98
  %v1_1d68a = icmp eq i1 %v12_1d688, false
  br i1 %v1_1d68a, label %dec_label_pc_1d692, label %dec_label_pc_1d68c

dec_label_pc_1d68c:                               ; preds = %dec_label_pc_1d670
  %v4_1d68c = call i32 @function_1d6ab(i32 %v0_1d67a, i32 %v0_1d672, i32 %v0_1d671, i32 %v0_1d670)
  ret i32 %v4_1d68c

dec_label_pc_1d692:                               ; preds = %dec_label_pc_1d670
  %v1_1d692 = inttoptr i32 %v2_1d686 to i32*
  %v2_1d692 = load i32, i32* %v1_1d692, align 4
  store i32 %v2_1d692, i32* %esi.global-to-local, align 4
  %v1_1d694 = add i32 %v2_1d686, 12
  store i32 %v1_1d694, i32* @eax, align 4
  %v1_1d69a = call i32 @function_310d0(i32 %v1_1d694)
  ret i32 %v1_1d69a

; uselistorder directives
  uselistorder i32 %v2_1d686, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d6ab(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d6ab:
  %v1_1d6af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d6af = xor i32 %v1_1d6af, %arg1
  %v3_1d6af = icmp eq i32 %v2_1d6af, 0
  %v1_1d6b6 = icmp eq i1 %v3_1d6af, false
  br i1 %v1_1d6b6, label %dec_label_pc_1d6bf, label %dec_label_pc_1d6b8

dec_label_pc_1d6b8:                               ; preds = %dec_label_pc_1d6ab
  ret i32 %v2_1d6af

dec_label_pc_1d6bf:                               ; preds = %dec_label_pc_1d6ab
  ret i32 %v2_1d6af

; uselistorder directives
  uselistorder i32 %v2_1d6af, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IvRKSsNS0_8functionIFvSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d6d0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d6d0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d6d1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d6d2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d6da = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d6e6 = load i32, i32* %arg1, align 4
  store i32 %v2_1d6e6, i32* %ebx.global-to-local, align 4
  %v12_1d6e8 = icmp eq i32 %v2_1d6e6, %tmp98
  %v1_1d6ea = icmp eq i1 %v12_1d6e8, false
  br i1 %v1_1d6ea, label %dec_label_pc_1d6f2, label %dec_label_pc_1d6ec

dec_label_pc_1d6ec:                               ; preds = %dec_label_pc_1d6d0
  %v4_1d6ec = call i32 @function_1d70b(i32 %v0_1d6da, i32 %v0_1d6d2, i32 %v0_1d6d1, i32 %v0_1d6d0)
  ret i32 %v4_1d6ec

dec_label_pc_1d6f2:                               ; preds = %dec_label_pc_1d6d0
  %v1_1d6f2 = inttoptr i32 %v2_1d6e6 to i32*
  %v2_1d6f2 = load i32, i32* %v1_1d6f2, align 4
  store i32 %v2_1d6f2, i32* %esi.global-to-local, align 4
  %v1_1d6f4 = add i32 %v2_1d6e6, 12
  store i32 %v1_1d6f4, i32* @eax, align 4
  %v1_1d6fa = call i32 @function_31130(i32 %v1_1d6f4)
  ret i32 %v1_1d6fa

; uselistorder directives
  uselistorder i32 %v2_1d6e6, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d70b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d70b:
  %v1_1d70f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d70f = xor i32 %v1_1d70f, %arg1
  %v3_1d70f = icmp eq i32 %v2_1d70f, 0
  %v1_1d716 = icmp eq i1 %v3_1d70f, false
  br i1 %v1_1d716, label %dec_label_pc_1d71f, label %dec_label_pc_1d718

dec_label_pc_1d718:                               ; preds = %dec_label_pc_1d70b
  ret i32 %v2_1d70f

dec_label_pc_1d71f:                               ; preds = %dec_label_pc_1d70b
  ret i32 %v2_1d70f

; uselistorder directives
  uselistorder i32 %v2_1d70f, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d730:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d730 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d731 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d732 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d73a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d746 = load i32, i32* %arg1, align 4
  store i32 %v2_1d746, i32* %ebx.global-to-local, align 4
  %v12_1d748 = icmp eq i32 %v2_1d746, %tmp98
  %v1_1d74a = icmp eq i1 %v12_1d748, false
  br i1 %v1_1d74a, label %dec_label_pc_1d752, label %dec_label_pc_1d74c

dec_label_pc_1d74c:                               ; preds = %dec_label_pc_1d730
  %v4_1d74c = call i32 @function_1d76b(i32 %v0_1d73a, i32 %v0_1d732, i32 %v0_1d731, i32 %v0_1d730)
  ret i32 %v4_1d74c

dec_label_pc_1d752:                               ; preds = %dec_label_pc_1d730
  %v1_1d752 = inttoptr i32 %v2_1d746 to i32*
  %v2_1d752 = load i32, i32* %v1_1d752, align 4
  store i32 %v2_1d752, i32* %esi.global-to-local, align 4
  %v1_1d754 = add i32 %v2_1d746, 12
  store i32 %v1_1d754, i32* @eax, align 4
  %v1_1d75a = call i32 @function_31190(i32 %v1_1d754)
  ret i32 %v1_1d75a

; uselistorder directives
  uselistorder i32 %v2_1d746, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d76b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d76b:
  %v1_1d76f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d76f = xor i32 %v1_1d76f, %arg1
  %v3_1d76f = icmp eq i32 %v2_1d76f, 0
  %v1_1d776 = icmp eq i1 %v3_1d76f, false
  br i1 %v1_1d776, label %dec_label_pc_1d77f, label %dec_label_pc_1d778

dec_label_pc_1d778:                               ; preds = %dec_label_pc_1d76b
  ret i32 %v2_1d76f

dec_label_pc_1d77f:                               ; preds = %dec_label_pc_1d76b
  ret i32 %v2_1d76f

; uselistorder directives
  uselistorder i32 %v2_1d76f, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot0IvNS0_8functionIFvvEEEEENS2_5mutexEEEEESaISH_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d790:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d790 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d791 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d792 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d79a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d7a6 = load i32, i32* %arg1, align 4
  store i32 %v2_1d7a6, i32* %ebx.global-to-local, align 4
  %v12_1d7a8 = icmp eq i32 %v2_1d7a6, %tmp98
  %v1_1d7aa = icmp eq i1 %v12_1d7a8, false
  br i1 %v1_1d7aa, label %dec_label_pc_1d7b2, label %dec_label_pc_1d7ac

dec_label_pc_1d7ac:                               ; preds = %dec_label_pc_1d790
  %v4_1d7ac = call i32 @function_1d7cb(i32 %v0_1d79a, i32 %v0_1d792, i32 %v0_1d791, i32 %v0_1d790)
  ret i32 %v4_1d7ac

dec_label_pc_1d7b2:                               ; preds = %dec_label_pc_1d790
  %v1_1d7b2 = inttoptr i32 %v2_1d7a6 to i32*
  %v2_1d7b2 = load i32, i32* %v1_1d7b2, align 4
  store i32 %v2_1d7b2, i32* %esi.global-to-local, align 4
  %v1_1d7b4 = add i32 %v2_1d7a6, 12
  store i32 %v1_1d7b4, i32* @eax, align 4
  %v1_1d7ba = call i32 @function_311f0(i32 %v1_1d7b4)
  ret i32 %v1_1d7ba

; uselistorder directives
  uselistorder i32 %v2_1d7a6, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d7cb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d7cb:
  %v1_1d7cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d7cf = xor i32 %v1_1d7cf, %arg1
  %v3_1d7cf = icmp eq i32 %v2_1d7cf, 0
  %v1_1d7d6 = icmp eq i1 %v3_1d7cf, false
  br i1 %v1_1d7d6, label %dec_label_pc_1d7df, label %dec_label_pc_1d7d8

dec_label_pc_1d7d8:                               ; preds = %dec_label_pc_1d7cb
  ret i32 %v2_1d7cf

dec_label_pc_1d7df:                               ; preds = %dec_label_pc_1d7cb
  ret i32 %v2_1d7cf

; uselistorder directives
  uselistorder i32 %v2_1d7cf, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IviNS0_8functionIFviEEEEENS2_5mutexEEEEESaISH_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d7f0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d7f0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d7f1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d7f2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d7fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d806 = load i32, i32* %arg1, align 4
  store i32 %v2_1d806, i32* %ebx.global-to-local, align 4
  %v12_1d808 = icmp eq i32 %v2_1d806, %tmp98
  %v1_1d80a = icmp eq i1 %v12_1d808, false
  br i1 %v1_1d80a, label %dec_label_pc_1d812, label %dec_label_pc_1d80c

dec_label_pc_1d80c:                               ; preds = %dec_label_pc_1d7f0
  %v4_1d80c = call i32 @function_1d82b(i32 %v0_1d7fa, i32 %v0_1d7f2, i32 %v0_1d7f1, i32 %v0_1d7f0)
  ret i32 %v4_1d80c

dec_label_pc_1d812:                               ; preds = %dec_label_pc_1d7f0
  %v1_1d812 = inttoptr i32 %v2_1d806 to i32*
  %v2_1d812 = load i32, i32* %v1_1d812, align 4
  store i32 %v2_1d812, i32* %esi.global-to-local, align 4
  %v1_1d814 = add i32 %v2_1d806, 12
  store i32 %v1_1d814, i32* @eax, align 4
  %v1_1d81a = call i32 @function_31250(i32 %v1_1d814)
  ret i32 %v1_1d81a

; uselistorder directives
  uselistorder i32 %v2_1d806, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d82b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d82b:
  %v1_1d82f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d82f = xor i32 %v1_1d82f, %arg1
  %v3_1d82f = icmp eq i32 %v2_1d82f, 0
  %v1_1d836 = icmp eq i1 %v3_1d82f, false
  br i1 %v1_1d836, label %dec_label_pc_1d83f, label %dec_label_pc_1d838

dec_label_pc_1d838:                               ; preds = %dec_label_pc_1d82b
  ret i32 %v2_1d82f

dec_label_pc_1d83f:                               ; preds = %dec_label_pc_1d82b
  ret i32 %v2_1d82f

; uselistorder directives
  uselistorder i32 %v2_1d82f, { 1, 0, 2 }
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS0_8functionIFvSD_SE_EEEEENS2_5mutexEEEEESaISL_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d850:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp98 = ptrtoint i32* %arg1 to i32
  %v0_1d850 = load i32, i32* %edi.global-to-local, align 4
  %v0_1d851 = load i32, i32* %esi.global-to-local, align 4
  %v0_1d852 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp98, i32* %edi.global-to-local, align 4
  %v0_1d85a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d866 = load i32, i32* %arg1, align 4
  store i32 %v2_1d866, i32* %ebx.global-to-local, align 4
  %v12_1d868 = icmp eq i32 %v2_1d866, %tmp98
  %v1_1d86a = icmp eq i1 %v12_1d868, false
  br i1 %v1_1d86a, label %dec_label_pc_1d872, label %dec_label_pc_1d86c

dec_label_pc_1d86c:                               ; preds = %dec_label_pc_1d850
  %v4_1d86c = call i32 @function_1d88b(i32 %v0_1d85a, i32 %v0_1d852, i32 %v0_1d851, i32 %v0_1d850)
  ret i32 %v4_1d86c

dec_label_pc_1d872:                               ; preds = %dec_label_pc_1d850
  %v1_1d872 = inttoptr i32 %v2_1d866 to i32*
  %v2_1d872 = load i32, i32* %v1_1d872, align 4
  store i32 %v2_1d872, i32* %esi.global-to-local, align 4
  %v1_1d874 = add i32 %v2_1d866, 12
  store i32 %v1_1d874, i32* @eax, align 4
  %v1_1d87a = call i32 @function_312b0(i32 %v1_1d874)
  ret i32 %v1_1d87a

; uselistorder directives
  uselistorder i32 %v2_1d866, { 2, 1, 0, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1d88b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d88b:
  %v1_1d88f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d88f = xor i32 %v1_1d88f, %arg1
  %v3_1d88f = icmp eq i32 %v2_1d88f, 0
  %v1_1d896 = icmp eq i1 %v3_1d88f, false
  br i1 %v1_1d896, label %dec_label_pc_1d89f, label %dec_label_pc_1d898

dec_label_pc_1d898:                               ; preds = %dec_label_pc_1d88b
  ret i32 %v2_1d88f

dec_label_pc_1d89f:                               ; preds = %dec_label_pc_1d88b
  ret i32 %v2_1d88f

; uselistorder directives
  uselistorder i32 %v2_1d88f, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1d8b0:
  %v1_1d8d4 = icmp eq i32 %arg3, 0
  store i32 %arg5, i32* @edi, align 4
  br i1 %v1_1d8d4, label %bb, label %dec_label_pc_1d8f5

bb:                                               ; preds = %dec_label_pc_1d8b0
  %v3_1d8ef = call i32 @function_1d978(i32 sext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32))
  br label %dec_label_pc_1d8f5

dec_label_pc_1d8f5:                               ; preds = %bb, %dec_label_pc_1d8b0
  %v2_1d8f5 = phi i32 [ %v3_1d8ef, %bb ], [ %arg4, %dec_label_pc_1d8b0 ]
  ret i32 %v2_1d8f5

; uselistorder directives
  uselistorder i32 sext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32), { 1, 0, 2 }
}

define i32 @function_1d902() local_unnamed_addr {
dec_label_pc_1d902:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d902 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d902
}

define i32 @function_1d949(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d949:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1d949 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1d949 = add i32 %v0_1d949, 340165608
  %v2_1d949 = inttoptr i32 %v1_1d949 to i32*
  %v3_1d949 = load i32, i32* %v2_1d949, align 4
  %v4_1d949 = add i32 %v3_1d949, -1
  store i32 %v4_1d949, i32* %v2_1d949, align 4
  %v0_1d94f = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d94f = add i32 %v0_1d94f, 1698440276
  %v2_1d94f = inttoptr i32 %v1_1d94f to i32*
  %v3_1d94f = load i32, i32* %v2_1d94f, align 4
  %v4_1d94f = load i32, i32* %ecx.global-to-local, align 4
  %v5_1d94f = add i32 %v4_1d94f, %v3_1d94f
  store i32 %v5_1d94f, i32* %v2_1d94f, align 4
  %v0_1d955 = load i32, i32* %edx.global-to-local, align 4
  %v1_1d955 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d955 = xor i32 %v1_1d955, %v0_1d955
  %v3_1d955 = icmp eq i32 %v2_1d955, 0
  store i32 %v2_1d955, i32* %edx.global-to-local, align 4
  %v0_1d95b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1d95b = load i32, i32* %ebp.global-to-local, align 4
  %v2_1d95b = inttoptr i32 %v1_1d95b to i32*
  store i32 %v0_1d95b, i32* %v2_1d95b, align 4
  %v1_1d95e = icmp eq i1 %v3_1d955, false
  br i1 %v1_1d95e, label %bb, label %dec_label_pc_1d949.dec_label_pc_1d960_crit_edge

dec_label_pc_1d949.dec_label_pc_1d960_crit_edge:  ; preds = %dec_label_pc_1d949
  %v0_1d973.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1d960

bb:                                               ; preds = %dec_label_pc_1d949
  %v2_1d95e = call i32 @function_1d9c2()
  br label %dec_label_pc_1d960

dec_label_pc_1d960:                               ; preds = %dec_label_pc_1d949.dec_label_pc_1d960_crit_edge, %bb
  %v0_1d973 = phi i32 [ %v0_1d973.pre, %dec_label_pc_1d949.dec_label_pc_1d960_crit_edge ], [ %v2_1d95e, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1d973

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_1d960, { 1, 0 }
}

define i32 @function_1d978(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d978:
  %v2_1d989 = load i32, i32* @edi, align 4
  ret i32 %v2_1d989
}

define i32 @function_1d9ac() local_unnamed_addr {
dec_label_pc_1d9ac:
  %eax.global-to-local = alloca i32, align 4
  %v4_1d9ac = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_1d9ac
}

define i32 @function_1d9ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d9ae:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1d9af = load i32, i32* %eax.global-to-local, align 4
  %v11_1d9af = and i32 %v0_1d9af, -240
  %v1_1d9b1 = icmp eq i32 %v11_1d9af, 0
  %v2_1d9b3 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1d9b3 = select i1 %v1_1d9b1, i32 %v2_1d9b3, i32 %v0_1d9af
  %tmp100 = icmp slt i32 %v3_1d9b3, 0
  %v2_1d9b6 = zext i1 %tmp100 to i32
  store i32 %v2_1d9b6, i32* %eax.global-to-local, align 4
  ret i32 %v2_1d9b6

; uselistorder directives
  uselistorder i32 %v2_1d9b6, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1d9c2() local_unnamed_addr {
dec_label_pc_1d9c2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d9d7() local_unnamed_addr {
dec_label_pc_1d9d7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d9ec() local_unnamed_addr {
dec_label_pc_1d9ec:
  %v0_1d9ec = call i32 @function_1d9d7()
  ret i32 %v0_1d9ec
}

define i32 @function_1d9ef() local_unnamed_addr {
dec_label_pc_1d9ef:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d9ef = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d9ef
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_1da00:
  store i32 0, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v1_1da2f = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1da2f = inttoptr i32 %v1_1da2f to i32*
  %v3_1da2f = load i32, i32* %v2_1da2f, align 4
  %v1_1da32 = icmp eq i32 %v3_1da2f, 0
  br i1 %v1_1da32, label %bb, label %dec_label_pc_1da3a

bb:                                               ; preds = %dec_label_pc_1da00
  %tmp106 = ptrtoint i32* %arg3 to i32
  %v4_1da34 = call i32 @function_1daf5(i32 %arg1, i32 %arg2, i32 %tmp106)
  br label %dec_label_pc_1da3a

dec_label_pc_1da3a:                               ; preds = %bb, %dec_label_pc_1da00
  %v2_1da3e = load i32, i32* %arg3, align 4
  ret i32 %v2_1da3e

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_1da9d() local_unnamed_addr {
dec_label_pc_1da9d:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp4
}

define i32 @function_1daa5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1daa5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1dabe() local_unnamed_addr {
dec_label_pc_1dabe:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1dabe = load i32, i32* %ebx.global-to-local, align 4
  %v1_1dabe = add i32 %v0_1dabe, -2060966828
  %v2_1dabe = inttoptr i32 %v1_1dabe to i32*
  %v3_1dabe = load i32, i32* %v2_1dabe, align 4
  %v4_1dabe = sub i32 %v3_1dabe, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1dabe, i32* %v2_1dabe, align 4
  %v2_1dac4 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1dac4 = lshr i8 %v2_1dac4, ptrtoint (i16** @global_var_4.3276 to i8)
  %v4_1dac4 = mul i8 %v2_1dac4, 16
  %v5_1dac4 = or i8 %v3_1dac4, %v4_1dac4
  %v6_1dac4 = load i32, i32* %edi.global-to-local, align 4
  %v7_1dac4 = inttoptr i32 %v6_1dac4 to i8*
  store i8 %v5_1dac4, i8* %v7_1dac4, align 1
  %v0_1dac7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1dac7
}

define i32 @function_1dad6() local_unnamed_addr {
dec_label_pc_1dad6:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_1dada = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1dada = icmp eq i32 %v1_1dada, %tmp11
  %v1_1dae5 = icmp eq i1 %v3_1dada, false
  br i1 %v1_1dae5, label %bb, label %dec_label_pc_1daeb

bb:                                               ; preds = %dec_label_pc_1dad6
  %v2_1dae5 = call i32 @function_1db76()
  br label %dec_label_pc_1daeb

dec_label_pc_1daeb:                               ; preds = %bb, %dec_label_pc_1dad6
  %v0_1daf2 = phi i32 [ %v2_1dae5, %bb ], [ %tmp10, %dec_label_pc_1dad6 ]
  ret i32 %v0_1daf2
}

define i32 @function_1daf5(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1daf5:
  %v0_1daf5 = load i32, i32* @edx, align 4
  %v1_1daf7 = add i32 %v0_1daf5, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_1daf7, i32* @edi, align 4
  %v2_1db04 = add i32 %arg1, 12
  %v3_1db04 = inttoptr i32 %v2_1db04 to i32*
  %v4_1db04 = load i32, i32* %v3_1db04, align 4
  %v15_1db04 = icmp eq i32 %v1_1daf7, %v4_1db04
  br i1 %v15_1db04, label %bb, label %dec_label_pc_1daf5.dec_label_pc_1db09_crit_edge

dec_label_pc_1daf5.dec_label_pc_1db09_crit_edge:  ; preds = %dec_label_pc_1daf5
  %v4_1db09.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1db09

bb:                                               ; preds = %dec_label_pc_1daf5
  %v1_1db07 = call i32 @function_1db38()
  br label %dec_label_pc_1db09

dec_label_pc_1db09:                               ; preds = %dec_label_pc_1daf5.dec_label_pc_1db09_crit_edge, %bb
  %v4_1db09 = phi i32 [ %v4_1db09.pre, %dec_label_pc_1daf5.dec_label_pc_1db09_crit_edge ], [ %v1_1db07, %bb ]
  ret i32 %v4_1db09

; uselistorder directives
  uselistorder label %dec_label_pc_1db09, { 1, 0 }
}

define i32 @function_1db10() local_unnamed_addr {
dec_label_pc_1db10:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1db10 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1db10 = add i32 %v0_1db10, 608472002
  %v2_1db10 = inttoptr i32 %v1_1db10 to i32*
  %v3_1db10 = load i32, i32* %v2_1db10, align 4
  %v4_1db10 = add i32 %v3_1db10, -1
  store i32 %v4_1db10, i32* %v2_1db10, align 4
  %v0_1db1c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1db1c = add i32 %v0_1db1c, -12
  %v2_1db1c = inttoptr i32 %v1_1db1c to i32*
  %v3_1db1c = load i32, i32* %v2_1db1c, align 4
  %v0_1db1f = load i32, i32* %eax.global-to-local, align 4
  %v1_1db1f = add i32 %v0_1db1f, -12
  %v2_1db1f = inttoptr i32 %v1_1db1f to i32*
  %v3_1db1f = load i32, i32* %v2_1db1f, align 4
  %tmp98 = icmp ule i32 %v3_1db1f, %v3_1db1c
  %v5_1db2a = select i1 %tmp98, i32 %v3_1db1f, i32 %v3_1db1c
  store i32 %v5_1db2a, i32* @eax, align 4
  %v1_1db2d = call i32 @function_1daa5(i32 %v0_1db1f)
  store i32 %v1_1db2d, i32* %eax.global-to-local, align 4
  ret i32 %v1_1db2d

; uselistorder directives
  uselistorder i32 %v3_1db1f, { 1, 0 }
  uselistorder i32 %v3_1db1c, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1db38() local_unnamed_addr {
dec_label_pc_1db38:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_60 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v2_1db3c = ptrtoint i32* %stack_var_60 to i32
  store i32 %v2_1db3c, i32* @eax, align 4
  %v0_1db43 = load i32, i32* @edi, align 4
  %v5_1db5b = call i32 @function_3b2b0(i32 %v2_1db3c, i32 %tmp3, i32 0, i32 %v0_1db43, i32 %tmp9)
  %v2_1db6b = inttoptr i32 %tmp to i32*
  %v0_1db6d = load i32, i32* %edx.global-to-local, align 4
  %v1_1db6d = add i32 %v0_1db6d, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1db6d = inttoptr i32 %v1_1db6d to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_1db6d, align 1
  %v0_1db71 = call i32 @function_1dad6()
  ret i32 %v0_1db71
}

define i32 @function_1db76() local_unnamed_addr {
dec_label_pc_1db76:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1db80:
  store i32 %arg2, i32* @ebp, align 4
  %v1_1dbad = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v12_1dbb0 = icmp eq i32 %v1_1dbad, %arg3
  store i32 %arg1, i32* @edi, align 4
  br i1 %v12_1dbb0, label %bb, label %dec_label_pc_1dbcb

bb:                                               ; preds = %dec_label_pc_1db80
  %v3_1dbc5 = call i32 @function_1dd88(i32* %arg4)
  br label %dec_label_pc_1dbcb

dec_label_pc_1dbcb:                               ; preds = %dec_label_pc_1db80, %bb
  %v3_1dc01 = phi i32 [ %v3_1dbc5, %bb ], [ %v1_1dbad, %dec_label_pc_1db80 ]
  ret i32 %v3_1dc01

; uselistorder directives
  uselistorder i32 %v1_1dbad, { 1, 0 }
  uselistorder label %dec_label_pc_1dbcb, { 1, 0 }
}

define i32 @function_1dc9b() local_unnamed_addr {
dec_label_pc_1dc9b:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_1dc9f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1dc9f = xor i32 %v1_1dc9f, %tmp6
  %v3_1dc9f = icmp eq i32 %v2_1dc9f, 0
  store i32 %v2_1dc9f, i32* @ecx, align 4
  %v0_1dca6 = load i32, i32* @edi, align 4
  store i32 %v0_1dca6, i32* @eax, align 4
  %v1_1dca8 = icmp eq i1 %v3_1dc9f, false
  br i1 %v1_1dca8, label %bb, label %dec_label_pc_1dcae

bb:                                               ; preds = %dec_label_pc_1dc9b
  %v2_1dca8 = call i32 @function_1de72()
  br label %dec_label_pc_1dcae

dec_label_pc_1dcae:                               ; preds = %bb, %dec_label_pc_1dc9b
  %v0_1dcc1 = phi i32 [ %v2_1dca8, %bb ], [ %v0_1dca6, %dec_label_pc_1dc9b ]
  ret i32 %v0_1dcc1
}

define i32 @function_1dd02() local_unnamed_addr {
dec_label_pc_1dd02:
  %v0_1dd02 = call i32 @function_89000000()
  ret i32 %v0_1dd02

; uselistorder directives
  uselistorder i32 ()* @function_89000000, { 1, 0 }
}

define i32 @function_1dd36(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dd36:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1dd36 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1dd36 = add i32 %v0_1dd36, 724837452
  %v2_1dd36 = inttoptr i32 %v1_1dd36 to i32*
  %v3_1dd36 = load i32, i32* %v2_1dd36, align 4
  %v4_1dd36 = add i32 %v3_1dd36, -1
  store i32 %v4_1dd36, i32* %v2_1dd36, align 4
  %v0_1dd3d = load i32, i32* %eax.global-to-local, align 4
  %v11_1dd3d = and i32 %v0_1dd3d, or (i32 zext (i8 ptrtoint (i32* @global_var_38.3456 to i8) to i32), i32 -256)
  %v1_1dd3f = icmp eq i32 %v11_1dd3d, 0
  %v2_1dd41 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1dd41 = select i1 %v1_1dd3f, i32 %v2_1dd41, i32 %v11_1dd3d
  store i32 %v3_1dd41, i32* %eax.global-to-local, align 4
  %v2_1dd44 = icmp slt i32 %v3_1dd41, 0
  %v1_1dd46 = icmp eq i1 %v2_1dd44, false
  br i1 %v1_1dd46, label %bb, label %dec_label_pc_1dd4c

bb:                                               ; preds = %dec_label_pc_1dd36
  %v2_1dd46 = call i32 @function_1de18()
  store i32 %v2_1dd46, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1dd4c

dec_label_pc_1dd4c:                               ; preds = %bb, %dec_label_pc_1dd36
  %v0_1dd4c = load i32, i32* @esi, align 4
  %v1_1dd4c = add i32 %v0_1dd4c, 12
  %v2_1dd4c = inttoptr i32 %v1_1dd4c to i32*
  %v3_1dd4c = load i32, i32* %v2_1dd4c, align 4
  store i32 %v3_1dd4c, i32* @eax, align 4
  %v1_1dd4f = icmp eq i32 %v3_1dd4c, 0
  br i1 %v1_1dd4f, label %bb106, label %dec_label_pc_1dd57

bb106:                                            ; preds = %dec_label_pc_1dd4c
  %v1_1dd51 = call i32 @function_1de40()
  store i32 %v1_1dd51, i32* @eax, align 4
  br label %dec_label_pc_1dd57

dec_label_pc_1dd57:                               ; preds = %bb106, %dec_label_pc_1dd4c
  %v0_1dd5f = load i32, i32* @ecx, align 4
  %v0_1dd6b = load i32, i32* @edi, align 4
  %v2_1dd6e = call i32 @function_3b430(i32 %v0_1dd6b, i32 %v0_1dd5f)
  store i32 %v2_1dd6e, i32* %eax.global-to-local, align 4
  %v0_1dd76 = call i32 @function_1dc9b()
  store i32 %v0_1dd76, i32* %eax.global-to-local, align 4
  ret i32 %v0_1dd76

; uselistorder directives
  uselistorder i32 %v11_1dd3d, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 4, 3, 0 }
}

define i32 @function_1dd80() local_unnamed_addr {
dec_label_pc_1dd80:
  %v1_1dd80 = load i32, i32* @edi, align 4
  %v2_1dd80 = inttoptr i32 %v1_1dd80 to i32*
  %v0_1dd82 = call i32 @function_1dc9b()
  ret i32 %v0_1dd82
}

define i32 @function_1dd88(i32* %arg1) local_unnamed_addr {
dec_label_pc_1dd88:
  %v0_1dd88 = load i32, i32* @ebp, align 4
  %v1_1dd88 = add i32 %v0_1dd88, 20
  %v2_1dd88 = inttoptr i32 %v1_1dd88 to i32*
  %v3_1dd88 = load i32, i32* %v2_1dd88, align 4
  %v1_1dd8b = icmp eq i32 %v3_1dd88, 0
  br i1 %v1_1dd8b, label %bb, label %dec_label_pc_1dd8f

bb:                                               ; preds = %dec_label_pc_1dd88
  %v1_1dd8d = call i32 @function_1ddc8()
  %v0_1dd8f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1dd8f

dec_label_pc_1dd8f:                               ; preds = %bb, %dec_label_pc_1dd88
  %v0_1dd8f = phi i32 [ %v0_1dd8f.pre, %bb ], [ %v0_1dd88, %dec_label_pc_1dd88 ]
  %v1_1dd8f = add i32 %v0_1dd8f, 16
  %v2_1dd8f = inttoptr i32 %v1_1dd8f to i32*
  %v3_1dd8f = load i32, i32* %v2_1dd8f, align 4
  %v1_1dd96 = add i32 %v3_1dd8f, 16
  %v2_1dd96 = inttoptr i32 %v1_1dd96 to i32*
  %v3_1dd96 = load i32, i32* %v2_1dd96, align 4
  %v2_1dd9d = load i32, i32* %arg1, align 4
  %v1_1dda2 = add i32 %v2_1dd9d, -12
  %v2_1dda2 = inttoptr i32 %v1_1dda2 to i32*
  %v3_1dda2 = load i32, i32* %v2_1dda2, align 4
  store i32 %v3_1dda2, i32* @esi, align 4
  ret i32 %v3_1dd96
}

define i32 @function_1ddbf() local_unnamed_addr {
dec_label_pc_1ddbf:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_1ddbf = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_1ddbf = lshr i8 %v2_1ddbf, ptrtoint (i16** @global_var_4.3276 to i8)
  %v4_1ddbf = mul i8 %v2_1ddbf, 16
  %v5_1ddbf = or i8 %v3_1ddbf, %v4_1ddbf
  %v6_1ddbf = load i32, i32* %edi.global-to-local, align 4
  %v7_1ddbf = inttoptr i32 %v6_1ddbf to i8*
  store i8 %v5_1ddbf, i8* %v7_1ddbf, align 1
  %v0_1ddc2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ddc2
}

define i32 @function_1ddc8() local_unnamed_addr {
dec_label_pc_1ddc8:
  %stack_var_72 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_1ddcc = ptrtoint i32* %stack_var_72 to i32
  store i32 %v2_1ddcc, i32* @eax, align 4
  %v2_1dddb = call i32 @function_3b580(i32 %v2_1ddcc, i32 %tmp6)
  %v1_1dde7 = load i32, i32* @edi, align 4
  %v2_1dde7 = inttoptr i32 %v1_1dde7 to i32*
  %v0_1dde9 = call i32 @function_1dc9b()
  ret i32 %v0_1dde9
}

define i32 @function_1ddfc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ddfc:
  %v0_1de08 = load i32, i32* @edi, align 4
  %v2_1de0b = call i32 @function_3b430(i32 %v0_1de08, i32 0)
  %v0_1de13 = call i32 @function_1dc9b()
  ret i32 %v0_1de13
}

define i32 @function_1de18() local_unnamed_addr {
dec_label_pc_1de18:
  %stack_var_72 = alloca i32, align 4
  %v2_1de1c = ptrtoint i32* %stack_var_72 to i32
  ret i32 %v2_1de1c
}

define i32 @function_1de28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1de28:
  %v2_1de38 = call i32 @function_1ddfc(i32 %arg1, i32 %arg2)
  ret i32 %v2_1de38
}

define i32 @function_1de40() local_unnamed_addr {
dec_label_pc_1de40:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_1de44 = load i32, i32* @esi, align 4
  %v2_1de4c = call i32 @function_1ddfc(i32 %v0_1de44, i32 %tmp2)
  ret i32 %v2_1de4c
}

define i32 @function_1de4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1de4e:
  %v0_1de56 = load i32, i32* @eax, align 4
  %v0_1de62 = load i32, i32* @edi, align 4
  %v2_1de65 = call i32 @function_3b430(i32 %v0_1de62, i32 %v0_1de56)
  %v0_1de6d = call i32 @function_1dc9b()
  ret i32 %v0_1de6d

; uselistorder directives
  uselistorder i32 ()* @function_1dc9b, { 4, 2, 0, 3, 1 }
  uselistorder i32 (i32, i32)* @function_3b430, { 2, 1, 0 }
}

define i32 @function_1de72() local_unnamed_addr {
dec_label_pc_1de72:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEEixERS6_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1de80:
  store i32 %arg1, i32* @eax, align 4
  %v1_1deab = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1deab = inttoptr i32 %v1_1deab to i32*
  %v3_1deab = load i32, i32* %v2_1deab, align 4
  %v1_1deb5 = icmp eq i32 %v3_1deab, 0
  br i1 %v1_1deb5, label %bb, label %dec_label_pc_1debd

bb:                                               ; preds = %dec_label_pc_1de80
  %v1_1deae = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %tmp110 = ptrtoint i32* %arg2 to i32
  %v5_1deb7 = call i32 @function_1e02f(i32 %arg1, i32 %v1_1deae, i32 %tmp110)
  br label %dec_label_pc_1debd

dec_label_pc_1debd:                               ; preds = %bb, %dec_label_pc_1de80
  %v1_1dee3 = add i32 %v3_1deab, 16
  %v2_1dee3 = inttoptr i32 %v1_1dee3 to i32*
  %v3_1dee3 = load i32, i32* %v2_1dee3, align 4
  ret i32 %v3_1dee3

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1df12(i32 %arg1) local_unnamed_addr {
dec_label_pc_1df12:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v15_1df16 = icmp eq i32 %tmp5, %arg1
  br i1 %v15_1df16, label %bb, label %dec_label_pc_1df1c

bb:                                               ; preds = %dec_label_pc_1df12
  %v1_1df1a = call i32 @function_1df4c()
  %v0_1df1c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1df1c

dec_label_pc_1df1c:                               ; preds = %bb, %dec_label_pc_1df12
  %v0_1df1c = phi i32 [ %v0_1df1c.pre, %bb ], [ %arg1, %dec_label_pc_1df12 ]
  %v1_1df1c = add i32 %v0_1df1c, 16
  %v2_1df1c = inttoptr i32 %v1_1df1c to i32*
  %v3_1df1c = load i32, i32* %v2_1df1c, align 4
  ret i32 %v3_1df1c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1df45(i16 %arg1) local_unnamed_addr {
dec_label_pc_1df45:
  %eax.global-to-local = alloca i32, align 4
  %tmp94 = call i32 @__decompiler_undefined_function_0()
  %v7_1df45 = inttoptr i32 %tmp94 to i8*
  store i8 -1, i8* %v7_1df45, align 1
  %v6_1df48 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_1df48
}

define i32 @function_1df4c() local_unnamed_addr {
dec_label_pc_1df4c:
  %v4_1df70 = load i32, i32* @eax, align 4
  ret i32 %v4_1df70
}

define i32 @function_1e016(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e016:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1e016 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e016 = add i32 %v0_1e016, 1699488852
  %v2_1e016 = inttoptr i32 %v1_1e016 to i32*
  %v3_1e016 = load i32, i32* %v2_1e016, align 4
  %v4_1e016 = add i32 %v3_1e016, -1
  store i32 %v4_1e016, i32* %v2_1e016, align 4
  %v0_1e01c = load i32, i32* %edx.global-to-local, align 4
  %v1_1e01c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e01c = xor i32 %v1_1e01c, %v0_1e01c
  %v3_1e01c = icmp eq i32 %v2_1e01c, 0
  store i32 %v2_1e01c, i32* %edx.global-to-local, align 4
  %v0_1e022 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e022 = add i32 %v0_1e022, 20
  store i32 %v1_1e022, i32* @eax, align 4
  %v1_1e025 = icmp eq i1 %v3_1e01c, false
  br i1 %v1_1e025, label %bb, label %dec_label_pc_1e027

bb:                                               ; preds = %dec_label_pc_1e016
  %v2_1e025 = call i32 @function_1e038()
  br label %dec_label_pc_1e027

dec_label_pc_1e027:                               ; preds = %bb, %dec_label_pc_1e016
  %v0_1e02e = phi i32 [ %v2_1e025, %bb ], [ %v1_1e022, %dec_label_pc_1e016 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1e02e

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
}

define i32 @function_1e02f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e02f:
  %v0_1e033 = call i32 @function_1df4c()
  ret i32 %v0_1e033
}

define i32 @function_1e038() local_unnamed_addr {
dec_label_pc_1e038:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e03e() local_unnamed_addr {
dec_label_pc_1e03e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e03e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e03e
}

define i32 @function_1e047() local_unnamed_addr {
dec_label_pc_1e047:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e058() local_unnamed_addr {
dec_label_pc_1e058:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e058 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e058
}

define i32 @function_1e069() local_unnamed_addr {
dec_label_pc_1e069:
  %v0_1e069 = call i32 @function_1e047()
  ret i32 %v0_1e069
}

define i32 @function_1e06b() local_unnamed_addr {
dec_label_pc_1e06b:
  %v0_1e071 = call i32 @function_1e047()
  ret i32 %v0_1e071

; uselistorder directives
  uselistorder i32 ()* @function_1e047, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_10shared_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail23foreign_void_shared_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_9copy_intoEPKvNS_7variantISD_SH_NS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E18has_fallback_type_EEENT1_11result_typeEiiRSV_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e080:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 4
  %v0_1e087 = load i32, i32* %esi.global-to-local, align 4
  %v0_1e08f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_1e0a0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %tmp117 = icmp ult i32 %arg2, 20
  br i1 %tmp117, label %bb, label %dec_label_pc_1e0ad

bb:                                               ; preds = %dec_label_pc_1e080
  %v6_1e0ab = call i32 @function_1e0d8(i32 %v0_1e08f, i32 %v0_1e0a0, i32 %v0_1e087)
  br label %dec_label_pc_1e0ad

dec_label_pc_1e0ad:                               ; preds = %bb, %dec_label_pc_1e080
  %v3_1e0c5 = phi i32 [ %v6_1e0ab, %bb ], [ %arg2, %dec_label_pc_1e080 ]
  ret i32 %v3_1e0c5

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_1e0d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e0d8:
  %v0_1e0d8 = load i32, i32* @eax, align 4
  ret i32 %v0_1e0d8
}

define i32 @function_1e0e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e0e0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1e0e0 = call i32 @function_1e160()
  %v0_1e0e8 = load i32, i32* @ecx, align 4
  %v2_1e0e8 = icmp slt i32 %v0_1e0e8, 0
  %v2_1e140 = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v2_1e0e8, label %dec_label_pc_1e140, label %dec_label_pc_1e0f2

dec_label_pc_1e0f2:                               ; preds = %dec_label_pc_1e0e0
  %v1_1e0f4 = icmp eq i32 %v2_1e140, 0
  br i1 %v1_1e0f4, label %dec_label_pc_1e104, label %dec_label_pc_1e0f8

dec_label_pc_1e0f8:                               ; preds = %dec_label_pc_1e0f2
  %v2_1e0f8 = load i32, i32* @edx, align 4
  %v2_1e102 = inttoptr i32 %v2_1e140 to i32*
  store i32 %v2_1e0f8, i32* %v2_1e102, align 4
  br label %dec_label_pc_1e104

dec_label_pc_1e104:                               ; preds = %dec_label_pc_1e148, %dec_label_pc_1e140, %dec_label_pc_1e0f8, %dec_label_pc_1e0f2
  %v1_1e108 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e108 = xor i32 %v1_1e108, %arg1
  %v3_1e108 = icmp eq i32 %v2_1e108, 0
  store i32 %v2_1e108, i32* @eax, align 4
  %v1_1e10f = icmp eq i1 %v3_1e108, false
  br i1 %v1_1e10f, label %bb, label %dec_label_pc_1e111

bb:                                               ; preds = %dec_label_pc_1e104
  %v2_1e10f = call i32 @function_1e170()
  br label %dec_label_pc_1e111

dec_label_pc_1e111:                               ; preds = %bb, %dec_label_pc_1e104
  %v0_1e11c = phi i32 [ %v2_1e10f, %bb ], [ %v2_1e108, %dec_label_pc_1e104 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1e11c

dec_label_pc_1e140:                               ; preds = %dec_label_pc_1e0e0
  %v1_1e144 = icmp eq i32 %v2_1e140, 0
  br i1 %v1_1e144, label %dec_label_pc_1e104, label %dec_label_pc_1e148

dec_label_pc_1e148:                               ; preds = %dec_label_pc_1e140
  %v2_1e142 = load i32, i32* @edx, align 4
  %v2_1e152 = inttoptr i32 %v2_1e140 to i32*
  store i32 %v2_1e142, i32* %v2_1e152, align 4
  br label %dec_label_pc_1e104

; uselistorder directives
  uselistorder i32 %v2_1e140, { 1, 3, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1e160() local_unnamed_addr {
dec_label_pc_1e160:
  %v2_1e160 = load i32, i32* @eax, align 4
  store i32 %v2_1e160, i32* @ecx, align 4
  %v1_1e162 = add i32 %v2_1e160, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e162 = inttoptr i32 %v1_1e162 to i32*
  %v3_1e162 = load i32, i32* %v2_1e162, align 4
  %v1_1e165 = load i32, i32* @edx, align 4
  %v2_1e165 = inttoptr i32 %v1_1e165 to i32*
  store i32 %v2_1e160, i32* %v2_1e165, align 4
  %v1_1e169 = load i32, i32* @edx, align 4
  %v2_1e169 = add i32 %v1_1e169, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1e169 = inttoptr i32 %v2_1e169 to i32*
  store i32 %v3_1e162, i32* %v3_1e169, align 4
  ret i32 %v3_1e162
}

define i32 @function_1e170() local_unnamed_addr {
dec_label_pc_1e170:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS5_SC_EESI_EEEEESV_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e1d0:
  %tmp119 = ptrtoint i32* %arg1 to i32
  store i32 %tmp119, i32* @esi, align 4
  %v0_1e1e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e1f0 = load i32, i32* %arg1, align 4
  store i32 %v2_1e1f0, i32* @eax, align 4
  %v2_1e1f2 = add i32 %tmp119, 12
  %v3_1e1f2 = inttoptr i32 %v2_1e1f2 to i32*
  %v4_1e1f2 = load i32, i32* %v3_1e1f2, align 4
  %v15_1e1f2 = icmp eq i32 %v2_1e1f0, %v4_1e1f2
  br i1 %v15_1e1f2, label %bb, label %dec_label_pc_1e1fb

bb:                                               ; preds = %dec_label_pc_1e1d0
  %v2_1e1f5 = call i32 @function_1e3e0(i32 %v0_1e1e1)
  %v1_1e1fb.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1e1fb

dec_label_pc_1e1fb:                               ; preds = %bb, %dec_label_pc_1e1d0
  %v1_1e1fb = phi i32 [ %v1_1e1fb.pre, %bb ], [ %tmp119, %dec_label_pc_1e1d0 ]
  %v0_1e1fb = phi i32 [ %v2_1e1f5, %bb ], [ %v2_1e1f0, %dec_label_pc_1e1d0 ]
  %v2_1e1fb = add i32 %v1_1e1fb, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1e1fb = inttoptr i32 %v2_1e1fb to i32*
  %v4_1e1fb = load i32, i32* %v3_1e1fb, align 4
  %v15_1e1fb = icmp eq i32 %v0_1e1fb, %v4_1e1fb
  br i1 %v15_1e1fb, label %bb126, label %dec_label_pc_1e204

bb126:                                            ; preds = %dec_label_pc_1e1fb
  %v1_1e1fe = call i32 @function_1e3da()
  br label %dec_label_pc_1e204

dec_label_pc_1e204:                               ; preds = %bb126, %dec_label_pc_1e1fb
  %v0_1e204 = phi i32 [ %v1_1e1fe, %bb126 ], [ %v0_1e1fb, %dec_label_pc_1e1fb ]
  %v1_1e204 = add i32 %v0_1e204, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1e204 = inttoptr i32 %v1_1e204 to i32*
  %v3_1e204 = load i32, i32* %v2_1e204, align 4
  store i32 %v3_1e204, i32* @eax, align 4
  %v1_1e207 = icmp eq i32 %v3_1e204, 0
  br i1 %v1_1e207, label %bb127, label %dec_label_pc_1e213

bb127:                                            ; preds = %dec_label_pc_1e204
  %v2_1e20d = call i32 @function_1e91d(i32 0)
  br label %dec_label_pc_1e213

dec_label_pc_1e213:                               ; preds = %bb127, %dec_label_pc_1e204
  %v0_1e21f = load i32, i32* @esi, align 4
  %v1_1e21f = add i32 %v0_1e21f, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1e21f = inttoptr i32 %v1_1e21f to i32*
  %v3_1e21f = load i32, i32* %v2_1e21f, align 4
  store i32 %v3_1e21f, i32* @edi, align 4
  %v1_1e222 = add i32 %v3_1e21f, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1e222 = inttoptr i32 %v1_1e222 to i32*
  %v3_1e222 = load i32, i32* %v2_1e222, align 4
  store i32 %v3_1e222, i32* @ebp, align 4
  %v1_1e228 = icmp eq i32 %v3_1e222, 0
  %v1_1e22a = icmp eq i1 %v1_1e228, false
  br i1 %v1_1e22a, label %bb128, label %dec_label_pc_1e230

bb128:                                            ; preds = %dec_label_pc_1e213
  %v4_1e22a = call i32 @function_1e418(i32 %v3_1e204)
  %v0_1e230.pre = load i32, i32* @edi, align 4
  %v0_1e237.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1e230

dec_label_pc_1e230:                               ; preds = %bb128, %dec_label_pc_1e213
  %v0_1e237 = phi i32 [ %v0_1e237.pre, %bb128 ], [ %v0_1e21f, %dec_label_pc_1e213 ]
  %v0_1e230 = phi i32 [ %v0_1e230.pre, %bb128 ], [ %v3_1e21f, %dec_label_pc_1e213 ]
  %v1_1e237 = inttoptr i32 %v0_1e237 to i32*
  %v2_1e237 = load i32, i32* %v1_1e237, align 4
  store i32 %v2_1e237, i32* @eax, align 4
  %v1_1e239 = add i32 %v2_1e237, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1e239 = inttoptr i32 %v1_1e239 to i32*
  %v3_1e239 = load i32, i32* %v2_1e239, align 4
  store i32 %v3_1e239, i32* @ebx, align 4
  %v1_1e23c = icmp eq i32 %v3_1e239, 0
  br i1 %v1_1e23c, label %bb129, label %dec_label_pc_1e244

bb129:                                            ; preds = %dec_label_pc_1e230
  %v1_1e230 = add i32 %v0_1e230, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1e23e = call i32 @function_1e913(i32 %v1_1e230)
  store i32 %v3_1e23e, i32* @eax, align 4
  br label %dec_label_pc_1e244

dec_label_pc_1e244:                               ; preds = %bb129, %dec_label_pc_1e230
  %v1_1e244 = add i32 %v3_1e239, 16
  %v2_1e244 = inttoptr i32 %v1_1e244 to i32*
  %v3_1e244 = load i32, i32* %v2_1e244, align 4
  store i32 %v3_1e244, i32* @ebp, align 4
  %v2_1e247 = add i32 %v3_1e239, 20
  %v3_1e247 = inttoptr i32 %v2_1e247 to i32*
  %v4_1e247 = load i32, i32* %v3_1e247, align 4
  %v15_1e247 = icmp eq i32 %v3_1e244, %v4_1e247
  br i1 %v15_1e247, label %bb130, label %dec_label_pc_1e250

bb130:                                            ; preds = %dec_label_pc_1e244
  %v1_1e24a = call i32 @function_1e398()
  %v0_1e250.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1e250

dec_label_pc_1e250:                               ; preds = %bb130, %dec_label_pc_1e244
  %v0_1e250 = phi i32 [ %v0_1e250.pre, %bb130 ], [ %v3_1e244, %dec_label_pc_1e244 ]
  %v1_1e258 = inttoptr i32 %v0_1e250 to i32*
  %v2_1e258 = load i32, i32* %v1_1e258, align 4
  %v2_1e25c = ashr i32 %v2_1e258, 31
  %v2_1e25f = xor i32 %v2_1e25c, %v2_1e258
  store i32 %v2_1e25f, i32* @eax, align 4
  %tmp133 = icmp ult i32 %v2_1e25f, 20
  br i1 %tmp133, label %bb132, label %dec_label_pc_1e26a

bb132:                                            ; preds = %dec_label_pc_1e250
  %v3_1e264 = call i32 @function_1e400()
  br label %dec_label_pc_1e26a

dec_label_pc_1e26a:                               ; preds = %bb132, %dec_label_pc_1e250
  %v3_1e282 = phi i32 [ %v3_1e264, %bb132 ], [ %v2_1e25f, %dec_label_pc_1e250 ]
  ret i32 %v3_1e282

; uselistorder directives
  uselistorder i32 %v2_1e25f, { 1, 0, 2 }
  uselistorder i32 %v3_1e244, { 1, 0, 2 }
  uselistorder i32 %v3_1e239, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1e1fb, { 1, 0 }
  uselistorder i32 %v2_1e1f0, { 1, 0, 2 }
}

define i32 @function_1e28d() local_unnamed_addr {
dec_label_pc_1e28d:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1e28d = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e28d = add i32 %v0_1e28d, 609520594
  %v2_1e28d = inttoptr i32 %v1_1e28d to i32*
  %v3_1e28d = load i32, i32* %v2_1e28d, align 4
  %v4_1e28d = add i32 %v3_1e28d, 1
  store i32 %v4_1e28d, i32* %v2_1e28d, align 4
  %v0_1e293 = load i32, i32* @ebx, align 4
  %v1_1e293 = add i32 %v0_1e293, -2012281790
  %v2_1e293 = inttoptr i32 %v1_1e293 to i8*
  %v3_1e293 = load i8, i8* %v2_1e293, align 1
  %v4_1e293 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1e293 = trunc i32 %v4_1e293 to i8
  %v6_1e293 = sub i8 %v3_1e293, %v5_1e293
  store i8 %v6_1e293, i8* %v2_1e293, align 1
  %v0_1e299 = call i32 @function_1e2a0()
  ret i32 %v0_1e299
}

define i32 @function_1e29d() local_unnamed_addr {
dec_label_pc_1e29d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e2a0() local_unnamed_addr {
dec_label_pc_1e2a0:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_124 = alloca i32, align 4
  %stack_var_132 = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_128 = alloca i32, align 4
  %v0_1e2a0 = load i32, i32* @eax, align 4
  %tmp22 = trunc i32 %v0_1e2a0 to i8
  %v5_1e2a3 = mul i8 %tmp22, 2
  %v21_1e2a3 = inttoptr i32 %v0_1e2a0 to i8*
  store i8 %v5_1e2a3, i8* %v21_1e2a3, align 1
  %v2_1e2a5 = load i32, i32* @eax, align 4
  %v2_1e2a7 = ptrtoint i32* %stack_var_128 to i32
  %v4_1e2b8 = trunc i32 %v2_1e2a5 to i8
  %v5_1e2b8 = icmp eq i8 %v4_1e2b8, 0
  %v1_1e2ba = icmp eq i1 %v5_1e2b8, false
  br i1 %v1_1e2ba, label %bb, label %dec_label_pc_1e2c0

bb:                                               ; preds = %dec_label_pc_1e2a0
  %v3_1e2ba = call i32 @function_1ea4a(i32 %v2_1e2a5)
  store i32 %v3_1e2ba, i32* @eax, align 4
  br label %dec_label_pc_1e2c0

dec_label_pc_1e2c0:                               ; preds = %bb, %dec_label_pc_1e2a0
  %v1_1e2c4 = add i32 %tmp18, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1e2c4 = inttoptr i32 %v1_1e2c4 to i32*
  %v3_1e2c4 = load i32, i32* %v2_1e2c4, align 4
  store i32 %v3_1e2c4, i32* @edx, align 4
  %v2_1e2ca = add i32 %tmp18, 120
  %v3_1e2ca = inttoptr i32 %v2_1e2ca to i32*
  %v4_1e2ca = load i32, i32* %v3_1e2ca, align 4
  %v15_1e2ca = icmp eq i32 %v3_1e2c4, %v4_1e2ca
  br i1 %v15_1e2ca, label %bb23, label %dec_label_pc_1e2d3

bb23:                                             ; preds = %dec_label_pc_1e2c0
  %v1_1e2cd = call i32 @function_1e6cd()
  %v0_1e2d3.pre = load i32, i32* @edx, align 4
  %v1_1e2d9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1e2d3

dec_label_pc_1e2d3:                               ; preds = %bb23, %dec_label_pc_1e2c0
  %v1_1e2d9 = phi i32 [ %v1_1e2d9.pre, %bb23 ], [ %tmp18, %dec_label_pc_1e2c0 ]
  %v0_1e2d3 = phi i32 [ %v0_1e2d3.pre, %bb23 ], [ %v3_1e2c4, %dec_label_pc_1e2c0 ]
  %v2_1e2d6 = mul i32 %v0_1e2d3, 12
  %v2_1e2d9 = add i32 %v1_1e2d9, 124
  %v3_1e2d9 = inttoptr i32 %v2_1e2d9 to i32*
  %v4_1e2d9 = load i32, i32* %v3_1e2d9, align 4
  %v5_1e2d9 = add i32 %v4_1e2d9, %v2_1e2d6
  %v15_1e2d9 = icmp eq i32 %v5_1e2d9, 0
  br i1 %v15_1e2d9, label %bb24, label %dec_label_pc_1e2e6

bb24:                                             ; preds = %dec_label_pc_1e2d3
  %v2_1e2e0 = call i32 @function_1e859(i32 0)
  br label %dec_label_pc_1e2e6

dec_label_pc_1e2e6:                               ; preds = %bb24, %dec_label_pc_1e2d3
  %v3_1e2f5 = load i32, i32* %stack_var_128, align 4
  %v2_1e2fc = ptrtoint i32* %stack_var_132 to i32
  %v2_1e307 = ptrtoint i32* %stack_var_124 to i32
  %v1_1e313 = add i32 %v5_1e2d9, 4
  store i32 %v1_1e313, i32* %stack_var_124, align 4
  %v2_1e31c = ashr i32 %v3_1e2f5, 31
  %v2_1e31f = xor i32 %v2_1e31c, %v3_1e2f5
  store i32 %v2_1e31f, i32* @eax, align 4
  %v10_1e33e = call i32 @function_3c250(i32 %v3_1e2f5, i32 %v2_1e31f, i32 %v2_1e307, i32 %v2_1e2fc, i32 0, i32 0, i32 0, i32 0)
  %v3_1e343 = load i32, i32* %stack_var_128, align 4
  %v2_1e350 = ashr i32 %v3_1e343, 31
  %v2_1e353 = xor i32 %v2_1e350, %v3_1e343
  %v2_1e355 = inttoptr i32 %v5_1e2d9 to i32*
  store i32 %v2_1e353, i32* %v2_1e355, align 4
  %v0_1e357 = load i32, i32* @edi, align 4
  %v1_1e357 = add i32 %v0_1e357, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1e357 = inttoptr i32 %v1_1e357 to i32*
  %v3_1e357 = load i32, i32* %v2_1e357, align 4
  %v1_1e361 = add i32 %v3_1e357, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1e361, i32* %v2_1e2c4, align 4
  %v1_1e371 = call i32 @function_348c0(i32 %v2_1e2a7)
  %v2_1e388 = load i32, i32* @esi, align 4
  store i32 %v2_1e388, i32* @eax, align 4
  %v1_1e38a = add i32 %v2_1e388, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1e38a = inttoptr i32 %v1_1e38a to i32*
  %v3_1e38a = load i32, i32* %v2_1e38a, align 4
  %v1_1e38d = icmp eq i32 %v3_1e38a, 0
  br i1 %v1_1e38d, label %bb26, label %dec_label_pc_1e395

bb26:                                             ; preds = %dec_label_pc_1e2e6
  %v4_1e376 = add i32 %tmp7, 12
  %v2_1e38f = call i32 @function_1e913(i32 %v4_1e376)
  br label %dec_label_pc_1e395

dec_label_pc_1e395:                               ; preds = %bb26, %dec_label_pc_1e2e6
  %v4_1e395 = phi i32 [ %v2_1e38f, %bb26 ], [ %v2_1e388, %dec_label_pc_1e2e6 ]
  ret i32 %v4_1e395

; uselistorder directives
  uselistorder i32 %v3_1e2f5, { 1, 0, 2 }
  uselistorder i32 %v3_1e2c4, { 1, 0, 2 }
  uselistorder i32 %v2_1e2a5, { 1, 0 }
  uselistorder i32 %tmp18, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_1e913, { 1, 0 }
}

define i32 @function_1e398() local_unnamed_addr {
dec_label_pc_1e398:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e398 = load i32, i32* @ebx, align 4
  %v1_1e398 = add i32 %v0_1e398, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e398 = inttoptr i32 %v1_1e398 to i8*
  %v3_1e398 = load i8, i8* %v2_1e398, align 1
  %v10_1e398 = icmp eq i8 %v3_1e398, 0
  br i1 %v10_1e398, label %bb, label %dec_label_pc_1e3a2

bb:                                               ; preds = %dec_label_pc_1e398
  %v1_1e39c = call i32 @function_1e6a1()
  store i32 %v1_1e39c, i32* %eax.global-to-local, align 4
  %v0_1e3a2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1e3a2

dec_label_pc_1e3a2:                               ; preds = %bb, %dec_label_pc_1e398
  %v0_1e3a2 = phi i32 [ %v0_1e3a2.pre, %bb ], [ %v0_1e398, %dec_label_pc_1e398 ]
  %v1_1e3a2 = add i32 %v0_1e3a2, 12
  %v2_1e3a2 = inttoptr i32 %v1_1e3a2 to i32*
  %v3_1e3a2 = load i32, i32* %v2_1e3a2, align 4
  store i32 %v3_1e3a2, i32* %eax.global-to-local, align 4
  %v0_1e3a5 = load i32, i32* @edi, align 4
  %v1_1e3a5 = add i32 %v0_1e3a5, 140
  %v2_1e3a5 = inttoptr i32 %v1_1e3a5 to i32*
  %v3_1e3a5 = load i32, i32* %v2_1e3a5, align 4
  %v4_1e3a5 = add i32 %v3_1e3a5, 1
  store i32 %v4_1e3a5, i32* %v2_1e3a5, align 4
  %v0_1e3ac = load i32, i32* %eax.global-to-local, align 4
  %v1_1e3ac = icmp eq i32 %v0_1e3ac, 0
  br i1 %v1_1e3ac, label %bb5, label %dec_label_pc_1e3b4

bb5:                                              ; preds = %dec_label_pc_1e3a2
  %v1_1e3ae = call i32 @function_1e88f()
  store i32 %v1_1e3ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1e3b4

dec_label_pc_1e3b4:                               ; preds = %bb5, %dec_label_pc_1e3a2
  %v0_1e3b4 = phi i32 [ %v1_1e3ae, %bb5 ], [ %v0_1e3ac, %dec_label_pc_1e3a2 ]
  %v1_1e3b4 = add i32 %v0_1e3b4, 4
  %v2_1e3b4 = inttoptr i32 %v1_1e3b4 to i32*
  %v3_1e3b4 = load i32, i32* %v2_1e3b4, align 4
  store i32 %v3_1e3b4, i32* %eax.global-to-local, align 4
  %v1_1e3b7 = icmp eq i32 %v3_1e3b4, 0
  br i1 %v1_1e3b7, label %bb6, label %dec_label_pc_1e3bf

bb6:                                              ; preds = %dec_label_pc_1e3b4
  %v1_1e3b9 = call i32 @function_1e88f()
  store i32 %v1_1e3b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1e3bf

dec_label_pc_1e3bf:                               ; preds = %bb6, %dec_label_pc_1e3b4
  %v2_1e3cb = load i32, i32* @esi, align 4
  store i32 %v2_1e3cb, i32* %eax.global-to-local, align 4
  %v2_1e3d2 = inttoptr i32 %v2_1e3cb to i32*
  store i32 %v2_1e3cb, i32* %v2_1e3d2, align 4
  %v0_1e3d4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e3d4

; uselistorder directives
  uselistorder i32 %v2_1e3cb, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 1, 5, 0, 6, 7, 2 }
  uselistorder i32 ()* @function_1e88f, { 1, 0 }
}

define i32 @function_1e3da() local_unnamed_addr {
dec_label_pc_1e3da:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e3da = load i32, i32* @esi, align 4
  %v1_1e3da = add i32 %v0_1e3da, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e3da = inttoptr i32 %v1_1e3da to i32*
  %v3_1e3da = load i32, i32* %v2_1e3da, align 4
  store i32 %v3_1e3da, i32* %eax.global-to-local, align 4
  %v2_1e3dd = add i32 %v0_1e3da, 12
  %v3_1e3dd = inttoptr i32 %v2_1e3dd to i32*
  store i32 %v3_1e3da, i32* %v3_1e3dd, align 4
  %v4_1e3dd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_1e3dd
}

define i32 @function_1e3e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e3e0:
  %v1_1e3e7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1e3e7 = icmp eq i32 %v1_1e3e7, %arg1
  %v1_1e3ee = icmp eq i1 %v3_1e3e7, false
  br i1 %v1_1e3ee, label %bb, label %dec_label_pc_1e3e0.dec_label_pc_1e3f4_crit_edge

dec_label_pc_1e3e0.dec_label_pc_1e3f4_crit_edge:  ; preds = %dec_label_pc_1e3e0
  %v0_1e3fe.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1e3f4

bb:                                               ; preds = %dec_label_pc_1e3e0
  %v2_1e3ee = call i32 @function_1e918()
  br label %dec_label_pc_1e3f4

dec_label_pc_1e3f4:                               ; preds = %dec_label_pc_1e3e0.dec_label_pc_1e3f4_crit_edge, %bb
  %v0_1e3fe = phi i32 [ %v2_1e3ee, %bb ], [ %v0_1e3fe.pre, %dec_label_pc_1e3e0.dec_label_pc_1e3f4_crit_edge ]
  ret i32 %v0_1e3fe

; uselistorder directives
  uselistorder label %dec_label_pc_1e3f4, { 1, 0 }
}

define i32 @function_1e400() local_unnamed_addr {
dec_label_pc_1e400:
  %v0_1e400 = load i32, i32* @eax, align 4
  ret i32 %v0_1e400
}

define i32 @function_1e418(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e418:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1e418 = load i32, i32* @edi, align 4
  %v1_1e418 = add i32 %v0_1e418, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1e418 = inttoptr i32 %v1_1e418 to i32*
  %v3_1e418 = load i32, i32* %v2_1e418, align 4
  %v0_1e41e = load i32, i32* @ebp, align 4
  %v2_1e41e = mul i32 %v0_1e41e, 2
  %v3_1e41e = add i32 %v0_1e41e, -3
  %v4_1e41e = add i32 %v3_1e41e, %v2_1e41e
  %v2_1e422 = mul i32 %v4_1e41e, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1e422 = add i32 %v2_1e422, %v3_1e418
  store i32 %v3_1e422, i32* %ebx.global-to-local, align 4
  %v2_1e42b = mul i32 %v0_1e41e, 12
  %v3_1e42b = icmp eq i32 %v2_1e42b, 0
  store i32 %v2_1e42b, i32* @eax, align 4
  %v2_1e42e = sub i32 %v3_1e422, %v2_1e42b
  %v7_1e430 = icmp ult i32 %v3_1e422, %v2_1e42e
  %v2_1e436 = or i1 %v3_1e42b, %v7_1e430
  br i1 %v2_1e436, label %bb, label %dec_label_pc_1e440

bb:                                               ; preds = %dec_label_pc_1e418
  %v4_1e436 = call i32 @function_1e5b7(i32 %v2_1e42e)
  store i32 %v4_1e436, i32* @eax, align 4
  %v0_1e440.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1e440

dec_label_pc_1e440:                               ; preds = %dec_label_pc_1e418, %bb, %dec_label_pc_1e440
  %v0_1e440 = phi i32 [ %v1_1e448, %dec_label_pc_1e440 ], [ %v3_1e422, %dec_label_pc_1e418 ], [ %v0_1e440.pre.pre, %bb ]
  %v1_1e443 = call i32 @function_348c0(i32 %v0_1e440)
  store i32 %v1_1e443, i32* @eax, align 4
  %v0_1e448 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e448 = add i32 %v0_1e448, -12
  store i32 %v1_1e448, i32* %ebx.global-to-local, align 4
  %v10_1e44b = icmp ult i32 %v2_1e42e, %v1_1e448
  br i1 %v10_1e44b, label %dec_label_pc_1e440, label %dec_label_pc_1e451

dec_label_pc_1e451:                               ; preds = %dec_label_pc_1e440
  %v0_1e451 = load i32, i32* @edi, align 4
  %v1_1e451 = add i32 %v0_1e451, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1e451 = inttoptr i32 %v1_1e451 to i32*
  %v3_1e451 = load i32, i32* %v2_1e451, align 4
  store i32 %v3_1e451, i32* %eax.global-to-local, align 4
  %v0_1e457 = load i32, i32* @esi, align 4
  %v1_1e457 = add i32 %v0_1e457, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1e457 = inttoptr i32 %v1_1e457 to i32*
  %v3_1e457 = load i32, i32* %v2_1e457, align 4
  store i32 %v3_1e457, i32* %edx.global-to-local, align 4
  %v1_1e45a = load i32, i32* @ebp, align 4
  %v2_1e45a = sub i32 %v3_1e451, %v1_1e45a
  store i32 %v2_1e45a, i32* %eax.global-to-local, align 4
  store i32 %v2_1e45a, i32* %v2_1e451, align 4
  %v0_1e462 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_1e462, i32* @edi, align 4
  %v0_1e464 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e464

; uselistorder directives
  uselistorder i32 %v1_1e448, { 1, 2, 0 }
  uselistorder i32 %v2_1e42e, { 1, 0, 2 }
  uselistorder i32 %v2_1e42b, { 0, 2, 1 }
  uselistorder i32 %v0_1e41e, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1e440, { 2, 1, 0 }
}

define i32 @function_1e49e() local_unnamed_addr {
dec_label_pc_1e49e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e49e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e49e
}

define i32 @function_1e4cd(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e4cd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e4e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e4e4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e51d() local_unnamed_addr {
dec_label_pc_1e51d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e51d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e51d
}

define i32 @function_1e520(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1e520:
  %edx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v0_1e520 = load i32, i32* %edx.global-to-local, align 4
  %v2_1e520 = icmp slt i32 %v0_1e520, 0
  br i1 %v2_1e520, label %bb, label %dec_label_pc_1e528

bb:                                               ; preds = %dec_label_pc_1e520
  %v1_1e522 = call i32 @function_1e5e3()
  br label %dec_label_pc_1e528

dec_label_pc_1e528:                               ; preds = %bb, %dec_label_pc_1e520
  %v1_1e52c = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e52c = inttoptr i32 %v1_1e52c to i32*
  %v3_1e52c = load i32, i32* %v2_1e52c, align 4
  store i32 %v3_1e52c, i32* @eax, align 4
  %v1_1e52f = icmp eq i32 %v3_1e52c, 0
  br i1 %v1_1e52f, label %bb108, label %dec_label_pc_1e537

bb108:                                            ; preds = %dec_label_pc_1e528
  %v1_1e531 = call i32 @function_1e9fd()
  br label %dec_label_pc_1e537

dec_label_pc_1e537:                               ; preds = %bb108, %dec_label_pc_1e528
  %v0_1e537 = phi i32 [ %v1_1e531, %bb108 ], [ %v3_1e52c, %dec_label_pc_1e528 ]
  %v1_1e537 = inttoptr i32 %v0_1e537 to i32*
  %v2_1e537 = load i32, i32* %v1_1e537, align 4
  store i32 %v2_1e537, i32* %edx.global-to-local, align 4
  %v2_1e54e = load i32, i32* %arg2, align 4
  store i32 %v2_1e54e, i32* %edx.global-to-local, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v1_1e56c = icmp eq i32* %arg2, null
  br i1 %v1_1e56c, label %bb109, label %dec_label_pc_1e574

bb109:                                            ; preds = %dec_label_pc_1e537
  %v2_1e56e = call i32 @function_1e4e4(i32 %tmp102)
  store i32 %v2_1e56e, i32* @eax, align 4
  br label %dec_label_pc_1e574

dec_label_pc_1e574:                               ; preds = %bb109, %dec_label_pc_1e537
  %v0_1e574 = phi i32 [ %v2_1e56e, %bb109 ], [ %tmp102, %dec_label_pc_1e537 ]
  %v1_1e574 = inttoptr i32 %v0_1e574 to i32*
  %v2_1e574 = load i32, i32* %v1_1e574, align 4
  store i32 %v2_1e574, i32* %edx.global-to-local, align 4
  %v1_1e57c = call i32 @function_1e4e4(i32 %v0_1e574)
  ret i32 %v1_1e57c

; uselistorder directives
  uselistorder i32 %v0_1e574, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_1e588() local_unnamed_addr {
dec_label_pc_1e588:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e588 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e588
}

define i32 @function_1e590(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e590:
  %edx.global-to-local = alloca i32, align 4
  %v0_1e595 = load i32, i32* %edx.global-to-local, align 4
  %v2_1e595 = icmp slt i32 %v0_1e595, 0
  br i1 %v2_1e595, label %bb, label %dec_label_pc_1e59d

bb:                                               ; preds = %dec_label_pc_1e590
  %v1_1e597 = call i32 @function_1e869()
  br label %dec_label_pc_1e59d

dec_label_pc_1e59d:                               ; preds = %bb, %dec_label_pc_1e590
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_1e5a1 = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1e5a1 = inttoptr i32 %v1_1e5a1 to i32*
  %v3_1e5a1 = load i32, i32* %v2_1e5a1, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_1e5a6 = icmp eq i32 %v3_1e5a1, 0
  br i1 %v1_1e5a6, label %dec_label_pc_1e5ad, label %dec_label_pc_1e5aa

dec_label_pc_1e5aa:                               ; preds = %dec_label_pc_1e59d
  %v1_1e5aa = add i32 %v3_1e5a1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e5aa = inttoptr i32 %v1_1e5aa to i32*
  %v3_1e5aa = load i32, i32* %v2_1e5aa, align 4
  store i32 %v3_1e5aa, i32* %edx.global-to-local, align 4
  %phitmp = icmp eq i32 %v3_1e5aa, 0
  br label %dec_label_pc_1e5ad

dec_label_pc_1e5ad:                               ; preds = %dec_label_pc_1e5aa, %dec_label_pc_1e59d
  %v0_1e5ad = phi i1 [ %phitmp, %dec_label_pc_1e5aa ], [ true, %dec_label_pc_1e59d ]
  %v1_1e5af = zext i1 %v0_1e5ad to i32
  %v3_1e5af = and i32 %v3_1e5a1, -256
  %v4_1e5af = or i32 %v1_1e5af, %v3_1e5af
  ret i32 %v4_1e5af

; uselistorder directives
  uselistorder i32 %v3_1e5a1, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e5b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5b7:
  ret i32 0
}

define i32 @function_1e5c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5c0:
  store i32 %arg1, i32* @eax, align 4
  %v1_1e5de = call i32 @function_1e4cd(i32 0)
  ret i32 %v1_1e5de
}

define i32 @function_1e5e3() local_unnamed_addr {
dec_label_pc_1e5e3:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_1e5e7 = add i32 %tmp11, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e5e7 = inttoptr i32 %v1_1e5e7 to i32*
  %v3_1e5e7 = load i32, i32* %v2_1e5e7, align 4
  %v1_1e5ea = inttoptr i32 %v3_1e5e7 to i32*
  %v2_1e5ea = load i32, i32* %v1_1e5ea, align 4
  store i32 %v2_1e5ea, i32* @eax, align 4
  %v1_1e5ec = icmp eq i32 %v2_1e5ea, 0
  br i1 %v1_1e5ec, label %bb, label %dec_label_pc_1e5f4

bb:                                               ; preds = %dec_label_pc_1e5e3
  %v1_1e5ee = call i32 @function_1e9fd()
  br label %dec_label_pc_1e5f4

dec_label_pc_1e5f4:                               ; preds = %bb, %dec_label_pc_1e5e3
  %v1_1e631 = call i32 @function_1e4e4(i32 %tmp6)
  ret i32 %v1_1e631

; uselistorder directives
  uselistorder i32 ()* @function_1e9fd, { 1, 0 }
}

define i32 @function_1e636(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e636:
  %stack_var_112 = alloca i32, align 4
  %v1_1e63a = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e63a = inttoptr i32 %v1_1e63a to i32*
  %v3_1e63a = load i32, i32* %v2_1e63a, align 4
  %v1_1e649 = add i32 %v3_1e63a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e649 = inttoptr i32 %v1_1e649 to i32*
  %v3_1e649 = load i32, i32* %v2_1e649, align 4
  %v1_1e64c = icmp eq i32 %v3_1e649, 0
  store i32 %v3_1e649, i32* %stack_var_112, align 4
  br i1 %v1_1e64c, label %bb, label %dec_label_pc_1e654

bb:                                               ; preds = %dec_label_pc_1e636
  %v2_1e652 = call i32 @function_1e6b5(i32 %v3_1e63a)
  br label %dec_label_pc_1e654

dec_label_pc_1e654:                               ; preds = %bb, %dec_label_pc_1e636
  %v1_1e654 = add i32 %v3_1e649, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e654 = inttoptr i32 %v1_1e654 to i32*
  %v3_1e654 = load i32, i32* %v2_1e654, align 4
  store i32 %v3_1e654, i32* @eax, align 4
  br label %dec_label_pc_1e657

dec_label_pc_1e657:                               ; preds = %dec_label_pc_1e65b, %dec_label_pc_1e654
  %v0_1e65b = phi i32 [ %v3_1e65e, %dec_label_pc_1e65b ], [ %v3_1e654, %dec_label_pc_1e654 ]
  %v1_1e657 = icmp eq i32 %v0_1e65b, 0
  br i1 %v1_1e657, label %dec_label_pc_1e665, label %dec_label_pc_1e65b

dec_label_pc_1e65b:                               ; preds = %dec_label_pc_1e657
  %v1_1e65d = add i32 %v0_1e65b, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1e65e = load i32, i32* %v2_1e654, align 4
  %v16_1e65e = icmp eq i32 %v0_1e65b, %v3_1e65e
  %v23_1e65e = select i1 %v16_1e65e, i32 %v1_1e65d, i32 %v3_1e65e
  store i32 %v23_1e65e, i32* %v2_1e654, align 4
  store i32 %v3_1e65e, i32* @eax, align 4
  %v1_1e663 = icmp eq i1 %v16_1e65e, false
  br i1 %v1_1e663, label %dec_label_pc_1e657, label %dec_label_pc_1e665

dec_label_pc_1e665:                               ; preds = %dec_label_pc_1e65b, %dec_label_pc_1e657
  %v0_1e665 = phi i32 [ %v0_1e65b, %dec_label_pc_1e65b ], [ 0, %dec_label_pc_1e657 ]
  %v1_1e665 = icmp eq i32 %v0_1e665, 0
  br i1 %v1_1e665, label %bb113, label %dec_label_pc_1e669

bb113:                                            ; preds = %dec_label_pc_1e665
  %v1_1e667 = call i32 @function_1e6ad()
  br label %dec_label_pc_1e669

dec_label_pc_1e669:                               ; preds = %bb113, %dec_label_pc_1e665
  %v3_1e681 = load i32, i32* %v2_1e654, align 4
  %v4_1e681 = add i32 %v3_1e681, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1e681, i32* %v2_1e654, align 4
  %v2_1e685 = ptrtoint i32* %stack_var_112 to i32
  store i32 %v2_1e685, i32* @eax, align 4
  %v1_1e697 = call i32 @function_31c30(i32 %v2_1e685)
  store i32 %v1_1e697, i32* @eax, align 4
  %v1_1e69c = call i32 @function_1e4e4(i32 %v2_1e685)
  ret i32 %v1_1e69c

; uselistorder directives
  uselistorder i32 %v2_1e685, { 1, 0, 2 }
  uselistorder i32 %v3_1e65e, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1e65b, { 1, 0, 2, 3 }
  uselistorder i32* %v2_1e654, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32)* @function_1e4e4, { 3, 2, 1, 0 }
}

define i32 @function_1e6a1() local_unnamed_addr {
dec_label_pc_1e6a1:
  %v0_1e6a1 = load i32, i32* @edi, align 4
  %v1_1e6a1 = add i32 %v0_1e6a1, 144
  %v2_1e6a1 = inttoptr i32 %v1_1e6a1 to i32*
  %v3_1e6a1 = load i32, i32* %v2_1e6a1, align 4
  %v4_1e6a1 = add i32 %v3_1e6a1, 1
  store i32 %v4_1e6a1, i32* %v2_1e6a1, align 4
  %v0_1e6a8 = load i32, i32* @eax, align 4
  ret i32 %v0_1e6a8
}

define i32 @function_1e6ad() local_unnamed_addr {
dec_label_pc_1e6ad:
  %v3_1e6ad = load i32, i32* @eax, align 4
  ret i32 %v3_1e6ad
}

define i32 @function_1e6b5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e6b5:
  ret i32 %arg1
}

define i32 @function_1e6cd() local_unnamed_addr {
dec_label_pc_1e6cd:
  %ecx.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %stack_var_128 = alloca i32, align 4
  %v0_1e6cd = load i32, i32* @edx, align 4
  %tmp12 = sub i32 8, %v0_1e6cd
  %v8_1e6cd = and i32 %tmp12, %v0_1e6cd
  %v9_1e6cd = icmp slt i32 %v8_1e6cd, 0
  store i1 %v9_1e6cd, i1* %of.global-to-local, align 1
  %tmp16 = icmp ult i32 %v0_1e6cd, 10
  br i1 %tmp16, label %bb, label %dec_label_pc_1e6d6

bb:                                               ; preds = %dec_label_pc_1e6cd
  %v3_1e6d0 = call i32 @function_1ea26()
  store i32 %v3_1e6d0, i32* @eax, align 4
  %v0_1e6d6.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1e6d6

dec_label_pc_1e6d6:                               ; preds = %bb, %dec_label_pc_1e6cd
  %v0_1e6d6 = phi i32 [ %v0_1e6d6.pre, %bb ], [ %v0_1e6cd, %dec_label_pc_1e6cd ]
  %v1_1e6d6 = add i32 %v0_1e6d6, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1e6d6, i32* %ecx.global-to-local, align 4
  %v7_1e6d9 = icmp ult i32 %v0_1e6d6, %v1_1e6d6
  %v8_1e6d9 = xor i32 %v1_1e6d6, %v0_1e6d6
  %v9_1e6d9 = xor i32 %v0_1e6d6, sub (i32 0, i32 ptrtoint (i8** @global_var_1.3274 to i32))
  %v10_1e6d9 = and i32 %v8_1e6d9, %v9_1e6d9
  %v11_1e6d9 = icmp slt i32 %v10_1e6d9, 0
  store i1 %v11_1e6d9, i1* %of.global-to-local, align 1
  %v1_1e6df = icmp eq i1 %v7_1e6d9, false
  br i1 %v1_1e6df, label %bb13, label %dec_label_pc_1e6e5

bb13:                                             ; preds = %dec_label_pc_1e6d6
  %v4_1e6df = call i32 @function_1ea21(i32 %v1_1e6d6)
  %v0_1e6e5.pre = load i32, i32* @edx, align 4
  %v1_1e6e8.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1e6e5

dec_label_pc_1e6e5:                               ; preds = %bb13, %dec_label_pc_1e6d6
  %v2_1e6ea = phi i32 [ %v1_1e6e8.pre, %bb13 ], [ %v1_1e6d6, %dec_label_pc_1e6d6 ]
  %v0_1e6e5 = phi i32 [ %v0_1e6e5.pre, %bb13 ], [ %v0_1e6d6, %dec_label_pc_1e6d6 ]
  %v2_1e6e5 = mul i32 %v0_1e6e5, 4
  %v7_1e6e8 = icmp ult i32 %v2_1e6e5, %v2_1e6ea
  %v3_1e6ea = select i1 %v7_1e6e8, i32 %v2_1e6ea, i32 %v2_1e6e5
  %tmp14 = sub i32 357913940, %v3_1e6ea
  %v8_1e6ed = and i32 %tmp14, %v3_1e6ea
  %v9_1e6ed = icmp slt i32 %v8_1e6ed, 0
  store i1 %v9_1e6ed, i1* %of.global-to-local, align 1
  %tmp17 = icmp ult i32 %v3_1e6ea, 357913942
  br i1 %tmp17, label %dec_label_pc_1e6fd, label %bb15

bb15:                                             ; preds = %dec_label_pc_1e6e5
  %v5_1e6f7 = call i32 @function_1e9d5(i32 %v3_1e6ea)
  %v1_1e70f.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_1e6fd

dec_label_pc_1e6fd:                               ; preds = %dec_label_pc_1e6e5, %bb15
  %v1_1e70f = phi i1 [ %v9_1e6ed, %dec_label_pc_1e6e5 ], [ %v1_1e70f.pre, %bb15 ]
  store i32 %v3_1e6ea, i32* @edx, align 4
  %v2_1e701 = ptrtoint i32* %stack_var_128 to i32
  store i32 %v2_1e701, i32* @ecx, align 4
  %v2_1e70f = mul i32 %v3_1e6ea, 12
  store i1 %v1_1e70f, i1* %of.global-to-local, align 1
  ret i32 %v2_1e70f

; uselistorder directives
  uselistorder i32 %v3_1e6ea, { 3, 4, 2, 0, 1, 5 }
  uselistorder i32 %v2_1e6e5, { 1, 0 }
  uselistorder i32 %v1_1e6d6, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1e6d6, { 1, 3, 0, 4, 2 }
  uselistorder i32 %v0_1e6cd, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1e6fd, { 1, 0 }
}

define i32 @function_1e732() local_unnamed_addr {
dec_label_pc_1e732:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e732 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e732
}

define i32 @function_1e74e() local_unnamed_addr {
dec_label_pc_1e74e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e779() local_unnamed_addr {
dec_label_pc_1e779:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e779 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e779
}

define i32 @function_1e77e() local_unnamed_addr {
dec_label_pc_1e77e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e77e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e77e
}

define i32 @function_1e79c() local_unnamed_addr {
dec_label_pc_1e79c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e79c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e79c
}

define i32 @function_1e7a5() local_unnamed_addr {
dec_label_pc_1e7a5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e7a5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e7a5
}

define i32 @function_1e7c8() local_unnamed_addr {
dec_label_pc_1e7c8:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1e7c8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e7c8 = sub i32 %v0_1e7c8, ptrtoint (i8** @global_var_1.3274 to i32)
  %v10_1e7c8 = icmp slt i32 %v1_1e7c8, 0
  store i32 %v1_1e7c8, i32* %ecx.global-to-local, align 4
  br i1 %v10_1e7c8, label %bb, label %dec_label_pc_1e7cb

bb:                                               ; preds = %dec_label_pc_1e7c8
  %v1_1e7c9 = call i32 @function_1e74e()
  store i32 %v1_1e7c9, i32* @eax, align 4
  %v3_1e7cc.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1e7cb

dec_label_pc_1e7cb:                               ; preds = %bb, %dec_label_pc_1e7c8
  %v3_1e7cc = phi i32 [ %v3_1e7cc.pre, %bb ], [ %v1_1e7c8, %dec_label_pc_1e7c8 ]
  %v2_1e7cc = load i32, i32* %edi.global-to-local, align 4
  %v4_1e7cc = or i32 %v2_1e7cc, %v3_1e7cc
  %v12_1e7cc = inttoptr i32 %v2_1e7cc to i32*
  store i32 %v4_1e7cc, i32* %v12_1e7cc, align 4
  %v0_1e7ce = load i32, i32* %ecx.global-to-local, align 4
  %v2_1e7ce = load i32, i32* %edx.global-to-local, align 4
  %v3_1e7ce = lshr i32 %v2_1e7ce, ptrtoint (i8** @global_var_8.3277 to i32)
  %v4_1e7ce = and i32 %v3_1e7ce, ptrtoint (i8* @global_var_ff.3305 to i32)
  %v6_1e7ce = shl i32 %v4_1e7ce, ptrtoint (i8** @global_var_8.3277 to i32)
  %v7_1e7ce = and i32 %v0_1e7ce, -65281
  %v8_1e7ce = or i32 %v6_1e7ce, %v7_1e7ce
  store i32 %v8_1e7ce, i32* %ecx.global-to-local, align 4
  %v9_1e7ce = and i32 %v0_1e7ce, shl (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 8)
  %v12_1e7ce = and i32 %v2_1e7ce, -65281
  %v13_1e7ce = or i32 %v12_1e7ce, %v9_1e7ce
  store i32 %v13_1e7ce, i32* %edx.global-to-local, align 4
  %v2_1e7d0 = load i32, i32* @eax, align 4
  %v4_1e7d0 = mul i32 %v2_1e7d0, 2
  %v21_1e7d0 = inttoptr i32 %v2_1e7d0 to i32*
  store i32 %v4_1e7d0, i32* %v21_1e7d0, align 4
  %v0_1e7d2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e7d2 = inttoptr i32 %v0_1e7d2 to i8*
  %v2_1e7d2 = load i8, i8* %v1_1e7d2, align 1
  %v3_1e7d2 = load i32, i32* %ebx.global-to-local, align 4
  %v4_1e7d2 = udiv i32 %v3_1e7d2, 256
  %v5_1e7d2 = trunc i32 %v4_1e7d2 to i8
  %v6_1e7d2 = add i8 %v5_1e7d2, %v2_1e7d2
  store i8 %v6_1e7d2, i8* %v1_1e7d2, align 1
  %v0_1e7d4 = load i32, i32* @eax, align 4
  ret i32 %v0_1e7d4

; uselistorder directives
  uselistorder i32 %v2_1e7d0, { 1, 0 }
  uselistorder i32 %v2_1e7cc, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 0 }
}

define i32 @function_1e7fd(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e7fd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e859(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e859:
  %stack_var_128 = alloca i32, align 4
  %v2_1e859 = ptrtoint i32* %stack_var_128 to i32
  ret i32 %v2_1e859
}

define i32 @function_1e869() local_unnamed_addr {
dec_label_pc_1e869:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_1e86f = add i32 %tmp1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e86f = inttoptr i32 %v1_1e86f to i32*
  %v3_1e86f = load i32, i32* %v2_1e86f, align 4
  %v1_1e872 = add i32 %v3_1e86f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e872 = inttoptr i32 %v1_1e872 to i32*
  %v3_1e872 = load i32, i32* %v2_1e872, align 4
  ret i32 %v3_1e872
}

define i32 @function_1e888() local_unnamed_addr {
dec_label_pc_1e888:
  %v0_1e88a = call i32 @function_1e29d()
  ret i32 %v0_1e88a
}

define i32 @function_1e88f() local_unnamed_addr {
dec_label_pc_1e88f:
  %ecx.global-to-local = alloca i32, align 4
  %v2_1e88f = load i32, i32* @esi, align 4
  %v2_1e895 = add i32 %v2_1e88f, 12
  %v3_1e895 = inttoptr i32 %v2_1e895 to i32*
  store i32 %v2_1e88f, i32* %v3_1e895, align 4
  %v0_1e898 = load i32, i32* %ecx.global-to-local, align 4
  %v0_1e8a0 = load i32, i32* @esi, align 4
  %v1_1e8a0 = add i32 %v0_1e8a0, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1e8a0 = inttoptr i32 %v1_1e8a0 to i32*
  %v3_1e8a0 = load i32, i32* %v2_1e8a0, align 4
  store i32 %v3_1e8a0, i32* @eax, align 4
  %v14_1e8a3 = icmp eq i32 %v0_1e8a0, %v3_1e8a0
  %v1_1e8a5 = icmp eq i1 %v14_1e8a3, false
  br i1 %v1_1e8a5, label %bb, label %dec_label_pc_1e8ab

bb:                                               ; preds = %dec_label_pc_1e88f
  %v3_1e8a5 = call i32 @function_1e3e0(i32 %v0_1e898)
  br label %dec_label_pc_1e8ab

dec_label_pc_1e8ab:                               ; preds = %bb, %dec_label_pc_1e88f
  %v0_1e8ab = call i32 @function_1e3da()
  ret i32 %v0_1e8ab

; uselistorder directives
  uselistorder i32 %v2_1e88f, { 1, 0 }
  uselistorder i32 ()* @function_1e3da, { 1, 0 }
  uselistorder i32 (i32)* @function_1e3e0, { 1, 0 }
}

define i32 @function_1e8b0(i64 %arg1) local_unnamed_addr {
dec_label_pc_1e8b0:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v4_1e8b0 = trunc i64 %arg1 to i32
  %v1_1e8b4 = sub i32 %v4_1e8b0, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1e8b7 = mul i32 %v1_1e8b4, 12
  %v1_1e8ba = load i32, i32* %edx.global-to-local, align 4
  %v2_1e8ba = add i32 %v1_1e8ba, %v3_1e8b7
  %v7_1e8c0 = mul i64 %arg1, 12
  %v8_1e8c0 = trunc i64 %v7_1e8c0 to i32
  %v6_1e8cd = sub i32 %v2_1e8ba, %v8_1e8c0
  store i32 %v6_1e8cd, i32* @eax, align 4
  %v10_1e8d1 = icmp ult i32 %v2_1e8ba, %v6_1e8cd
  %v15_1e8d1 = icmp eq i32 %v8_1e8c0, 0
  %v2_1e8d9 = or i1 %v15_1e8d1, %v10_1e8d1
  br i1 %v2_1e8d9, label %bb, label %dec_label_pc_1e8df.preheader

bb:                                               ; preds = %dec_label_pc_1e8b0
  %v5_1e8d9 = call i32 @function_1e7fd(i32 %v8_1e8c0)
  store i32 %v5_1e8d9, i32* @eax, align 4
  br label %dec_label_pc_1e8df.preheader

dec_label_pc_1e8df.preheader:                     ; preds = %dec_label_pc_1e8b0, %bb
  br label %dec_label_pc_1e8df

dec_label_pc_1e8df:                               ; preds = %dec_label_pc_1e8df.preheader, %dec_label_pc_1e8df
  %stack_var_60.0 = phi i32 [ %v4_1e8f6, %dec_label_pc_1e8df ], [ %v2_1e8ba, %dec_label_pc_1e8df.preheader ]
  store i32 %stack_var_60.0, i32* %edx.global-to-local, align 4
  %v1_1e8f1 = call i32 @function_348c0(i32 %stack_var_60.0)
  %v4_1e8f6 = add i32 %stack_var_60.0, -12
  store i32 %v4_1e8f6, i32* @eax, align 4
  %v11_1e8ff = icmp ult i32 %v6_1e8cd, %v4_1e8f6
  br i1 %v11_1e8ff, label %dec_label_pc_1e8df, label %dec_label_pc_1e905

dec_label_pc_1e905:                               ; preds = %dec_label_pc_1e8df
  %v0_1e905 = load i32, i32* %edi.global-to-local, align 4
  %v1_1e908 = add i32 %v0_1e905, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1e908 = inttoptr i32 %v1_1e908 to i32*
  %v3_1e908 = load i32, i32* %v2_1e908, align 4
  store i32 %v3_1e908, i32* %edx.global-to-local, align 4
  %v1_1e90e = call i32 @function_1e7fd(i32 %v4_1e8f6)
  ret i32 %v1_1e90e

; uselistorder directives
  uselistorder i32 %v4_1e8f6, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_60.0, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_1e7fd, { 1, 0 }
  uselistorder label %dec_label_pc_1e8df, { 1, 0 }
  uselistorder label %dec_label_pc_1e8df.preheader, { 1, 0 }
}

define i32 @function_1e913(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e913:
  %v0_1e913 = call i32 @function_2f6a6()
  ret i32 %v0_1e913
}

define i32 @function_1e918() local_unnamed_addr {
dec_label_pc_1e918:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e91d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e91d:
  %v3_1e935 = load i32, i32* @eax, align 4
  ret i32 %v3_1e935
}

define i32 @function_1e98a() local_unnamed_addr {
dec_label_pc_1e98a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e98a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e98a
}

define i32 @function_1e98b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e98b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e997(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e997:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e9aa() local_unnamed_addr {
dec_label_pc_1e9aa:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1e9aa = load i32, i32* %ebx.global-to-local, align 4
  %v1_1e9aa = add i32 %v0_1e9aa, -1988615084
  %v2_1e9aa = inttoptr i32 %v1_1e9aa to i32*
  %v3_1e9aa = load i32, i32* %v2_1e9aa, align 4
  %v4_1e9aa = sub i32 %v3_1e9aa, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1e9aa, i32* %v2_1e9aa, align 4
  %v0_1e9b0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e9b0
}

define i32 @function_1e9b1() local_unnamed_addr {
dec_label_pc_1e9b1:
  %edx.global-to-local = alloca i32, align 4
  %v0_1e9b1 = load i32, i32* %edx.global-to-local, align 4
  %v1_1e9b1 = icmp eq i32 %v0_1e9b1, 0
  br i1 %v1_1e9b1, label %bb, label %dec_label_pc_1e9b5

bb:                                               ; preds = %dec_label_pc_1e9b1
  %v2_1e9b3 = call i32 @function_1e997(i32 ptrtoint (i32* @0 to i32))
  %v2_1e9b5.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1e9b5

dec_label_pc_1e9b5:                               ; preds = %bb, %dec_label_pc_1e9b1
  %v2_1e9b5 = phi i32 [ %v2_1e9b5.pre, %bb ], [ %v0_1e9b1, %dec_label_pc_1e9b1 ]
  store i32 %v2_1e9b5, i32* @eax, align 4
  %v1_1e9bd = call i32 @function_1e997(i32 %v2_1e9b5)
  ret i32 %v1_1e9bd

; uselistorder directives
  uselistorder i32 %v2_1e9b5, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
}

define i32 @function_1e9d5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e9d5:
  %stack_var_128 = alloca i32, align 4
  %v2_1e9d5 = ptrtoint i32* %stack_var_128 to i32
  ret i32 %v2_1e9d5
}

define i32 @function_1e9e4() local_unnamed_addr {
dec_label_pc_1e9e4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_1e9e4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e9e4 = add i32 %v0_1e9e4, -1951470653
  %v2_1e9e4 = inttoptr i32 %v1_1e9e4 to i32*
  %v3_1e9e4 = load i32, i32* %v2_1e9e4, align 4
  %v4_1e9e4 = sub i32 %v3_1e9e4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1e9e4, i32* %v2_1e9e4, align 4
  %v0_1e9eb = load i32, i32* %eax.global-to-local, align 4
  %v11_1e9eb = and i32 %v0_1e9eb, or (i32 zext (i8 ptrtoint (i8* @global_var_74.3482 to i8) to i32), i32 -256)
  store i32 %v11_1e9eb, i32* @eax, align 4
  %v0_1e9ef = load i32, i32* %edx.global-to-local, align 4
  %v1_1e9ef = icmp eq i32 %v0_1e9ef, 0
  br i1 %v1_1e9ef, label %bb, label %dec_label_pc_1e9f3

bb:                                               ; preds = %dec_label_pc_1e9e4
  %v4_1e9ea = ptrtoint i32* %stack_var_0 to i32
  %v2_1e9f1 = call i32 @function_1e997(i32 %v4_1e9ea)
  store i32 %v2_1e9f1, i32* %eax.global-to-local, align 4
  %v2_1e9f3.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1e9f3

dec_label_pc_1e9f3:                               ; preds = %bb, %dec_label_pc_1e9e4
  %v2_1e9f3 = phi i32 [ %v2_1e9f3.pre, %bb ], [ %v0_1e9ef, %dec_label_pc_1e9e4 ]
  store i32 %v2_1e9f3, i32* @eax, align 4
  %v1_1e9fb = call i32 @function_1e997(i32 %v2_1e9f3)
  store i32 %v1_1e9fb, i32* %eax.global-to-local, align 4
  ret i32 %v1_1e9fb

; uselistorder directives
  uselistorder i32 %v2_1e9f3, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_1e997, { 3, 2, 1, 0 }
}

define i32 @function_1e9fd() local_unnamed_addr {
dec_label_pc_1e9fd:
  %v3_1ea15 = load i32, i32* @eax, align 4
  ret i32 %v3_1ea15
}

define i32 @function_1ea21(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea21:
  %v0_1ea21 = call i32 @function_2fa82()
  ret i32 %v0_1ea21
}

define i32 @function_1ea26() local_unnamed_addr {
dec_label_pc_1ea26:
  %v3_1ea3e = load i32, i32* @eax, align 4
  ret i32 %v3_1ea3e
}

define i32 @function_1ea4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea4a:
  %stack_var_128 = alloca i32, align 4
  %v0_1ea4a = load i32, i32* @ebx, align 4
  %v1_1ea4a = add i32 %v0_1ea4a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ea4a = inttoptr i32 %v1_1ea4a to i8*
  store i8 0, i8* %v2_1ea4a, align 1
  %v2_1ea4e = ptrtoint i32* %stack_var_128 to i32
  store i32 %v2_1ea4e, i32* @eax, align 4
  %v1_1ea58 = call i32 @function_348c0(i32 %v2_1ea4e)
  ret i32 %v1_1ea58
}

define i32 @function_1ea71(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ea71:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1ea71 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ea71 = add i32 %v0_1ea71, 960242772
  %v2_1ea71 = inttoptr i32 %v1_1ea71 to i32*
  %v3_1ea71 = load i32, i32* %v2_1ea71, align 4
  %v4_1ea71 = add i32 %v3_1ea71, -1
  store i32 %v4_1ea71, i32* %v2_1ea71, align 4
  %v0_1ea78 = load i32, i32* %eax.global-to-local, align 4
  %v1_1ea78 = trunc i32 %v0_1ea78 to i8
  %v2_1ea78 = and i8 %v1_1ea78, ptrtoint (i32* @global_var_40.3547 to i8)
  %v3_1ea78 = icmp eq i8 %v2_1ea78, 0
  %v8_1ea78 = zext i8 %v2_1ea78 to i32
  %v10_1ea78 = and i32 %v0_1ea78, -256
  %v11_1ea78 = or i32 %v8_1ea78, %v10_1ea78
  store i32 %v11_1ea78, i32* %eax.global-to-local, align 4
  br i1 %v3_1ea78, label %dec_label_pc_1ea8f, label %dec_label_pc_1ea7c

dec_label_pc_1ea7c:                               ; preds = %dec_label_pc_1ea71
  store i32 %arg1, i32* @eax, align 4
  %v1_1ea83 = call i32 @function_348c0(i32 %arg1)
  store i32 %v1_1ea83, i32* %eax.global-to-local, align 4
  ret i32 %v1_1ea83

dec_label_pc_1ea8f:                               ; preds = %dec_label_pc_1ea71
  ret i32 %v11_1ea78

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_348c0, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ea9a() local_unnamed_addr {
dec_label_pc_1ea9a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_124 = alloca i32, align 4
  %v0_1ea9a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ea9a = add i32 %v0_1ea9a, -1959254972
  %v2_1ea9a = inttoptr i32 %v1_1ea9a to i32*
  %v3_1ea9a = load i32, i32* %v2_1ea9a, align 4
  %v4_1ea9a = sub i32 %v3_1ea9a, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1ea9a, i32* %v2_1ea9a, align 4
  %v0_1eaa1 = load i32, i32* %eax.global-to-local, align 4
  %v11_1eaa1 = and i32 %v0_1eaa1, or (i32 zext (i8 ptrtoint (i32* @global_var_30.3470 to i8) to i32), i32 -256)
  store i32 %v11_1eaa1, i32* @eax, align 4
  %v0_1eaa3 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1eaa7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1eaa7, i32* %ebx.global-to-local, align 4
  %v0_1eaad = load i32, i32* %edx.global-to-local, align 4
  %v3_1eab0 = call i32 @function_2c560(i32 %v0_1eaad, i32 %v0_1eaa3, i32 %v11_1eaa1)
  store i32 %v3_1eab0, i32* @eax, align 4
  %v2_1eab5 = ptrtoint i32* %stack_var_124 to i32
  %v1_1eac0 = call i32 @function_1e98b(i32 %v2_1eab5)
  store i32 %v1_1eac0, i32* %eax.global-to-local, align 4
  ret i32 %v1_1eac0

; uselistorder directives
  uselistorder i32 %v11_1eaa1, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal3_implIbRKSsS5_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS0_10connectionES5_S5_jEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS5_S5_jSC_EESI_EEEEESV_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1eb70:
  %tmp119 = ptrtoint i32* %arg1 to i32
  store i32 %tmp119, i32* @esi, align 4
  %v0_1eb81 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1eb90 = load i32, i32* %arg1, align 4
  store i32 %v2_1eb90, i32* @eax, align 4
  %v2_1eb92 = add i32 %tmp119, 12
  %v3_1eb92 = inttoptr i32 %v2_1eb92 to i32*
  %v4_1eb92 = load i32, i32* %v3_1eb92, align 4
  %v15_1eb92 = icmp eq i32 %v2_1eb90, %v4_1eb92
  br i1 %v15_1eb92, label %bb, label %dec_label_pc_1eb9b

bb:                                               ; preds = %dec_label_pc_1eb70
  %v2_1eb95 = call i32 @function_1ed80(i32 %v0_1eb81)
  %v1_1eb9b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1eb9b

dec_label_pc_1eb9b:                               ; preds = %bb, %dec_label_pc_1eb70
  %v1_1eb9b = phi i32 [ %v1_1eb9b.pre, %bb ], [ %tmp119, %dec_label_pc_1eb70 ]
  %v0_1eb9b = phi i32 [ %v2_1eb95, %bb ], [ %v2_1eb90, %dec_label_pc_1eb70 ]
  %v2_1eb9b = add i32 %v1_1eb9b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1eb9b = inttoptr i32 %v2_1eb9b to i32*
  %v4_1eb9b = load i32, i32* %v3_1eb9b, align 4
  %v15_1eb9b = icmp eq i32 %v0_1eb9b, %v4_1eb9b
  br i1 %v15_1eb9b, label %bb126, label %dec_label_pc_1eba4

bb126:                                            ; preds = %dec_label_pc_1eb9b
  %v1_1eb9e = call i32 @function_1ed7a()
  br label %dec_label_pc_1eba4

dec_label_pc_1eba4:                               ; preds = %bb126, %dec_label_pc_1eb9b
  %v0_1eba4 = phi i32 [ %v1_1eb9e, %bb126 ], [ %v0_1eb9b, %dec_label_pc_1eb9b ]
  %v1_1eba4 = add i32 %v0_1eba4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1eba4 = inttoptr i32 %v1_1eba4 to i32*
  %v3_1eba4 = load i32, i32* %v2_1eba4, align 4
  store i32 %v3_1eba4, i32* @eax, align 4
  %v1_1eba7 = icmp eq i32 %v3_1eba4, 0
  br i1 %v1_1eba7, label %bb127, label %dec_label_pc_1ebb3

bb127:                                            ; preds = %dec_label_pc_1eba4
  %v2_1ebad = call i32 @function_1f2bd(i32 0)
  br label %dec_label_pc_1ebb3

dec_label_pc_1ebb3:                               ; preds = %bb127, %dec_label_pc_1eba4
  %v0_1ebbf = load i32, i32* @esi, align 4
  %v1_1ebbf = add i32 %v0_1ebbf, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1ebbf = inttoptr i32 %v1_1ebbf to i32*
  %v3_1ebbf = load i32, i32* %v2_1ebbf, align 4
  store i32 %v3_1ebbf, i32* @edi, align 4
  %v1_1ebc2 = add i32 %v3_1ebbf, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1ebc2 = inttoptr i32 %v1_1ebc2 to i32*
  %v3_1ebc2 = load i32, i32* %v2_1ebc2, align 4
  store i32 %v3_1ebc2, i32* @ebp, align 4
  %v1_1ebc8 = icmp eq i32 %v3_1ebc2, 0
  %v1_1ebca = icmp eq i1 %v1_1ebc8, false
  br i1 %v1_1ebca, label %bb128, label %dec_label_pc_1ebd0

bb128:                                            ; preds = %dec_label_pc_1ebb3
  %v4_1ebca = call i32 @function_1edb8(i32 %v3_1eba4)
  %v0_1ebd0.pre = load i32, i32* @edi, align 4
  %v0_1ebd7.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1ebd0

dec_label_pc_1ebd0:                               ; preds = %bb128, %dec_label_pc_1ebb3
  %v0_1ebd7 = phi i32 [ %v0_1ebd7.pre, %bb128 ], [ %v0_1ebbf, %dec_label_pc_1ebb3 ]
  %v0_1ebd0 = phi i32 [ %v0_1ebd0.pre, %bb128 ], [ %v3_1ebbf, %dec_label_pc_1ebb3 ]
  %v1_1ebd7 = inttoptr i32 %v0_1ebd7 to i32*
  %v2_1ebd7 = load i32, i32* %v1_1ebd7, align 4
  store i32 %v2_1ebd7, i32* @eax, align 4
  %v1_1ebd9 = add i32 %v2_1ebd7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1ebd9 = inttoptr i32 %v1_1ebd9 to i32*
  %v3_1ebd9 = load i32, i32* %v2_1ebd9, align 4
  store i32 %v3_1ebd9, i32* @ebx, align 4
  %v1_1ebdc = icmp eq i32 %v3_1ebd9, 0
  br i1 %v1_1ebdc, label %bb129, label %dec_label_pc_1ebe4

bb129:                                            ; preds = %dec_label_pc_1ebd0
  %v1_1ebd0 = add i32 %v0_1ebd0, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1ebde = call i32 @function_1f2b3(i32 %v1_1ebd0)
  store i32 %v3_1ebde, i32* @eax, align 4
  br label %dec_label_pc_1ebe4

dec_label_pc_1ebe4:                               ; preds = %bb129, %dec_label_pc_1ebd0
  %v1_1ebe4 = add i32 %v3_1ebd9, 16
  %v2_1ebe4 = inttoptr i32 %v1_1ebe4 to i32*
  %v3_1ebe4 = load i32, i32* %v2_1ebe4, align 4
  store i32 %v3_1ebe4, i32* @ebp, align 4
  %v2_1ebe7 = add i32 %v3_1ebd9, 20
  %v3_1ebe7 = inttoptr i32 %v2_1ebe7 to i32*
  %v4_1ebe7 = load i32, i32* %v3_1ebe7, align 4
  %v15_1ebe7 = icmp eq i32 %v3_1ebe4, %v4_1ebe7
  br i1 %v15_1ebe7, label %bb130, label %dec_label_pc_1ebf0

bb130:                                            ; preds = %dec_label_pc_1ebe4
  %v1_1ebea = call i32 @function_1ed38()
  %v0_1ebf0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1ebf0

dec_label_pc_1ebf0:                               ; preds = %bb130, %dec_label_pc_1ebe4
  %v0_1ebf0 = phi i32 [ %v0_1ebf0.pre, %bb130 ], [ %v3_1ebe4, %dec_label_pc_1ebe4 ]
  %v1_1ebf8 = inttoptr i32 %v0_1ebf0 to i32*
  %v2_1ebf8 = load i32, i32* %v1_1ebf8, align 4
  %v2_1ebfc = ashr i32 %v2_1ebf8, 31
  %v2_1ebff = xor i32 %v2_1ebfc, %v2_1ebf8
  store i32 %v2_1ebff, i32* @eax, align 4
  %tmp133 = icmp ult i32 %v2_1ebff, 20
  br i1 %tmp133, label %bb132, label %dec_label_pc_1ec0a

bb132:                                            ; preds = %dec_label_pc_1ebf0
  %v3_1ec04 = call i32 @function_1eda0()
  br label %dec_label_pc_1ec0a

dec_label_pc_1ec0a:                               ; preds = %bb132, %dec_label_pc_1ebf0
  %v3_1ec22 = phi i32 [ %v3_1ec04, %bb132 ], [ %v2_1ebff, %dec_label_pc_1ebf0 ]
  ret i32 %v3_1ec22

; uselistorder directives
  uselistorder i32 %v2_1ebff, { 1, 0, 2 }
  uselistorder i32 %v3_1ebe4, { 1, 0, 2 }
  uselistorder i32 %v3_1ebd9, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1eb9b, { 1, 0 }
  uselistorder i32 %v2_1eb90, { 1, 0, 2 }
}

define i32 @function_1ec2d() local_unnamed_addr {
dec_label_pc_1ec2d:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1ec2d = load i32, i32* %ebp.global-to-local, align 4
  %v1_1ec2d = add i32 %v0_1ec2d, 609520594
  %v2_1ec2d = inttoptr i32 %v1_1ec2d to i32*
  %v3_1ec2d = load i32, i32* %v2_1ec2d, align 4
  %v4_1ec2d = add i32 %v3_1ec2d, 1
  store i32 %v4_1ec2d, i32* %v2_1ec2d, align 4
  %v0_1ec33 = load i32, i32* @ebx, align 4
  %v1_1ec33 = add i32 %v0_1ec33, -2012281790
  %v2_1ec33 = inttoptr i32 %v1_1ec33 to i8*
  %v3_1ec33 = load i8, i8* %v2_1ec33, align 1
  %v4_1ec33 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1ec33 = trunc i32 %v4_1ec33 to i8
  %v6_1ec33 = sub i8 %v3_1ec33, %v5_1ec33
  store i8 %v6_1ec33, i8* %v2_1ec33, align 1
  %v0_1ec39 = call i32 @function_1ec40()
  ret i32 %v0_1ec39
}

define i32 @function_1ec3d() local_unnamed_addr {
dec_label_pc_1ec3d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ec40() local_unnamed_addr {
dec_label_pc_1ec40:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_124 = alloca i32, align 4
  %stack_var_132 = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_128 = alloca i32, align 4
  %v0_1ec40 = load i32, i32* @eax, align 4
  %tmp22 = trunc i32 %v0_1ec40 to i8
  %v5_1ec43 = mul i8 %tmp22, 2
  %v21_1ec43 = inttoptr i32 %v0_1ec40 to i8*
  store i8 %v5_1ec43, i8* %v21_1ec43, align 1
  %v2_1ec45 = load i32, i32* @eax, align 4
  %v2_1ec47 = ptrtoint i32* %stack_var_128 to i32
  %v4_1ec58 = trunc i32 %v2_1ec45 to i8
  %v5_1ec58 = icmp eq i8 %v4_1ec58, 0
  %v1_1ec5a = icmp eq i1 %v5_1ec58, false
  br i1 %v1_1ec5a, label %bb, label %dec_label_pc_1ec60

bb:                                               ; preds = %dec_label_pc_1ec40
  %v3_1ec5a = call i32 @function_1f3ea(i32 %v2_1ec45)
  store i32 %v3_1ec5a, i32* @eax, align 4
  br label %dec_label_pc_1ec60

dec_label_pc_1ec60:                               ; preds = %bb, %dec_label_pc_1ec40
  %v1_1ec64 = add i32 %tmp18, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1ec64 = inttoptr i32 %v1_1ec64 to i32*
  %v3_1ec64 = load i32, i32* %v2_1ec64, align 4
  store i32 %v3_1ec64, i32* @edx, align 4
  %v2_1ec6a = add i32 %tmp18, 120
  %v3_1ec6a = inttoptr i32 %v2_1ec6a to i32*
  %v4_1ec6a = load i32, i32* %v3_1ec6a, align 4
  %v15_1ec6a = icmp eq i32 %v3_1ec64, %v4_1ec6a
  br i1 %v15_1ec6a, label %bb23, label %dec_label_pc_1ec73

bb23:                                             ; preds = %dec_label_pc_1ec60
  %v1_1ec6d = call i32 @function_1f06d()
  %v0_1ec73.pre = load i32, i32* @edx, align 4
  %v1_1ec79.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1ec73

dec_label_pc_1ec73:                               ; preds = %bb23, %dec_label_pc_1ec60
  %v1_1ec79 = phi i32 [ %v1_1ec79.pre, %bb23 ], [ %tmp18, %dec_label_pc_1ec60 ]
  %v0_1ec73 = phi i32 [ %v0_1ec73.pre, %bb23 ], [ %v3_1ec64, %dec_label_pc_1ec60 ]
  %v2_1ec76 = mul i32 %v0_1ec73, 12
  %v2_1ec79 = add i32 %v1_1ec79, 124
  %v3_1ec79 = inttoptr i32 %v2_1ec79 to i32*
  %v4_1ec79 = load i32, i32* %v3_1ec79, align 4
  %v5_1ec79 = add i32 %v4_1ec79, %v2_1ec76
  %v15_1ec79 = icmp eq i32 %v5_1ec79, 0
  br i1 %v15_1ec79, label %bb24, label %dec_label_pc_1ec86

bb24:                                             ; preds = %dec_label_pc_1ec73
  %v2_1ec80 = call i32 @function_1f1f9(i32 0)
  br label %dec_label_pc_1ec86

dec_label_pc_1ec86:                               ; preds = %bb24, %dec_label_pc_1ec73
  %v3_1ec95 = load i32, i32* %stack_var_128, align 4
  %v2_1ec9c = ptrtoint i32* %stack_var_132 to i32
  %v2_1eca7 = ptrtoint i32* %stack_var_124 to i32
  %v1_1ecb3 = add i32 %v5_1ec79, 4
  store i32 %v1_1ecb3, i32* %stack_var_124, align 4
  %v2_1ecbc = ashr i32 %v3_1ec95, 31
  %v2_1ecbf = xor i32 %v2_1ecbc, %v3_1ec95
  store i32 %v2_1ecbf, i32* @eax, align 4
  %v10_1ecde = call i32 @function_3cbf0(i32 %v3_1ec95, i32 %v2_1ecbf, i32 %v2_1eca7, i32 %v2_1ec9c, i32 0, i32 0, i32 0, i32 0)
  %v3_1ece3 = load i32, i32* %stack_var_128, align 4
  %v2_1ecf0 = ashr i32 %v3_1ece3, 31
  %v2_1ecf3 = xor i32 %v2_1ecf0, %v3_1ece3
  %v2_1ecf5 = inttoptr i32 %v5_1ec79 to i32*
  store i32 %v2_1ecf3, i32* %v2_1ecf5, align 4
  %v0_1ecf7 = load i32, i32* @edi, align 4
  %v1_1ecf7 = add i32 %v0_1ecf7, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1ecf7 = inttoptr i32 %v1_1ecf7 to i32*
  %v3_1ecf7 = load i32, i32* %v2_1ecf7, align 4
  %v1_1ed01 = add i32 %v3_1ecf7, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1ed01, i32* %v2_1ec64, align 4
  %v1_1ed11 = call i32 @function_35260(i32 %v2_1ec47)
  %v2_1ed28 = load i32, i32* @esi, align 4
  store i32 %v2_1ed28, i32* @eax, align 4
  %v1_1ed2a = add i32 %v2_1ed28, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1ed2a = inttoptr i32 %v1_1ed2a to i32*
  %v3_1ed2a = load i32, i32* %v2_1ed2a, align 4
  %v1_1ed2d = icmp eq i32 %v3_1ed2a, 0
  br i1 %v1_1ed2d, label %bb26, label %dec_label_pc_1ed35

bb26:                                             ; preds = %dec_label_pc_1ec86
  %v4_1ed16 = add i32 %tmp7, 12
  %v2_1ed2f = call i32 @function_1f2b3(i32 %v4_1ed16)
  br label %dec_label_pc_1ed35

dec_label_pc_1ed35:                               ; preds = %bb26, %dec_label_pc_1ec86
  %v4_1ed35 = phi i32 [ %v2_1ed2f, %bb26 ], [ %v2_1ed28, %dec_label_pc_1ec86 ]
  ret i32 %v4_1ed35

; uselistorder directives
  uselistorder i32 %v3_1ec95, { 1, 0, 2 }
  uselistorder i32 %v3_1ec64, { 1, 0, 2 }
  uselistorder i32 %v2_1ec45, { 1, 0 }
  uselistorder i32 %tmp18, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_1f2b3, { 1, 0 }
}

define i32 @function_1ed38() local_unnamed_addr {
dec_label_pc_1ed38:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ed38 = load i32, i32* @ebx, align 4
  %v1_1ed38 = add i32 %v0_1ed38, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ed38 = inttoptr i32 %v1_1ed38 to i8*
  %v3_1ed38 = load i8, i8* %v2_1ed38, align 1
  %v10_1ed38 = icmp eq i8 %v3_1ed38, 0
  br i1 %v10_1ed38, label %bb, label %dec_label_pc_1ed42

bb:                                               ; preds = %dec_label_pc_1ed38
  %v1_1ed3c = call i32 @function_1f041()
  store i32 %v1_1ed3c, i32* %eax.global-to-local, align 4
  %v0_1ed42.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1ed42

dec_label_pc_1ed42:                               ; preds = %bb, %dec_label_pc_1ed38
  %v0_1ed42 = phi i32 [ %v0_1ed42.pre, %bb ], [ %v0_1ed38, %dec_label_pc_1ed38 ]
  %v1_1ed42 = add i32 %v0_1ed42, 12
  %v2_1ed42 = inttoptr i32 %v1_1ed42 to i32*
  %v3_1ed42 = load i32, i32* %v2_1ed42, align 4
  store i32 %v3_1ed42, i32* %eax.global-to-local, align 4
  %v0_1ed45 = load i32, i32* @edi, align 4
  %v1_1ed45 = add i32 %v0_1ed45, 148
  %v2_1ed45 = inttoptr i32 %v1_1ed45 to i32*
  %v3_1ed45 = load i32, i32* %v2_1ed45, align 4
  %v4_1ed45 = add i32 %v3_1ed45, 1
  store i32 %v4_1ed45, i32* %v2_1ed45, align 4
  %v0_1ed4c = load i32, i32* %eax.global-to-local, align 4
  %v1_1ed4c = icmp eq i32 %v0_1ed4c, 0
  br i1 %v1_1ed4c, label %bb5, label %dec_label_pc_1ed54

bb5:                                              ; preds = %dec_label_pc_1ed42
  %v1_1ed4e = call i32 @function_1f22f()
  store i32 %v1_1ed4e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ed54

dec_label_pc_1ed54:                               ; preds = %bb5, %dec_label_pc_1ed42
  %v0_1ed54 = phi i32 [ %v1_1ed4e, %bb5 ], [ %v0_1ed4c, %dec_label_pc_1ed42 ]
  %v1_1ed54 = add i32 %v0_1ed54, 4
  %v2_1ed54 = inttoptr i32 %v1_1ed54 to i32*
  %v3_1ed54 = load i32, i32* %v2_1ed54, align 4
  store i32 %v3_1ed54, i32* %eax.global-to-local, align 4
  %v1_1ed57 = icmp eq i32 %v3_1ed54, 0
  br i1 %v1_1ed57, label %bb6, label %dec_label_pc_1ed5f

bb6:                                              ; preds = %dec_label_pc_1ed54
  %v1_1ed59 = call i32 @function_1f22f()
  store i32 %v1_1ed59, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ed5f

dec_label_pc_1ed5f:                               ; preds = %bb6, %dec_label_pc_1ed54
  %v2_1ed6b = load i32, i32* @esi, align 4
  store i32 %v2_1ed6b, i32* %eax.global-to-local, align 4
  %v2_1ed72 = inttoptr i32 %v2_1ed6b to i32*
  store i32 %v2_1ed6b, i32* %v2_1ed72, align 4
  %v0_1ed74 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ed74

; uselistorder directives
  uselistorder i32 %v2_1ed6b, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 1, 5, 0, 6, 7, 2 }
  uselistorder i32 ()* @function_1f22f, { 1, 0 }
}

define i32 @function_1ed7a() local_unnamed_addr {
dec_label_pc_1ed7a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ed7a = load i32, i32* @esi, align 4
  %v1_1ed7a = add i32 %v0_1ed7a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ed7a = inttoptr i32 %v1_1ed7a to i32*
  %v3_1ed7a = load i32, i32* %v2_1ed7a, align 4
  store i32 %v3_1ed7a, i32* %eax.global-to-local, align 4
  %v2_1ed7d = add i32 %v0_1ed7a, 12
  %v3_1ed7d = inttoptr i32 %v2_1ed7d to i32*
  store i32 %v3_1ed7a, i32* %v3_1ed7d, align 4
  %v4_1ed7d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_1ed7d
}

define i32 @function_1ed80(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed80:
  %v1_1ed87 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1ed87 = icmp eq i32 %v1_1ed87, %arg1
  %v1_1ed8e = icmp eq i1 %v3_1ed87, false
  br i1 %v1_1ed8e, label %bb, label %dec_label_pc_1ed80.dec_label_pc_1ed94_crit_edge

dec_label_pc_1ed80.dec_label_pc_1ed94_crit_edge:  ; preds = %dec_label_pc_1ed80
  %v0_1ed9e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ed94

bb:                                               ; preds = %dec_label_pc_1ed80
  %v2_1ed8e = call i32 @function_1f2b8()
  br label %dec_label_pc_1ed94

dec_label_pc_1ed94:                               ; preds = %dec_label_pc_1ed80.dec_label_pc_1ed94_crit_edge, %bb
  %v0_1ed9e = phi i32 [ %v2_1ed8e, %bb ], [ %v0_1ed9e.pre, %dec_label_pc_1ed80.dec_label_pc_1ed94_crit_edge ]
  ret i32 %v0_1ed9e

; uselistorder directives
  uselistorder label %dec_label_pc_1ed94, { 1, 0 }
}

define i32 @function_1eda0() local_unnamed_addr {
dec_label_pc_1eda0:
  %v0_1eda0 = load i32, i32* @eax, align 4
  ret i32 %v0_1eda0
}

define i32 @function_1edb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1edb8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1edb8 = load i32, i32* @edi, align 4
  %v1_1edb8 = add i32 %v0_1edb8, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1edb8 = inttoptr i32 %v1_1edb8 to i32*
  %v3_1edb8 = load i32, i32* %v2_1edb8, align 4
  %v0_1edbe = load i32, i32* @ebp, align 4
  %v2_1edbe = mul i32 %v0_1edbe, 2
  %v3_1edbe = add i32 %v0_1edbe, -3
  %v4_1edbe = add i32 %v3_1edbe, %v2_1edbe
  %v2_1edc2 = mul i32 %v4_1edbe, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1edc2 = add i32 %v2_1edc2, %v3_1edb8
  store i32 %v3_1edc2, i32* %ebx.global-to-local, align 4
  %v2_1edcb = mul i32 %v0_1edbe, 12
  %v3_1edcb = icmp eq i32 %v2_1edcb, 0
  store i32 %v2_1edcb, i32* @eax, align 4
  %v2_1edce = sub i32 %v3_1edc2, %v2_1edcb
  %v7_1edd0 = icmp ult i32 %v3_1edc2, %v2_1edce
  %v2_1edd6 = or i1 %v3_1edcb, %v7_1edd0
  br i1 %v2_1edd6, label %bb, label %dec_label_pc_1ede0

bb:                                               ; preds = %dec_label_pc_1edb8
  %v4_1edd6 = call i32 @function_1ef57(i32 %v2_1edce)
  store i32 %v4_1edd6, i32* @eax, align 4
  %v0_1ede0.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1ede0

dec_label_pc_1ede0:                               ; preds = %dec_label_pc_1edb8, %bb, %dec_label_pc_1ede0
  %v0_1ede0 = phi i32 [ %v1_1ede8, %dec_label_pc_1ede0 ], [ %v3_1edc2, %dec_label_pc_1edb8 ], [ %v0_1ede0.pre.pre, %bb ]
  %v1_1ede3 = call i32 @function_35260(i32 %v0_1ede0)
  store i32 %v1_1ede3, i32* @eax, align 4
  %v0_1ede8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ede8 = add i32 %v0_1ede8, -12
  store i32 %v1_1ede8, i32* %ebx.global-to-local, align 4
  %v10_1edeb = icmp ult i32 %v2_1edce, %v1_1ede8
  br i1 %v10_1edeb, label %dec_label_pc_1ede0, label %dec_label_pc_1edf1

dec_label_pc_1edf1:                               ; preds = %dec_label_pc_1ede0
  %v0_1edf1 = load i32, i32* @edi, align 4
  %v1_1edf1 = add i32 %v0_1edf1, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1edf1 = inttoptr i32 %v1_1edf1 to i32*
  %v3_1edf1 = load i32, i32* %v2_1edf1, align 4
  store i32 %v3_1edf1, i32* %eax.global-to-local, align 4
  %v0_1edf7 = load i32, i32* @esi, align 4
  %v1_1edf7 = add i32 %v0_1edf7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1edf7 = inttoptr i32 %v1_1edf7 to i32*
  %v3_1edf7 = load i32, i32* %v2_1edf7, align 4
  store i32 %v3_1edf7, i32* %edx.global-to-local, align 4
  %v1_1edfa = load i32, i32* @ebp, align 4
  %v2_1edfa = sub i32 %v3_1edf1, %v1_1edfa
  store i32 %v2_1edfa, i32* %eax.global-to-local, align 4
  store i32 %v2_1edfa, i32* %v2_1edf1, align 4
  %v0_1ee02 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_1ee02, i32* @edi, align 4
  %v0_1ee04 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ee04

; uselistorder directives
  uselistorder i32 %v1_1ede8, { 1, 2, 0 }
  uselistorder i32 %v2_1edce, { 1, 0, 2 }
  uselistorder i32 %v2_1edcb, { 0, 2, 1 }
  uselistorder i32 %v0_1edbe, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1ede0, { 2, 1, 0 }
}

define i32 @function_1ee3e() local_unnamed_addr {
dec_label_pc_1ee3e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ee3e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ee3e
}

define i32 @function_1ee6d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee6d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ee84(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee84:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1eebd() local_unnamed_addr {
dec_label_pc_1eebd:
  %eax.global-to-local = alloca i32, align 4
  %v0_1eebd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1eebd
}

define i32 @function_1eec0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1eec0:
  %edx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v0_1eec0 = load i32, i32* %edx.global-to-local, align 4
  %v2_1eec0 = icmp slt i32 %v0_1eec0, 0
  br i1 %v2_1eec0, label %bb, label %dec_label_pc_1eec8

bb:                                               ; preds = %dec_label_pc_1eec0
  %v1_1eec2 = call i32 @function_1ef83()
  br label %dec_label_pc_1eec8

dec_label_pc_1eec8:                               ; preds = %bb, %dec_label_pc_1eec0
  %v1_1eecc = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1eecc = inttoptr i32 %v1_1eecc to i32*
  %v3_1eecc = load i32, i32* %v2_1eecc, align 4
  store i32 %v3_1eecc, i32* @eax, align 4
  %v1_1eecf = icmp eq i32 %v3_1eecc, 0
  br i1 %v1_1eecf, label %bb108, label %dec_label_pc_1eed7

bb108:                                            ; preds = %dec_label_pc_1eec8
  %v1_1eed1 = call i32 @function_1f39d()
  br label %dec_label_pc_1eed7

dec_label_pc_1eed7:                               ; preds = %bb108, %dec_label_pc_1eec8
  %v0_1eed7 = phi i32 [ %v1_1eed1, %bb108 ], [ %v3_1eecc, %dec_label_pc_1eec8 ]
  %v1_1eed7 = inttoptr i32 %v0_1eed7 to i32*
  %v2_1eed7 = load i32, i32* %v1_1eed7, align 4
  store i32 %v2_1eed7, i32* %edx.global-to-local, align 4
  %v2_1eeee = load i32, i32* %arg2, align 4
  store i32 %v2_1eeee, i32* %edx.global-to-local, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v1_1ef0c = icmp eq i32* %arg2, null
  br i1 %v1_1ef0c, label %bb109, label %dec_label_pc_1ef14

bb109:                                            ; preds = %dec_label_pc_1eed7
  %v2_1ef0e = call i32 @function_1ee84(i32 %tmp102)
  store i32 %v2_1ef0e, i32* @eax, align 4
  br label %dec_label_pc_1ef14

dec_label_pc_1ef14:                               ; preds = %bb109, %dec_label_pc_1eed7
  %v0_1ef14 = phi i32 [ %v2_1ef0e, %bb109 ], [ %tmp102, %dec_label_pc_1eed7 ]
  %v1_1ef14 = inttoptr i32 %v0_1ef14 to i32*
  %v2_1ef14 = load i32, i32* %v1_1ef14, align 4
  store i32 %v2_1ef14, i32* %edx.global-to-local, align 4
  %v1_1ef1c = call i32 @function_1ee84(i32 %v0_1ef14)
  ret i32 %v1_1ef1c

; uselistorder directives
  uselistorder i32 %v0_1ef14, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_1ef28() local_unnamed_addr {
dec_label_pc_1ef28:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ef28 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ef28
}

define i32 @function_1ef30(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef30:
  %edx.global-to-local = alloca i32, align 4
  %v0_1ef35 = load i32, i32* %edx.global-to-local, align 4
  %v2_1ef35 = icmp slt i32 %v0_1ef35, 0
  br i1 %v2_1ef35, label %bb, label %dec_label_pc_1ef3d

bb:                                               ; preds = %dec_label_pc_1ef30
  %v1_1ef37 = call i32 @function_1f209()
  br label %dec_label_pc_1ef3d

dec_label_pc_1ef3d:                               ; preds = %bb, %dec_label_pc_1ef30
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_1ef41 = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1ef41 = inttoptr i32 %v1_1ef41 to i32*
  %v3_1ef41 = load i32, i32* %v2_1ef41, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_1ef46 = icmp eq i32 %v3_1ef41, 0
  br i1 %v1_1ef46, label %dec_label_pc_1ef4d, label %dec_label_pc_1ef4a

dec_label_pc_1ef4a:                               ; preds = %dec_label_pc_1ef3d
  %v1_1ef4a = add i32 %v3_1ef41, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ef4a = inttoptr i32 %v1_1ef4a to i32*
  %v3_1ef4a = load i32, i32* %v2_1ef4a, align 4
  store i32 %v3_1ef4a, i32* %edx.global-to-local, align 4
  %phitmp = icmp eq i32 %v3_1ef4a, 0
  br label %dec_label_pc_1ef4d

dec_label_pc_1ef4d:                               ; preds = %dec_label_pc_1ef4a, %dec_label_pc_1ef3d
  %v0_1ef4d = phi i1 [ %phitmp, %dec_label_pc_1ef4a ], [ true, %dec_label_pc_1ef3d ]
  %v1_1ef4f = zext i1 %v0_1ef4d to i32
  %v3_1ef4f = and i32 %v3_1ef41, -256
  %v4_1ef4f = or i32 %v1_1ef4f, %v3_1ef4f
  ret i32 %v4_1ef4f

; uselistorder directives
  uselistorder i32 %v3_1ef41, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1ef57(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef57:
  ret i32 0
}

define i32 @function_1ef60(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef60:
  store i32 %arg1, i32* @eax, align 4
  %v1_1ef7e = call i32 @function_1ee6d(i32 0)
  ret i32 %v1_1ef7e
}

define i32 @function_1ef83() local_unnamed_addr {
dec_label_pc_1ef83:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_1ef87 = add i32 %tmp11, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1ef87 = inttoptr i32 %v1_1ef87 to i32*
  %v3_1ef87 = load i32, i32* %v2_1ef87, align 4
  %v1_1ef8a = inttoptr i32 %v3_1ef87 to i32*
  %v2_1ef8a = load i32, i32* %v1_1ef8a, align 4
  store i32 %v2_1ef8a, i32* @eax, align 4
  %v1_1ef8c = icmp eq i32 %v2_1ef8a, 0
  br i1 %v1_1ef8c, label %bb, label %dec_label_pc_1ef94

bb:                                               ; preds = %dec_label_pc_1ef83
  %v1_1ef8e = call i32 @function_1f39d()
  br label %dec_label_pc_1ef94

dec_label_pc_1ef94:                               ; preds = %bb, %dec_label_pc_1ef83
  %v1_1efd1 = call i32 @function_1ee84(i32 %tmp6)
  ret i32 %v1_1efd1

; uselistorder directives
  uselistorder i32 ()* @function_1f39d, { 1, 0 }
}

define i32 @function_1efd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1efd6:
  %stack_var_112 = alloca i32, align 4
  %v1_1efda = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1efda = inttoptr i32 %v1_1efda to i32*
  %v3_1efda = load i32, i32* %v2_1efda, align 4
  %v1_1efe9 = add i32 %v3_1efda, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1efe9 = inttoptr i32 %v1_1efe9 to i32*
  %v3_1efe9 = load i32, i32* %v2_1efe9, align 4
  %v1_1efec = icmp eq i32 %v3_1efe9, 0
  store i32 %v3_1efe9, i32* %stack_var_112, align 4
  br i1 %v1_1efec, label %bb, label %dec_label_pc_1eff4

bb:                                               ; preds = %dec_label_pc_1efd6
  %v2_1eff2 = call i32 @function_1f055(i32 %v3_1efda)
  br label %dec_label_pc_1eff4

dec_label_pc_1eff4:                               ; preds = %bb, %dec_label_pc_1efd6
  %v1_1eff4 = add i32 %v3_1efe9, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1eff4 = inttoptr i32 %v1_1eff4 to i32*
  %v3_1eff4 = load i32, i32* %v2_1eff4, align 4
  store i32 %v3_1eff4, i32* @eax, align 4
  br label %dec_label_pc_1eff7

dec_label_pc_1eff7:                               ; preds = %dec_label_pc_1effb, %dec_label_pc_1eff4
  %v0_1effb = phi i32 [ %v3_1effe, %dec_label_pc_1effb ], [ %v3_1eff4, %dec_label_pc_1eff4 ]
  %v1_1eff7 = icmp eq i32 %v0_1effb, 0
  br i1 %v1_1eff7, label %dec_label_pc_1f005, label %dec_label_pc_1effb

dec_label_pc_1effb:                               ; preds = %dec_label_pc_1eff7
  %v1_1effd = add i32 %v0_1effb, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1effe = load i32, i32* %v2_1eff4, align 4
  %v16_1effe = icmp eq i32 %v0_1effb, %v3_1effe
  %v23_1effe = select i1 %v16_1effe, i32 %v1_1effd, i32 %v3_1effe
  store i32 %v23_1effe, i32* %v2_1eff4, align 4
  store i32 %v3_1effe, i32* @eax, align 4
  %v1_1f003 = icmp eq i1 %v16_1effe, false
  br i1 %v1_1f003, label %dec_label_pc_1eff7, label %dec_label_pc_1f005

dec_label_pc_1f005:                               ; preds = %dec_label_pc_1effb, %dec_label_pc_1eff7
  %v0_1f005 = phi i32 [ %v0_1effb, %dec_label_pc_1effb ], [ 0, %dec_label_pc_1eff7 ]
  %v1_1f005 = icmp eq i32 %v0_1f005, 0
  br i1 %v1_1f005, label %bb113, label %dec_label_pc_1f009

bb113:                                            ; preds = %dec_label_pc_1f005
  %v1_1f007 = call i32 @function_1f04d()
  br label %dec_label_pc_1f009

dec_label_pc_1f009:                               ; preds = %bb113, %dec_label_pc_1f005
  %v3_1f021 = load i32, i32* %v2_1eff4, align 4
  %v4_1f021 = add i32 %v3_1f021, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1f021, i32* %v2_1eff4, align 4
  %v2_1f025 = ptrtoint i32* %stack_var_112 to i32
  store i32 %v2_1f025, i32* @eax, align 4
  %v1_1f037 = call i32 @function_325d0(i32 %v2_1f025)
  store i32 %v1_1f037, i32* @eax, align 4
  %v1_1f03c = call i32 @function_1ee84(i32 %v2_1f025)
  ret i32 %v1_1f03c

; uselistorder directives
  uselistorder i32 %v2_1f025, { 1, 0, 2 }
  uselistorder i32 %v3_1effe, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1effb, { 1, 0, 2, 3 }
  uselistorder i32* %v2_1eff4, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32)* @function_1ee84, { 3, 2, 1, 0 }
}

define i32 @function_1f041() local_unnamed_addr {
dec_label_pc_1f041:
  %v0_1f041 = load i32, i32* @edi, align 4
  %v1_1f041 = add i32 %v0_1f041, ptrtoint (i32* @global_var_98.3568 to i32)
  %v2_1f041 = inttoptr i32 %v1_1f041 to i32*
  %v3_1f041 = load i32, i32* %v2_1f041, align 4
  %v4_1f041 = add i32 %v3_1f041, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1f041, i32* %v2_1f041, align 4
  %v0_1f048 = load i32, i32* @eax, align 4
  ret i32 %v0_1f048
}

define i32 @function_1f04d() local_unnamed_addr {
dec_label_pc_1f04d:
  %v3_1f04d = load i32, i32* @eax, align 4
  ret i32 %v3_1f04d
}

define i32 @function_1f055(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f055:
  ret i32 %arg1
}

define i32 @function_1f06d() local_unnamed_addr {
dec_label_pc_1f06d:
  %ecx.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %stack_var_128 = alloca i32, align 4
  %v0_1f06d = load i32, i32* @edx, align 4
  %tmp12 = sub i32 8, %v0_1f06d
  %v8_1f06d = and i32 %tmp12, %v0_1f06d
  %v9_1f06d = icmp slt i32 %v8_1f06d, 0
  store i1 %v9_1f06d, i1* %of.global-to-local, align 1
  %tmp16 = icmp ult i32 %v0_1f06d, 10
  br i1 %tmp16, label %bb, label %dec_label_pc_1f076

bb:                                               ; preds = %dec_label_pc_1f06d
  %v3_1f070 = call i32 @function_1f3c6()
  store i32 %v3_1f070, i32* @eax, align 4
  %v0_1f076.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1f076

dec_label_pc_1f076:                               ; preds = %bb, %dec_label_pc_1f06d
  %v0_1f076 = phi i32 [ %v0_1f076.pre, %bb ], [ %v0_1f06d, %dec_label_pc_1f06d ]
  %v1_1f076 = add i32 %v0_1f076, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1f076, i32* %ecx.global-to-local, align 4
  %v7_1f079 = icmp ult i32 %v0_1f076, %v1_1f076
  %v8_1f079 = xor i32 %v1_1f076, %v0_1f076
  %v9_1f079 = xor i32 %v0_1f076, sub (i32 0, i32 ptrtoint (i8** @global_var_1.3274 to i32))
  %v10_1f079 = and i32 %v8_1f079, %v9_1f079
  %v11_1f079 = icmp slt i32 %v10_1f079, 0
  store i1 %v11_1f079, i1* %of.global-to-local, align 1
  %v1_1f07f = icmp eq i1 %v7_1f079, false
  br i1 %v1_1f07f, label %bb13, label %dec_label_pc_1f085

bb13:                                             ; preds = %dec_label_pc_1f076
  %v4_1f07f = call i32 @function_1f3c1(i32 %v1_1f076)
  %v0_1f085.pre = load i32, i32* @edx, align 4
  %v1_1f088.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1f085

dec_label_pc_1f085:                               ; preds = %bb13, %dec_label_pc_1f076
  %v2_1f08a = phi i32 [ %v1_1f088.pre, %bb13 ], [ %v1_1f076, %dec_label_pc_1f076 ]
  %v0_1f085 = phi i32 [ %v0_1f085.pre, %bb13 ], [ %v0_1f076, %dec_label_pc_1f076 ]
  %v2_1f085 = mul i32 %v0_1f085, 4
  %v7_1f088 = icmp ult i32 %v2_1f085, %v2_1f08a
  %v3_1f08a = select i1 %v7_1f088, i32 %v2_1f08a, i32 %v2_1f085
  %tmp14 = sub i32 357913940, %v3_1f08a
  %v8_1f08d = and i32 %tmp14, %v3_1f08a
  %v9_1f08d = icmp slt i32 %v8_1f08d, 0
  store i1 %v9_1f08d, i1* %of.global-to-local, align 1
  %tmp17 = icmp ult i32 %v3_1f08a, 357913942
  br i1 %tmp17, label %dec_label_pc_1f09d, label %bb15

bb15:                                             ; preds = %dec_label_pc_1f085
  %v5_1f097 = call i32 @function_1f375(i32 %v3_1f08a)
  %v1_1f0af.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_1f09d

dec_label_pc_1f09d:                               ; preds = %dec_label_pc_1f085, %bb15
  %v1_1f0af = phi i1 [ %v9_1f08d, %dec_label_pc_1f085 ], [ %v1_1f0af.pre, %bb15 ]
  store i32 %v3_1f08a, i32* @edx, align 4
  %v2_1f0a1 = ptrtoint i32* %stack_var_128 to i32
  store i32 %v2_1f0a1, i32* @ecx, align 4
  %v2_1f0af = mul i32 %v3_1f08a, 12
  store i1 %v1_1f0af, i1* %of.global-to-local, align 1
  ret i32 %v2_1f0af

; uselistorder directives
  uselistorder i32 %v3_1f08a, { 3, 4, 2, 0, 1, 5 }
  uselistorder i32 %v2_1f085, { 1, 0 }
  uselistorder i32 %v1_1f076, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1f076, { 1, 3, 0, 4, 2 }
  uselistorder i32 %v0_1f06d, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1f09d, { 1, 0 }
}

define i32 @function_1f0d2() local_unnamed_addr {
dec_label_pc_1f0d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f0d2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f0d2
}

define i32 @function_1f0ee() local_unnamed_addr {
dec_label_pc_1f0ee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f119() local_unnamed_addr {
dec_label_pc_1f119:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f119 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f119
}

define i32 @function_1f11e() local_unnamed_addr {
dec_label_pc_1f11e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f11e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f11e
}

define i32 @function_1f13c() local_unnamed_addr {
dec_label_pc_1f13c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f13c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f13c
}

define i32 @function_1f145() local_unnamed_addr {
dec_label_pc_1f145:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f145 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f145
}

define i32 @function_1f168() local_unnamed_addr {
dec_label_pc_1f168:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1f168 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f168 = sub i32 %v0_1f168, ptrtoint (i8** @global_var_1.3274 to i32)
  %v10_1f168 = icmp slt i32 %v1_1f168, 0
  store i32 %v1_1f168, i32* %ecx.global-to-local, align 4
  br i1 %v10_1f168, label %bb, label %dec_label_pc_1f16b

bb:                                               ; preds = %dec_label_pc_1f168
  %v1_1f169 = call i32 @function_1f0ee()
  store i32 %v1_1f169, i32* @eax, align 4
  %v3_1f16c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1f16b

dec_label_pc_1f16b:                               ; preds = %bb, %dec_label_pc_1f168
  %v3_1f16c = phi i32 [ %v3_1f16c.pre, %bb ], [ %v1_1f168, %dec_label_pc_1f168 ]
  %v2_1f16c = load i32, i32* %edi.global-to-local, align 4
  %v4_1f16c = or i32 %v2_1f16c, %v3_1f16c
  %v12_1f16c = inttoptr i32 %v2_1f16c to i32*
  store i32 %v4_1f16c, i32* %v12_1f16c, align 4
  %v0_1f16e = load i32, i32* %ecx.global-to-local, align 4
  %v2_1f16e = load i32, i32* %edx.global-to-local, align 4
  %v3_1f16e = lshr i32 %v2_1f16e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v4_1f16e = and i32 %v3_1f16e, ptrtoint (i8* @global_var_ff.3305 to i32)
  %v6_1f16e = shl i32 %v4_1f16e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v7_1f16e = and i32 %v0_1f16e, -65281
  %v8_1f16e = or i32 %v6_1f16e, %v7_1f16e
  store i32 %v8_1f16e, i32* %ecx.global-to-local, align 4
  %v9_1f16e = and i32 %v0_1f16e, shl (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 8)
  %v12_1f16e = and i32 %v2_1f16e, -65281
  %v13_1f16e = or i32 %v12_1f16e, %v9_1f16e
  store i32 %v13_1f16e, i32* %edx.global-to-local, align 4
  %v2_1f170 = load i32, i32* @eax, align 4
  %v4_1f170 = mul i32 %v2_1f170, 2
  %v21_1f170 = inttoptr i32 %v2_1f170 to i32*
  store i32 %v4_1f170, i32* %v21_1f170, align 4
  %v0_1f172 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f172 = inttoptr i32 %v0_1f172 to i8*
  %v2_1f172 = load i8, i8* %v1_1f172, align 1
  %v3_1f172 = load i32, i32* %ebx.global-to-local, align 4
  %v4_1f172 = udiv i32 %v3_1f172, 256
  %v5_1f172 = trunc i32 %v4_1f172 to i8
  %v6_1f172 = add i8 %v5_1f172, %v2_1f172
  store i8 %v6_1f172, i8* %v1_1f172, align 1
  %v0_1f174 = load i32, i32* @eax, align 4
  ret i32 %v0_1f174

; uselistorder directives
  uselistorder i32 %v2_1f170, { 1, 0 }
  uselistorder i32 %v2_1f16c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 0 }
}

define i32 @function_1f19d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f19d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f1f9(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f1f9:
  %stack_var_128 = alloca i32, align 4
  %v2_1f1f9 = ptrtoint i32* %stack_var_128 to i32
  ret i32 %v2_1f1f9
}

define i32 @function_1f209() local_unnamed_addr {
dec_label_pc_1f209:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_1f20f = add i32 %tmp1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f20f = inttoptr i32 %v1_1f20f to i32*
  %v3_1f20f = load i32, i32* %v2_1f20f, align 4
  %v1_1f212 = add i32 %v3_1f20f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f212 = inttoptr i32 %v1_1f212 to i32*
  %v3_1f212 = load i32, i32* %v2_1f212, align 4
  ret i32 %v3_1f212
}

define i32 @function_1f228() local_unnamed_addr {
dec_label_pc_1f228:
  %v0_1f22a = call i32 @function_1ec3d()
  ret i32 %v0_1f22a
}

define i32 @function_1f22f() local_unnamed_addr {
dec_label_pc_1f22f:
  %ecx.global-to-local = alloca i32, align 4
  %v2_1f22f = load i32, i32* @esi, align 4
  %v2_1f235 = add i32 %v2_1f22f, 12
  %v3_1f235 = inttoptr i32 %v2_1f235 to i32*
  store i32 %v2_1f22f, i32* %v3_1f235, align 4
  %v0_1f238 = load i32, i32* %ecx.global-to-local, align 4
  %v0_1f240 = load i32, i32* @esi, align 4
  %v1_1f240 = add i32 %v0_1f240, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f240 = inttoptr i32 %v1_1f240 to i32*
  %v3_1f240 = load i32, i32* %v2_1f240, align 4
  store i32 %v3_1f240, i32* @eax, align 4
  %v14_1f243 = icmp eq i32 %v0_1f240, %v3_1f240
  %v1_1f245 = icmp eq i1 %v14_1f243, false
  br i1 %v1_1f245, label %bb, label %dec_label_pc_1f24b

bb:                                               ; preds = %dec_label_pc_1f22f
  %v3_1f245 = call i32 @function_1ed80(i32 %v0_1f238)
  br label %dec_label_pc_1f24b

dec_label_pc_1f24b:                               ; preds = %bb, %dec_label_pc_1f22f
  %v0_1f24b = call i32 @function_1ed7a()
  ret i32 %v0_1f24b

; uselistorder directives
  uselistorder i32 %v2_1f22f, { 1, 0 }
  uselistorder i32 ()* @function_1ed7a, { 1, 0 }
  uselistorder i32 (i32)* @function_1ed80, { 1, 0 }
}

define i32 @function_1f250(i64 %arg1) local_unnamed_addr {
dec_label_pc_1f250:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v4_1f250 = trunc i64 %arg1 to i32
  %v1_1f254 = sub i32 %v4_1f250, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1f257 = mul i32 %v1_1f254, 12
  %v1_1f25a = load i32, i32* %edx.global-to-local, align 4
  %v2_1f25a = add i32 %v1_1f25a, %v3_1f257
  %v7_1f260 = mul i64 %arg1, 12
  %v8_1f260 = trunc i64 %v7_1f260 to i32
  %v6_1f26d = sub i32 %v2_1f25a, %v8_1f260
  store i32 %v6_1f26d, i32* @eax, align 4
  %v10_1f271 = icmp ult i32 %v2_1f25a, %v6_1f26d
  %v15_1f271 = icmp eq i32 %v8_1f260, 0
  %v2_1f279 = or i1 %v15_1f271, %v10_1f271
  br i1 %v2_1f279, label %bb, label %dec_label_pc_1f27f.preheader

bb:                                               ; preds = %dec_label_pc_1f250
  %v5_1f279 = call i32 @function_1f19d(i32 %v8_1f260)
  store i32 %v5_1f279, i32* @eax, align 4
  br label %dec_label_pc_1f27f.preheader

dec_label_pc_1f27f.preheader:                     ; preds = %dec_label_pc_1f250, %bb
  br label %dec_label_pc_1f27f

dec_label_pc_1f27f:                               ; preds = %dec_label_pc_1f27f.preheader, %dec_label_pc_1f27f
  %stack_var_60.0 = phi i32 [ %v4_1f296, %dec_label_pc_1f27f ], [ %v2_1f25a, %dec_label_pc_1f27f.preheader ]
  store i32 %stack_var_60.0, i32* %edx.global-to-local, align 4
  %v1_1f291 = call i32 @function_35260(i32 %stack_var_60.0)
  %v4_1f296 = add i32 %stack_var_60.0, -12
  store i32 %v4_1f296, i32* @eax, align 4
  %v11_1f29f = icmp ult i32 %v6_1f26d, %v4_1f296
  br i1 %v11_1f29f, label %dec_label_pc_1f27f, label %dec_label_pc_1f2a5

dec_label_pc_1f2a5:                               ; preds = %dec_label_pc_1f27f
  %v0_1f2a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_1f2a8 = add i32 %v0_1f2a5, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1f2a8 = inttoptr i32 %v1_1f2a8 to i32*
  %v3_1f2a8 = load i32, i32* %v2_1f2a8, align 4
  store i32 %v3_1f2a8, i32* %edx.global-to-local, align 4
  %v1_1f2ae = call i32 @function_1f19d(i32 %v4_1f296)
  ret i32 %v1_1f2ae

; uselistorder directives
  uselistorder i32 %v4_1f296, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_60.0, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_1f19d, { 1, 0 }
  uselistorder label %dec_label_pc_1f27f, { 1, 0 }
  uselistorder label %dec_label_pc_1f27f.preheader, { 1, 0 }
}

define i32 @function_1f2b3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f2b3:
  %v0_1f2b3 = call i32 @function_30012()
  ret i32 %v0_1f2b3
}

define i32 @function_1f2b8() local_unnamed_addr {
dec_label_pc_1f2b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f2bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f2bd:
  %v3_1f2d5 = load i32, i32* @eax, align 4
  ret i32 %v3_1f2d5
}

define i32 @function_1f32a() local_unnamed_addr {
dec_label_pc_1f32a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f32a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f32a
}

define i32 @function_1f32b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f32b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f337(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f337:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f34a() local_unnamed_addr {
dec_label_pc_1f34a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f34a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f34a = add i32 %v0_1f34a, -1988615084
  %v2_1f34a = inttoptr i32 %v1_1f34a to i32*
  %v3_1f34a = load i32, i32* %v2_1f34a, align 4
  %v4_1f34a = sub i32 %v3_1f34a, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1f34a, i32* %v2_1f34a, align 4
  %v0_1f350 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f350
}

define i32 @function_1f351() local_unnamed_addr {
dec_label_pc_1f351:
  %edx.global-to-local = alloca i32, align 4
  %v0_1f351 = load i32, i32* %edx.global-to-local, align 4
  %v1_1f351 = icmp eq i32 %v0_1f351, 0
  br i1 %v1_1f351, label %bb, label %dec_label_pc_1f355

bb:                                               ; preds = %dec_label_pc_1f351
  %v2_1f353 = call i32 @function_1f337(i32 ptrtoint (i32* @0 to i32))
  %v2_1f355.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1f355

dec_label_pc_1f355:                               ; preds = %bb, %dec_label_pc_1f351
  %v2_1f355 = phi i32 [ %v2_1f355.pre, %bb ], [ %v0_1f351, %dec_label_pc_1f351 ]
  store i32 %v2_1f355, i32* @eax, align 4
  %v1_1f35d = call i32 @function_1f337(i32 %v2_1f355)
  ret i32 %v1_1f35d

; uselistorder directives
  uselistorder i32 %v2_1f355, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
}

define i32 @function_1f375(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f375:
  %stack_var_128 = alloca i32, align 4
  %v2_1f375 = ptrtoint i32* %stack_var_128 to i32
  ret i32 %v2_1f375
}

define i32 @function_1f384() local_unnamed_addr {
dec_label_pc_1f384:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_1f384 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f384 = add i32 %v0_1f384, -1951470653
  %v2_1f384 = inttoptr i32 %v1_1f384 to i32*
  %v3_1f384 = load i32, i32* %v2_1f384, align 4
  %v4_1f384 = sub i32 %v3_1f384, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1f384, i32* %v2_1f384, align 4
  %v0_1f38b = load i32, i32* %eax.global-to-local, align 4
  %v11_1f38b = and i32 %v0_1f38b, or (i32 zext (i8 ptrtoint (i8* @global_var_74.3482 to i8) to i32), i32 -256)
  store i32 %v11_1f38b, i32* @eax, align 4
  %v0_1f38f = load i32, i32* %edx.global-to-local, align 4
  %v1_1f38f = icmp eq i32 %v0_1f38f, 0
  br i1 %v1_1f38f, label %bb, label %dec_label_pc_1f393

bb:                                               ; preds = %dec_label_pc_1f384
  %v4_1f38a = ptrtoint i32* %stack_var_0 to i32
  %v2_1f391 = call i32 @function_1f337(i32 %v4_1f38a)
  store i32 %v2_1f391, i32* %eax.global-to-local, align 4
  %v2_1f393.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1f393

dec_label_pc_1f393:                               ; preds = %bb, %dec_label_pc_1f384
  %v2_1f393 = phi i32 [ %v2_1f393.pre, %bb ], [ %v0_1f38f, %dec_label_pc_1f384 ]
  store i32 %v2_1f393, i32* @eax, align 4
  %v1_1f39b = call i32 @function_1f337(i32 %v2_1f393)
  store i32 %v1_1f39b, i32* %eax.global-to-local, align 4
  ret i32 %v1_1f39b

; uselistorder directives
  uselistorder i32 %v2_1f393, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_1f337, { 3, 2, 1, 0 }
}

define i32 @function_1f39d() local_unnamed_addr {
dec_label_pc_1f39d:
  %v3_1f3b5 = load i32, i32* @eax, align 4
  ret i32 %v3_1f3b5
}

define i32 @function_1f3c1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f3c1:
  %v0_1f3c1 = call i32 @function_30422()
  ret i32 %v0_1f3c1
}

define i32 @function_1f3c6() local_unnamed_addr {
dec_label_pc_1f3c6:
  %v3_1f3de = load i32, i32* @eax, align 4
  ret i32 %v3_1f3de
}

define i32 @function_1f3ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f3ea:
  %stack_var_128 = alloca i32, align 4
  %v0_1f3ea = load i32, i32* @ebx, align 4
  %v1_1f3ea = add i32 %v0_1f3ea, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f3ea = inttoptr i32 %v1_1f3ea to i8*
  store i8 0, i8* %v2_1f3ea, align 1
  %v2_1f3ee = ptrtoint i32* %stack_var_128 to i32
  store i32 %v2_1f3ee, i32* @eax, align 4
  %v1_1f3f8 = call i32 @function_35260(i32 %v2_1f3ee)
  ret i32 %v1_1f3f8
}

define i32 @function_1f411(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f411:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1f411 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f411 = add i32 %v0_1f411, 960242772
  %v2_1f411 = inttoptr i32 %v1_1f411 to i32*
  %v3_1f411 = load i32, i32* %v2_1f411, align 4
  %v4_1f411 = add i32 %v3_1f411, -1
  store i32 %v4_1f411, i32* %v2_1f411, align 4
  %v0_1f418 = load i32, i32* %eax.global-to-local, align 4
  %v1_1f418 = trunc i32 %v0_1f418 to i8
  %v2_1f418 = and i8 %v1_1f418, ptrtoint (i32* @global_var_40.3547 to i8)
  %v3_1f418 = icmp eq i8 %v2_1f418, 0
  %v8_1f418 = zext i8 %v2_1f418 to i32
  %v10_1f418 = and i32 %v0_1f418, -256
  %v11_1f418 = or i32 %v8_1f418, %v10_1f418
  store i32 %v11_1f418, i32* %eax.global-to-local, align 4
  br i1 %v3_1f418, label %dec_label_pc_1f42f, label %dec_label_pc_1f41c

dec_label_pc_1f41c:                               ; preds = %dec_label_pc_1f411
  store i32 %arg1, i32* @eax, align 4
  %v1_1f423 = call i32 @function_35260(i32 %arg1)
  store i32 %v1_1f423, i32* %eax.global-to-local, align 4
  ret i32 %v1_1f423

dec_label_pc_1f42f:                               ; preds = %dec_label_pc_1f411
  ret i32 %v11_1f418

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_35260, { 4, 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f43a() local_unnamed_addr {
dec_label_pc_1f43a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_124 = alloca i32, align 4
  %v0_1f43a = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f43a = add i32 %v0_1f43a, -1959254972
  %v2_1f43a = inttoptr i32 %v1_1f43a to i32*
  %v3_1f43a = load i32, i32* %v2_1f43a, align 4
  %v4_1f43a = sub i32 %v3_1f43a, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1f43a, i32* %v2_1f43a, align 4
  %v0_1f441 = load i32, i32* %eax.global-to-local, align 4
  %v11_1f441 = and i32 %v0_1f441, or (i32 zext (i8 ptrtoint (i32* @global_var_30.3470 to i8) to i32), i32 -256)
  store i32 %v11_1f441, i32* @eax, align 4
  %v0_1f443 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1f447 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1f447, i32* %ebx.global-to-local, align 4
  %v0_1f44d = load i32, i32* %edx.global-to-local, align 4
  %v3_1f450 = call i32 @function_2cf00(i32 %v0_1f44d, i32 %v0_1f443, i32 %v11_1f441)
  store i32 %v3_1f450, i32* @eax, align 4
  %v2_1f455 = ptrtoint i32* %stack_var_124 to i32
  %v1_1f460 = call i32 @function_1f32b(i32 %v2_1f455)
  store i32 %v1_1f460, i32* %eax.global-to-local, align 4
  ret i32 %v1_1f460

; uselistorder directives
  uselistorder i32 %v11_1f441, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f510:
  %tmp119 = ptrtoint i32* %arg1 to i32
  store i32 %tmp119, i32* @esi, align 4
  %v0_1f521 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f530 = load i32, i32* %arg1, align 4
  store i32 %v2_1f530, i32* @eax, align 4
  %v2_1f532 = add i32 %tmp119, 12
  %v3_1f532 = inttoptr i32 %v2_1f532 to i32*
  %v4_1f532 = load i32, i32* %v3_1f532, align 4
  %v15_1f532 = icmp eq i32 %v2_1f530, %v4_1f532
  br i1 %v15_1f532, label %bb, label %dec_label_pc_1f53b

bb:                                               ; preds = %dec_label_pc_1f510
  %v2_1f535 = call i32 @function_1f720(i32 %v0_1f521)
  %v1_1f53b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1f53b

dec_label_pc_1f53b:                               ; preds = %bb, %dec_label_pc_1f510
  %v1_1f53b = phi i32 [ %v1_1f53b.pre, %bb ], [ %tmp119, %dec_label_pc_1f510 ]
  %v0_1f53b = phi i32 [ %v2_1f535, %bb ], [ %v2_1f530, %dec_label_pc_1f510 ]
  %v2_1f53b = add i32 %v1_1f53b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1f53b = inttoptr i32 %v2_1f53b to i32*
  %v4_1f53b = load i32, i32* %v3_1f53b, align 4
  %v15_1f53b = icmp eq i32 %v0_1f53b, %v4_1f53b
  br i1 %v15_1f53b, label %bb126, label %dec_label_pc_1f544

bb126:                                            ; preds = %dec_label_pc_1f53b
  %v1_1f53e = call i32 @function_1f71a()
  br label %dec_label_pc_1f544

dec_label_pc_1f544:                               ; preds = %bb126, %dec_label_pc_1f53b
  %v0_1f544 = phi i32 [ %v1_1f53e, %bb126 ], [ %v0_1f53b, %dec_label_pc_1f53b ]
  %v1_1f544 = add i32 %v0_1f544, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1f544 = inttoptr i32 %v1_1f544 to i32*
  %v3_1f544 = load i32, i32* %v2_1f544, align 4
  store i32 %v3_1f544, i32* @eax, align 4
  %v1_1f547 = icmp eq i32 %v3_1f544, 0
  br i1 %v1_1f547, label %bb127, label %dec_label_pc_1f553

bb127:                                            ; preds = %dec_label_pc_1f544
  %v2_1f54d = call i32 @function_1fc60(i32 0)
  br label %dec_label_pc_1f553

dec_label_pc_1f553:                               ; preds = %bb127, %dec_label_pc_1f544
  %v0_1f55f = load i32, i32* @esi, align 4
  %v1_1f55f = add i32 %v0_1f55f, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1f55f = inttoptr i32 %v1_1f55f to i32*
  %v3_1f55f = load i32, i32* %v2_1f55f, align 4
  store i32 %v3_1f55f, i32* @edi, align 4
  %v1_1f562 = add i32 %v3_1f55f, ptrtoint (i32* @global_var_88.3507 to i32)
  %v2_1f562 = inttoptr i32 %v1_1f562 to i32*
  %v3_1f562 = load i32, i32* %v2_1f562, align 4
  store i32 %v3_1f562, i32* @ebp, align 4
  %v1_1f568 = icmp eq i32 %v3_1f562, 0
  %v1_1f56a = icmp eq i1 %v1_1f568, false
  br i1 %v1_1f56a, label %bb128, label %dec_label_pc_1f570

bb128:                                            ; preds = %dec_label_pc_1f553
  %v4_1f56a = call i32 @function_1f758(i32 %v3_1f544)
  %v0_1f570.pre = load i32, i32* @edi, align 4
  %v0_1f577.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1f570

dec_label_pc_1f570:                               ; preds = %bb128, %dec_label_pc_1f553
  %v0_1f577 = phi i32 [ %v0_1f577.pre, %bb128 ], [ %v0_1f55f, %dec_label_pc_1f553 ]
  %v0_1f570 = phi i32 [ %v0_1f570.pre, %bb128 ], [ %v3_1f55f, %dec_label_pc_1f553 ]
  %v1_1f577 = inttoptr i32 %v0_1f577 to i32*
  %v2_1f577 = load i32, i32* %v1_1f577, align 4
  store i32 %v2_1f577, i32* @eax, align 4
  %v1_1f579 = add i32 %v2_1f577, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1f579 = inttoptr i32 %v1_1f579 to i32*
  %v3_1f579 = load i32, i32* %v2_1f579, align 4
  store i32 %v3_1f579, i32* @ebx, align 4
  %v1_1f57c = icmp eq i32 %v3_1f579, 0
  br i1 %v1_1f57c, label %bb129, label %dec_label_pc_1f584

bb129:                                            ; preds = %dec_label_pc_1f570
  %v1_1f570 = add i32 %v0_1f570, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1f57e = call i32 @function_1fc56(i32 %v1_1f570)
  store i32 %v3_1f57e, i32* @eax, align 4
  br label %dec_label_pc_1f584

dec_label_pc_1f584:                               ; preds = %bb129, %dec_label_pc_1f570
  %v1_1f584 = add i32 %v3_1f579, 16
  %v2_1f584 = inttoptr i32 %v1_1f584 to i32*
  %v3_1f584 = load i32, i32* %v2_1f584, align 4
  store i32 %v3_1f584, i32* @ebp, align 4
  %v2_1f587 = add i32 %v3_1f579, 20
  %v3_1f587 = inttoptr i32 %v2_1f587 to i32*
  %v4_1f587 = load i32, i32* %v3_1f587, align 4
  %v15_1f587 = icmp eq i32 %v3_1f584, %v4_1f587
  br i1 %v15_1f587, label %bb130, label %dec_label_pc_1f590

bb130:                                            ; preds = %dec_label_pc_1f584
  %v1_1f58a = call i32 @function_1f6d8()
  %v0_1f590.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1f590

dec_label_pc_1f590:                               ; preds = %bb130, %dec_label_pc_1f584
  %v0_1f590 = phi i32 [ %v0_1f590.pre, %bb130 ], [ %v3_1f584, %dec_label_pc_1f584 ]
  %v1_1f598 = inttoptr i32 %v0_1f590 to i32*
  %v2_1f598 = load i32, i32* %v1_1f598, align 4
  %v2_1f59c = ashr i32 %v2_1f598, 31
  %v2_1f59f = xor i32 %v2_1f59c, %v2_1f598
  store i32 %v2_1f59f, i32* @eax, align 4
  %tmp133 = icmp ult i32 %v2_1f59f, 20
  br i1 %tmp133, label %bb132, label %dec_label_pc_1f5aa

bb132:                                            ; preds = %dec_label_pc_1f590
  %v3_1f5a4 = call i32 @function_1f740()
  br label %dec_label_pc_1f5aa

dec_label_pc_1f5aa:                               ; preds = %bb132, %dec_label_pc_1f590
  %v3_1f5c2 = phi i32 [ %v3_1f5a4, %bb132 ], [ %v2_1f59f, %dec_label_pc_1f590 ]
  ret i32 %v3_1f5c2

; uselistorder directives
  uselistorder i32 %v2_1f59f, { 1, 0, 2 }
  uselistorder i32 %v3_1f584, { 1, 0, 2 }
  uselistorder i32 %v3_1f579, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1f53b, { 1, 0 }
  uselistorder i32 %v2_1f530, { 1, 0, 2 }
}

define i32 @function_1f5cd() local_unnamed_addr {
dec_label_pc_1f5cd:
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f5cd = load i32, i32* %ebp.global-to-local, align 4
  %v1_1f5cd = add i32 %v0_1f5cd, 609520594
  %v2_1f5cd = inttoptr i32 %v1_1f5cd to i32*
  %v3_1f5cd = load i32, i32* %v2_1f5cd, align 4
  %v4_1f5cd = add i32 %v3_1f5cd, 1
  store i32 %v4_1f5cd, i32* %v2_1f5cd, align 4
  %v0_1f5d3 = load i32, i32* @ebx, align 4
  %v1_1f5d3 = add i32 %v0_1f5d3, -2012281790
  %v2_1f5d3 = inttoptr i32 %v1_1f5d3 to i8*
  %v3_1f5d3 = load i8, i8* %v2_1f5d3, align 1
  %v4_1f5d3 = load i32, i32* %ecx.global-to-local, align 4
  %v5_1f5d3 = trunc i32 %v4_1f5d3 to i8
  %v6_1f5d3 = sub i8 %v3_1f5d3, %v5_1f5d3
  store i8 %v6_1f5d3, i8* %v2_1f5d3, align 1
  %v0_1f5d9 = call i32 @function_1f5e0()
  ret i32 %v0_1f5d9
}

define i32 @function_1f5dd() local_unnamed_addr {
dec_label_pc_1f5dd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f5e0() local_unnamed_addr {
dec_label_pc_1f5e0:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_124 = alloca i32, align 4
  %stack_var_132 = alloca i32, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_128 = alloca i32, align 4
  %v0_1f5e0 = load i32, i32* @eax, align 4
  %tmp22 = trunc i32 %v0_1f5e0 to i8
  %v5_1f5e3 = mul i8 %tmp22, 2
  %v21_1f5e3 = inttoptr i32 %v0_1f5e0 to i8*
  store i8 %v5_1f5e3, i8* %v21_1f5e3, align 1
  %v2_1f5e5 = load i32, i32* @eax, align 4
  %v2_1f5e7 = ptrtoint i32* %stack_var_128 to i32
  %v4_1f5f8 = trunc i32 %v2_1f5e5 to i8
  %v5_1f5f8 = icmp eq i8 %v4_1f5f8, 0
  %v1_1f5fa = icmp eq i1 %v5_1f5f8, false
  br i1 %v1_1f5fa, label %bb, label %dec_label_pc_1f600

bb:                                               ; preds = %dec_label_pc_1f5e0
  %v3_1f5fa = call i32 @function_1fd8a(i32 %v2_1f5e5)
  store i32 %v3_1f5fa, i32* @eax, align 4
  br label %dec_label_pc_1f600

dec_label_pc_1f600:                               ; preds = %bb, %dec_label_pc_1f5e0
  %v1_1f604 = add i32 %tmp18, ptrtoint (i32* @global_var_80.3314 to i32)
  %v2_1f604 = inttoptr i32 %v1_1f604 to i32*
  %v3_1f604 = load i32, i32* %v2_1f604, align 4
  store i32 %v3_1f604, i32* @edx, align 4
  %v2_1f60a = add i32 %tmp18, 120
  %v3_1f60a = inttoptr i32 %v2_1f60a to i32*
  %v4_1f60a = load i32, i32* %v3_1f60a, align 4
  %v15_1f60a = icmp eq i32 %v3_1f604, %v4_1f60a
  br i1 %v15_1f60a, label %bb23, label %dec_label_pc_1f613

bb23:                                             ; preds = %dec_label_pc_1f600
  %v1_1f60d = call i32 @function_1fa0d()
  %v0_1f613.pre = load i32, i32* @edx, align 4
  %v1_1f619.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_1f613

dec_label_pc_1f613:                               ; preds = %bb23, %dec_label_pc_1f600
  %v1_1f619 = phi i32 [ %v1_1f619.pre, %bb23 ], [ %tmp18, %dec_label_pc_1f600 ]
  %v0_1f613 = phi i32 [ %v0_1f613.pre, %bb23 ], [ %v3_1f604, %dec_label_pc_1f600 ]
  %v2_1f616 = mul i32 %v0_1f613, 12
  %v2_1f619 = add i32 %v1_1f619, 124
  %v3_1f619 = inttoptr i32 %v2_1f619 to i32*
  %v4_1f619 = load i32, i32* %v3_1f619, align 4
  %v5_1f619 = add i32 %v4_1f619, %v2_1f616
  %v15_1f619 = icmp eq i32 %v5_1f619, 0
  br i1 %v15_1f619, label %bb24, label %dec_label_pc_1f626

bb24:                                             ; preds = %dec_label_pc_1f613
  %v2_1f620 = call i32 @function_1fb99(i32 0)
  br label %dec_label_pc_1f626

dec_label_pc_1f626:                               ; preds = %bb24, %dec_label_pc_1f613
  %v3_1f635 = load i32, i32* %stack_var_128, align 4
  %v2_1f63c = ptrtoint i32* %stack_var_132 to i32
  %v2_1f647 = ptrtoint i32* %stack_var_124 to i32
  %v1_1f653 = add i32 %v5_1f619, 4
  store i32 %v1_1f653, i32* %stack_var_124, align 4
  %v2_1f65c = ashr i32 %v3_1f635, 31
  %v2_1f65f = xor i32 %v2_1f65c, %v3_1f635
  store i32 %v2_1f65f, i32* @eax, align 4
  %v10_1f67e = call i32 @function_3d590(i32 %v3_1f635, i32 %v2_1f65f, i32 %v2_1f647, i32 %v2_1f63c, i32 0, i32 0, i32 0, i32 0)
  %v3_1f683 = load i32, i32* %stack_var_128, align 4
  %v2_1f690 = ashr i32 %v3_1f683, 31
  %v2_1f693 = xor i32 %v2_1f690, %v3_1f683
  %v2_1f695 = inttoptr i32 %v5_1f619 to i32*
  store i32 %v2_1f693, i32* %v2_1f695, align 4
  %v0_1f697 = load i32, i32* @edi, align 4
  %v1_1f697 = add i32 %v0_1f697, ptrtoint (i32* @global_var_88.3507 to i32)
  %v2_1f697 = inttoptr i32 %v1_1f697 to i32*
  %v3_1f697 = load i32, i32* %v2_1f697, align 4
  %v1_1f6a1 = add i32 %v3_1f697, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1f6a1, i32* %v2_1f604, align 4
  %v1_1f6b1 = call i32 @function_35c00(i32 %v2_1f5e7)
  %v2_1f6c8 = load i32, i32* @esi, align 4
  store i32 %v2_1f6c8, i32* @eax, align 4
  %v1_1f6ca = add i32 %v2_1f6c8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1f6ca = inttoptr i32 %v1_1f6ca to i32*
  %v3_1f6ca = load i32, i32* %v2_1f6ca, align 4
  %v1_1f6cd = icmp eq i32 %v3_1f6ca, 0
  br i1 %v1_1f6cd, label %bb26, label %dec_label_pc_1f6d5

bb26:                                             ; preds = %dec_label_pc_1f626
  %v4_1f6b6 = add i32 %tmp7, 12
  %v2_1f6cf = call i32 @function_1fc56(i32 %v4_1f6b6)
  br label %dec_label_pc_1f6d5

dec_label_pc_1f6d5:                               ; preds = %bb26, %dec_label_pc_1f626
  %v4_1f6d5 = phi i32 [ %v2_1f6cf, %bb26 ], [ %v2_1f6c8, %dec_label_pc_1f626 ]
  ret i32 %v4_1f6d5

; uselistorder directives
  uselistorder i32 %v3_1f635, { 1, 0, 2 }
  uselistorder i32 %v3_1f604, { 1, 0, 2 }
  uselistorder i32 %v2_1f5e5, { 1, 0 }
  uselistorder i32 %tmp18, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_1fc56, { 1, 0 }
  uselistorder i32 120, { 0, 1, 2, 5, 3, 4 }
}

define i32 @function_1f6d8() local_unnamed_addr {
dec_label_pc_1f6d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f6d8 = load i32, i32* @ebx, align 4
  %v1_1f6d8 = add i32 %v0_1f6d8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f6d8 = inttoptr i32 %v1_1f6d8 to i8*
  %v3_1f6d8 = load i8, i8* %v2_1f6d8, align 1
  %v10_1f6d8 = icmp eq i8 %v3_1f6d8, 0
  br i1 %v10_1f6d8, label %bb, label %dec_label_pc_1f6e2

bb:                                               ; preds = %dec_label_pc_1f6d8
  %v1_1f6dc = call i32 @function_1f9e1()
  store i32 %v1_1f6dc, i32* %eax.global-to-local, align 4
  %v0_1f6e2.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1f6e2

dec_label_pc_1f6e2:                               ; preds = %bb, %dec_label_pc_1f6d8
  %v0_1f6e2 = phi i32 [ %v0_1f6e2.pre, %bb ], [ %v0_1f6d8, %dec_label_pc_1f6d8 ]
  %v1_1f6e2 = add i32 %v0_1f6e2, 12
  %v2_1f6e2 = inttoptr i32 %v1_1f6e2 to i32*
  %v3_1f6e2 = load i32, i32* %v2_1f6e2, align 4
  store i32 %v3_1f6e2, i32* %eax.global-to-local, align 4
  %v0_1f6e5 = load i32, i32* @edi, align 4
  %v1_1f6e5 = add i32 %v0_1f6e5, 144
  %v2_1f6e5 = inttoptr i32 %v1_1f6e5 to i32*
  %v3_1f6e5 = load i32, i32* %v2_1f6e5, align 4
  %v4_1f6e5 = add i32 %v3_1f6e5, 1
  store i32 %v4_1f6e5, i32* %v2_1f6e5, align 4
  %v0_1f6ec = load i32, i32* %eax.global-to-local, align 4
  %v1_1f6ec = icmp eq i32 %v0_1f6ec, 0
  br i1 %v1_1f6ec, label %bb5, label %dec_label_pc_1f6f4

bb5:                                              ; preds = %dec_label_pc_1f6e2
  %v1_1f6ee = call i32 @function_1fbcf()
  store i32 %v1_1f6ee, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1f6f4

dec_label_pc_1f6f4:                               ; preds = %bb5, %dec_label_pc_1f6e2
  %v0_1f6f4 = phi i32 [ %v1_1f6ee, %bb5 ], [ %v0_1f6ec, %dec_label_pc_1f6e2 ]
  %v1_1f6f4 = add i32 %v0_1f6f4, 4
  %v2_1f6f4 = inttoptr i32 %v1_1f6f4 to i32*
  %v3_1f6f4 = load i32, i32* %v2_1f6f4, align 4
  store i32 %v3_1f6f4, i32* %eax.global-to-local, align 4
  %v1_1f6f7 = icmp eq i32 %v3_1f6f4, 0
  br i1 %v1_1f6f7, label %bb6, label %dec_label_pc_1f6ff

bb6:                                              ; preds = %dec_label_pc_1f6f4
  %v1_1f6f9 = call i32 @function_1fbcf()
  store i32 %v1_1f6f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1f6ff

dec_label_pc_1f6ff:                               ; preds = %bb6, %dec_label_pc_1f6f4
  %v2_1f70b = load i32, i32* @esi, align 4
  store i32 %v2_1f70b, i32* %eax.global-to-local, align 4
  %v2_1f712 = inttoptr i32 %v2_1f70b to i32*
  store i32 %v2_1f70b, i32* %v2_1f712, align 4
  %v0_1f714 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f714

; uselistorder directives
  uselistorder i32 %v2_1f70b, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 1, 5, 0, 6, 7, 2 }
  uselistorder i32 ()* @function_1fbcf, { 1, 0 }
}

define i32 @function_1f71a() local_unnamed_addr {
dec_label_pc_1f71a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f71a = load i32, i32* @esi, align 4
  %v1_1f71a = add i32 %v0_1f71a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f71a = inttoptr i32 %v1_1f71a to i32*
  %v3_1f71a = load i32, i32* %v2_1f71a, align 4
  store i32 %v3_1f71a, i32* %eax.global-to-local, align 4
  %v2_1f71d = add i32 %v0_1f71a, 12
  %v3_1f71d = inttoptr i32 %v2_1f71d to i32*
  store i32 %v3_1f71a, i32* %v3_1f71d, align 4
  %v4_1f71d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_1f71d
}

define i32 @function_1f720(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f720:
  %v1_1f727 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f727 = icmp eq i32 %v1_1f727, %arg1
  %v1_1f72e = icmp eq i1 %v3_1f727, false
  br i1 %v1_1f72e, label %bb, label %dec_label_pc_1f720.dec_label_pc_1f734_crit_edge

dec_label_pc_1f720.dec_label_pc_1f734_crit_edge:  ; preds = %dec_label_pc_1f720
  %v0_1f73e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1f734

bb:                                               ; preds = %dec_label_pc_1f720
  %v2_1f72e = call i32 @function_1fc5b()
  br label %dec_label_pc_1f734

dec_label_pc_1f734:                               ; preds = %dec_label_pc_1f720.dec_label_pc_1f734_crit_edge, %bb
  %v0_1f73e = phi i32 [ %v2_1f72e, %bb ], [ %v0_1f73e.pre, %dec_label_pc_1f720.dec_label_pc_1f734_crit_edge ]
  ret i32 %v0_1f73e

; uselistorder directives
  uselistorder label %dec_label_pc_1f734, { 1, 0 }
}

define i32 @function_1f740() local_unnamed_addr {
dec_label_pc_1f740:
  %v0_1f740 = load i32, i32* @eax, align 4
  ret i32 %v0_1f740
}

define i32 @function_1f758(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f758:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1f758 = load i32, i32* @edi, align 4
  %v1_1f758 = add i32 %v0_1f758, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1f758 = inttoptr i32 %v1_1f758 to i32*
  %v3_1f758 = load i32, i32* %v2_1f758, align 4
  %v0_1f75e = load i32, i32* @ebp, align 4
  %v2_1f75e = mul i32 %v0_1f75e, 2
  %v3_1f75e = add i32 %v0_1f75e, -3
  %v4_1f75e = add i32 %v3_1f75e, %v2_1f75e
  %v2_1f762 = mul i32 %v4_1f75e, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_1f762 = add i32 %v2_1f762, %v3_1f758
  store i32 %v3_1f762, i32* %ebx.global-to-local, align 4
  %v2_1f76b = mul i32 %v0_1f75e, 12
  %v3_1f76b = icmp eq i32 %v2_1f76b, 0
  store i32 %v2_1f76b, i32* @eax, align 4
  %v2_1f76e = sub i32 %v3_1f762, %v2_1f76b
  %v7_1f770 = icmp ult i32 %v3_1f762, %v2_1f76e
  %v2_1f776 = or i1 %v3_1f76b, %v7_1f770
  br i1 %v2_1f776, label %bb, label %dec_label_pc_1f780

bb:                                               ; preds = %dec_label_pc_1f758
  %v4_1f776 = call i32 @function_1f8f7(i32 %v2_1f76e)
  store i32 %v4_1f776, i32* @eax, align 4
  %v0_1f780.pre.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1f780

dec_label_pc_1f780:                               ; preds = %dec_label_pc_1f758, %bb, %dec_label_pc_1f780
  %v0_1f780 = phi i32 [ %v1_1f788, %dec_label_pc_1f780 ], [ %v3_1f762, %dec_label_pc_1f758 ], [ %v0_1f780.pre.pre, %bb ]
  %v1_1f783 = call i32 @function_35c00(i32 %v0_1f780)
  store i32 %v1_1f783, i32* @eax, align 4
  %v0_1f788 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f788 = add i32 %v0_1f788, -12
  store i32 %v1_1f788, i32* %ebx.global-to-local, align 4
  %v10_1f78b = icmp ult i32 %v2_1f76e, %v1_1f788
  br i1 %v10_1f78b, label %dec_label_pc_1f780, label %dec_label_pc_1f791

dec_label_pc_1f791:                               ; preds = %dec_label_pc_1f780
  %v0_1f791 = load i32, i32* @edi, align 4
  %v1_1f791 = add i32 %v0_1f791, ptrtoint (i32* @global_var_88.3507 to i32)
  %v2_1f791 = inttoptr i32 %v1_1f791 to i32*
  %v3_1f791 = load i32, i32* %v2_1f791, align 4
  store i32 %v3_1f791, i32* %eax.global-to-local, align 4
  %v0_1f797 = load i32, i32* @esi, align 4
  %v1_1f797 = add i32 %v0_1f797, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1f797 = inttoptr i32 %v1_1f797 to i32*
  %v3_1f797 = load i32, i32* %v2_1f797, align 4
  store i32 %v3_1f797, i32* %edx.global-to-local, align 4
  %v1_1f79a = load i32, i32* @ebp, align 4
  %v2_1f79a = sub i32 %v3_1f791, %v1_1f79a
  store i32 %v2_1f79a, i32* %eax.global-to-local, align 4
  store i32 %v2_1f79a, i32* %v2_1f791, align 4
  %v0_1f7a2 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_1f7a2, i32* @edi, align 4
  %v0_1f7a4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f7a4

; uselistorder directives
  uselistorder i32 %v1_1f788, { 1, 2, 0 }
  uselistorder i32 %v2_1f76e, { 1, 0, 2 }
  uselistorder i32 %v2_1f76b, { 0, 2, 1 }
  uselistorder i32 %v0_1f75e, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1f780, { 2, 1, 0 }
}

define i32 @function_1f7de() local_unnamed_addr {
dec_label_pc_1f7de:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f7de = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f7de
}

define i32 @function_1f80d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f80d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f824(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f824:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f85d() local_unnamed_addr {
dec_label_pc_1f85d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f85d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f85d
}

define i32 @function_1f860(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1f860:
  %edx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v0_1f860 = load i32, i32* %edx.global-to-local, align 4
  %v2_1f860 = icmp slt i32 %v0_1f860, 0
  br i1 %v2_1f860, label %bb, label %dec_label_pc_1f868

bb:                                               ; preds = %dec_label_pc_1f860
  %v1_1f862 = call i32 @function_1f923()
  br label %dec_label_pc_1f868

dec_label_pc_1f868:                               ; preds = %bb, %dec_label_pc_1f860
  %v1_1f86c = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f86c = inttoptr i32 %v1_1f86c to i32*
  %v3_1f86c = load i32, i32* %v2_1f86c, align 4
  store i32 %v3_1f86c, i32* @eax, align 4
  %v1_1f86f = icmp eq i32 %v3_1f86c, 0
  br i1 %v1_1f86f, label %bb108, label %dec_label_pc_1f877

bb108:                                            ; preds = %dec_label_pc_1f868
  %v1_1f871 = call i32 @function_1fd3d()
  br label %dec_label_pc_1f877

dec_label_pc_1f877:                               ; preds = %bb108, %dec_label_pc_1f868
  %v0_1f877 = phi i32 [ %v1_1f871, %bb108 ], [ %v3_1f86c, %dec_label_pc_1f868 ]
  %v1_1f877 = inttoptr i32 %v0_1f877 to i32*
  %v2_1f877 = load i32, i32* %v1_1f877, align 4
  store i32 %v2_1f877, i32* %edx.global-to-local, align 4
  %v2_1f88e = load i32, i32* %arg2, align 4
  store i32 %v2_1f88e, i32* %edx.global-to-local, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v1_1f8ac = icmp eq i32* %arg2, null
  br i1 %v1_1f8ac, label %bb109, label %dec_label_pc_1f8b4

bb109:                                            ; preds = %dec_label_pc_1f877
  %v2_1f8ae = call i32 @function_1f824(i32 %tmp102)
  store i32 %v2_1f8ae, i32* @eax, align 4
  br label %dec_label_pc_1f8b4

dec_label_pc_1f8b4:                               ; preds = %bb109, %dec_label_pc_1f877
  %v0_1f8b4 = phi i32 [ %v2_1f8ae, %bb109 ], [ %tmp102, %dec_label_pc_1f877 ]
  %v1_1f8b4 = inttoptr i32 %v0_1f8b4 to i32*
  %v2_1f8b4 = load i32, i32* %v1_1f8b4, align 4
  store i32 %v2_1f8b4, i32* %edx.global-to-local, align 4
  %v1_1f8bc = call i32 @function_1f824(i32 %v0_1f8b4)
  ret i32 %v1_1f8bc

; uselistorder directives
  uselistorder i32 %v0_1f8b4, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_1f8c8() local_unnamed_addr {
dec_label_pc_1f8c8:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f8c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f8c8
}

define i32 @function_1f8d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f8d0:
  %edx.global-to-local = alloca i32, align 4
  %v0_1f8d5 = load i32, i32* %edx.global-to-local, align 4
  %v2_1f8d5 = icmp slt i32 %v0_1f8d5, 0
  br i1 %v2_1f8d5, label %bb, label %dec_label_pc_1f8dd

bb:                                               ; preds = %dec_label_pc_1f8d0
  %v1_1f8d7 = call i32 @function_1fba9()
  br label %dec_label_pc_1f8dd

dec_label_pc_1f8dd:                               ; preds = %bb, %dec_label_pc_1f8d0
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_1f8e1 = add i32 %arg1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1f8e1 = inttoptr i32 %v1_1f8e1 to i32*
  %v3_1f8e1 = load i32, i32* %v2_1f8e1, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_1f8e6 = icmp eq i32 %v3_1f8e1, 0
  br i1 %v1_1f8e6, label %dec_label_pc_1f8ed, label %dec_label_pc_1f8ea

dec_label_pc_1f8ea:                               ; preds = %dec_label_pc_1f8dd
  %v1_1f8ea = add i32 %v3_1f8e1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f8ea = inttoptr i32 %v1_1f8ea to i32*
  %v3_1f8ea = load i32, i32* %v2_1f8ea, align 4
  store i32 %v3_1f8ea, i32* %edx.global-to-local, align 4
  %phitmp = icmp eq i32 %v3_1f8ea, 0
  br label %dec_label_pc_1f8ed

dec_label_pc_1f8ed:                               ; preds = %dec_label_pc_1f8ea, %dec_label_pc_1f8dd
  %v0_1f8ed = phi i1 [ %phitmp, %dec_label_pc_1f8ea ], [ true, %dec_label_pc_1f8dd ]
  %v1_1f8ef = zext i1 %v0_1f8ed to i32
  %v3_1f8ef = and i32 %v3_1f8e1, -256
  %v4_1f8ef = or i32 %v1_1f8ef, %v3_1f8ef
  ret i32 %v4_1f8ef

; uselistorder directives
  uselistorder i32 %v3_1f8e1, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f8f7(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f8f7:
  ret i32 0
}

define i32 @function_1f900(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f900:
  store i32 %arg1, i32* @eax, align 4
  %v1_1f91e = call i32 @function_1f80d(i32 0)
  ret i32 %v1_1f91e
}

define i32 @function_1f923() local_unnamed_addr {
dec_label_pc_1f923:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v1_1f927 = add i32 %tmp11, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f927 = inttoptr i32 %v1_1f927 to i32*
  %v3_1f927 = load i32, i32* %v2_1f927, align 4
  %v1_1f92a = inttoptr i32 %v3_1f927 to i32*
  %v2_1f92a = load i32, i32* %v1_1f92a, align 4
  store i32 %v2_1f92a, i32* @eax, align 4
  %v1_1f92c = icmp eq i32 %v2_1f92a, 0
  br i1 %v1_1f92c, label %bb, label %dec_label_pc_1f934

bb:                                               ; preds = %dec_label_pc_1f923
  %v1_1f92e = call i32 @function_1fd3d()
  br label %dec_label_pc_1f934

dec_label_pc_1f934:                               ; preds = %bb, %dec_label_pc_1f923
  %v1_1f971 = call i32 @function_1f824(i32 %tmp6)
  ret i32 %v1_1f971

; uselistorder directives
  uselistorder i32 ()* @function_1fd3d, { 1, 0 }
}

define i32 @function_1f976(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f976:
  %stack_var_112 = alloca i32, align 4
  %v1_1f97a = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f97a = inttoptr i32 %v1_1f97a to i32*
  %v3_1f97a = load i32, i32* %v2_1f97a, align 4
  %v1_1f989 = add i32 %v3_1f97a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f989 = inttoptr i32 %v1_1f989 to i32*
  %v3_1f989 = load i32, i32* %v2_1f989, align 4
  %v1_1f98c = icmp eq i32 %v3_1f989, 0
  store i32 %v3_1f989, i32* %stack_var_112, align 4
  br i1 %v1_1f98c, label %bb, label %dec_label_pc_1f994

bb:                                               ; preds = %dec_label_pc_1f976
  %v2_1f992 = call i32 @function_1f9f5(i32 %v3_1f97a)
  br label %dec_label_pc_1f994

dec_label_pc_1f994:                               ; preds = %bb, %dec_label_pc_1f976
  %v1_1f994 = add i32 %v3_1f989, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1f994 = inttoptr i32 %v1_1f994 to i32*
  %v3_1f994 = load i32, i32* %v2_1f994, align 4
  store i32 %v3_1f994, i32* @eax, align 4
  br label %dec_label_pc_1f997

dec_label_pc_1f997:                               ; preds = %dec_label_pc_1f99b, %dec_label_pc_1f994
  %v0_1f99b = phi i32 [ %v3_1f99e, %dec_label_pc_1f99b ], [ %v3_1f994, %dec_label_pc_1f994 ]
  %v1_1f997 = icmp eq i32 %v0_1f99b, 0
  br i1 %v1_1f997, label %dec_label_pc_1f9a5, label %dec_label_pc_1f99b

dec_label_pc_1f99b:                               ; preds = %dec_label_pc_1f997
  %v1_1f99d = add i32 %v0_1f99b, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1f99e = load i32, i32* %v2_1f994, align 4
  %v16_1f99e = icmp eq i32 %v0_1f99b, %v3_1f99e
  %v23_1f99e = select i1 %v16_1f99e, i32 %v1_1f99d, i32 %v3_1f99e
  store i32 %v23_1f99e, i32* %v2_1f994, align 4
  store i32 %v3_1f99e, i32* @eax, align 4
  %v1_1f9a3 = icmp eq i1 %v16_1f99e, false
  br i1 %v1_1f9a3, label %dec_label_pc_1f997, label %dec_label_pc_1f9a5

dec_label_pc_1f9a5:                               ; preds = %dec_label_pc_1f99b, %dec_label_pc_1f997
  %v0_1f9a5 = phi i32 [ %v0_1f99b, %dec_label_pc_1f99b ], [ 0, %dec_label_pc_1f997 ]
  %v1_1f9a5 = icmp eq i32 %v0_1f9a5, 0
  br i1 %v1_1f9a5, label %bb113, label %dec_label_pc_1f9a9

bb113:                                            ; preds = %dec_label_pc_1f9a5
  %v1_1f9a7 = call i32 @function_1f9ed()
  br label %dec_label_pc_1f9a9

dec_label_pc_1f9a9:                               ; preds = %bb113, %dec_label_pc_1f9a5
  %v3_1f9c1 = load i32, i32* %v2_1f994, align 4
  %v4_1f9c1 = add i32 %v3_1f9c1, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1f9c1, i32* %v2_1f994, align 4
  %v2_1f9c5 = ptrtoint i32* %stack_var_112 to i32
  store i32 %v2_1f9c5, i32* @eax, align 4
  %v1_1f9d7 = call i32 @function_32f70(i32 %v2_1f9c5)
  store i32 %v1_1f9d7, i32* @eax, align 4
  %v1_1f9dc = call i32 @function_1f824(i32 %v2_1f9c5)
  ret i32 %v1_1f9dc

; uselistorder directives
  uselistorder i32 %v2_1f9c5, { 1, 0, 2 }
  uselistorder i32 %v3_1f99e, { 0, 3, 1, 2 }
  uselistorder i32 %v0_1f99b, { 1, 0, 2, 3 }
  uselistorder i32* %v2_1f994, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32)* @function_1f824, { 3, 2, 1, 0 }
}

define i32 @function_1f9e1() local_unnamed_addr {
dec_label_pc_1f9e1:
  %v0_1f9e1 = load i32, i32* @edi, align 4
  %v1_1f9e1 = add i32 %v0_1f9e1, 148
  %v2_1f9e1 = inttoptr i32 %v1_1f9e1 to i32*
  %v3_1f9e1 = load i32, i32* %v2_1f9e1, align 4
  %v4_1f9e1 = add i32 %v3_1f9e1, 1
  store i32 %v4_1f9e1, i32* %v2_1f9e1, align 4
  %v0_1f9e8 = load i32, i32* @eax, align 4
  ret i32 %v0_1f9e8
}

define i32 @function_1f9ed() local_unnamed_addr {
dec_label_pc_1f9ed:
  %v3_1f9ed = load i32, i32* @eax, align 4
  ret i32 %v3_1f9ed
}

define i32 @function_1f9f5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f9f5:
  ret i32 %arg1
}

define i32 @function_1fa0d() local_unnamed_addr {
dec_label_pc_1fa0d:
  %ecx.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %stack_var_128 = alloca i32, align 4
  %v0_1fa0d = load i32, i32* @edx, align 4
  %tmp12 = sub i32 8, %v0_1fa0d
  %v8_1fa0d = and i32 %tmp12, %v0_1fa0d
  %v9_1fa0d = icmp slt i32 %v8_1fa0d, 0
  store i1 %v9_1fa0d, i1* %of.global-to-local, align 1
  %tmp16 = icmp ult i32 %v0_1fa0d, 10
  br i1 %tmp16, label %bb, label %dec_label_pc_1fa16

bb:                                               ; preds = %dec_label_pc_1fa0d
  %v3_1fa10 = call i32 @function_1fd66()
  store i32 %v3_1fa10, i32* @eax, align 4
  %v0_1fa16.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1fa16

dec_label_pc_1fa16:                               ; preds = %bb, %dec_label_pc_1fa0d
  %v0_1fa16 = phi i32 [ %v0_1fa16.pre, %bb ], [ %v0_1fa0d, %dec_label_pc_1fa0d ]
  %v1_1fa16 = add i32 %v0_1fa16, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_1fa16, i32* %ecx.global-to-local, align 4
  %v7_1fa19 = icmp ult i32 %v0_1fa16, %v1_1fa16
  %v8_1fa19 = xor i32 %v1_1fa16, %v0_1fa16
  %v9_1fa19 = xor i32 %v0_1fa16, sub (i32 0, i32 ptrtoint (i8** @global_var_1.3274 to i32))
  %v10_1fa19 = and i32 %v8_1fa19, %v9_1fa19
  %v11_1fa19 = icmp slt i32 %v10_1fa19, 0
  store i1 %v11_1fa19, i1* %of.global-to-local, align 1
  %v1_1fa1f = icmp eq i1 %v7_1fa19, false
  br i1 %v1_1fa1f, label %bb13, label %dec_label_pc_1fa25

bb13:                                             ; preds = %dec_label_pc_1fa16
  %v4_1fa1f = call i32 @function_1fd61(i32 %v1_1fa16)
  %v0_1fa25.pre = load i32, i32* @edx, align 4
  %v1_1fa28.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1fa25

dec_label_pc_1fa25:                               ; preds = %bb13, %dec_label_pc_1fa16
  %v2_1fa2a = phi i32 [ %v1_1fa28.pre, %bb13 ], [ %v1_1fa16, %dec_label_pc_1fa16 ]
  %v0_1fa25 = phi i32 [ %v0_1fa25.pre, %bb13 ], [ %v0_1fa16, %dec_label_pc_1fa16 ]
  %v2_1fa25 = mul i32 %v0_1fa25, 4
  %v7_1fa28 = icmp ult i32 %v2_1fa25, %v2_1fa2a
  %v3_1fa2a = select i1 %v7_1fa28, i32 %v2_1fa2a, i32 %v2_1fa25
  %tmp14 = sub i32 357913940, %v3_1fa2a
  %v8_1fa2d = and i32 %tmp14, %v3_1fa2a
  %v9_1fa2d = icmp slt i32 %v8_1fa2d, 0
  store i1 %v9_1fa2d, i1* %of.global-to-local, align 1
  %tmp17 = icmp ult i32 %v3_1fa2a, 357913942
  br i1 %tmp17, label %dec_label_pc_1fa3d, label %bb15

bb15:                                             ; preds = %dec_label_pc_1fa25
  %v5_1fa37 = call i32 @function_1fd15(i32 %v3_1fa2a)
  %v1_1fa4f.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_1fa3d

dec_label_pc_1fa3d:                               ; preds = %dec_label_pc_1fa25, %bb15
  %v1_1fa4f = phi i1 [ %v9_1fa2d, %dec_label_pc_1fa25 ], [ %v1_1fa4f.pre, %bb15 ]
  store i32 %v3_1fa2a, i32* @edx, align 4
  %v2_1fa41 = ptrtoint i32* %stack_var_128 to i32
  store i32 %v2_1fa41, i32* @ecx, align 4
  %v2_1fa4f = mul i32 %v3_1fa2a, 12
  store i1 %v1_1fa4f, i1* %of.global-to-local, align 1
  ret i32 %v2_1fa4f

; uselistorder directives
  uselistorder i32 %v3_1fa2a, { 3, 4, 2, 0, 1, 5 }
  uselistorder i32 %v2_1fa25, { 1, 0 }
  uselistorder i32 %v1_1fa16, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1fa16, { 1, 3, 0, 4, 2 }
  uselistorder i32 %v0_1fa0d, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1fa3d, { 1, 0 }
}

define i32 @function_1fa72() local_unnamed_addr {
dec_label_pc_1fa72:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fa72 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fa72
}

define i32 @function_1fa8e() local_unnamed_addr {
dec_label_pc_1fa8e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1fab9() local_unnamed_addr {
dec_label_pc_1fab9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fab9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fab9
}

define i32 @function_1fabe() local_unnamed_addr {
dec_label_pc_1fabe:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fabe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fabe
}

define i32 @function_1fadc() local_unnamed_addr {
dec_label_pc_1fadc:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fadc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fadc
}

define i32 @function_1fae5() local_unnamed_addr {
dec_label_pc_1fae5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fae5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fae5
}

define i32 @function_1fb08() local_unnamed_addr {
dec_label_pc_1fb08:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_1fb08 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1fb08 = sub i32 %v0_1fb08, ptrtoint (i8** @global_var_1.3274 to i32)
  %v10_1fb08 = icmp slt i32 %v1_1fb08, 0
  store i32 %v1_1fb08, i32* %ecx.global-to-local, align 4
  br i1 %v10_1fb08, label %bb, label %dec_label_pc_1fb0b

bb:                                               ; preds = %dec_label_pc_1fb08
  %v1_1fb09 = call i32 @function_1fa8e()
  store i32 %v1_1fb09, i32* @eax, align 4
  %v3_1fb0c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1fb0b

dec_label_pc_1fb0b:                               ; preds = %bb, %dec_label_pc_1fb08
  %v3_1fb0c = phi i32 [ %v3_1fb0c.pre, %bb ], [ %v1_1fb08, %dec_label_pc_1fb08 ]
  %v2_1fb0c = load i32, i32* %edi.global-to-local, align 4
  %v4_1fb0c = or i32 %v2_1fb0c, %v3_1fb0c
  %v12_1fb0c = inttoptr i32 %v2_1fb0c to i32*
  store i32 %v4_1fb0c, i32* %v12_1fb0c, align 4
  %v0_1fb0e = load i32, i32* @eax, align 4
  %v1_1fb0e = load i32, i32* %ebx.global-to-local, align 4
  %v2_1fb0e = lshr i32 %v1_1fb0e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1fb0e = and i32 %v2_1fb0e, ptrtoint (i8* @global_var_ff.3305 to i32)
  %v5_1fb0e = and i32 %v0_1fb0e, -256
  %v6_1fb0e = or i32 %v3_1fb0e, %v5_1fb0e
  store i32 %v6_1fb0e, i32* %eax.global-to-local, align 4
  %v7_1fb0e = and i32 %v0_1fb0e, ptrtoint (i8* @global_var_ff.3305 to i32)
  %v9_1fb0e = shl i32 %v7_1fb0e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v10_1fb0e = and i32 %v1_1fb0e, -65281
  %v11_1fb0e = or i32 %v10_1fb0e, %v9_1fb0e
  store i32 %v11_1fb0e, i32* %ebx.global-to-local, align 4
  %v1_1fb10 = inttoptr i32 %v6_1fb0e to i32*
  %v2_1fb10 = load i32, i32* %v1_1fb10, align 4
  %v4_1fb10 = add i32 %v2_1fb10, %v6_1fb0e
  store i32 %v4_1fb10, i32* %v1_1fb10, align 4
  %v0_1fb12 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1fb12 = inttoptr i32 %v0_1fb12 to i8*
  %v2_1fb12 = load i8, i8* %v1_1fb12, align 1
  %v3_1fb12 = load i32, i32* %ebx.global-to-local, align 4
  %v4_1fb12 = udiv i32 %v3_1fb12, 256
  %v5_1fb12 = trunc i32 %v4_1fb12 to i8
  %v6_1fb12 = add i8 %v5_1fb12, %v2_1fb12
  store i8 %v6_1fb12, i8* %v1_1fb12, align 1
  %v0_1fb14 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fb14

; uselistorder directives
  uselistorder i32 %v6_1fb0e, { 1, 0, 2 }
  uselistorder i32 %v0_1fb0e, { 1, 0 }
  uselistorder i32 %v2_1fb0c, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define i32 @function_1fb3d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fb3d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1fb99(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fb99:
  %stack_var_128 = alloca i32, align 4
  %v2_1fb99 = ptrtoint i32* %stack_var_128 to i32
  ret i32 %v2_1fb99
}

define i32 @function_1fba9() local_unnamed_addr {
dec_label_pc_1fba9:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_1fbaf = add i32 %tmp1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1fbaf = inttoptr i32 %v1_1fbaf to i32*
  %v3_1fbaf = load i32, i32* %v2_1fbaf, align 4
  %v1_1fbb2 = add i32 %v3_1fbaf, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1fbb2 = inttoptr i32 %v1_1fbb2 to i32*
  %v3_1fbb2 = load i32, i32* %v2_1fbb2, align 4
  ret i32 %v3_1fbb2
}

define i32 @function_1fbc8() local_unnamed_addr {
dec_label_pc_1fbc8:
  %v0_1fbca = call i32 @function_1f5dd()
  ret i32 %v0_1fbca
}

define i32 @function_1fbcf() local_unnamed_addr {
dec_label_pc_1fbcf:
  %ecx.global-to-local = alloca i32, align 4
  %v2_1fbcf = load i32, i32* @esi, align 4
  %v2_1fbd5 = add i32 %v2_1fbcf, 12
  %v3_1fbd5 = inttoptr i32 %v2_1fbd5 to i32*
  store i32 %v2_1fbcf, i32* %v3_1fbd5, align 4
  %v0_1fbd8 = load i32, i32* %ecx.global-to-local, align 4
  %v0_1fbe0 = load i32, i32* @esi, align 4
  %v1_1fbe0 = add i32 %v0_1fbe0, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1fbe0 = inttoptr i32 %v1_1fbe0 to i32*
  %v3_1fbe0 = load i32, i32* %v2_1fbe0, align 4
  store i32 %v3_1fbe0, i32* @eax, align 4
  %v14_1fbe3 = icmp eq i32 %v0_1fbe0, %v3_1fbe0
  %v1_1fbe5 = icmp eq i1 %v14_1fbe3, false
  br i1 %v1_1fbe5, label %bb, label %dec_label_pc_1fbeb

bb:                                               ; preds = %dec_label_pc_1fbcf
  %v3_1fbe5 = call i32 @function_1f720(i32 %v0_1fbd8)
  br label %dec_label_pc_1fbeb

dec_label_pc_1fbeb:                               ; preds = %bb, %dec_label_pc_1fbcf
  %v0_1fbeb = call i32 @function_1f71a()
  ret i32 %v0_1fbeb

; uselistorder directives
  uselistorder i32 %v2_1fbcf, { 1, 0 }
  uselistorder i32 ()* @function_1f71a, { 1, 0 }
  uselistorder i32 (i32)* @function_1f720, { 1, 0 }
}

define i32 @function_1fbf0(i64 %arg1) local_unnamed_addr {
dec_label_pc_1fbf0:
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v4_1fbf0 = trunc i64 %arg1 to i32
  %v1_1fbf4 = sub i32 %v4_1fbf0, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_1fbf7 = mul i32 %v1_1fbf4, 12
  %v1_1fbfa = load i32, i32* %edx.global-to-local, align 4
  %v2_1fbfa = add i32 %v1_1fbfa, %v3_1fbf7
  %v7_1fc00 = mul i64 %arg1, 12
  %v8_1fc00 = trunc i64 %v7_1fc00 to i32
  %v6_1fc0d = sub i32 %v2_1fbfa, %v8_1fc00
  store i32 %v6_1fc0d, i32* @eax, align 4
  %v10_1fc11 = icmp ult i32 %v2_1fbfa, %v6_1fc0d
  %v15_1fc11 = icmp eq i32 %v8_1fc00, 0
  %v2_1fc19 = or i1 %v15_1fc11, %v10_1fc11
  br i1 %v2_1fc19, label %bb, label %dec_label_pc_1fc1f.preheader

bb:                                               ; preds = %dec_label_pc_1fbf0
  %v5_1fc19 = call i32 @function_1fb3d(i32 %v8_1fc00)
  store i32 %v5_1fc19, i32* @eax, align 4
  br label %dec_label_pc_1fc1f.preheader

dec_label_pc_1fc1f.preheader:                     ; preds = %dec_label_pc_1fbf0, %bb
  br label %dec_label_pc_1fc1f

dec_label_pc_1fc1f:                               ; preds = %dec_label_pc_1fc1f.preheader, %dec_label_pc_1fc1f
  %stack_var_60.0 = phi i32 [ %v4_1fc36, %dec_label_pc_1fc1f ], [ %v2_1fbfa, %dec_label_pc_1fc1f.preheader ]
  store i32 %stack_var_60.0, i32* %edx.global-to-local, align 4
  %v1_1fc31 = call i32 @function_35c00(i32 %stack_var_60.0)
  %v4_1fc36 = add i32 %stack_var_60.0, -12
  store i32 %v4_1fc36, i32* @eax, align 4
  %v11_1fc3f = icmp ult i32 %v6_1fc0d, %v4_1fc36
  br i1 %v11_1fc3f, label %dec_label_pc_1fc1f, label %dec_label_pc_1fc45

dec_label_pc_1fc45:                               ; preds = %dec_label_pc_1fc1f
  %v0_1fc45 = load i32, i32* %edi.global-to-local, align 4
  %v1_1fc4b = add i32 %v0_1fc45, ptrtoint (i32* @global_var_84.3506 to i32)
  %v2_1fc4b = inttoptr i32 %v1_1fc4b to i32*
  %v3_1fc4b = load i32, i32* %v2_1fc4b, align 4
  store i32 %v3_1fc4b, i32* %edx.global-to-local, align 4
  %v1_1fc51 = call i32 @function_1fb3d(i32 %v4_1fc36)
  ret i32 %v1_1fc51

; uselistorder directives
  uselistorder i32 %v4_1fc36, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_60.0, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_1fb3d, { 1, 0 }
  uselistorder label %dec_label_pc_1fc1f, { 1, 0 }
  uselistorder label %dec_label_pc_1fc1f.preheader, { 1, 0 }
}

define i32 @function_1fc56(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fc56:
  %v0_1fc56 = call i32 @function_30a1a()
  ret i32 %v0_1fc56
}

define i32 @function_1fc5b() local_unnamed_addr {
dec_label_pc_1fc5b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1fc60(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fc60:
  %v3_1fc78 = load i32, i32* @eax, align 4
  ret i32 %v3_1fc78
}

define i32 @function_1fccd() local_unnamed_addr {
dec_label_pc_1fccd:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fccd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fccd
}

define i32 @function_1fcce(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fcce:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1fcda(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fcda:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1fced() local_unnamed_addr {
dec_label_pc_1fced:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1fced = load i32, i32* %ebx.global-to-local, align 4
  %v1_1fced = add i32 %v0_1fced, -1988615084
  %v2_1fced = inttoptr i32 %v1_1fced to i32*
  %v3_1fced = load i32, i32* %v2_1fced, align 4
  %v4_1fced = sub i32 %v3_1fced, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1fced, i32* %v2_1fced, align 4
  %v0_1fcf3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fcf3
}

define i32 @function_1fcf4() local_unnamed_addr {
dec_label_pc_1fcf4:
  %edx.global-to-local = alloca i32, align 4
  %v0_1fcf4 = load i32, i32* %edx.global-to-local, align 4
  %v1_1fcf4 = icmp eq i32 %v0_1fcf4, 0
  br i1 %v1_1fcf4, label %bb, label %dec_label_pc_1fcf8

bb:                                               ; preds = %dec_label_pc_1fcf4
  %v2_1fcf6 = call i32 @function_1fcda(i32 ptrtoint (i32* @0 to i32))
  %v2_1fcf8.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1fcf8

dec_label_pc_1fcf8:                               ; preds = %bb, %dec_label_pc_1fcf4
  %v2_1fcf8 = phi i32 [ %v2_1fcf8.pre, %bb ], [ %v0_1fcf4, %dec_label_pc_1fcf4 ]
  store i32 %v2_1fcf8, i32* @eax, align 4
  %v1_1fd00 = call i32 @function_1fcda(i32 %v2_1fcf8)
  ret i32 %v1_1fd00

; uselistorder directives
  uselistorder i32 %v2_1fcf8, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
}

define i32 @function_1fd15(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fd15:
  %stack_var_128 = alloca i32, align 4
  %v2_1fd15 = ptrtoint i32* %stack_var_128 to i32
  ret i32 %v2_1fd15
}

define i32 @function_1fd24() local_unnamed_addr {
dec_label_pc_1fd24:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_1fd24 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1fd24 = add i32 %v0_1fd24, -1951274045
  %v2_1fd24 = inttoptr i32 %v1_1fd24 to i32*
  %v3_1fd24 = load i32, i32* %v2_1fd24, align 4
  %v4_1fd24 = sub i32 %v3_1fd24, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1fd24, i32* %v2_1fd24, align 4
  %v0_1fd2b = load i32, i32* %eax.global-to-local, align 4
  %v11_1fd2b = and i32 %v0_1fd2b, or (i32 zext (i8 ptrtoint (i8* @global_var_74.3482 to i8) to i32), i32 -256)
  store i32 %v11_1fd2b, i32* @eax, align 4
  %v0_1fd2f = load i32, i32* %edx.global-to-local, align 4
  %v1_1fd2f = icmp eq i32 %v0_1fd2f, 0
  br i1 %v1_1fd2f, label %bb, label %dec_label_pc_1fd33

bb:                                               ; preds = %dec_label_pc_1fd24
  %v4_1fd2a = ptrtoint i32* %stack_var_0 to i32
  %v2_1fd31 = call i32 @function_1fcda(i32 %v4_1fd2a)
  store i32 %v2_1fd31, i32* %eax.global-to-local, align 4
  %v2_1fd33.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1fd33

dec_label_pc_1fd33:                               ; preds = %bb, %dec_label_pc_1fd24
  %v2_1fd33 = phi i32 [ %v2_1fd33.pre, %bb ], [ %v0_1fd2f, %dec_label_pc_1fd24 ]
  store i32 %v2_1fd33, i32* @eax, align 4
  %v1_1fd3b = call i32 @function_1fcda(i32 %v2_1fd33)
  store i32 %v1_1fd3b, i32* %eax.global-to-local, align 4
  ret i32 %v1_1fd3b

; uselistorder directives
  uselistorder i32 %v2_1fd33, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_1fcda, { 3, 2, 1, 0 }
}

define i32 @function_1fd3d() local_unnamed_addr {
dec_label_pc_1fd3d:
  %v3_1fd55 = load i32, i32* @eax, align 4
  ret i32 %v3_1fd55
}

define i32 @function_1fd61(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fd61:
  %v0_1fd61 = call i32 @function_30dc2()
  ret i32 %v0_1fd61
}

define i32 @function_1fd66() local_unnamed_addr {
dec_label_pc_1fd66:
  %v3_1fd7e = load i32, i32* @eax, align 4
  ret i32 %v3_1fd7e
}

define i32 @function_1fd8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fd8a:
  %stack_var_128 = alloca i32, align 4
  %v0_1fd8a = load i32, i32* @ebx, align 4
  %v1_1fd8a = add i32 %v0_1fd8a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_1fd8a = inttoptr i32 %v1_1fd8a to i8*
  store i8 0, i8* %v2_1fd8a, align 1
  %v2_1fd8e = ptrtoint i32* %stack_var_128 to i32
  store i32 %v2_1fd8e, i32* @eax, align 4
  %v1_1fd98 = call i32 @function_35c00(i32 %v2_1fd8e)
  ret i32 %v1_1fd98
}

define i32 @function_1fdb1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fdb1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1fdb1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1fdb1 = add i32 %v0_1fdb1, 960242772
  %v2_1fdb1 = inttoptr i32 %v1_1fdb1 to i32*
  %v3_1fdb1 = load i32, i32* %v2_1fdb1, align 4
  %v4_1fdb1 = add i32 %v3_1fdb1, -1
  store i32 %v4_1fdb1, i32* %v2_1fdb1, align 4
  %v0_1fdb8 = load i32, i32* %eax.global-to-local, align 4
  %v1_1fdb8 = trunc i32 %v0_1fdb8 to i8
  %v2_1fdb8 = and i8 %v1_1fdb8, ptrtoint (i32* @global_var_40.3547 to i8)
  %v3_1fdb8 = icmp eq i8 %v2_1fdb8, 0
  %v8_1fdb8 = zext i8 %v2_1fdb8 to i32
  %v10_1fdb8 = and i32 %v0_1fdb8, -256
  %v11_1fdb8 = or i32 %v8_1fdb8, %v10_1fdb8
  store i32 %v11_1fdb8, i32* %eax.global-to-local, align 4
  br i1 %v3_1fdb8, label %dec_label_pc_1fdcf, label %dec_label_pc_1fdbc

dec_label_pc_1fdbc:                               ; preds = %dec_label_pc_1fdb1
  store i32 %arg1, i32* @eax, align 4
  %v1_1fdc3 = call i32 @function_35c00(i32 %arg1)
  store i32 %v1_1fdc3, i32* %eax.global-to-local, align 4
  ret i32 %v1_1fdc3

dec_label_pc_1fdcf:                               ; preds = %dec_label_pc_1fdb1
  ret i32 %v11_1fdb8

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_35c00, { 4, 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1fdda() local_unnamed_addr {
dec_label_pc_1fdda:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_124 = alloca i32, align 4
  %v0_1fdda = load i32, i32* %ebx.global-to-local, align 4
  %v1_1fdda = add i32 %v0_1fdda, -1959254972
  %v2_1fdda = inttoptr i32 %v1_1fdda to i32*
  %v3_1fdda = load i32, i32* %v2_1fdda, align 4
  %v4_1fdda = sub i32 %v3_1fdda, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_1fdda, i32* %v2_1fdda, align 4
  %v0_1fde1 = load i32, i32* %eax.global-to-local, align 4
  %v11_1fde1 = and i32 %v0_1fde1, or (i32 zext (i8 ptrtoint (i32* @global_var_30.3470 to i8) to i32), i32 -256)
  store i32 %v11_1fde1, i32* @eax, align 4
  %v0_1fde3 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1fde7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_1fde7, i32* %ebx.global-to-local, align 4
  %v0_1fded = load i32, i32* %edx.global-to-local, align 4
  %v3_1fdf0 = call i32 @function_2d8a0(i32 %v0_1fded, i32 %v0_1fde3, i32 %v11_1fde1)
  store i32 %v3_1fdf0, i32* @eax, align 4
  %v2_1fdf5 = ptrtoint i32* %stack_var_124 to i32
  %v1_1fe00 = call i32 @function_1fcce(i32 %v2_1fdf5)
  store i32 %v1_1fe00, i32* %eax.global-to-local, align 4
  ret i32 %v1_1fe00

; uselistorder directives
  uselistorder i32 %v11_1fde1, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1feb0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1feb0 = load i32, i32* %edi.global-to-local, align 4
  %v0_1feb1 = load i32, i32* %esi.global-to-local, align 4
  %v0_1feb2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_1feba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_1feca = icmp eq i32 %arg2, 0
  %v1_1fecc = icmp eq i1 %v1_1feca, false
  br i1 %v1_1fecc, label %dec_label_pc_1fed2, label %dec_label_pc_1fece

dec_label_pc_1fece:                               ; preds = %dec_label_pc_1feb0
  %v4_1fece = call i32 @function_1fefa(i32 %v0_1feba, i32 %v0_1feb2, i32 %v0_1feb1, i32 %v0_1feb0)
  store i32 %v4_1fece, i32* %eax.global-to-local, align 4
  ret i32 %v4_1fece

dec_label_pc_1fed2:                               ; preds = %dec_label_pc_1feb0
  %v1_1fed2 = add i32 %arg2, 12
  %v2_1fed2 = inttoptr i32 %v1_1fed2 to i32*
  %v3_1fed2 = load i32, i32* %v2_1fed2, align 4
  store i32 %v3_1fed2, i32* %eax.global-to-local, align 4
  %v2_1fedc = call i32 @unknown_3fd60(i32 %arg1, i32 %v3_1fed2)
  store i32 %v2_1fedc, i32* %eax.global-to-local, align 4
  %v1_1fee1 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_1fee1 = inttoptr i32 %v1_1fee1 to i32*
  %v3_1fee1 = load i32, i32* %v2_1fee1, align 4
  store i32 %v3_1fee1, i32* %esi.global-to-local, align 4
  %v1_1fee4 = add i32 %arg2, 20
  %v2_1fee4 = inttoptr i32 %v1_1fee4 to i8*
  %v3_1fee4 = load i8, i8* %v2_1fee4, align 1
  %v10_1fee4 = icmp eq i8 %v3_1fee4, 0
  br i1 %v10_1fee4, label %dec_label_pc_1feee, label %dec_label_pc_1feea

dec_label_pc_1feea:                               ; preds = %dec_label_pc_1fed2
  store i8 0, i8* %v2_1fee4, align 1
  %v3_1feee.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1feee

dec_label_pc_1feee:                               ; preds = %dec_label_pc_1feea, %dec_label_pc_1fed2
  %v3_1feee = phi i32 [ %v3_1feee.pre, %dec_label_pc_1feea ], [ %v2_1fedc, %dec_label_pc_1fed2 ]
  ret i32 %v3_1feee

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_1fefa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1fefa:
  %v1_1fefe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fefe = xor i32 %v1_1fefe, %arg1
  %v3_1fefe = icmp eq i32 %v2_1fefe, 0
  %v1_1ff05 = icmp eq i1 %v3_1fefe, false
  br i1 %v1_1ff05, label %dec_label_pc_1ff0e, label %dec_label_pc_1ff07

dec_label_pc_1ff07:                               ; preds = %dec_label_pc_1fefa
  ret i32 %v2_1fefe

dec_label_pc_1ff0e:                               ; preds = %dec_label_pc_1fefa
  ret i32 %v2_1fefe

; uselistorder directives
  uselistorder i32 %v2_1fefe, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSE_EEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ff20:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_1ff36 = add i32 %tmp99, 16
  %v2_1ff36 = inttoptr i32 %v1_1ff36 to i32*
  %v3_1ff36 = load i32, i32* %v2_1ff36, align 4
  %v1_1ff3d = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_1ff43 = call i32 @unknown_3fdd0(i32 %v1_1ff3d, i32 %v3_1ff36)
  %v2_1ff48 = load i32, i32* %arg1, align 4
  %v12_1ff4a = icmp eq i32 %v2_1ff48, %tmp99
  %v1_1ff4c = icmp eq i1 %v12_1ff4a, false
  br i1 %v1_1ff4c, label %dec_label_pc_1ff52, label %dec_label_pc_1ff4e

dec_label_pc_1ff4e:                               ; preds = %dec_label_pc_1ff20
  %v0_1ff4e = call i32 @function_1ff6b()
  ret i32 %v0_1ff4e

dec_label_pc_1ff52:                               ; preds = %dec_label_pc_1ff20
  %v1_1ff54 = add i32 %v2_1ff48, 12
  store i32 %v1_1ff54, i32* @eax, align 4
  %v2_1ff5a = call i32 @function_33980(i32 %v1_1ff54)
  ret i32 %v2_1ff5a

; uselistorder directives
  uselistorder i32 %v2_1ff48, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_1ff6b() local_unnamed_addr {
dec_label_pc_1ff6b:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_1ff6f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ff6f = xor i32 %v1_1ff6f, %tmp4
  %v3_1ff6f = icmp eq i32 %v2_1ff6f, 0
  %v1_1ff76 = icmp eq i1 %v3_1ff6f, false
  br i1 %v1_1ff76, label %dec_label_pc_1ff7f, label %dec_label_pc_1ff78

dec_label_pc_1ff78:                               ; preds = %dec_label_pc_1ff6b
  ret i32 %v2_1ff6f

dec_label_pc_1ff7f:                               ; preds = %dec_label_pc_1ff6b
  ret i32 %v2_1ff6f

; uselistorder directives
  uselistorder i32 %v2_1ff6f, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_1ff90:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1ff90 = load i32, i32* %edi.global-to-local, align 4
  %v0_1ff91 = load i32, i32* %esi.global-to-local, align 4
  %v0_1ff92 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1ff96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1ffa6 = add i32 %arg1, 12
  %v2_1ffa6 = inttoptr i32 %v1_1ffa6 to i32*
  %v3_1ffa6 = load i32, i32* %v2_1ffa6, align 4
  store i32 %v3_1ffa6, i32* %edi.global-to-local, align 4
  %v1_1ffa9 = icmp eq i32 %v3_1ffa6, 0
  br i1 %v1_1ffa9, label %bb, label %dec_label_pc_1ffad

bb:                                               ; preds = %dec_label_pc_1ff90
  %v5_1ffab = call i32 @function_20000(i32 %v0_1ff96, i32 %v0_1ff92, i32 %v0_1ff91, i32 %v0_1ff90)
  br label %dec_label_pc_1ffad

dec_label_pc_1ffad:                               ; preds = %bb, %dec_label_pc_1ff90
  %v1_1ffad = add i32 %v3_1ffa6, 16
  %v2_1ffad = inttoptr i32 %v1_1ffad to i32*
  %v3_1ffad = load i32, i32* %v2_1ffad, align 4
  %v1_1ffb4 = add i32 %v3_1ffa6, 8
  %v2_1ffba = call i32 @unknown_3fe40(i32 %v1_1ffb4, i32 %v3_1ffad)
  %v1_1ffbf = inttoptr i32 %v3_1ffa6 to i32*
  %v2_1ffbf = load i32, i32* %v1_1ffbf, align 4
  store i32 %v2_1ffbf, i32* %ebx.global-to-local, align 4
  %v12_1ffc1 = icmp eq i32 %v2_1ffbf, %v3_1ffa6
  %v1_1ffc3 = icmp eq i1 %v12_1ffc1, false
  br i1 %v1_1ffc3, label %dec_label_pc_1ffca, label %dec_label_pc_1ffc5

dec_label_pc_1ffc5:                               ; preds = %dec_label_pc_1ffad
  %v0_1ffc5 = call i32 @function_1ffe3()
  ret i32 %v0_1ffc5

dec_label_pc_1ffca:                               ; preds = %dec_label_pc_1ffad
  %v1_1ffca = inttoptr i32 %v2_1ffbf to i32*
  %v2_1ffca = load i32, i32* %v1_1ffca, align 4
  store i32 %v2_1ffca, i32* %esi.global-to-local, align 4
  %v1_1ffcc = add i32 %v2_1ffbf, 12
  store i32 %v1_1ffcc, i32* @eax, align 4
  %v1_1ffd2 = call i32 @function_339f0(i32 %v1_1ffcc)
  ret i32 %v1_1ffd2

; uselistorder directives
  uselistorder i32 %v2_1ffbf, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1ffa6, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_1ffe3() local_unnamed_addr {
dec_label_pc_1ffe3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_1ffe7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ffe7 = xor i32 %v1_1ffe7, %tmp9
  %v3_1ffe7 = icmp eq i32 %v2_1ffe7, 0
  store i32 %v2_1ffe7, i32* @eax, align 4
  %v1_1ffee = icmp eq i1 %v3_1ffe7, false
  br i1 %v1_1ffee, label %bb, label %dec_label_pc_1fff0

bb:                                               ; preds = %dec_label_pc_1ffe3
  %v2_1ffee = call i32 @function_20014()
  br label %dec_label_pc_1fff0

dec_label_pc_1fff0:                               ; preds = %bb, %dec_label_pc_1ffe3
  %v5_1fff9 = phi i32 [ %v2_1ffee, %bb ], [ %v2_1ffe7, %dec_label_pc_1ffe3 ]
  ret i32 %v5_1fff9
}

define i32 @function_20000(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20000:
  %v1_20004 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20004 = xor i32 %v1_20004, %arg1
  %v3_20004 = icmp eq i32 %v2_20004, 0
  store i32 %v2_20004, i32* @eax, align 4
  %v1_2000b = icmp eq i1 %v3_20004, false
  br i1 %v1_2000b, label %bb, label %dec_label_pc_2000d

bb:                                               ; preds = %dec_label_pc_20000
  %v2_2000b = call i32 @function_20014()
  br label %dec_label_pc_2000d

dec_label_pc_2000d:                               ; preds = %bb, %dec_label_pc_20000
  %v0_20013 = phi i32 [ %v2_2000b, %bb ], [ %v2_20004, %dec_label_pc_20000 ]
  ret i32 %v0_20013

; uselistorder directives
  uselistorder i32 ()* @function_20014, { 1, 0 }
}

define i32 @function_20014() local_unnamed_addr {
dec_label_pc_20014:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20020:
  %v1_20034 = icmp eq i32 %arg1, 0
  br i1 %v1_20034, label %bb, label %dec_label_pc_20038

bb:                                               ; preds = %dec_label_pc_20020
  %v0_20028 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20036 = call i32 @function_20068(i32 %v0_20028)
  br label %dec_label_pc_20038

dec_label_pc_20038:                               ; preds = %bb, %dec_label_pc_20020
  %v1_20038 = add i32 %arg1, 12
  ret i32 %v1_20038
}

define i32 @function_20068(i32 %arg1) local_unnamed_addr {
dec_label_pc_20068:
  %v1_2006c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2006c = xor i32 %v1_2006c, %arg1
  %v3_2006c = icmp eq i32 %v2_2006c, 0
  %v1_20073 = icmp eq i1 %v3_2006c, false
  br i1 %v1_20073, label %dec_label_pc_2007a, label %dec_label_pc_20075

dec_label_pc_20075:                               ; preds = %dec_label_pc_20068
  ret i32 %v2_2006c

dec_label_pc_2007a:                               ; preds = %dec_label_pc_20068
  ret i32 %v2_2006c

; uselistorder directives
  uselistorder i32 %v2_2006c, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot5IvP7CWalletRKNS1_7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EERKSsb10ChangeTypeNS1_8functionIFvSE_SO_SQ_bSR_EEEEENS2_5mutexEEEEEEESt10_Select1stIS10_ENS3_14group_key_lessIiSt4lessIiEEESaIS10_EE8_M_eraseEPSt13_Rb_tree_nodeIS10_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20090:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20090 = load i32, i32* %edi.global-to-local, align 4
  %v0_20091 = load i32, i32* %esi.global-to-local, align 4
  %v0_20092 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_2009a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_200aa = icmp eq i32 %arg2, 0
  %v1_200ac = icmp eq i1 %v1_200aa, false
  br i1 %v1_200ac, label %dec_label_pc_200b2, label %dec_label_pc_200ae

dec_label_pc_200ae:                               ; preds = %dec_label_pc_20090
  %v4_200ae = call i32 @function_200da(i32 %v0_2009a, i32 %v0_20092, i32 %v0_20091, i32 %v0_20090)
  store i32 %v4_200ae, i32* %eax.global-to-local, align 4
  ret i32 %v4_200ae

dec_label_pc_200b2:                               ; preds = %dec_label_pc_20090
  %v1_200b2 = add i32 %arg2, 12
  %v2_200b2 = inttoptr i32 %v1_200b2 to i32*
  %v3_200b2 = load i32, i32* %v2_200b2, align 4
  store i32 %v3_200b2, i32* %eax.global-to-local, align 4
  %v2_200bc = call i32 @unknown_40120(i32 %arg1, i32 %v3_200b2)
  store i32 %v2_200bc, i32* %eax.global-to-local, align 4
  %v1_200c1 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_200c1 = inttoptr i32 %v1_200c1 to i32*
  %v3_200c1 = load i32, i32* %v2_200c1, align 4
  store i32 %v3_200c1, i32* %esi.global-to-local, align 4
  %v1_200c4 = add i32 %arg2, 20
  %v2_200c4 = inttoptr i32 %v1_200c4 to i8*
  %v3_200c4 = load i8, i8* %v2_200c4, align 1
  %v10_200c4 = icmp eq i8 %v3_200c4, 0
  br i1 %v10_200c4, label %dec_label_pc_200ce, label %dec_label_pc_200ca

dec_label_pc_200ca:                               ; preds = %dec_label_pc_200b2
  store i8 0, i8* %v2_200c4, align 1
  %v3_200ce.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_200ce

dec_label_pc_200ce:                               ; preds = %dec_label_pc_200ca, %dec_label_pc_200b2
  %v3_200ce = phi i32 [ %v3_200ce.pre, %dec_label_pc_200ca ], [ %v2_200bc, %dec_label_pc_200b2 ]
  ret i32 %v3_200ce

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_200da(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_200da:
  %v1_200de = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_200de = xor i32 %v1_200de, %arg1
  %v3_200de = icmp eq i32 %v2_200de, 0
  %v1_200e5 = icmp eq i1 %v3_200de, false
  br i1 %v1_200e5, label %dec_label_pc_200ee, label %dec_label_pc_200e7

dec_label_pc_200e7:                               ; preds = %dec_label_pc_200da
  ret i32 %v2_200de

dec_label_pc_200ee:                               ; preds = %dec_label_pc_200da
  ret i32 %v2_200de

; uselistorder directives
  uselistorder i32 %v2_200de, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EERKSsb10ChangeTypeNS_8functionIFvSE_SO_SQ_bSR_EEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_20100:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_20116 = add i32 %tmp99, 16
  %v2_20116 = inttoptr i32 %v1_20116 to i32*
  %v3_20116 = load i32, i32* %v2_20116, align 4
  %v1_2011d = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_20123 = call i32 @unknown_40190(i32 %v1_2011d, i32 %v3_20116)
  %v2_20128 = load i32, i32* %arg1, align 4
  %v12_2012a = icmp eq i32 %v2_20128, %tmp99
  %v1_2012c = icmp eq i1 %v12_2012a, false
  br i1 %v1_2012c, label %dec_label_pc_20132, label %dec_label_pc_2012e

dec_label_pc_2012e:                               ; preds = %dec_label_pc_20100
  %v0_2012e = call i32 @function_2014b()
  ret i32 %v0_2012e

dec_label_pc_20132:                               ; preds = %dec_label_pc_20100
  %v1_20134 = add i32 %v2_20128, 12
  store i32 %v1_20134, i32* @eax, align 4
  %v2_2013a = call i32 @function_33b60(i32 %v1_20134)
  ret i32 %v2_2013a

; uselistorder directives
  uselistorder i32 %v2_20128, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_2014b() local_unnamed_addr {
dec_label_pc_2014b:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_2014f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2014f = xor i32 %v1_2014f, %tmp4
  %v3_2014f = icmp eq i32 %v2_2014f, 0
  %v1_20156 = icmp eq i1 %v3_2014f, false
  br i1 %v1_20156, label %dec_label_pc_2015f, label %dec_label_pc_20158

dec_label_pc_20158:                               ; preds = %dec_label_pc_2014b
  ret i32 %v2_2014f

dec_label_pc_2015f:                               ; preds = %dec_label_pc_2014b
  ret i32 %v2_2014f

; uselistorder directives
  uselistorder i32 %v2_2014f, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EERKSsb10ChangeTypeNS_8functionIFvSG_SP_SR_bSS_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_20170:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20170 = load i32, i32* %edi.global-to-local, align 4
  %v0_20171 = load i32, i32* %esi.global-to-local, align 4
  %v0_20172 = load i32, i32* %ebx.global-to-local, align 4
  %v0_20176 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20186 = add i32 %arg1, 12
  %v2_20186 = inttoptr i32 %v1_20186 to i32*
  %v3_20186 = load i32, i32* %v2_20186, align 4
  store i32 %v3_20186, i32* %edi.global-to-local, align 4
  %v1_20189 = icmp eq i32 %v3_20186, 0
  br i1 %v1_20189, label %bb, label %dec_label_pc_2018d

bb:                                               ; preds = %dec_label_pc_20170
  %v5_2018b = call i32 @function_201e0(i32 %v0_20176, i32 %v0_20172, i32 %v0_20171, i32 %v0_20170)
  br label %dec_label_pc_2018d

dec_label_pc_2018d:                               ; preds = %bb, %dec_label_pc_20170
  %v1_2018d = add i32 %v3_20186, 16
  %v2_2018d = inttoptr i32 %v1_2018d to i32*
  %v3_2018d = load i32, i32* %v2_2018d, align 4
  %v1_20194 = add i32 %v3_20186, 8
  %v2_2019a = call i32 @unknown_40200(i32 %v1_20194, i32 %v3_2018d)
  %v1_2019f = inttoptr i32 %v3_20186 to i32*
  %v2_2019f = load i32, i32* %v1_2019f, align 4
  store i32 %v2_2019f, i32* %ebx.global-to-local, align 4
  %v12_201a1 = icmp eq i32 %v2_2019f, %v3_20186
  %v1_201a3 = icmp eq i1 %v12_201a1, false
  br i1 %v1_201a3, label %dec_label_pc_201aa, label %dec_label_pc_201a5

dec_label_pc_201a5:                               ; preds = %dec_label_pc_2018d
  %v0_201a5 = call i32 @function_201c3()
  ret i32 %v0_201a5

dec_label_pc_201aa:                               ; preds = %dec_label_pc_2018d
  %v1_201aa = inttoptr i32 %v2_2019f to i32*
  %v2_201aa = load i32, i32* %v1_201aa, align 4
  store i32 %v2_201aa, i32* %esi.global-to-local, align 4
  %v1_201ac = add i32 %v2_2019f, 12
  store i32 %v1_201ac, i32* @eax, align 4
  %v1_201b2 = call i32 @function_33bd0(i32 %v1_201ac)
  ret i32 %v1_201b2

; uselistorder directives
  uselistorder i32 %v2_2019f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_20186, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_201c3() local_unnamed_addr {
dec_label_pc_201c3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_201c7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_201c7 = xor i32 %v1_201c7, %tmp9
  %v3_201c7 = icmp eq i32 %v2_201c7, 0
  store i32 %v2_201c7, i32* @eax, align 4
  %v1_201ce = icmp eq i1 %v3_201c7, false
  br i1 %v1_201ce, label %bb, label %dec_label_pc_201d0

bb:                                               ; preds = %dec_label_pc_201c3
  %v2_201ce = call i32 @function_201f4()
  br label %dec_label_pc_201d0

dec_label_pc_201d0:                               ; preds = %bb, %dec_label_pc_201c3
  %v5_201d9 = phi i32 [ %v2_201ce, %bb ], [ %v2_201c7, %dec_label_pc_201c3 ]
  ret i32 %v5_201d9
}

define i32 @function_201e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_201e0:
  %v1_201e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_201e4 = xor i32 %v1_201e4, %arg1
  %v3_201e4 = icmp eq i32 %v2_201e4, 0
  store i32 %v2_201e4, i32* @eax, align 4
  %v1_201eb = icmp eq i1 %v3_201e4, false
  br i1 %v1_201eb, label %bb, label %dec_label_pc_201ed

bb:                                               ; preds = %dec_label_pc_201e0
  %v2_201eb = call i32 @function_201f4()
  br label %dec_label_pc_201ed

dec_label_pc_201ed:                               ; preds = %bb, %dec_label_pc_201e0
  %v0_201f3 = phi i32 [ %v2_201eb, %bb ], [ %v2_201e4, %dec_label_pc_201e0 ]
  ret i32 %v0_201f3

; uselistorder directives
  uselistorder i32 ()* @function_201f4, { 1, 0 }
}

define i32 @function_201f4() local_unnamed_addr {
dec_label_pc_201f4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_SF_SH_bSI_EEENSN_IFvRKNS1_10connectionES5_SF_SH_bSI_EEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20200:
  %v1_20214 = icmp eq i32 %arg1, 0
  br i1 %v1_20214, label %bb, label %dec_label_pc_20218

bb:                                               ; preds = %dec_label_pc_20200
  %v0_20208 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20216 = call i32 @function_20248(i32 %v0_20208)
  br label %dec_label_pc_20218

dec_label_pc_20218:                               ; preds = %bb, %dec_label_pc_20200
  %v1_20218 = add i32 %arg1, 12
  ret i32 %v1_20218
}

define i32 @function_20248(i32 %arg1) local_unnamed_addr {
dec_label_pc_20248:
  %v1_2024c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2024c = xor i32 %v1_2024c, %arg1
  %v3_2024c = icmp eq i32 %v2_2024c, 0
  %v1_20253 = icmp eq i1 %v3_2024c, false
  br i1 %v1_20253, label %dec_label_pc_2025a, label %dec_label_pc_20255

dec_label_pc_20255:                               ; preds = %dec_label_pc_20248
  ret i32 %v2_2024c

dec_label_pc_2025a:                               ; preds = %dec_label_pc_20248
  ret i32 %v2_2024c

; uselistorder directives
  uselistorder i32 %v2_2024c, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IvP7CWalletRK7uint25610ChangeTypeNS1_8functionIFvSE_SH_SI_EEEEENS2_5mutexEEEEEEESt10_Select1stISR_ENS3_14group_key_lessIiSt4lessIiEEESaISR_EE8_M_eraseEPSt13_Rb_tree_nodeISR_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20270:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20270 = load i32, i32* %edi.global-to-local, align 4
  %v0_20271 = load i32, i32* %esi.global-to-local, align 4
  %v0_20272 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_2027a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_2028a = icmp eq i32 %arg2, 0
  %v1_2028c = icmp eq i1 %v1_2028a, false
  br i1 %v1_2028c, label %dec_label_pc_20292, label %dec_label_pc_2028e

dec_label_pc_2028e:                               ; preds = %dec_label_pc_20270
  %v4_2028e = call i32 @function_202ba(i32 %v0_2027a, i32 %v0_20272, i32 %v0_20271, i32 %v0_20270)
  store i32 %v4_2028e, i32* %eax.global-to-local, align 4
  ret i32 %v4_2028e

dec_label_pc_20292:                               ; preds = %dec_label_pc_20270
  %v1_20292 = add i32 %arg2, 12
  %v2_20292 = inttoptr i32 %v1_20292 to i32*
  %v3_20292 = load i32, i32* %v2_20292, align 4
  store i32 %v3_20292, i32* %eax.global-to-local, align 4
  %v2_2029c = call i32 @unknown_404e0(i32 %arg1, i32 %v3_20292)
  store i32 %v2_2029c, i32* %eax.global-to-local, align 4
  %v1_202a1 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_202a1 = inttoptr i32 %v1_202a1 to i32*
  %v3_202a1 = load i32, i32* %v2_202a1, align 4
  store i32 %v3_202a1, i32* %esi.global-to-local, align 4
  %v1_202a4 = add i32 %arg2, 20
  %v2_202a4 = inttoptr i32 %v1_202a4 to i8*
  %v3_202a4 = load i8, i8* %v2_202a4, align 1
  %v10_202a4 = icmp eq i8 %v3_202a4, 0
  br i1 %v10_202a4, label %dec_label_pc_202ae, label %dec_label_pc_202aa

dec_label_pc_202aa:                               ; preds = %dec_label_pc_20292
  store i8 0, i8* %v2_202a4, align 1
  %v3_202ae.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_202ae

dec_label_pc_202ae:                               ; preds = %dec_label_pc_202aa, %dec_label_pc_20292
  %v3_202ae = phi i32 [ %v3_202ae.pre, %dec_label_pc_202aa ], [ %v2_2029c, %dec_label_pc_20292 ]
  ret i32 %v3_202ae

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_202ba(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_202ba:
  %v1_202be = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_202be = xor i32 %v1_202be, %arg1
  %v3_202be = icmp eq i32 %v2_202be, 0
  %v1_202c5 = icmp eq i1 %v3_202be, false
  br i1 %v1_202c5, label %dec_label_pc_202ce, label %dec_label_pc_202c7

dec_label_pc_202c7:                               ; preds = %dec_label_pc_202ba
  ret i32 %v2_202be

dec_label_pc_202ce:                               ; preds = %dec_label_pc_202ba
  ret i32 %v2_202be

; uselistorder directives
  uselistorder i32 %v2_202be, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IvP7CWalletRK7uint25610ChangeTypeNS_8functionIFvSE_SH_SI_EEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_202e0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_202f6 = add i32 %tmp99, 16
  %v2_202f6 = inttoptr i32 %v1_202f6 to i32*
  %v3_202f6 = load i32, i32* %v2_202f6, align 4
  %v1_202fd = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_20303 = call i32 @unknown_40550(i32 %v1_202fd, i32 %v3_202f6)
  %v2_20308 = load i32, i32* %arg1, align 4
  %v12_2030a = icmp eq i32 %v2_20308, %tmp99
  %v1_2030c = icmp eq i1 %v12_2030a, false
  br i1 %v1_2030c, label %dec_label_pc_20312, label %dec_label_pc_2030e

dec_label_pc_2030e:                               ; preds = %dec_label_pc_202e0
  %v0_2030e = call i32 @function_2032b()
  ret i32 %v0_2030e

dec_label_pc_20312:                               ; preds = %dec_label_pc_202e0
  %v1_20314 = add i32 %v2_20308, 12
  store i32 %v1_20314, i32* @eax, align 4
  %v2_2031a = call i32 @function_33d40(i32 %v1_20314)
  ret i32 %v2_2031a

; uselistorder directives
  uselistorder i32 %v2_20308, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_2032b() local_unnamed_addr {
dec_label_pc_2032b:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_2032f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2032f = xor i32 %v1_2032f, %tmp4
  %v3_2032f = icmp eq i32 %v2_2032f, 0
  %v1_20336 = icmp eq i1 %v3_2032f, false
  br i1 %v1_20336, label %dec_label_pc_2033f, label %dec_label_pc_20338

dec_label_pc_20338:                               ; preds = %dec_label_pc_2032b
  ret i32 %v2_2032f

dec_label_pc_2033f:                               ; preds = %dec_label_pc_2032b
  ret i32 %v2_2032f

; uselistorder directives
  uselistorder i32 %v2_2032f, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP7CWalletRK7uint25610ChangeTypeNS_8functionIFvSG_SJ_SK_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_20350:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20350 = load i32, i32* %edi.global-to-local, align 4
  %v0_20351 = load i32, i32* %esi.global-to-local, align 4
  %v0_20352 = load i32, i32* %ebx.global-to-local, align 4
  %v0_20356 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20366 = add i32 %arg1, 12
  %v2_20366 = inttoptr i32 %v1_20366 to i32*
  %v3_20366 = load i32, i32* %v2_20366, align 4
  store i32 %v3_20366, i32* %edi.global-to-local, align 4
  %v1_20369 = icmp eq i32 %v3_20366, 0
  br i1 %v1_20369, label %bb, label %dec_label_pc_2036d

bb:                                               ; preds = %dec_label_pc_20350
  %v5_2036b = call i32 @function_203c0(i32 %v0_20356, i32 %v0_20352, i32 %v0_20351, i32 %v0_20350)
  br label %dec_label_pc_2036d

dec_label_pc_2036d:                               ; preds = %bb, %dec_label_pc_20350
  %v1_2036d = add i32 %v3_20366, 16
  %v2_2036d = inttoptr i32 %v1_2036d to i32*
  %v3_2036d = load i32, i32* %v2_2036d, align 4
  %v1_20374 = add i32 %v3_20366, 8
  %v2_2037a = call i32 @unknown_405c0(i32 %v1_20374, i32 %v3_2036d)
  %v1_2037f = inttoptr i32 %v3_20366 to i32*
  %v2_2037f = load i32, i32* %v1_2037f, align 4
  store i32 %v2_2037f, i32* %ebx.global-to-local, align 4
  %v12_20381 = icmp eq i32 %v2_2037f, %v3_20366
  %v1_20383 = icmp eq i1 %v12_20381, false
  br i1 %v1_20383, label %dec_label_pc_2038a, label %dec_label_pc_20385

dec_label_pc_20385:                               ; preds = %dec_label_pc_2036d
  %v0_20385 = call i32 @function_203a3()
  ret i32 %v0_20385

dec_label_pc_2038a:                               ; preds = %dec_label_pc_2036d
  %v1_2038a = inttoptr i32 %v2_2037f to i32*
  %v2_2038a = load i32, i32* %v1_2038a, align 4
  store i32 %v2_2038a, i32* %esi.global-to-local, align 4
  %v1_2038c = add i32 %v2_2037f, 12
  store i32 %v1_2038c, i32* @eax, align 4
  %v1_20392 = call i32 @function_33db0(i32 %v1_2038c)
  ret i32 %v1_20392

; uselistorder directives
  uselistorder i32 %v2_2037f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_20366, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_203a3() local_unnamed_addr {
dec_label_pc_203a3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_203a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_203a7 = xor i32 %v1_203a7, %tmp9
  %v3_203a7 = icmp eq i32 %v2_203a7, 0
  store i32 %v2_203a7, i32* @eax, align 4
  %v1_203ae = icmp eq i1 %v3_203a7, false
  br i1 %v1_203ae, label %bb, label %dec_label_pc_203b0

bb:                                               ; preds = %dec_label_pc_203a3
  %v2_203ae = call i32 @function_203d4()
  br label %dec_label_pc_203b0

dec_label_pc_203b0:                               ; preds = %bb, %dec_label_pc_203a3
  %v5_203b9 = phi i32 [ %v2_203ae, %bb ], [ %v2_203a7, %dec_label_pc_203a3 ]
  ret i32 %v5_203b9
}

define i32 @function_203c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_203c0:
  %v1_203c4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_203c4 = xor i32 %v1_203c4, %arg1
  %v3_203c4 = icmp eq i32 %v2_203c4, 0
  store i32 %v2_203c4, i32* @eax, align 4
  %v1_203cb = icmp eq i1 %v3_203c4, false
  br i1 %v1_203cb, label %bb, label %dec_label_pc_203cd

bb:                                               ; preds = %dec_label_pc_203c0
  %v2_203cb = call i32 @function_203d4()
  br label %dec_label_pc_203cd

dec_label_pc_203cd:                               ; preds = %bb, %dec_label_pc_203c0
  %v0_203d3 = phi i32 [ %v2_203cb, %bb ], [ %v2_203c4, %dec_label_pc_203c0 ]
  ret i32 %v0_203d3

; uselistorder directives
  uselistorder i32 ()* @function_203d4, { 1, 0 }
}

define i32 @function_203d4() local_unnamed_addr {
dec_label_pc_203d4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S8_S9_EEENSE_IFvRKNS1_10connectionES5_S8_S9_EEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_203e0:
  %v1_203f4 = icmp eq i32 %arg1, 0
  br i1 %v1_203f4, label %bb, label %dec_label_pc_203f8

bb:                                               ; preds = %dec_label_pc_203e0
  %v0_203e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_203f6 = call i32 @function_20428(i32 %v0_203e8)
  br label %dec_label_pc_203f8

dec_label_pc_203f8:                               ; preds = %bb, %dec_label_pc_203e0
  %v1_203f8 = add i32 %arg1, 12
  ret i32 %v1_203f8
}

define i32 @function_20428(i32 %arg1) local_unnamed_addr {
dec_label_pc_20428:
  %v1_2042c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2042c = xor i32 %v1_2042c, %arg1
  %v3_2042c = icmp eq i32 %v2_2042c, 0
  %v1_20433 = icmp eq i1 %v3_2042c, false
  br i1 %v1_20433, label %dec_label_pc_2043a, label %dec_label_pc_20435

dec_label_pc_20435:                               ; preds = %dec_label_pc_20428
  ret i32 %v2_2042c

dec_label_pc_2043a:                               ; preds = %dec_label_pc_20428
  ret i32 %v2_2042c

; uselistorder directives
  uselistorder i32 %v2_2042c, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20450:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20450 = load i32, i32* %edi.global-to-local, align 4
  %v0_20451 = load i32, i32* %esi.global-to-local, align 4
  %v0_20452 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_2045a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_2046a = icmp eq i32 %arg2, 0
  %v1_2046c = icmp eq i1 %v1_2046a, false
  br i1 %v1_2046c, label %dec_label_pc_20472, label %dec_label_pc_2046e

dec_label_pc_2046e:                               ; preds = %dec_label_pc_20450
  %v4_2046e = call i32 @function_2049a(i32 %v0_2045a, i32 %v0_20452, i32 %v0_20451, i32 %v0_20450)
  store i32 %v4_2046e, i32* %eax.global-to-local, align 4
  ret i32 %v4_2046e

dec_label_pc_20472:                               ; preds = %dec_label_pc_20450
  %v1_20472 = add i32 %arg2, 12
  %v2_20472 = inttoptr i32 %v1_20472 to i32*
  %v3_20472 = load i32, i32* %v2_20472, align 4
  store i32 %v3_20472, i32* %eax.global-to-local, align 4
  %v2_2047c = call i32 @unknown_408a0(i32 %arg1, i32 %v3_20472)
  store i32 %v2_2047c, i32* %eax.global-to-local, align 4
  %v1_20481 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_20481 = inttoptr i32 %v1_20481 to i32*
  %v3_20481 = load i32, i32* %v2_20481, align 4
  store i32 %v3_20481, i32* %esi.global-to-local, align 4
  %v1_20484 = add i32 %arg2, 20
  %v2_20484 = inttoptr i32 %v1_20484 to i8*
  %v3_20484 = load i8, i8* %v2_20484, align 1
  %v10_20484 = icmp eq i8 %v3_20484, 0
  br i1 %v10_20484, label %dec_label_pc_2048e, label %dec_label_pc_2048a

dec_label_pc_2048a:                               ; preds = %dec_label_pc_20472
  store i8 0, i8* %v2_20484, align 1
  %v3_2048e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2048e

dec_label_pc_2048e:                               ; preds = %dec_label_pc_2048a, %dec_label_pc_20472
  %v3_2048e = phi i32 [ %v3_2048e.pre, %dec_label_pc_2048a ], [ %v2_2047c, %dec_label_pc_20472 ]
  ret i32 %v3_2048e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_2049a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2049a:
  %v1_2049e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2049e = xor i32 %v1_2049e, %arg1
  %v3_2049e = icmp eq i32 %v2_2049e, 0
  %v1_204a5 = icmp eq i1 %v3_2049e, false
  br i1 %v1_204a5, label %dec_label_pc_204ae, label %dec_label_pc_204a7

dec_label_pc_204a7:                               ; preds = %dec_label_pc_2049a
  ret i32 %v2_2049e

dec_label_pc_204ae:                               ; preds = %dec_label_pc_2049a
  ret i32 %v2_2049e

; uselistorder directives
  uselistorder i32 %v2_2049e, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_204c0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_204d6 = add i32 %tmp99, 16
  %v2_204d6 = inttoptr i32 %v1_204d6 to i32*
  %v3_204d6 = load i32, i32* %v2_204d6, align 4
  %v1_204dd = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_204e3 = call i32 @unknown_40910(i32 %v1_204dd, i32 %v3_204d6)
  %v2_204e8 = load i32, i32* %arg1, align 4
  %v12_204ea = icmp eq i32 %v2_204e8, %tmp99
  %v1_204ec = icmp eq i1 %v12_204ea, false
  br i1 %v1_204ec, label %dec_label_pc_204f2, label %dec_label_pc_204ee

dec_label_pc_204ee:                               ; preds = %dec_label_pc_204c0
  %v0_204ee = call i32 @function_2050b()
  ret i32 %v0_204ee

dec_label_pc_204f2:                               ; preds = %dec_label_pc_204c0
  %v1_204f4 = add i32 %v2_204e8, 12
  store i32 %v1_204f4, i32* @eax, align 4
  %v2_204fa = call i32 @function_33f20(i32 %v1_204f4)
  ret i32 %v2_204fa

; uselistorder directives
  uselistorder i32 %v2_204e8, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_2050b() local_unnamed_addr {
dec_label_pc_2050b:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_2050f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2050f = xor i32 %v1_2050f, %tmp4
  %v3_2050f = icmp eq i32 %v2_2050f, 0
  %v1_20516 = icmp eq i1 %v3_2050f, false
  br i1 %v1_20516, label %dec_label_pc_2051f, label %dec_label_pc_20518

dec_label_pc_20518:                               ; preds = %dec_label_pc_2050b
  ret i32 %v2_2050f

dec_label_pc_2051f:                               ; preds = %dec_label_pc_2050b
  ret i32 %v2_2050f

; uselistorder directives
  uselistorder i32 %v2_2050f, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IbRKSsSG_jNS_8functionIFbSG_SG_jEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_20530:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20530 = load i32, i32* %edi.global-to-local, align 4
  %v0_20531 = load i32, i32* %esi.global-to-local, align 4
  %v0_20532 = load i32, i32* %ebx.global-to-local, align 4
  %v0_20536 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20546 = add i32 %arg1, 12
  %v2_20546 = inttoptr i32 %v1_20546 to i32*
  %v3_20546 = load i32, i32* %v2_20546, align 4
  store i32 %v3_20546, i32* %edi.global-to-local, align 4
  %v1_20549 = icmp eq i32 %v3_20546, 0
  br i1 %v1_20549, label %bb, label %dec_label_pc_2054d

bb:                                               ; preds = %dec_label_pc_20530
  %v5_2054b = call i32 @function_205a0(i32 %v0_20536, i32 %v0_20532, i32 %v0_20531, i32 %v0_20530)
  br label %dec_label_pc_2054d

dec_label_pc_2054d:                               ; preds = %bb, %dec_label_pc_20530
  %v1_2054d = add i32 %v3_20546, 16
  %v2_2054d = inttoptr i32 %v1_2054d to i32*
  %v3_2054d = load i32, i32* %v2_2054d, align 4
  %v1_20554 = add i32 %v3_20546, 8
  %v2_2055a = call i32 @unknown_40980(i32 %v1_20554, i32 %v3_2054d)
  %v1_2055f = inttoptr i32 %v3_20546 to i32*
  %v2_2055f = load i32, i32* %v1_2055f, align 4
  store i32 %v2_2055f, i32* %ebx.global-to-local, align 4
  %v12_20561 = icmp eq i32 %v2_2055f, %v3_20546
  %v1_20563 = icmp eq i1 %v12_20561, false
  br i1 %v1_20563, label %dec_label_pc_2056a, label %dec_label_pc_20565

dec_label_pc_20565:                               ; preds = %dec_label_pc_2054d
  %v0_20565 = call i32 @function_20583()
  ret i32 %v0_20565

dec_label_pc_2056a:                               ; preds = %dec_label_pc_2054d
  %v1_2056a = inttoptr i32 %v2_2055f to i32*
  %v2_2056a = load i32, i32* %v1_2056a, align 4
  store i32 %v2_2056a, i32* %esi.global-to-local, align 4
  %v1_2056c = add i32 %v2_2055f, 12
  store i32 %v1_2056c, i32* @eax, align 4
  %v1_20572 = call i32 @function_33f90(i32 %v1_2056c)
  ret i32 %v1_20572

; uselistorder directives
  uselistorder i32 %v2_2055f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_20546, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_20583() local_unnamed_addr {
dec_label_pc_20583:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_20587 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20587 = xor i32 %v1_20587, %tmp9
  %v3_20587 = icmp eq i32 %v2_20587, 0
  store i32 %v2_20587, i32* @eax, align 4
  %v1_2058e = icmp eq i1 %v3_20587, false
  br i1 %v1_2058e, label %bb, label %dec_label_pc_20590

bb:                                               ; preds = %dec_label_pc_20583
  %v2_2058e = call i32 @function_205b4()
  br label %dec_label_pc_20590

dec_label_pc_20590:                               ; preds = %bb, %dec_label_pc_20583
  %v5_20599 = phi i32 [ %v2_2058e, %bb ], [ %v2_20587, %dec_label_pc_20583 ]
  ret i32 %v5_20599
}

define i32 @function_205a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_205a0:
  %v1_205a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_205a4 = xor i32 %v1_205a4, %arg1
  %v3_205a4 = icmp eq i32 %v2_205a4, 0
  store i32 %v2_205a4, i32* @eax, align 4
  %v1_205ab = icmp eq i1 %v3_205a4, false
  br i1 %v1_205ab, label %bb, label %dec_label_pc_205ad

bb:                                               ; preds = %dec_label_pc_205a0
  %v2_205ab = call i32 @function_205b4()
  br label %dec_label_pc_205ad

dec_label_pc_205ad:                               ; preds = %bb, %dec_label_pc_205a0
  %v0_205b3 = phi i32 [ %v2_205ab, %bb ], [ %v2_205a4, %dec_label_pc_205a0 ]
  ret i32 %v0_205b3

; uselistorder directives
  uselistorder i32 ()* @function_205b4, { 1, 0 }
}

define i32 @function_205b4() local_unnamed_addr {
dec_label_pc_205b4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_205c0:
  %v1_205d4 = icmp eq i32 %arg1, 0
  br i1 %v1_205d4, label %bb, label %dec_label_pc_205d8

bb:                                               ; preds = %dec_label_pc_205c0
  %v0_205c8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_205d6 = call i32 @function_20608(i32 %v0_205c8)
  br label %dec_label_pc_205d8

dec_label_pc_205d8:                               ; preds = %bb, %dec_label_pc_205c0
  %v1_205d8 = add i32 %arg1, 12
  ret i32 %v1_205d8
}

define i32 @function_20608(i32 %arg1) local_unnamed_addr {
dec_label_pc_20608:
  %v1_2060c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2060c = xor i32 %v1_2060c, %arg1
  %v3_2060c = icmp eq i32 %v2_2060c, 0
  %v1_20613 = icmp eq i1 %v3_2060c, false
  br i1 %v1_20613, label %dec_label_pc_2061a, label %dec_label_pc_20615

dec_label_pc_20615:                               ; preds = %dec_label_pc_20608
  ret i32 %v2_2060c

dec_label_pc_2061a:                               ; preds = %dec_label_pc_20608
  ret i32 %v2_2060c

; uselistorder directives
  uselistorder i32 %v2_2060c, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20630:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20630 = load i32, i32* %edi.global-to-local, align 4
  %v0_20631 = load i32, i32* %esi.global-to-local, align 4
  %v0_20632 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_2063a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_2064a = icmp eq i32 %arg2, 0
  %v1_2064c = icmp eq i1 %v1_2064a, false
  br i1 %v1_2064c, label %dec_label_pc_20652, label %dec_label_pc_2064e

dec_label_pc_2064e:                               ; preds = %dec_label_pc_20630
  %v4_2064e = call i32 @function_2067a(i32 %v0_2063a, i32 %v0_20632, i32 %v0_20631, i32 %v0_20630)
  store i32 %v4_2064e, i32* %eax.global-to-local, align 4
  ret i32 %v4_2064e

dec_label_pc_20652:                               ; preds = %dec_label_pc_20630
  %v1_20652 = add i32 %arg2, 12
  %v2_20652 = inttoptr i32 %v1_20652 to i32*
  %v3_20652 = load i32, i32* %v2_20652, align 4
  store i32 %v3_20652, i32* %eax.global-to-local, align 4
  %v2_2065c = call i32 @unknown_40c60(i32 %arg1, i32 %v3_20652)
  store i32 %v2_2065c, i32* %eax.global-to-local, align 4
  %v1_20661 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_20661 = inttoptr i32 %v1_20661 to i32*
  %v3_20661 = load i32, i32* %v2_20661, align 4
  store i32 %v3_20661, i32* %esi.global-to-local, align 4
  %v1_20664 = add i32 %arg2, 20
  %v2_20664 = inttoptr i32 %v1_20664 to i8*
  %v3_20664 = load i8, i8* %v2_20664, align 1
  %v10_20664 = icmp eq i8 %v3_20664, 0
  br i1 %v10_20664, label %dec_label_pc_2066e, label %dec_label_pc_2066a

dec_label_pc_2066a:                               ; preds = %dec_label_pc_20652
  store i8 0, i8* %v2_20664, align 1
  %v3_2066e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2066e

dec_label_pc_2066e:                               ; preds = %dec_label_pc_2066a, %dec_label_pc_20652
  %v3_2066e = phi i32 [ %v3_2066e.pre, %dec_label_pc_2066a ], [ %v2_2065c, %dec_label_pc_20652 ]
  ret i32 %v3_2066e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_2067a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2067a:
  %v1_2067e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2067e = xor i32 %v1_2067e, %arg1
  %v3_2067e = icmp eq i32 %v2_2067e, 0
  %v1_20685 = icmp eq i1 %v3_2067e, false
  br i1 %v1_20685, label %dec_label_pc_2068e, label %dec_label_pc_20687

dec_label_pc_20687:                               ; preds = %dec_label_pc_2067a
  ret i32 %v2_2067e

dec_label_pc_2068e:                               ; preds = %dec_label_pc_2067a
  ret i32 %v2_2067e

; uselistorder directives
  uselistorder i32 %v2_2067e, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxNS_8functionIFbxEEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_206a0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_206b6 = add i32 %tmp99, 16
  %v2_206b6 = inttoptr i32 %v1_206b6 to i32*
  %v3_206b6 = load i32, i32* %v2_206b6, align 4
  %v1_206bd = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_206c3 = call i32 @unknown_40cd0(i32 %v1_206bd, i32 %v3_206b6)
  %v2_206c8 = load i32, i32* %arg1, align 4
  %v12_206ca = icmp eq i32 %v2_206c8, %tmp99
  %v1_206cc = icmp eq i1 %v12_206ca, false
  br i1 %v1_206cc, label %dec_label_pc_206d2, label %dec_label_pc_206ce

dec_label_pc_206ce:                               ; preds = %dec_label_pc_206a0
  %v0_206ce = call i32 @function_206eb()
  ret i32 %v0_206ce

dec_label_pc_206d2:                               ; preds = %dec_label_pc_206a0
  %v1_206d4 = add i32 %v2_206c8, 12
  store i32 %v1_206d4, i32* @eax, align 4
  %v2_206da = call i32 @function_34100(i32 %v1_206d4)
  ret i32 %v2_206da

; uselistorder directives
  uselistorder i32 %v2_206c8, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_206eb() local_unnamed_addr {
dec_label_pc_206eb:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_206ef = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_206ef = xor i32 %v1_206ef, %tmp4
  %v3_206ef = icmp eq i32 %v2_206ef, 0
  %v1_206f6 = icmp eq i1 %v3_206ef, false
  br i1 %v1_206f6, label %dec_label_pc_206ff, label %dec_label_pc_206f8

dec_label_pc_206f8:                               ; preds = %dec_label_pc_206eb
  ret i32 %v2_206ef

dec_label_pc_206ff:                               ; preds = %dec_label_pc_206eb
  ret i32 %v2_206ef

; uselistorder directives
  uselistorder i32 %v2_206ef, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbxNS_8functionIFbxEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_20710:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20710 = load i32, i32* %edi.global-to-local, align 4
  %v0_20711 = load i32, i32* %esi.global-to-local, align 4
  %v0_20712 = load i32, i32* %ebx.global-to-local, align 4
  %v0_20716 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20726 = add i32 %arg1, 12
  %v2_20726 = inttoptr i32 %v1_20726 to i32*
  %v3_20726 = load i32, i32* %v2_20726, align 4
  store i32 %v3_20726, i32* %edi.global-to-local, align 4
  %v1_20729 = icmp eq i32 %v3_20726, 0
  br i1 %v1_20729, label %bb, label %dec_label_pc_2072d

bb:                                               ; preds = %dec_label_pc_20710
  %v5_2072b = call i32 @function_20780(i32 %v0_20716, i32 %v0_20712, i32 %v0_20711, i32 %v0_20710)
  br label %dec_label_pc_2072d

dec_label_pc_2072d:                               ; preds = %bb, %dec_label_pc_20710
  %v1_2072d = add i32 %v3_20726, 16
  %v2_2072d = inttoptr i32 %v1_2072d to i32*
  %v3_2072d = load i32, i32* %v2_2072d, align 4
  %v1_20734 = add i32 %v3_20726, 8
  %v2_2073a = call i32 @unknown_40d40(i32 %v1_20734, i32 %v3_2072d)
  %v1_2073f = inttoptr i32 %v3_20726 to i32*
  %v2_2073f = load i32, i32* %v1_2073f, align 4
  store i32 %v2_2073f, i32* %ebx.global-to-local, align 4
  %v12_20741 = icmp eq i32 %v2_2073f, %v3_20726
  %v1_20743 = icmp eq i1 %v12_20741, false
  br i1 %v1_20743, label %dec_label_pc_2074a, label %dec_label_pc_20745

dec_label_pc_20745:                               ; preds = %dec_label_pc_2072d
  %v0_20745 = call i32 @function_20763()
  ret i32 %v0_20745

dec_label_pc_2074a:                               ; preds = %dec_label_pc_2072d
  %v1_2074a = inttoptr i32 %v2_2073f to i32*
  %v2_2074a = load i32, i32* %v1_2074a, align 4
  store i32 %v2_2074a, i32* %esi.global-to-local, align 4
  %v1_2074c = add i32 %v2_2073f, 12
  store i32 %v1_2074c, i32* @eax, align 4
  %v1_20752 = call i32 @function_34170(i32 %v1_2074c)
  ret i32 %v1_20752

; uselistorder directives
  uselistorder i32 %v2_2073f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_20726, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_20763() local_unnamed_addr {
dec_label_pc_20763:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_20767 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20767 = xor i32 %v1_20767, %tmp9
  %v3_20767 = icmp eq i32 %v2_20767, 0
  store i32 %v2_20767, i32* @eax, align 4
  %v1_2076e = icmp eq i1 %v3_20767, false
  br i1 %v1_2076e, label %bb, label %dec_label_pc_20770

bb:                                               ; preds = %dec_label_pc_20763
  %v2_2076e = call i32 @function_20794()
  br label %dec_label_pc_20770

dec_label_pc_20770:                               ; preds = %bb, %dec_label_pc_20763
  %v5_20779 = phi i32 [ %v2_2076e, %bb ], [ %v2_20767, %dec_label_pc_20763 ]
  ret i32 %v5_20779
}

define i32 @function_20780(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20780:
  %v1_20784 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20784 = xor i32 %v1_20784, %arg1
  %v3_20784 = icmp eq i32 %v2_20784, 0
  store i32 %v2_20784, i32* @eax, align 4
  %v1_2078b = icmp eq i1 %v3_20784, false
  br i1 %v1_2078b, label %bb, label %dec_label_pc_2078d

bb:                                               ; preds = %dec_label_pc_20780
  %v2_2078b = call i32 @function_20794()
  br label %dec_label_pc_2078d

dec_label_pc_2078d:                               ; preds = %bb, %dec_label_pc_20780
  %v0_20793 = phi i32 [ %v2_2078b, %bb ], [ %v2_20784, %dec_label_pc_20780 ]
  ret i32 %v0_20793

; uselistorder directives
  uselistorder i32 ()* @function_20794, { 1, 0 }
}

define i32 @function_20794() local_unnamed_addr {
dec_label_pc_20794:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_207a0:
  %v1_207b4 = icmp eq i32 %arg1, 0
  br i1 %v1_207b4, label %bb, label %dec_label_pc_207b8

bb:                                               ; preds = %dec_label_pc_207a0
  %v0_207a8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_207b6 = call i32 @function_207e8(i32 %v0_207a8)
  br label %dec_label_pc_207b8

dec_label_pc_207b8:                               ; preds = %bb, %dec_label_pc_207a0
  %v1_207b8 = add i32 %arg1, 12
  ret i32 %v1_207b8
}

define i32 @function_207e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_207e8:
  %v1_207ec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_207ec = xor i32 %v1_207ec, %arg1
  %v3_207ec = icmp eq i32 %v2_207ec, 0
  %v1_207f3 = icmp eq i1 %v3_207ec, false
  br i1 %v1_207f3, label %dec_label_pc_207fa, label %dec_label_pc_207f5

dec_label_pc_207f5:                               ; preds = %dec_label_pc_207e8
  ret i32 %v2_207ec

dec_label_pc_207fa:                               ; preds = %dec_label_pc_207e8
  ret i32 %v2_207ec

; uselistorder directives
  uselistorder i32 %v2_207ec, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20810:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20810 = load i32, i32* %edi.global-to-local, align 4
  %v0_20811 = load i32, i32* %esi.global-to-local, align 4
  %v0_20812 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_2081a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_2082a = icmp eq i32 %arg2, 0
  %v1_2082c = icmp eq i1 %v1_2082a, false
  br i1 %v1_2082c, label %dec_label_pc_20832, label %dec_label_pc_2082e

dec_label_pc_2082e:                               ; preds = %dec_label_pc_20810
  %v4_2082e = call i32 @function_2085a(i32 %v0_2081a, i32 %v0_20812, i32 %v0_20811, i32 %v0_20810)
  store i32 %v4_2082e, i32* %eax.global-to-local, align 4
  ret i32 %v4_2082e

dec_label_pc_20832:                               ; preds = %dec_label_pc_20810
  %v1_20832 = add i32 %arg2, 12
  %v2_20832 = inttoptr i32 %v1_20832 to i32*
  %v3_20832 = load i32, i32* %v2_20832, align 4
  store i32 %v3_20832, i32* %eax.global-to-local, align 4
  %v2_2083c = call i32 @unknown_41020(i32 %arg1, i32 %v3_20832)
  store i32 %v2_2083c, i32* %eax.global-to-local, align 4
  %v1_20841 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_20841 = inttoptr i32 %v1_20841 to i32*
  %v3_20841 = load i32, i32* %v2_20841, align 4
  store i32 %v3_20841, i32* %esi.global-to-local, align 4
  %v1_20844 = add i32 %arg2, 20
  %v2_20844 = inttoptr i32 %v1_20844 to i8*
  %v3_20844 = load i8, i8* %v2_20844, align 1
  %v10_20844 = icmp eq i8 %v3_20844, 0
  br i1 %v10_20844, label %dec_label_pc_2084e, label %dec_label_pc_2084a

dec_label_pc_2084a:                               ; preds = %dec_label_pc_20832
  store i8 0, i8* %v2_20844, align 1
  %v3_2084e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2084e

dec_label_pc_2084e:                               ; preds = %dec_label_pc_2084a, %dec_label_pc_20832
  %v3_2084e = phi i32 [ %v3_2084e.pre, %dec_label_pc_2084a ], [ %v2_2083c, %dec_label_pc_20832 ]
  ret i32 %v3_2084e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_2085a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2085a:
  %v1_2085e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2085e = xor i32 %v1_2085e, %arg1
  %v3_2085e = icmp eq i32 %v2_2085e, 0
  %v1_20865 = icmp eq i1 %v3_2085e, false
  br i1 %v1_20865, label %dec_label_pc_2086e, label %dec_label_pc_20867

dec_label_pc_20867:                               ; preds = %dec_label_pc_2085a
  ret i32 %v2_2085e

dec_label_pc_2086e:                               ; preds = %dec_label_pc_2085a
  ret i32 %v2_2085e

; uselistorder directives
  uselistorder i32 %v2_2085e, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_20880:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_20896 = add i32 %tmp99, 16
  %v2_20896 = inttoptr i32 %v1_20896 to i32*
  %v3_20896 = load i32, i32* %v2_20896, align 4
  %v1_2089d = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_208a3 = call i32 @unknown_41090(i32 %v1_2089d, i32 %v3_20896)
  %v2_208a8 = load i32, i32* %arg1, align 4
  %v12_208aa = icmp eq i32 %v2_208a8, %tmp99
  %v1_208ac = icmp eq i1 %v12_208aa, false
  br i1 %v1_208ac, label %dec_label_pc_208b2, label %dec_label_pc_208ae

dec_label_pc_208ae:                               ; preds = %dec_label_pc_20880
  %v0_208ae = call i32 @function_208cb()
  ret i32 %v0_208ae

dec_label_pc_208b2:                               ; preds = %dec_label_pc_20880
  %v1_208b4 = add i32 %v2_208a8, 12
  store i32 %v1_208b4, i32* @eax, align 4
  %v2_208ba = call i32 @function_342e0(i32 %v1_208b4)
  ret i32 %v2_208ba

; uselistorder directives
  uselistorder i32 %v2_208a8, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_208cb() local_unnamed_addr {
dec_label_pc_208cb:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_208cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_208cf = xor i32 %v1_208cf, %tmp4
  %v3_208cf = icmp eq i32 %v2_208cf, 0
  %v1_208d6 = icmp eq i1 %v3_208cf, false
  br i1 %v1_208d6, label %dec_label_pc_208df, label %dec_label_pc_208d8

dec_label_pc_208d8:                               ; preds = %dec_label_pc_208cb
  ret i32 %v2_208cf

dec_label_pc_208df:                               ; preds = %dec_label_pc_208cb
  ret i32 %v2_208cf

; uselistorder directives
  uselistorder i32 %v2_208cf, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvRKSsNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_208f0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_208f0 = load i32, i32* %edi.global-to-local, align 4
  %v0_208f1 = load i32, i32* %esi.global-to-local, align 4
  %v0_208f2 = load i32, i32* %ebx.global-to-local, align 4
  %v0_208f6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20906 = add i32 %arg1, 12
  %v2_20906 = inttoptr i32 %v1_20906 to i32*
  %v3_20906 = load i32, i32* %v2_20906, align 4
  store i32 %v3_20906, i32* %edi.global-to-local, align 4
  %v1_20909 = icmp eq i32 %v3_20906, 0
  br i1 %v1_20909, label %bb, label %dec_label_pc_2090d

bb:                                               ; preds = %dec_label_pc_208f0
  %v5_2090b = call i32 @function_20960(i32 %v0_208f6, i32 %v0_208f2, i32 %v0_208f1, i32 %v0_208f0)
  br label %dec_label_pc_2090d

dec_label_pc_2090d:                               ; preds = %bb, %dec_label_pc_208f0
  %v1_2090d = add i32 %v3_20906, 16
  %v2_2090d = inttoptr i32 %v1_2090d to i32*
  %v3_2090d = load i32, i32* %v2_2090d, align 4
  %v1_20914 = add i32 %v3_20906, 8
  %v2_2091a = call i32 @unknown_41100(i32 %v1_20914, i32 %v3_2090d)
  %v1_2091f = inttoptr i32 %v3_20906 to i32*
  %v2_2091f = load i32, i32* %v1_2091f, align 4
  store i32 %v2_2091f, i32* %ebx.global-to-local, align 4
  %v12_20921 = icmp eq i32 %v2_2091f, %v3_20906
  %v1_20923 = icmp eq i1 %v12_20921, false
  br i1 %v1_20923, label %dec_label_pc_2092a, label %dec_label_pc_20925

dec_label_pc_20925:                               ; preds = %dec_label_pc_2090d
  %v0_20925 = call i32 @function_20943()
  ret i32 %v0_20925

dec_label_pc_2092a:                               ; preds = %dec_label_pc_2090d
  %v1_2092a = inttoptr i32 %v2_2091f to i32*
  %v2_2092a = load i32, i32* %v1_2092a, align 4
  store i32 %v2_2092a, i32* %esi.global-to-local, align 4
  %v1_2092c = add i32 %v2_2091f, 12
  store i32 %v1_2092c, i32* @eax, align 4
  %v1_20932 = call i32 @function_34350(i32 %v1_2092c)
  ret i32 %v1_20932

; uselistorder directives
  uselistorder i32 %v2_2091f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_20906, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_20943() local_unnamed_addr {
dec_label_pc_20943:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_20947 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20947 = xor i32 %v1_20947, %tmp9
  %v3_20947 = icmp eq i32 %v2_20947, 0
  store i32 %v2_20947, i32* @eax, align 4
  %v1_2094e = icmp eq i1 %v3_20947, false
  br i1 %v1_2094e, label %bb, label %dec_label_pc_20950

bb:                                               ; preds = %dec_label_pc_20943
  %v2_2094e = call i32 @function_20974()
  br label %dec_label_pc_20950

dec_label_pc_20950:                               ; preds = %bb, %dec_label_pc_20943
  %v5_20959 = phi i32 [ %v2_2094e, %bb ], [ %v2_20947, %dec_label_pc_20943 ]
  ret i32 %v5_20959
}

define i32 @function_20960(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20960:
  %v1_20964 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20964 = xor i32 %v1_20964, %arg1
  %v3_20964 = icmp eq i32 %v2_20964, 0
  store i32 %v2_20964, i32* @eax, align 4
  %v1_2096b = icmp eq i1 %v3_20964, false
  br i1 %v1_2096b, label %bb, label %dec_label_pc_2096d

bb:                                               ; preds = %dec_label_pc_20960
  %v2_2096b = call i32 @function_20974()
  br label %dec_label_pc_2096d

dec_label_pc_2096d:                               ; preds = %bb, %dec_label_pc_20960
  %v0_20973 = phi i32 [ %v2_2096b, %bb ], [ %v2_20964, %dec_label_pc_20960 ]
  ret i32 %v0_20973

; uselistorder directives
  uselistorder i32 ()* @function_20974, { 1, 0 }
}

define i32 @function_20974() local_unnamed_addr {
dec_label_pc_20974:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20980:
  %v1_20994 = icmp eq i32 %arg1, 0
  br i1 %v1_20994, label %bb, label %dec_label_pc_20998

bb:                                               ; preds = %dec_label_pc_20980
  %v0_20988 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20996 = call i32 @function_209c8(i32 %v0_20988)
  br label %dec_label_pc_20998

dec_label_pc_20998:                               ; preds = %bb, %dec_label_pc_20980
  %v1_20998 = add i32 %arg1, 12
  ret i32 %v1_20998
}

define i32 @function_209c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_209c8:
  %v1_209cc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_209cc = xor i32 %v1_209cc, %arg1
  %v3_209cc = icmp eq i32 %v2_209cc, 0
  %v1_209d3 = icmp eq i1 %v3_209cc, false
  br i1 %v1_209d3, label %dec_label_pc_209da, label %dec_label_pc_209d5

dec_label_pc_209d5:                               ; preds = %dec_label_pc_209c8
  ret i32 %v2_209cc

dec_label_pc_209da:                               ; preds = %dec_label_pc_209c8
  ret i32 %v2_209cc

; uselistorder directives
  uselistorder i32 %v2_209cc, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_209f0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_209f0 = load i32, i32* %edi.global-to-local, align 4
  %v0_209f1 = load i32, i32* %esi.global-to-local, align 4
  %v0_209f2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_209fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_20a0a = icmp eq i32 %arg2, 0
  %v1_20a0c = icmp eq i1 %v1_20a0a, false
  br i1 %v1_20a0c, label %dec_label_pc_20a12, label %dec_label_pc_20a0e

dec_label_pc_20a0e:                               ; preds = %dec_label_pc_209f0
  %v4_20a0e = call i32 @function_20a3a(i32 %v0_209fa, i32 %v0_209f2, i32 %v0_209f1, i32 %v0_209f0)
  store i32 %v4_20a0e, i32* %eax.global-to-local, align 4
  ret i32 %v4_20a0e

dec_label_pc_20a12:                               ; preds = %dec_label_pc_209f0
  %v1_20a12 = add i32 %arg2, 12
  %v2_20a12 = inttoptr i32 %v1_20a12 to i32*
  %v3_20a12 = load i32, i32* %v2_20a12, align 4
  store i32 %v3_20a12, i32* %eax.global-to-local, align 4
  %v2_20a1c = call i32 @unknown_413e0(i32 %arg1, i32 %v3_20a12)
  store i32 %v2_20a1c, i32* %eax.global-to-local, align 4
  %v1_20a21 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_20a21 = inttoptr i32 %v1_20a21 to i32*
  %v3_20a21 = load i32, i32* %v2_20a21, align 4
  store i32 %v3_20a21, i32* %esi.global-to-local, align 4
  %v1_20a24 = add i32 %arg2, 20
  %v2_20a24 = inttoptr i32 %v1_20a24 to i8*
  %v3_20a24 = load i8, i8* %v2_20a24, align 1
  %v10_20a24 = icmp eq i8 %v3_20a24, 0
  br i1 %v10_20a24, label %dec_label_pc_20a2e, label %dec_label_pc_20a2a

dec_label_pc_20a2a:                               ; preds = %dec_label_pc_20a12
  store i8 0, i8* %v2_20a24, align 1
  %v3_20a2e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20a2e

dec_label_pc_20a2e:                               ; preds = %dec_label_pc_20a2a, %dec_label_pc_20a12
  %v3_20a2e = phi i32 [ %v3_20a2e.pre, %dec_label_pc_20a2a ], [ %v2_20a1c, %dec_label_pc_20a12 ]
  ret i32 %v3_20a2e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_20a3a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20a3a:
  %v1_20a3e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20a3e = xor i32 %v1_20a3e, %arg1
  %v3_20a3e = icmp eq i32 %v2_20a3e, 0
  %v1_20a45 = icmp eq i1 %v3_20a3e, false
  br i1 %v1_20a45, label %dec_label_pc_20a4e, label %dec_label_pc_20a47

dec_label_pc_20a47:                               ; preds = %dec_label_pc_20a3a
  ret i32 %v2_20a3e

dec_label_pc_20a4e:                               ; preds = %dec_label_pc_20a3a
  ret i32 %v2_20a3e

; uselistorder directives
  uselistorder i32 %v2_20a3e, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_20a60:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_20a76 = add i32 %tmp99, 16
  %v2_20a76 = inttoptr i32 %v1_20a76 to i32*
  %v3_20a76 = load i32, i32* %v2_20a76, align 4
  %v1_20a7d = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_20a83 = call i32 @unknown_41450(i32 %v1_20a7d, i32 %v3_20a76)
  %v2_20a88 = load i32, i32* %arg1, align 4
  %v12_20a8a = icmp eq i32 %v2_20a88, %tmp99
  %v1_20a8c = icmp eq i1 %v12_20a8a, false
  br i1 %v1_20a8c, label %dec_label_pc_20a92, label %dec_label_pc_20a8e

dec_label_pc_20a8e:                               ; preds = %dec_label_pc_20a60
  %v0_20a8e = call i32 @function_20aab()
  ret i32 %v0_20a8e

dec_label_pc_20a92:                               ; preds = %dec_label_pc_20a60
  %v1_20a94 = add i32 %v2_20a88, 12
  store i32 %v1_20a94, i32* @eax, align 4
  %v2_20a9a = call i32 @function_344c0(i32 %v1_20a94)
  ret i32 %v2_20a9a

; uselistorder directives
  uselistorder i32 %v2_20a88, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_20aab() local_unnamed_addr {
dec_label_pc_20aab:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_20aaf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20aaf = xor i32 %v1_20aaf, %tmp4
  %v3_20aaf = icmp eq i32 %v2_20aaf, 0
  %v1_20ab6 = icmp eq i1 %v3_20aaf, false
  br i1 %v1_20ab6, label %dec_label_pc_20abf, label %dec_label_pc_20ab8

dec_label_pc_20ab8:                               ; preds = %dec_label_pc_20aab
  ret i32 %v2_20aaf

dec_label_pc_20abf:                               ; preds = %dec_label_pc_20aab
  ret i32 %v2_20aaf

; uselistorder directives
  uselistorder i32 %v2_20aaf, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_20ad0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20ad0 = load i32, i32* %edi.global-to-local, align 4
  %v0_20ad1 = load i32, i32* %esi.global-to-local, align 4
  %v0_20ad2 = load i32, i32* %ebx.global-to-local, align 4
  %v0_20ad6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20ae6 = add i32 %arg1, 12
  %v2_20ae6 = inttoptr i32 %v1_20ae6 to i32*
  %v3_20ae6 = load i32, i32* %v2_20ae6, align 4
  store i32 %v3_20ae6, i32* %edi.global-to-local, align 4
  %v1_20ae9 = icmp eq i32 %v3_20ae6, 0
  br i1 %v1_20ae9, label %bb, label %dec_label_pc_20aed

bb:                                               ; preds = %dec_label_pc_20ad0
  %v5_20aeb = call i32 @function_20b40(i32 %v0_20ad6, i32 %v0_20ad2, i32 %v0_20ad1, i32 %v0_20ad0)
  br label %dec_label_pc_20aed

dec_label_pc_20aed:                               ; preds = %bb, %dec_label_pc_20ad0
  %v1_20aed = add i32 %v3_20ae6, 16
  %v2_20aed = inttoptr i32 %v1_20aed to i32*
  %v3_20aed = load i32, i32* %v2_20aed, align 4
  %v1_20af4 = add i32 %v3_20ae6, 8
  %v2_20afa = call i32 @unknown_414c0(i32 %v1_20af4, i32 %v3_20aed)
  %v1_20aff = inttoptr i32 %v3_20ae6 to i32*
  %v2_20aff = load i32, i32* %v1_20aff, align 4
  store i32 %v2_20aff, i32* %ebx.global-to-local, align 4
  %v12_20b01 = icmp eq i32 %v2_20aff, %v3_20ae6
  %v1_20b03 = icmp eq i1 %v12_20b01, false
  br i1 %v1_20b03, label %dec_label_pc_20b0a, label %dec_label_pc_20b05

dec_label_pc_20b05:                               ; preds = %dec_label_pc_20aed
  %v0_20b05 = call i32 @function_20b23()
  ret i32 %v0_20b05

dec_label_pc_20b0a:                               ; preds = %dec_label_pc_20aed
  %v1_20b0a = inttoptr i32 %v2_20aff to i32*
  %v2_20b0a = load i32, i32* %v1_20b0a, align 4
  store i32 %v2_20b0a, i32* %esi.global-to-local, align 4
  %v1_20b0c = add i32 %v2_20aff, 12
  store i32 %v1_20b0c, i32* @eax, align 4
  %v1_20b12 = call i32 @function_34530(i32 %v1_20b0c)
  ret i32 %v1_20b12

; uselistorder directives
  uselistorder i32 %v2_20aff, { 2, 1, 0, 3 }
  uselistorder i32 %v3_20ae6, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
}

define i32 @function_20b23() local_unnamed_addr {
dec_label_pc_20b23:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_20b27 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20b27 = xor i32 %v1_20b27, %tmp9
  %v3_20b27 = icmp eq i32 %v2_20b27, 0
  store i32 %v2_20b27, i32* @eax, align 4
  %v1_20b2e = icmp eq i1 %v3_20b27, false
  br i1 %v1_20b2e, label %bb, label %dec_label_pc_20b30

bb:                                               ; preds = %dec_label_pc_20b23
  %v2_20b2e = call i32 @function_20b54()
  br label %dec_label_pc_20b30

dec_label_pc_20b30:                               ; preds = %bb, %dec_label_pc_20b23
  %v5_20b39 = phi i32 [ %v2_20b2e, %bb ], [ %v2_20b27, %dec_label_pc_20b23 ]
  ret i32 %v5_20b39
}

define i32 @function_20b40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20b40:
  %v1_20b44 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20b44 = xor i32 %v1_20b44, %arg1
  %v3_20b44 = icmp eq i32 %v2_20b44, 0
  store i32 %v2_20b44, i32* @eax, align 4
  %v1_20b4b = icmp eq i1 %v3_20b44, false
  br i1 %v1_20b4b, label %bb, label %dec_label_pc_20b4d

bb:                                               ; preds = %dec_label_pc_20b40
  %v2_20b4b = call i32 @function_20b54()
  br label %dec_label_pc_20b4d

dec_label_pc_20b4d:                               ; preds = %bb, %dec_label_pc_20b40
  %v0_20b53 = phi i32 [ %v2_20b4b, %bb ], [ %v2_20b44, %dec_label_pc_20b40 ]
  ret i32 %v0_20b53

; uselistorder directives
  uselistorder i32 ()* @function_20b54, { 1, 0 }
}

define i32 @function_20b54() local_unnamed_addr {
dec_label_pc_20b54:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b60:
  %v1_20b74 = icmp eq i32 %arg1, 0
  br i1 %v1_20b74, label %bb, label %dec_label_pc_20b78

bb:                                               ; preds = %dec_label_pc_20b60
  %v0_20b68 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20b76 = call i32 @function_20ba8(i32 %v0_20b68)
  br label %dec_label_pc_20b78

dec_label_pc_20b78:                               ; preds = %bb, %dec_label_pc_20b60
  %v1_20b78 = add i32 %arg1, 12
  ret i32 %v1_20b78
}

define i32 @function_20ba8(i32 %arg1) local_unnamed_addr {
dec_label_pc_20ba8:
  %v1_20bac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20bac = xor i32 %v1_20bac, %arg1
  %v3_20bac = icmp eq i32 %v2_20bac, 0
  %v1_20bb3 = icmp eq i1 %v3_20bac, false
  br i1 %v1_20bb3, label %dec_label_pc_20bba, label %dec_label_pc_20bb5

dec_label_pc_20bb5:                               ; preds = %dec_label_pc_20ba8
  ret i32 %v2_20bac

dec_label_pc_20bba:                               ; preds = %dec_label_pc_20ba8
  ret i32 %v2_20bac

; uselistorder directives
  uselistorder i32 %v2_20bac, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot0IvNS1_8functionIFvvEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20bd0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20bd0 = load i32, i32* %edi.global-to-local, align 4
  %v0_20bd1 = load i32, i32* %esi.global-to-local, align 4
  %v0_20bd2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_20bda = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_20bea = icmp eq i32 %arg2, 0
  %v1_20bec = icmp eq i1 %v1_20bea, false
  br i1 %v1_20bec, label %dec_label_pc_20bf2, label %dec_label_pc_20bee

dec_label_pc_20bee:                               ; preds = %dec_label_pc_20bd0
  %v4_20bee = call i32 @function_20c1a(i32 %v0_20bda, i32 %v0_20bd2, i32 %v0_20bd1, i32 %v0_20bd0)
  store i32 %v4_20bee, i32* %eax.global-to-local, align 4
  ret i32 %v4_20bee

dec_label_pc_20bf2:                               ; preds = %dec_label_pc_20bd0
  %v1_20bf2 = add i32 %arg2, 12
  %v2_20bf2 = inttoptr i32 %v1_20bf2 to i32*
  %v3_20bf2 = load i32, i32* %v2_20bf2, align 4
  store i32 %v3_20bf2, i32* %eax.global-to-local, align 4
  %v2_20bfc = call i32 @unknown_417a0(i32 %arg1, i32 %v3_20bf2)
  store i32 %v2_20bfc, i32* %eax.global-to-local, align 4
  %v1_20c01 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_20c01 = inttoptr i32 %v1_20c01 to i32*
  %v3_20c01 = load i32, i32* %v2_20c01, align 4
  store i32 %v3_20c01, i32* %esi.global-to-local, align 4
  %v1_20c04 = add i32 %arg2, 20
  %v2_20c04 = inttoptr i32 %v1_20c04 to i8*
  %v3_20c04 = load i8, i8* %v2_20c04, align 1
  %v10_20c04 = icmp eq i8 %v3_20c04, 0
  br i1 %v10_20c04, label %dec_label_pc_20c0e, label %dec_label_pc_20c0a

dec_label_pc_20c0a:                               ; preds = %dec_label_pc_20bf2
  store i8 0, i8* %v2_20c04, align 1
  %v3_20c0e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20c0e

dec_label_pc_20c0e:                               ; preds = %dec_label_pc_20c0a, %dec_label_pc_20bf2
  %v3_20c0e = phi i32 [ %v3_20c0e.pre, %dec_label_pc_20c0a ], [ %v2_20bfc, %dec_label_pc_20bf2 ]
  ret i32 %v3_20c0e

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_20c1a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20c1a:
  %v1_20c1e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20c1e = xor i32 %v1_20c1e, %arg1
  %v3_20c1e = icmp eq i32 %v2_20c1e, 0
  %v1_20c25 = icmp eq i1 %v3_20c1e, false
  br i1 %v1_20c25, label %dec_label_pc_20c2e, label %dec_label_pc_20c27

dec_label_pc_20c27:                               ; preds = %dec_label_pc_20c1a
  ret i32 %v2_20c1e

dec_label_pc_20c2e:                               ; preds = %dec_label_pc_20c1a
  ret i32 %v2_20c1e

; uselistorder directives
  uselistorder i32 %v2_20c1e, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot0IvNS_8functionIFvvEEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_20c40:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_20c56 = add i32 %tmp99, 16
  %v2_20c56 = inttoptr i32 %v1_20c56 to i32*
  %v3_20c56 = load i32, i32* %v2_20c56, align 4
  %v1_20c5d = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_20c63 = call i32 @unknown_41810(i32 %v1_20c5d, i32 %v3_20c56)
  %v2_20c68 = load i32, i32* %arg1, align 4
  %v12_20c6a = icmp eq i32 %v2_20c68, %tmp99
  %v1_20c6c = icmp eq i1 %v12_20c6a, false
  br i1 %v1_20c6c, label %dec_label_pc_20c72, label %dec_label_pc_20c6e

dec_label_pc_20c6e:                               ; preds = %dec_label_pc_20c40
  %v0_20c6e = call i32 @function_20c8b()
  ret i32 %v0_20c6e

dec_label_pc_20c72:                               ; preds = %dec_label_pc_20c40
  %v1_20c74 = add i32 %v2_20c68, 12
  store i32 %v1_20c74, i32* @eax, align 4
  %v2_20c7a = call i32 @function_346a0(i32 %v1_20c74)
  ret i32 %v2_20c7a

; uselistorder directives
  uselistorder i32 %v2_20c68, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_20c8b() local_unnamed_addr {
dec_label_pc_20c8b:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_20c8f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20c8f = xor i32 %v1_20c8f, %tmp4
  %v3_20c8f = icmp eq i32 %v2_20c8f, 0
  %v1_20c96 = icmp eq i1 %v3_20c8f, false
  br i1 %v1_20c96, label %dec_label_pc_20c9f, label %dec_label_pc_20c98

dec_label_pc_20c98:                               ; preds = %dec_label_pc_20c8b
  ret i32 %v2_20c8f

dec_label_pc_20c9f:                               ; preds = %dec_label_pc_20c8b
  ret i32 %v2_20c8f

; uselistorder directives
  uselistorder i32 %v2_20c8f, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot0IvNS_8functionIFvvEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_20cb0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20cb0 = load i32, i32* %edi.global-to-local, align 4
  %v0_20cb1 = load i32, i32* %esi.global-to-local, align 4
  %v0_20cb2 = load i32, i32* %ebx.global-to-local, align 4
  %v0_20cb6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20cc6 = add i32 %arg1, 12
  %v2_20cc6 = inttoptr i32 %v1_20cc6 to i32*
  %v3_20cc6 = load i32, i32* %v2_20cc6, align 4
  store i32 %v3_20cc6, i32* %edi.global-to-local, align 4
  %v1_20cc9 = icmp eq i32 %v3_20cc6, 0
  br i1 %v1_20cc9, label %bb, label %dec_label_pc_20ccd

bb:                                               ; preds = %dec_label_pc_20cb0
  %v5_20ccb = call i32 @function_20d20(i32 %v0_20cb6, i32 %v0_20cb2, i32 %v0_20cb1, i32 %v0_20cb0)
  br label %dec_label_pc_20ccd

dec_label_pc_20ccd:                               ; preds = %bb, %dec_label_pc_20cb0
  %v1_20ccd = add i32 %v3_20cc6, 16
  %v2_20ccd = inttoptr i32 %v1_20ccd to i32*
  %v3_20ccd = load i32, i32* %v2_20ccd, align 4
  %v1_20cd4 = add i32 %v3_20cc6, 8
  %v2_20cda = call i32 @unknown_41880(i32 %v1_20cd4, i32 %v3_20ccd)
  %v1_20cdf = inttoptr i32 %v3_20cc6 to i32*
  %v2_20cdf = load i32, i32* %v1_20cdf, align 4
  store i32 %v2_20cdf, i32* %ebx.global-to-local, align 4
  %v12_20ce1 = icmp eq i32 %v2_20cdf, %v3_20cc6
  %v1_20ce3 = icmp eq i1 %v12_20ce1, false
  br i1 %v1_20ce3, label %dec_label_pc_20cea, label %dec_label_pc_20ce5

dec_label_pc_20ce5:                               ; preds = %dec_label_pc_20ccd
  %v0_20ce5 = call i32 @function_20d03()
  ret i32 %v0_20ce5

dec_label_pc_20cea:                               ; preds = %dec_label_pc_20ccd
  %v1_20cea = inttoptr i32 %v2_20cdf to i32*
  %v2_20cea = load i32, i32* %v1_20cea, align 4
  store i32 %v2_20cea, i32* %esi.global-to-local, align 4
  %v1_20cec = add i32 %v2_20cdf, 12
  store i32 %v1_20cec, i32* @eax, align 4
  %v1_20cf2 = call i32 @function_34710(i32 %v1_20cec)
  ret i32 %v1_20cf2

; uselistorder directives
  uselistorder i32 %v2_20cdf, { 2, 1, 0, 3 }
  uselistorder i32 %v3_20cc6, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %esi.global-to-local, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 1, 0 }
}

define i32 @function_20d03() local_unnamed_addr {
dec_label_pc_20d03:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_20d07 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20d07 = xor i32 %v1_20d07, %tmp9
  %v3_20d07 = icmp eq i32 %v2_20d07, 0
  store i32 %v2_20d07, i32* @eax, align 4
  %v1_20d0e = icmp eq i1 %v3_20d07, false
  br i1 %v1_20d0e, label %bb, label %dec_label_pc_20d10

bb:                                               ; preds = %dec_label_pc_20d03
  %v2_20d0e = call i32 @function_20d34()
  br label %dec_label_pc_20d10

dec_label_pc_20d10:                               ; preds = %bb, %dec_label_pc_20d03
  %v5_20d19 = phi i32 [ %v2_20d0e, %bb ], [ %v2_20d07, %dec_label_pc_20d03 ]
  ret i32 %v5_20d19
}

define i32 @function_20d20(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20d20:
  %v1_20d24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20d24 = xor i32 %v1_20d24, %arg1
  %v3_20d24 = icmp eq i32 %v2_20d24, 0
  store i32 %v2_20d24, i32* @eax, align 4
  %v1_20d2b = icmp eq i1 %v3_20d24, false
  br i1 %v1_20d2b, label %bb, label %dec_label_pc_20d2d

bb:                                               ; preds = %dec_label_pc_20d20
  %v2_20d2b = call i32 @function_20d34()
  br label %dec_label_pc_20d2d

dec_label_pc_20d2d:                               ; preds = %bb, %dec_label_pc_20d20
  %v0_20d33 = phi i32 [ %v2_20d2b, %bb ], [ %v2_20d24, %dec_label_pc_20d20 ]
  ret i32 %v0_20d33

; uselistorder directives
  uselistorder i32 ()* @function_20d34, { 1, 0 }
}

define i32 @function_20d34() local_unnamed_addr {
dec_label_pc_20d34:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal0_implIvNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS8_IFvRKNS1_10connectionEEEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d40:
  %v1_20d54 = icmp eq i32 %arg1, 0
  br i1 %v1_20d54, label %bb, label %dec_label_pc_20d58

bb:                                               ; preds = %dec_label_pc_20d40
  %v0_20d48 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20d56 = call i32 @function_20d88(i32 %v0_20d48)
  br label %dec_label_pc_20d58

dec_label_pc_20d58:                               ; preds = %bb, %dec_label_pc_20d40
  %v1_20d58 = add i32 %arg1, 12
  ret i32 %v1_20d58
}

define i32 @function_20d88(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d88:
  %v1_20d8c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20d8c = xor i32 %v1_20d8c, %arg1
  %v3_20d8c = icmp eq i32 %v2_20d8c, 0
  %v1_20d93 = icmp eq i1 %v3_20d8c, false
  br i1 %v1_20d93, label %dec_label_pc_20d9a, label %dec_label_pc_20d95

dec_label_pc_20d95:                               ; preds = %dec_label_pc_20d88
  ret i32 %v2_20d8c

dec_label_pc_20d9a:                               ; preds = %dec_label_pc_20d88
  ret i32 %v2_20d8c

; uselistorder directives
  uselistorder i32 %v2_20d8c, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20db0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20db0 = load i32, i32* %edi.global-to-local, align 4
  %v0_20db1 = load i32, i32* %esi.global-to-local, align 4
  %v0_20db2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_20dba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_20dca = icmp eq i32 %arg2, 0
  %v1_20dcc = icmp eq i1 %v1_20dca, false
  br i1 %v1_20dcc, label %dec_label_pc_20dd2, label %dec_label_pc_20dce

dec_label_pc_20dce:                               ; preds = %dec_label_pc_20db0
  %v4_20dce = call i32 @function_20dfa(i32 %v0_20dba, i32 %v0_20db2, i32 %v0_20db1, i32 %v0_20db0)
  store i32 %v4_20dce, i32* %eax.global-to-local, align 4
  ret i32 %v4_20dce

dec_label_pc_20dd2:                               ; preds = %dec_label_pc_20db0
  %v1_20dd2 = add i32 %arg2, 12
  %v2_20dd2 = inttoptr i32 %v1_20dd2 to i32*
  %v3_20dd2 = load i32, i32* %v2_20dd2, align 4
  store i32 %v3_20dd2, i32* %eax.global-to-local, align 4
  %v2_20ddc = call i32 @unknown_41b60(i32 %arg1, i32 %v3_20dd2)
  store i32 %v2_20ddc, i32* %eax.global-to-local, align 4
  %v1_20de1 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_20de1 = inttoptr i32 %v1_20de1 to i32*
  %v3_20de1 = load i32, i32* %v2_20de1, align 4
  store i32 %v3_20de1, i32* %esi.global-to-local, align 4
  %v1_20de4 = add i32 %arg2, 20
  %v2_20de4 = inttoptr i32 %v1_20de4 to i8*
  %v3_20de4 = load i8, i8* %v2_20de4, align 1
  %v10_20de4 = icmp eq i8 %v3_20de4, 0
  br i1 %v10_20de4, label %dec_label_pc_20dee, label %dec_label_pc_20dea

dec_label_pc_20dea:                               ; preds = %dec_label_pc_20dd2
  store i8 0, i8* %v2_20de4, align 1
  %v3_20dee.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20dee

dec_label_pc_20dee:                               ; preds = %dec_label_pc_20dea, %dec_label_pc_20dd2
  %v3_20dee = phi i32 [ %v3_20dee.pre, %dec_label_pc_20dea ], [ %v2_20ddc, %dec_label_pc_20dd2 ]
  ret i32 %v3_20dee

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_20dfa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20dfa:
  %v1_20dfe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20dfe = xor i32 %v1_20dfe, %arg1
  %v3_20dfe = icmp eq i32 %v2_20dfe, 0
  %v1_20e05 = icmp eq i1 %v3_20dfe, false
  br i1 %v1_20e05, label %dec_label_pc_20e0e, label %dec_label_pc_20e07

dec_label_pc_20e07:                               ; preds = %dec_label_pc_20dfa
  ret i32 %v2_20dfe

dec_label_pc_20e0e:                               ; preds = %dec_label_pc_20dfa
  ret i32 %v2_20dfe

; uselistorder directives
  uselistorder i32 %v2_20dfe, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviNS_8functionIFviEEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_20e20:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_20e36 = add i32 %tmp99, 16
  %v2_20e36 = inttoptr i32 %v1_20e36 to i32*
  %v3_20e36 = load i32, i32* %v2_20e36, align 4
  %v1_20e3d = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_20e43 = call i32 @unknown_41bd0(i32 %v1_20e3d, i32 %v3_20e36)
  %v2_20e48 = load i32, i32* %arg1, align 4
  %v12_20e4a = icmp eq i32 %v2_20e48, %tmp99
  %v1_20e4c = icmp eq i1 %v12_20e4a, false
  br i1 %v1_20e4c, label %dec_label_pc_20e52, label %dec_label_pc_20e4e

dec_label_pc_20e4e:                               ; preds = %dec_label_pc_20e20
  %v0_20e4e = call i32 @function_20e6b()
  ret i32 %v0_20e4e

dec_label_pc_20e52:                               ; preds = %dec_label_pc_20e20
  %v1_20e54 = add i32 %v2_20e48, 12
  store i32 %v1_20e54, i32* @eax, align 4
  %v2_20e5a = call i32 @function_34880(i32 %v1_20e54)
  ret i32 %v2_20e5a

; uselistorder directives
  uselistorder i32 %v2_20e48, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_20e6b() local_unnamed_addr {
dec_label_pc_20e6b:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_20e6f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20e6f = xor i32 %v1_20e6f, %tmp4
  %v3_20e6f = icmp eq i32 %v2_20e6f, 0
  %v1_20e76 = icmp eq i1 %v3_20e6f, false
  br i1 %v1_20e76, label %dec_label_pc_20e7f, label %dec_label_pc_20e78

dec_label_pc_20e78:                               ; preds = %dec_label_pc_20e6b
  ret i32 %v2_20e6f

dec_label_pc_20e7f:                               ; preds = %dec_label_pc_20e6b
  ret i32 %v2_20e6f

; uselistorder directives
  uselistorder i32 %v2_20e6f, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_20e90:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20e90 = load i32, i32* %edi.global-to-local, align 4
  %v0_20e91 = load i32, i32* %esi.global-to-local, align 4
  %v0_20e92 = load i32, i32* %ebx.global-to-local, align 4
  %v0_20e96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20ea6 = add i32 %arg1, 12
  %v2_20ea6 = inttoptr i32 %v1_20ea6 to i32*
  %v3_20ea6 = load i32, i32* %v2_20ea6, align 4
  store i32 %v3_20ea6, i32* %edi.global-to-local, align 4
  %v1_20ea9 = icmp eq i32 %v3_20ea6, 0
  br i1 %v1_20ea9, label %bb, label %dec_label_pc_20ead

bb:                                               ; preds = %dec_label_pc_20e90
  %v5_20eab = call i32 @function_20f00(i32 %v0_20e96, i32 %v0_20e92, i32 %v0_20e91, i32 %v0_20e90)
  br label %dec_label_pc_20ead

dec_label_pc_20ead:                               ; preds = %bb, %dec_label_pc_20e90
  %v1_20ead = add i32 %v3_20ea6, 16
  %v2_20ead = inttoptr i32 %v1_20ead to i32*
  %v3_20ead = load i32, i32* %v2_20ead, align 4
  %v1_20eb4 = add i32 %v3_20ea6, 8
  %v2_20eba = call i32 @unknown_41c40(i32 %v1_20eb4, i32 %v3_20ead)
  %v1_20ebf = inttoptr i32 %v3_20ea6 to i32*
  %v2_20ebf = load i32, i32* %v1_20ebf, align 4
  store i32 %v2_20ebf, i32* %ebx.global-to-local, align 4
  %v12_20ec1 = icmp eq i32 %v2_20ebf, %v3_20ea6
  %v1_20ec3 = icmp eq i1 %v12_20ec1, false
  br i1 %v1_20ec3, label %dec_label_pc_20eca, label %dec_label_pc_20ec5

dec_label_pc_20ec5:                               ; preds = %dec_label_pc_20ead
  %v0_20ec5 = call i32 @function_20ee3()
  ret i32 %v0_20ec5

dec_label_pc_20eca:                               ; preds = %dec_label_pc_20ead
  %v1_20eca = inttoptr i32 %v2_20ebf to i32*
  %v2_20eca = load i32, i32* %v1_20eca, align 4
  store i32 %v2_20eca, i32* %esi.global-to-local, align 4
  %v1_20ecc = add i32 %v2_20ebf, 12
  store i32 %v1_20ecc, i32* @eax, align 4
  %v1_20ed2 = call i32 @function_348f0(i32 %v1_20ecc)
  ret i32 %v1_20ed2

; uselistorder directives
  uselistorder i32 %v2_20ebf, { 2, 1, 0, 3 }
  uselistorder i32 %v3_20ea6, { 0, 1, 3, 2, 4, 5 }
}

define i32 @function_20ee3() local_unnamed_addr {
dec_label_pc_20ee3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_20ee7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20ee7 = xor i32 %v1_20ee7, %tmp9
  %v3_20ee7 = icmp eq i32 %v2_20ee7, 0
  store i32 %v2_20ee7, i32* @eax, align 4
  %v1_20eee = icmp eq i1 %v3_20ee7, false
  br i1 %v1_20eee, label %bb, label %dec_label_pc_20ef0

bb:                                               ; preds = %dec_label_pc_20ee3
  %v2_20eee = call i32 @function_20f14()
  br label %dec_label_pc_20ef0

dec_label_pc_20ef0:                               ; preds = %bb, %dec_label_pc_20ee3
  %v5_20ef9 = phi i32 [ %v2_20eee, %bb ], [ %v2_20ee7, %dec_label_pc_20ee3 ]
  ret i32 %v5_20ef9
}

define i32 @function_20f00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20f00:
  %v1_20f04 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20f04 = xor i32 %v1_20f04, %arg1
  %v3_20f04 = icmp eq i32 %v2_20f04, 0
  store i32 %v2_20f04, i32* @eax, align 4
  %v1_20f0b = icmp eq i1 %v3_20f04, false
  br i1 %v1_20f0b, label %bb, label %dec_label_pc_20f0d

bb:                                               ; preds = %dec_label_pc_20f00
  %v2_20f0b = call i32 @function_20f14()
  br label %dec_label_pc_20f0d

dec_label_pc_20f0d:                               ; preds = %bb, %dec_label_pc_20f00
  %v0_20f13 = phi i32 [ %v2_20f0b, %bb ], [ %v2_20f04, %dec_label_pc_20f00 ]
  ret i32 %v0_20f13

; uselistorder directives
  uselistorder i32 ()* @function_20f14, { 1, 0 }
}

define i32 @function_20f14() local_unnamed_addr {
dec_label_pc_20f14:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f20:
  %v1_20f34 = icmp eq i32 %arg1, 0
  br i1 %v1_20f34, label %bb, label %dec_label_pc_20f38

bb:                                               ; preds = %dec_label_pc_20f20
  %v0_20f28 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20f36 = call i32 @function_20f68(i32 %v0_20f28)
  br label %dec_label_pc_20f38

dec_label_pc_20f38:                               ; preds = %bb, %dec_label_pc_20f20
  %v1_20f38 = add i32 %arg1, 12
  ret i32 %v1_20f38
}

define i32 @function_20f68(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f68:
  %v1_20f6c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20f6c = xor i32 %v1_20f6c, %arg1
  %v3_20f6c = icmp eq i32 %v2_20f6c, 0
  %v1_20f73 = icmp eq i1 %v3_20f6c, false
  br i1 %v1_20f73, label %dec_label_pc_20f7a, label %dec_label_pc_20f75

dec_label_pc_20f75:                               ; preds = %dec_label_pc_20f68
  ret i32 %v2_20f6c

dec_label_pc_20f7a:                               ; preds = %dec_label_pc_20f68
  ret i32 %v2_20f6c

; uselistorder directives
  uselistorder i32 %v2_20f6c, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE8_M_eraseEPSt13_Rb_tree_nodeISP_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20f90:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_20f90 = load i32, i32* %edi.global-to-local, align 4
  %v0_20f91 = load i32, i32* %esi.global-to-local, align 4
  %v0_20f92 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_20f9a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_20faa = icmp eq i32 %arg2, 0
  %v1_20fac = icmp eq i1 %v1_20faa, false
  br i1 %v1_20fac, label %dec_label_pc_20fb2, label %dec_label_pc_20fae

dec_label_pc_20fae:                               ; preds = %dec_label_pc_20f90
  %v4_20fae = call i32 @function_20fda(i32 %v0_20f9a, i32 %v0_20f92, i32 %v0_20f91, i32 %v0_20f90)
  store i32 %v4_20fae, i32* %eax.global-to-local, align 4
  ret i32 %v4_20fae

dec_label_pc_20fb2:                               ; preds = %dec_label_pc_20f90
  %v1_20fb2 = add i32 %arg2, 12
  %v2_20fb2 = inttoptr i32 %v1_20fb2 to i32*
  %v3_20fb2 = load i32, i32* %v2_20fb2, align 4
  store i32 %v3_20fb2, i32* %eax.global-to-local, align 4
  %v2_20fbc = call i32 @unknown_41f20(i32 %arg1, i32 %v3_20fb2)
  store i32 %v2_20fbc, i32* %eax.global-to-local, align 4
  %v1_20fc1 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_20fc1 = inttoptr i32 %v1_20fc1 to i32*
  %v3_20fc1 = load i32, i32* %v2_20fc1, align 4
  store i32 %v3_20fc1, i32* %esi.global-to-local, align 4
  %v1_20fc4 = add i32 %arg2, 20
  %v2_20fc4 = inttoptr i32 %v1_20fc4 to i8*
  %v3_20fc4 = load i8, i8* %v2_20fc4, align 1
  %v10_20fc4 = icmp eq i8 %v3_20fc4, 0
  br i1 %v10_20fc4, label %dec_label_pc_20fce, label %dec_label_pc_20fca

dec_label_pc_20fca:                               ; preds = %dec_label_pc_20fb2
  store i8 0, i8* %v2_20fc4, align 1
  %v3_20fce.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20fce

dec_label_pc_20fce:                               ; preds = %dec_label_pc_20fca, %dec_label_pc_20fb2
  %v3_20fce = phi i32 [ %v3_20fce.pre, %dec_label_pc_20fca ], [ %v2_20fbc, %dec_label_pc_20fb2 ]
  ret i32 %v3_20fce

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_20fda(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20fda:
  %v1_20fde = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20fde = xor i32 %v1_20fde, %arg1
  %v3_20fde = icmp eq i32 %v2_20fde, 0
  %v1_20fe5 = icmp eq i1 %v3_20fde, false
  br i1 %v1_20fe5, label %dec_label_pc_20fee, label %dec_label_pc_20fe7

dec_label_pc_20fe7:                               ; preds = %dec_label_pc_20fda
  ret i32 %v2_20fde

dec_label_pc_20fee:                               ; preds = %dec_label_pc_20fda
  ret i32 %v2_20fde

; uselistorder directives
  uselistorder i32 %v2_20fde, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSF_SG_EEEEENS0_5mutexEEEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_21000:
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v1_21016 = add i32 %tmp99, 16
  %v2_21016 = inttoptr i32 %v1_21016 to i32*
  %v3_21016 = load i32, i32* %v2_21016, align 4
  %v1_2101d = add i32 %tmp99, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21023 = call i32 @unknown_41f90(i32 %v1_2101d, i32 %v3_21016)
  %v2_21028 = load i32, i32* %arg1, align 4
  %v12_2102a = icmp eq i32 %v2_21028, %tmp99
  %v1_2102c = icmp eq i1 %v12_2102a, false
  br i1 %v1_2102c, label %dec_label_pc_21032, label %dec_label_pc_2102e

dec_label_pc_2102e:                               ; preds = %dec_label_pc_21000
  %v0_2102e = call i32 @function_2104b()
  ret i32 %v0_2102e

dec_label_pc_21032:                               ; preds = %dec_label_pc_21000
  %v1_21034 = add i32 %v2_21028, 12
  store i32 %v1_21034, i32* @eax, align 4
  %v2_2103a = call i32 @function_34a60(i32 %v1_21034)
  ret i32 %v2_2103a

; uselistorder directives
  uselistorder i32 %v2_21028, { 1, 0 }
  uselistorder i32 %tmp99, { 0, 2, 1 }
}

define i32 @function_2104b() local_unnamed_addr {
dec_label_pc_2104b:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_2104f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2104f = xor i32 %v1_2104f, %tmp4
  %v3_2104f = icmp eq i32 %v2_2104f, 0
  %v1_21056 = icmp eq i1 %v3_2104f, false
  br i1 %v1_21056, label %dec_label_pc_2105f, label %dec_label_pc_21058

dec_label_pc_21058:                               ; preds = %dec_label_pc_2104b
  ret i32 %v2_2104f

dec_label_pc_2105f:                               ; preds = %dec_label_pc_2104b
  ret i32 %v2_2104f

; uselistorder directives
  uselistorder i32 %v2_2104f, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_21070:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_21070 = load i32, i32* %edi.global-to-local, align 4
  %v0_21071 = load i32, i32* %esi.global-to-local, align 4
  %v0_21072 = load i32, i32* %ebx.global-to-local, align 4
  %v0_21076 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_21086 = add i32 %arg1, 12
  %v2_21086 = inttoptr i32 %v1_21086 to i32*
  %v3_21086 = load i32, i32* %v2_21086, align 4
  store i32 %v3_21086, i32* %edi.global-to-local, align 4
  %v1_21089 = icmp eq i32 %v3_21086, 0
  br i1 %v1_21089, label %bb, label %dec_label_pc_2108d

bb:                                               ; preds = %dec_label_pc_21070
  %v5_2108b = call i32 @function_210e0(i32 %v0_21076, i32 %v0_21072, i32 %v0_21071, i32 %v0_21070)
  br label %dec_label_pc_2108d

dec_label_pc_2108d:                               ; preds = %bb, %dec_label_pc_21070
  %v1_2108d = add i32 %v3_21086, 16
  %v2_2108d = inttoptr i32 %v1_2108d to i32*
  %v3_2108d = load i32, i32* %v2_2108d, align 4
  %v1_21094 = add i32 %v3_21086, 8
  %v2_2109a = call i32 @unknown_42000(i32 %v1_21094, i32 %v3_2108d)
  %v1_2109f = inttoptr i32 %v3_21086 to i32*
  %v2_2109f = load i32, i32* %v1_2109f, align 4
  store i32 %v2_2109f, i32* %ebx.global-to-local, align 4
  %v12_210a1 = icmp eq i32 %v2_2109f, %v3_21086
  %v1_210a3 = icmp eq i1 %v12_210a1, false
  br i1 %v1_210a3, label %dec_label_pc_210aa, label %dec_label_pc_210a5

dec_label_pc_210a5:                               ; preds = %dec_label_pc_2108d
  %v0_210a5 = call i32 @function_210c3()
  ret i32 %v0_210a5

dec_label_pc_210aa:                               ; preds = %dec_label_pc_2108d
  %v1_210aa = inttoptr i32 %v2_2109f to i32*
  %v2_210aa = load i32, i32* %v1_210aa, align 4
  store i32 %v2_210aa, i32* %esi.global-to-local, align 4
  %v1_210ac = add i32 %v2_2109f, 12
  store i32 %v1_210ac, i32* @eax, align 4
  %v1_210b2 = call i32 @function_34ad0(i32 %v1_210ac)
  ret i32 %v1_210b2

; uselistorder directives
  uselistorder i32 %v2_2109f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_21086, { 0, 1, 3, 2, 4, 5 }
}

define i32 @function_210c3() local_unnamed_addr {
dec_label_pc_210c3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_210c7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_210c7 = xor i32 %v1_210c7, %tmp9
  %v3_210c7 = icmp eq i32 %v2_210c7, 0
  store i32 %v2_210c7, i32* @eax, align 4
  %v1_210ce = icmp eq i1 %v3_210c7, false
  br i1 %v1_210ce, label %bb, label %dec_label_pc_210d0

bb:                                               ; preds = %dec_label_pc_210c3
  %v2_210ce = call i32 @function_210f4()
  br label %dec_label_pc_210d0

dec_label_pc_210d0:                               ; preds = %bb, %dec_label_pc_210c3
  %v5_210d9 = phi i32 [ %v2_210ce, %bb ], [ %v2_210c7, %dec_label_pc_210c3 ]
  ret i32 %v5_210d9
}

define i32 @function_210e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_210e0:
  %v1_210e4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_210e4 = xor i32 %v1_210e4, %arg1
  %v3_210e4 = icmp eq i32 %v2_210e4, 0
  store i32 %v2_210e4, i32* @eax, align 4
  %v1_210eb = icmp eq i1 %v3_210e4, false
  br i1 %v1_210eb, label %bb, label %dec_label_pc_210ed

bb:                                               ; preds = %dec_label_pc_210e0
  %v2_210eb = call i32 @function_210f4()
  br label %dec_label_pc_210ed

dec_label_pc_210ed:                               ; preds = %bb, %dec_label_pc_210e0
  %v0_210f3 = phi i32 [ %v2_210eb, %bb ], [ %v2_210e4, %dec_label_pc_210e0 ]
  ret i32 %v0_210f3

; uselistorder directives
  uselistorder i32 ()* @function_210f4, { 1, 0 }
}

define i32 @function_210f4() local_unnamed_addr {
dec_label_pc_210f4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEEEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_21100:
  %v1_21114 = icmp eq i32 %arg1, 0
  br i1 %v1_21114, label %bb, label %dec_label_pc_21118

bb:                                               ; preds = %dec_label_pc_21100
  %v0_21108 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21116 = call i32 @function_21148(i32 %v0_21108)
  br label %dec_label_pc_21118

dec_label_pc_21118:                               ; preds = %bb, %dec_label_pc_21100
  %v1_21118 = add i32 %arg1, 12
  ret i32 %v1_21118
}

define i32 @function_21148(i32 %arg1) local_unnamed_addr {
dec_label_pc_21148:
  %v1_2114c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2114c = xor i32 %v1_2114c, %arg1
  %v3_2114c = icmp eq i32 %v2_2114c, 0
  %v1_21153 = icmp eq i1 %v3_2114c, false
  br i1 %v1_21153, label %dec_label_pc_2115a, label %dec_label_pc_21155

dec_label_pc_21155:                               ; preds = %dec_label_pc_21148
  ret i32 %v2_2114c

dec_label_pc_2115a:                               ; preds = %dec_label_pc_21148
  ret i32 %v2_2114c

; uselistorder directives
  uselistorder i32 %v2_2114c, { 1, 0, 2 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21170:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_21170 = load i32, i32* %esi.global-to-local, align 4
  %v0_21171 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  %v1_21189 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_21189 = inttoptr i32 %v1_21189 to i32*
  %v3_21189 = load i32, i32* %v2_21189, align 4
  store i32 %v3_21189, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %arg1, align 4
  %v1_21192 = add i32 %tmp99, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_21192 = inttoptr i32 %v1_21192 to i32*
  store i32 ptrtoint (i32* @global_var_38f08.3407 to i32), i32* %v2_21192, align 4
  %v1_21199 = icmp eq i32 %v3_21189, 0
  %v1_2119b = load i32, i32* %ebx.global-to-local, align 4
  %v2_2119b = add i32 %v1_2119b, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_2119b = inttoptr i32 %v2_2119b to i32*
  store i32 %v3_21189, i32* %v3_2119b, align 4
  br i1 %v1_21199, label %dec_label_pc_211a8, label %dec_label_pc_211a0

dec_label_pc_211a0:                               ; preds = %dec_label_pc_21170
  br label %dec_label_pc_211a8

dec_label_pc_211a8:                               ; preds = %dec_label_pc_211a0, %dec_label_pc_21170
  %v0_211a8 = load i32, i32* %esi.global-to-local, align 4
  %v1_211a8 = add i32 %v0_211a8, 12
  %v2_211a8 = inttoptr i32 %v1_211a8 to i32*
  %v3_211a8 = load i32, i32* %v2_211a8, align 4
  store i32 %v3_211a8, i32* %eax.global-to-local, align 4
  %v0_211ab = load i32, i32* %ebx.global-to-local, align 4
  %v1_211ab = add i32 %v0_211ab, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_211ab = inttoptr i32 %v1_211ab to i32*
  store i32 ptrtoint (i32* @global_var_3945c.3453 to i32), i32* %v2_211ab, align 4
  %v0_211b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_211b2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_211b2 = add i32 %v1_211b2, 12
  %v3_211b2 = inttoptr i32 %v2_211b2 to i32*
  store i32 %v0_211b2, i32* %v3_211b2, align 4
  %v0_211b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_211b5 = add i32 %v0_211b5, 16
  %v2_211b5 = inttoptr i32 %v1_211b5 to i32*
  %v3_211b5 = load i32, i32* %v2_211b5, align 4
  store i32 %v3_211b5, i32* %eax.global-to-local, align 4
  %v1_211b8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_211b8 = add i32 %v1_211b8, 16
  %v3_211b8 = inttoptr i32 %v2_211b8 to i32*
  store i32 %v3_211b5, i32* %v3_211b8, align 4
  %v0_211bb = load i32, i32* %esi.global-to-local, align 4
  %v1_211bb = add i32 %v0_211bb, 20
  %v2_211bb = inttoptr i32 %v1_211bb to i32*
  %v3_211bb = load i32, i32* %v2_211bb, align 4
  store i32 %v3_211bb, i32* %eax.global-to-local, align 4
  %v0_211be = load i32, i32* %ebx.global-to-local, align 4
  %v1_211be = inttoptr i32 %v0_211be to i32*
  store i32 ptrtoint (%vtable_39448_type* @global_var_39448.3452 to i32), i32* %v1_211be, align 4
  %v0_211c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_211c4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_211c4 = add i32 %v1_211c4, 20
  %v3_211c4 = inttoptr i32 %v2_211c4 to i32*
  store i32 %v0_211c4, i32* %v3_211c4, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 false, label %dec_label_pc_211da, label %dec_label_pc_211d4

dec_label_pc_211d4:                               ; preds = %dec_label_pc_211a8
  store i32 %v0_21171, i32* %ebx.global-to-local, align 4
  store i32 %v0_21170, i32* %esi.global-to-local, align 4
  ret i32 0

dec_label_pc_211da:                               ; preds = %dec_label_pc_211a8
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_8signals214no_slots_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39448_type* @global_var_39448.3452 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21200:
  %v4_21200 = sub i32 %arg1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v1_21205 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv(i32 %v4_21200)
  ret i32 %v1_21205

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_8signals214no_slots_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_21210:
  ret i32 0
}

define i32 @function_21230() local_unnamed_addr {
dec_label_pc_21230:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_21230 = load i32, i32* %ecx.global-to-local, align 4
  %v1_21230 = add i32 %v0_21230, -1996217228
  %v2_21230 = inttoptr i32 %v1_21230 to i32*
  %v3_21230 = load i32, i32* %v2_21230, align 4
  %v4_21230 = sub i32 %v3_21230, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_21230, i32* %v2_21230, align 4
  %v0_21236 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21236
}

define i32 @_ZN5boost15throw_exceptionINS_8signals214no_slots_errorEEEvRKT_() local_unnamed_addr {
dec_label_pc_21280:
  ret i32 0
}

define i32 @function_212ca() local_unnamed_addr {
dec_label_pc_212ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_212ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_212ca
}

define i32 @function_21326() local_unnamed_addr {
dec_label_pc_21326:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_21345() local_unnamed_addr {
dec_label_pc_21345:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_21347 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21347 = add i32 %v0_21347, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_21347, i32* %ebx.global-to-local, align 4
  %v0_21348 = load i32, i32* %eax.global-to-local, align 4
  %v1_21348 = add i32 %v0_21348, -113
  %v2_21348 = inttoptr i32 %v1_21348 to i8*
  %v3_21348 = load i8, i8* %v2_21348, align 1
  %v4_21348 = load i32, i32* %edx.global-to-local, align 4
  %v5_21348 = trunc i32 %v4_21348 to i8
  %v6_21348 = load i1, i1* %cf.global-to-local, align 1
  %v7_21348 = zext i1 %v6_21348 to i8
  %v8_21348 = sub i8 %v3_21348, %v5_21348
  %v9_21348 = add i8 %v8_21348, %v7_21348
  store i8 %v9_21348, i8* %v2_21348, align 1
  %v0_2134b = load i32, i32* %eax.global-to-local, align 4
  %v4_2134b = mul i32 %v0_2134b, 2
  %v9_2134b = icmp ult i32 %v4_2134b, %v0_2134b
  store i1 %v9_2134b, i1* %cf.global-to-local, align 1
  store i32 %v4_2134b, i32* @eax, align 4
  %v0_21351 = load i32, i32* %ebx.global-to-local, align 4
  %v2_21354 = call i32 @function_33f50(i32 %v0_21351)
  store i32 %v4_2134b, i32* @eax, align 4
  %v0_2135d = call i32 @function_21326()
  store i32 %v0_2135d, i32* %eax.global-to-local, align 4
  ret i32 %v0_2135d

; uselistorder directives
  uselistorder i32 %v4_2134b, { 2, 0, 1 }
  uselistorder i32 %v0_2134b, { 1, 0 }
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvP15CCryptoKeyStoreNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_21360:
  %ebx.global-to-local = alloca i32, align 4
  %v0_21360 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_21374 = icmp eq i32 %arg1, 0
  br i1 %v1_21374, label %bb, label %dec_label_pc_21378

bb:                                               ; preds = %dec_label_pc_21360
  %v0_21368 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21376 = call i32 @function_213a8(i32 %v0_21368)
  br label %dec_label_pc_21378

dec_label_pc_21378:                               ; preds = %bb, %dec_label_pc_21360
  %v1_21378 = add i32 %arg1, 12
  store i32 %v1_21378, i32* @eax, align 4
  %v2_2137e = call i32 @function_34dc0(i32 %v1_21378)
  %v1_21383 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21383, i32* @eax, align 4
  %v2_21389 = call i32 @function_34dc0(i32 %v1_21383)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2139b

bb105:                                            ; preds = %dec_label_pc_21378
  br label %dec_label_pc_2139b

dec_label_pc_2139b:                               ; preds = %bb105, %dec_label_pc_21378
  store i32 %v0_21360, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_34dc0, { 1, 0 }
}

define i32 @function_213a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_213a8:
  %v1_213ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_213ac = xor i32 %v1_213ac, %arg1
  %v3_213ac = icmp eq i32 %v2_213ac, 0
  store i32 %v2_213ac, i32* @eax, align 4
  %v1_213b3 = icmp eq i1 %v3_213ac, false
  br i1 %v1_213b3, label %bb, label %dec_label_pc_213b5

bb:                                               ; preds = %dec_label_pc_213a8
  %v2_213b3 = call i32 @function_213ba()
  br label %dec_label_pc_213b5

dec_label_pc_213b5:                               ; preds = %bb, %dec_label_pc_213a8
  %v0_213b9 = phi i32 [ %v2_213b3, %bb ], [ %v2_213ac, %dec_label_pc_213a8 ]
  ret i32 %v0_213b9
}

define i32 @function_213ba() local_unnamed_addr {
dec_label_pc_213ba:
  %v1_213ba = load i32, i32* @eax, align 4
  ret i32 %v1_213ba
}

define i32 @function_213c6() local_unnamed_addr {
dec_label_pc_213c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_213c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_213c6
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EERKSsb10ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_SF_SH_bSI_EEENSN_IFvRKNS1_10connectionES5_SF_SH_bSI_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_213e0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_213e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_213f4 = icmp eq i32 %arg1, 0
  br i1 %v1_213f4, label %bb, label %dec_label_pc_213f8

bb:                                               ; preds = %dec_label_pc_213e0
  %v0_213e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_213f6 = call i32 @function_21428(i32 %v0_213e8)
  br label %dec_label_pc_213f8

dec_label_pc_213f8:                               ; preds = %bb, %dec_label_pc_213e0
  %v1_213f8 = add i32 %arg1, 12
  store i32 %v1_213f8, i32* @eax, align 4
  %v2_213fe = call i32 @function_34e40(i32 %v1_213f8)
  %v1_21403 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21403, i32* @eax, align 4
  %v2_21409 = call i32 @function_34e40(i32 %v1_21403)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2141b

bb105:                                            ; preds = %dec_label_pc_213f8
  br label %dec_label_pc_2141b

dec_label_pc_2141b:                               ; preds = %bb105, %dec_label_pc_213f8
  store i32 %v0_213e0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_34e40, { 1, 0 }
}

define i32 @function_21428(i32 %arg1) local_unnamed_addr {
dec_label_pc_21428:
  %v1_2142c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2142c = xor i32 %v1_2142c, %arg1
  %v3_2142c = icmp eq i32 %v2_2142c, 0
  store i32 %v2_2142c, i32* @eax, align 4
  %v1_21433 = icmp eq i1 %v3_2142c, false
  br i1 %v1_21433, label %bb, label %dec_label_pc_21435

bb:                                               ; preds = %dec_label_pc_21428
  %v2_21433 = call i32 @function_2143a()
  br label %dec_label_pc_21435

dec_label_pc_21435:                               ; preds = %bb, %dec_label_pc_21428
  %v0_21439 = phi i32 [ %v2_21433, %bb ], [ %v2_2142c, %dec_label_pc_21428 ]
  ret i32 %v0_21439
}

define i32 @function_2143a() local_unnamed_addr {
dec_label_pc_2143a:
  %v1_2143a = load i32, i32* @eax, align 4
  ret i32 %v1_2143a
}

define i32 @function_21446() local_unnamed_addr {
dec_label_pc_21446:
  %eax.global-to-local = alloca i32, align 4
  %v0_21446 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21446
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S8_S9_EEENSE_IFvRKNS1_10connectionES5_S8_S9_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_21460:
  %ebx.global-to-local = alloca i32, align 4
  %v0_21460 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_21474 = icmp eq i32 %arg1, 0
  br i1 %v1_21474, label %bb, label %dec_label_pc_21478

bb:                                               ; preds = %dec_label_pc_21460
  %v0_21468 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21476 = call i32 @function_214a8(i32 %v0_21468)
  br label %dec_label_pc_21478

dec_label_pc_21478:                               ; preds = %bb, %dec_label_pc_21460
  %v1_21478 = add i32 %arg1, 12
  store i32 %v1_21478, i32* @eax, align 4
  %v2_2147e = call i32 @function_34ec0(i32 %v1_21478)
  %v1_21483 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21483, i32* @eax, align 4
  %v2_21489 = call i32 @function_34ec0(i32 %v1_21483)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2149b

bb105:                                            ; preds = %dec_label_pc_21478
  br label %dec_label_pc_2149b

dec_label_pc_2149b:                               ; preds = %bb105, %dec_label_pc_21478
  store i32 %v0_21460, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_34ec0, { 1, 0 }
}

define i32 @function_214a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_214a8:
  %v1_214ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_214ac = xor i32 %v1_214ac, %arg1
  %v3_214ac = icmp eq i32 %v2_214ac, 0
  store i32 %v2_214ac, i32* @eax, align 4
  %v1_214b3 = icmp eq i1 %v3_214ac, false
  br i1 %v1_214b3, label %bb, label %dec_label_pc_214b5

bb:                                               ; preds = %dec_label_pc_214a8
  %v2_214b3 = call i32 @function_214ba()
  br label %dec_label_pc_214b5

dec_label_pc_214b5:                               ; preds = %bb, %dec_label_pc_214a8
  %v0_214b9 = phi i32 [ %v2_214b3, %bb ], [ %v2_214ac, %dec_label_pc_214a8 ]
  ret i32 %v0_214b9
}

define i32 @function_214ba() local_unnamed_addr {
dec_label_pc_214ba:
  %v1_214ba = load i32, i32* @eax, align 4
  ret i32 %v1_214ba
}

define i32 @function_214c6() local_unnamed_addr {
dec_label_pc_214c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_214c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_214c6
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal3_implIbRKSsS5_jNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbS5_S5_jEEENSA_IFbRKNS1_10connectionES5_S5_jEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_214e0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_214e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_214f4 = icmp eq i32 %arg1, 0
  br i1 %v1_214f4, label %bb, label %dec_label_pc_214f8

bb:                                               ; preds = %dec_label_pc_214e0
  %v0_214e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_214f6 = call i32 @function_21528(i32 %v0_214e8)
  br label %dec_label_pc_214f8

dec_label_pc_214f8:                               ; preds = %bb, %dec_label_pc_214e0
  %v1_214f8 = add i32 %arg1, 12
  store i32 %v1_214f8, i32* @eax, align 4
  %v2_214fe = call i32 @function_34f40(i32 %v1_214f8)
  %v1_21503 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21503, i32* @eax, align 4
  %v2_21509 = call i32 @function_34f40(i32 %v1_21503)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2151b

bb105:                                            ; preds = %dec_label_pc_214f8
  br label %dec_label_pc_2151b

dec_label_pc_2151b:                               ; preds = %bb105, %dec_label_pc_214f8
  store i32 %v0_214e0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_34f40, { 1, 0 }
}

define i32 @function_21528(i32 %arg1) local_unnamed_addr {
dec_label_pc_21528:
  %v1_2152c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2152c = xor i32 %v1_2152c, %arg1
  %v3_2152c = icmp eq i32 %v2_2152c, 0
  store i32 %v2_2152c, i32* @eax, align 4
  %v1_21533 = icmp eq i1 %v3_2152c, false
  br i1 %v1_21533, label %bb, label %dec_label_pc_21535

bb:                                               ; preds = %dec_label_pc_21528
  %v2_21533 = call i32 @function_2153a()
  br label %dec_label_pc_21535

dec_label_pc_21535:                               ; preds = %bb, %dec_label_pc_21528
  %v0_21539 = phi i32 [ %v2_21533, %bb ], [ %v2_2152c, %dec_label_pc_21528 ]
  ret i32 %v0_21539
}

define i32 @function_2153a() local_unnamed_addr {
dec_label_pc_2153a:
  %v1_2153a = load i32, i32* @eax, align 4
  ret i32 %v1_2153a
}

define i32 @function_21546() local_unnamed_addr {
dec_label_pc_21546:
  %eax.global-to-local = alloca i32, align 4
  %v0_21546 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21546
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbxNS1_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS8_IFbRKNS1_10connectionExEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_21560:
  %ebx.global-to-local = alloca i32, align 4
  %v0_21560 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_21574 = icmp eq i32 %arg1, 0
  br i1 %v1_21574, label %bb, label %dec_label_pc_21578

bb:                                               ; preds = %dec_label_pc_21560
  %v0_21568 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21576 = call i32 @function_215a8(i32 %v0_21568)
  br label %dec_label_pc_21578

dec_label_pc_21578:                               ; preds = %bb, %dec_label_pc_21560
  %v1_21578 = add i32 %arg1, 12
  store i32 %v1_21578, i32* @eax, align 4
  %v2_2157e = call i32 @function_34fc0(i32 %v1_21578)
  %v1_21583 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21583, i32* @eax, align 4
  %v2_21589 = call i32 @function_34fc0(i32 %v1_21583)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2159b

bb105:                                            ; preds = %dec_label_pc_21578
  br label %dec_label_pc_2159b

dec_label_pc_2159b:                               ; preds = %bb105, %dec_label_pc_21578
  store i32 %v0_21560, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_34fc0, { 2, 1, 0 }
}

define i32 @function_215a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_215a8:
  %v1_215ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_215ac = xor i32 %v1_215ac, %arg1
  %v3_215ac = icmp eq i32 %v2_215ac, 0
  store i32 %v2_215ac, i32* @eax, align 4
  %v1_215b3 = icmp eq i1 %v3_215ac, false
  br i1 %v1_215b3, label %bb, label %dec_label_pc_215b5

bb:                                               ; preds = %dec_label_pc_215a8
  %v2_215b3 = call i32 @function_215ba()
  br label %dec_label_pc_215b5

dec_label_pc_215b5:                               ; preds = %bb, %dec_label_pc_215a8
  %v0_215b9 = phi i32 [ %v2_215b3, %bb ], [ %v2_215ac, %dec_label_pc_215a8 ]
  ret i32 %v0_215b9
}

define i32 @function_215ba() local_unnamed_addr {
dec_label_pc_215ba:
  %v1_215ba = load i32, i32* @eax, align 4
  ret i32 %v1_215ba
}

define i32 @function_215c6() local_unnamed_addr {
dec_label_pc_215c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_215c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_215c6
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIvRKSsNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_EEENSA_IFvRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_215e0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_215e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_215f4 = icmp eq i32 %arg1, 0
  br i1 %v1_215f4, label %bb, label %dec_label_pc_215f8

bb:                                               ; preds = %dec_label_pc_215e0
  %v0_215e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_215f6 = call i32 @function_21628(i32 %v0_215e8)
  br label %dec_label_pc_215f8

dec_label_pc_215f8:                               ; preds = %bb, %dec_label_pc_215e0
  %v1_215f8 = add i32 %arg1, 12
  store i32 %v1_215f8, i32* @eax, align 4
  %v2_215fe = call i32 @function_35040(i32 %v1_215f8)
  %v1_21603 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21603, i32* @eax, align 4
  %v2_21609 = call i32 @function_35040(i32 %v1_21603)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2161b

bb105:                                            ; preds = %dec_label_pc_215f8
  br label %dec_label_pc_2161b

dec_label_pc_2161b:                               ; preds = %bb105, %dec_label_pc_215f8
  store i32 %v0_215e0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_35040, { 1, 0 }
}

define i32 @function_21628(i32 %arg1) local_unnamed_addr {
dec_label_pc_21628:
  %v1_2162c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2162c = xor i32 %v1_2162c, %arg1
  %v3_2162c = icmp eq i32 %v2_2162c, 0
  store i32 %v2_2162c, i32* @eax, align 4
  %v1_21633 = icmp eq i1 %v3_2162c, false
  br i1 %v1_21633, label %bb, label %dec_label_pc_21635

bb:                                               ; preds = %dec_label_pc_21628
  %v2_21633 = call i32 @function_2163a()
  br label %dec_label_pc_21635

dec_label_pc_21635:                               ; preds = %bb, %dec_label_pc_21628
  %v0_21639 = phi i32 [ %v2_21633, %bb ], [ %v2_2162c, %dec_label_pc_21628 ]
  ret i32 %v0_21639
}

define i32 @function_2163a() local_unnamed_addr {
dec_label_pc_2163a:
  %v1_2163a = load i32, i32* @eax, align 4
  ret i32 %v1_2163a
}

define i32 @function_21646() local_unnamed_addr {
dec_label_pc_21646:
  %eax.global-to-local = alloca i32, align 4
  %v0_21646 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21646
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_21660:
  %ebx.global-to-local = alloca i32, align 4
  %v0_21660 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_21674 = icmp eq i32 %arg1, 0
  br i1 %v1_21674, label %bb, label %dec_label_pc_21678

bb:                                               ; preds = %dec_label_pc_21660
  %v0_21668 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21676 = call i32 @function_216a8(i32 %v0_21668)
  br label %dec_label_pc_21678

dec_label_pc_21678:                               ; preds = %bb, %dec_label_pc_21660
  %v1_21678 = add i32 %arg1, 12
  store i32 %v1_21678, i32* @eax, align 4
  %v2_2167e = call i32 @function_350c0(i32 %v1_21678)
  %v1_21683 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21683, i32* @eax, align 4
  %v2_21689 = call i32 @function_350c0(i32 %v1_21683)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2169b

bb105:                                            ; preds = %dec_label_pc_21678
  br label %dec_label_pc_2169b

dec_label_pc_2169b:                               ; preds = %bb105, %dec_label_pc_21678
  store i32 %v0_21660, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_350c0, { 1, 0 }
}

define i32 @function_216a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_216a8:
  %v1_216ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_216ac = xor i32 %v1_216ac, %arg1
  %v3_216ac = icmp eq i32 %v2_216ac, 0
  store i32 %v2_216ac, i32* @eax, align 4
  %v1_216b3 = icmp eq i1 %v3_216ac, false
  br i1 %v1_216b3, label %bb, label %dec_label_pc_216b5

bb:                                               ; preds = %dec_label_pc_216a8
  %v2_216b3 = call i32 @function_216ba()
  br label %dec_label_pc_216b5

dec_label_pc_216b5:                               ; preds = %bb, %dec_label_pc_216a8
  %v0_216b9 = phi i32 [ %v2_216b3, %bb ], [ %v2_216ac, %dec_label_pc_216a8 ]
  ret i32 %v0_216b9
}

define i32 @function_216ba() local_unnamed_addr {
dec_label_pc_216ba:
  %v1_216ba = load i32, i32* @eax, align 4
  ret i32 %v1_216ba
}

define i32 @function_216c6() local_unnamed_addr {
dec_label_pc_216c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_216c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_216c6
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal0_implIvNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS8_IFvRKNS1_10connectionEEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_216e0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_216e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_216f4 = icmp eq i32 %arg1, 0
  br i1 %v1_216f4, label %bb, label %dec_label_pc_216f8

bb:                                               ; preds = %dec_label_pc_216e0
  %v0_216e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_216f6 = call i32 @function_21728(i32 %v0_216e8)
  br label %dec_label_pc_216f8

dec_label_pc_216f8:                               ; preds = %bb, %dec_label_pc_216e0
  %v1_216f8 = add i32 %arg1, 12
  store i32 %v1_216f8, i32* @eax, align 4
  %v2_216fe = call i32 @function_35140(i32 %v1_216f8)
  %v1_21703 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21703, i32* @eax, align 4
  %v2_21709 = call i32 @function_35140(i32 %v1_21703)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2171b

bb105:                                            ; preds = %dec_label_pc_216f8
  br label %dec_label_pc_2171b

dec_label_pc_2171b:                               ; preds = %bb105, %dec_label_pc_216f8
  store i32 %v0_216e0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_35140, { 1, 0 }
}

define i32 @function_21728(i32 %arg1) local_unnamed_addr {
dec_label_pc_21728:
  %v1_2172c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2172c = xor i32 %v1_2172c, %arg1
  %v3_2172c = icmp eq i32 %v2_2172c, 0
  store i32 %v2_2172c, i32* @eax, align 4
  %v1_21733 = icmp eq i1 %v3_2172c, false
  br i1 %v1_21733, label %bb, label %dec_label_pc_21735

bb:                                               ; preds = %dec_label_pc_21728
  %v2_21733 = call i32 @function_2173a()
  br label %dec_label_pc_21735

dec_label_pc_21735:                               ; preds = %bb, %dec_label_pc_21728
  %v0_21739 = phi i32 [ %v2_21733, %bb ], [ %v2_2172c, %dec_label_pc_21728 ]
  ret i32 %v0_21739
}

define i32 @function_2173a() local_unnamed_addr {
dec_label_pc_2173a:
  %v1_2173a = load i32, i32* @eax, align 4
  ret i32 %v1_2173a
}

define i32 @function_21746() local_unnamed_addr {
dec_label_pc_21746:
  %eax.global-to-local = alloca i32, align 4
  %v0_21746 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21746
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_21760:
  %ebx.global-to-local = alloca i32, align 4
  %v0_21760 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_21774 = icmp eq i32 %arg1, 0
  br i1 %v1_21774, label %bb, label %dec_label_pc_21778

bb:                                               ; preds = %dec_label_pc_21760
  %v0_21768 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21776 = call i32 @function_217a8(i32 %v0_21768)
  br label %dec_label_pc_21778

dec_label_pc_21778:                               ; preds = %bb, %dec_label_pc_21760
  %v1_21778 = add i32 %arg1, 12
  store i32 %v1_21778, i32* @eax, align 4
  %v2_2177e = call i32 @function_351c0(i32 %v1_21778)
  %v1_21783 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21783, i32* @eax, align 4
  %v2_21789 = call i32 @function_351c0(i32 %v1_21783)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2179b

bb105:                                            ; preds = %dec_label_pc_21778
  br label %dec_label_pc_2179b

dec_label_pc_2179b:                               ; preds = %bb105, %dec_label_pc_21778
  store i32 %v0_21760, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_351c0, { 1, 0 }
}

define i32 @function_217a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_217a8:
  %v1_217ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_217ac = xor i32 %v1_217ac, %arg1
  %v3_217ac = icmp eq i32 %v2_217ac, 0
  store i32 %v2_217ac, i32* @eax, align 4
  %v1_217b3 = icmp eq i1 %v3_217ac, false
  br i1 %v1_217b3, label %bb, label %dec_label_pc_217b5

bb:                                               ; preds = %dec_label_pc_217a8
  %v2_217b3 = call i32 @function_217ba()
  br label %dec_label_pc_217b5

dec_label_pc_217b5:                               ; preds = %bb, %dec_label_pc_217a8
  %v0_217b9 = phi i32 [ %v2_217b3, %bb ], [ %v2_217ac, %dec_label_pc_217a8 ]
  ret i32 %v0_217b9
}

define i32 @function_217ba() local_unnamed_addr {
dec_label_pc_217ba:
  %v1_217ba = load i32, i32* @eax, align 4
  ret i32 %v1_217ba
}

define i32 @function_217c6() local_unnamed_addr {
dec_label_pc_217c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_217c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_217c6
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_217e0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_217e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_217f4 = icmp eq i32 %arg1, 0
  br i1 %v1_217f4, label %bb, label %dec_label_pc_217f8

bb:                                               ; preds = %dec_label_pc_217e0
  %v0_217e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_217f6 = call i32 @function_21828(i32 %v0_217e8)
  br label %dec_label_pc_217f8

dec_label_pc_217f8:                               ; preds = %bb, %dec_label_pc_217e0
  %v1_217f8 = add i32 %arg1, 12
  store i32 %v1_217f8, i32* @eax, align 4
  %v2_217fe = call i32 @function_35240(i32 %v1_217f8)
  %v1_21803 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_21803, i32* @eax, align 4
  %v2_21809 = call i32 @function_35240(i32 %v1_21803)
  store i32 0, i32* @eax, align 4
  br i1 false, label %bb105, label %dec_label_pc_2181b

bb105:                                            ; preds = %dec_label_pc_217f8
  br label %dec_label_pc_2181b

dec_label_pc_2181b:                               ; preds = %bb105, %dec_label_pc_217f8
  store i32 %v0_217e0, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @function_35240, { 1, 0 }
}

define i32 @function_21828(i32 %arg1) local_unnamed_addr {
dec_label_pc_21828:
  %v1_2182c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2182c = xor i32 %v1_2182c, %arg1
  %v3_2182c = icmp eq i32 %v2_2182c, 0
  store i32 %v2_2182c, i32* @eax, align 4
  %v1_21833 = icmp eq i1 %v3_2182c, false
  br i1 %v1_21833, label %bb, label %dec_label_pc_21835

bb:                                               ; preds = %dec_label_pc_21828
  %v2_21833 = call i32 @function_2183a()
  br label %dec_label_pc_21835

dec_label_pc_21835:                               ; preds = %bb, %dec_label_pc_21828
  %v0_21839 = phi i32 [ %v2_21833, %bb ], [ %v2_2182c, %dec_label_pc_21828 ]
  ret i32 %v0_21839
}

define i32 @function_2183a() local_unnamed_addr {
dec_label_pc_2183a:
  %v1_2183a = load i32, i32* @eax, align 4
  ret i32 %v1_2183a
}

define i32 @function_21846() local_unnamed_addr {
dec_label_pc_21846:
  %eax.global-to-local = alloca i32, align 4
  %v0_21846 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21846
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvP15CCryptoKeyStoreNS_8functionIFvSF_EEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21860:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21860 = load i32, i32* %edi.global-to-local, align 4
  %v0_21861 = load i32, i32* %esi.global-to-local, align 4
  %v0_21862 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21876 = icmp eq i32* %arg1, null
  br i1 %v1_21876, label %bb, label %dec_label_pc_2187a

bb:                                               ; preds = %dec_label_pc_21860
  %v0_2186a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21878 = call i32 @function_218d0(i32 %v0_2186a, i32 %v0_21862, i32 %v0_21861, i32 %v0_21860)
  br label %dec_label_pc_2187a

dec_label_pc_2187a:                               ; preds = %bb, %dec_label_pc_21860
  %v1_2187a = add i32 %tmp100, 16
  %v2_2187a = inttoptr i32 %v1_2187a to i32*
  %v3_2187a = load i32, i32* %v2_2187a, align 4
  %v1_21881 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21887 = call i32 @unknown_41710(i32 %v1_21881, i32 %v3_2187a)
  %v2_2188c = load i32, i32* %arg1, align 4
  store i32 %v2_2188c, i32* %ebx.global-to-local, align 4
  %v12_2188e = icmp eq i32 %v2_2188c, %tmp100
  %v1_21890 = icmp eq i1 %v12_2188e, false
  br i1 %v1_21890, label %dec_label_pc_2189a, label %dec_label_pc_21892

dec_label_pc_21892:                               ; preds = %dec_label_pc_2187a
  %v0_21892 = call i32 @function_218b3()
  ret i32 %v0_21892

dec_label_pc_2189a:                               ; preds = %dec_label_pc_2187a
  %v1_2189a = inttoptr i32 %v2_2188c to i32*
  %v2_2189a = load i32, i32* %v1_2189a, align 4
  store i32 %v2_2189a, i32* %esi.global-to-local, align 4
  %v1_2189c = add i32 %v2_2188c, 12
  store i32 %v1_2189c, i32* @eax, align 4
  %v2_218a2 = call i32 @function_352c0(i32 %v1_2189c)
  ret i32 %v2_218a2

; uselistorder directives
  uselistorder i32 %v2_2188c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_218b3() local_unnamed_addr {
dec_label_pc_218b3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_218b7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_218b7 = xor i32 %v1_218b7, %tmp9
  %v3_218b7 = icmp eq i32 %v2_218b7, 0
  store i32 %v2_218b7, i32* @eax, align 4
  %v1_218be = icmp eq i1 %v3_218b7, false
  br i1 %v1_218be, label %bb, label %dec_label_pc_218c0

bb:                                               ; preds = %dec_label_pc_218b3
  %v2_218be = call i32 @function_218e4()
  br label %dec_label_pc_218c0

dec_label_pc_218c0:                               ; preds = %bb, %dec_label_pc_218b3
  %v5_218c9 = phi i32 [ %v2_218be, %bb ], [ %v2_218b7, %dec_label_pc_218b3 ]
  ret i32 %v5_218c9
}

define i32 @function_218d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_218d0:
  %v1_218d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_218d4 = xor i32 %v1_218d4, %arg1
  %v3_218d4 = icmp eq i32 %v2_218d4, 0
  store i32 %v2_218d4, i32* @eax, align 4
  %v1_218db = icmp eq i1 %v3_218d4, false
  br i1 %v1_218db, label %bb, label %dec_label_pc_218dd

bb:                                               ; preds = %dec_label_pc_218d0
  %v2_218db = call i32 @function_218e4()
  br label %dec_label_pc_218dd

dec_label_pc_218dd:                               ; preds = %bb, %dec_label_pc_218d0
  %v0_218e3 = phi i32 [ %v2_218db, %bb ], [ %v2_218d4, %dec_label_pc_218d0 ]
  ret i32 %v0_218e3

; uselistorder directives
  uselistorder i32 ()* @function_218e4, { 1, 0 }
}

define i32 @function_218e4() local_unnamed_addr {
dec_label_pc_218e4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_EERKSsb10ChangeTypeNS_8functionIFvSF_SP_SR_bSS_EEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_218f0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_218f0 = load i32, i32* %edi.global-to-local, align 4
  %v0_218f1 = load i32, i32* %esi.global-to-local, align 4
  %v0_218f2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21906 = icmp eq i32* %arg1, null
  br i1 %v1_21906, label %bb, label %dec_label_pc_2190a

bb:                                               ; preds = %dec_label_pc_218f0
  %v0_218fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21908 = call i32 @function_21960(i32 %v0_218fa, i32 %v0_218f2, i32 %v0_218f1, i32 %v0_218f0)
  br label %dec_label_pc_2190a

dec_label_pc_2190a:                               ; preds = %bb, %dec_label_pc_218f0
  %v1_2190a = add i32 %tmp100, 16
  %v2_2190a = inttoptr i32 %v1_2190a to i32*
  %v3_2190a = load i32, i32* %v2_2190a, align 4
  %v1_21911 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21917 = call i32 @unknown_41980(i32 %v1_21911, i32 %v3_2190a)
  %v2_2191c = load i32, i32* %arg1, align 4
  store i32 %v2_2191c, i32* %ebx.global-to-local, align 4
  %v12_2191e = icmp eq i32 %v2_2191c, %tmp100
  %v1_21920 = icmp eq i1 %v12_2191e, false
  br i1 %v1_21920, label %dec_label_pc_2192a, label %dec_label_pc_21922

dec_label_pc_21922:                               ; preds = %dec_label_pc_2190a
  %v0_21922 = call i32 @function_21943()
  ret i32 %v0_21922

dec_label_pc_2192a:                               ; preds = %dec_label_pc_2190a
  %v1_2192a = inttoptr i32 %v2_2191c to i32*
  %v2_2192a = load i32, i32* %v1_2192a, align 4
  store i32 %v2_2192a, i32* %esi.global-to-local, align 4
  %v1_2192c = add i32 %v2_2191c, 12
  store i32 %v1_2192c, i32* @eax, align 4
  %v2_21932 = call i32 @function_35350(i32 %v1_2192c)
  ret i32 %v2_21932

; uselistorder directives
  uselistorder i32 %v2_2191c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_21943() local_unnamed_addr {
dec_label_pc_21943:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_21947 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21947 = xor i32 %v1_21947, %tmp9
  %v3_21947 = icmp eq i32 %v2_21947, 0
  store i32 %v2_21947, i32* @eax, align 4
  %v1_2194e = icmp eq i1 %v3_21947, false
  br i1 %v1_2194e, label %bb, label %dec_label_pc_21950

bb:                                               ; preds = %dec_label_pc_21943
  %v2_2194e = call i32 @function_21974()
  br label %dec_label_pc_21950

dec_label_pc_21950:                               ; preds = %bb, %dec_label_pc_21943
  %v5_21959 = phi i32 [ %v2_2194e, %bb ], [ %v2_21947, %dec_label_pc_21943 ]
  ret i32 %v5_21959
}

define i32 @function_21960(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21960:
  %v1_21964 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21964 = xor i32 %v1_21964, %arg1
  %v3_21964 = icmp eq i32 %v2_21964, 0
  store i32 %v2_21964, i32* @eax, align 4
  %v1_2196b = icmp eq i1 %v3_21964, false
  br i1 %v1_2196b, label %bb, label %dec_label_pc_2196d

bb:                                               ; preds = %dec_label_pc_21960
  %v2_2196b = call i32 @function_21974()
  br label %dec_label_pc_2196d

dec_label_pc_2196d:                               ; preds = %bb, %dec_label_pc_21960
  %v0_21973 = phi i32 [ %v2_2196b, %bb ], [ %v2_21964, %dec_label_pc_21960 ]
  ret i32 %v0_21973

; uselistorder directives
  uselistorder i32 ()* @function_21974, { 1, 0 }
}

define i32 @function_21974() local_unnamed_addr {
dec_label_pc_21974:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IvP7CWalletRK7uint25610ChangeTypeNS_8functionIFvSF_SI_SJ_EEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21980:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21980 = load i32, i32* %edi.global-to-local, align 4
  %v0_21981 = load i32, i32* %esi.global-to-local, align 4
  %v0_21982 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21996 = icmp eq i32* %arg1, null
  br i1 %v1_21996, label %bb, label %dec_label_pc_2199a

bb:                                               ; preds = %dec_label_pc_21980
  %v0_2198a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21998 = call i32 @function_219f0(i32 %v0_2198a, i32 %v0_21982, i32 %v0_21981, i32 %v0_21980)
  br label %dec_label_pc_2199a

dec_label_pc_2199a:                               ; preds = %bb, %dec_label_pc_21980
  %v1_2199a = add i32 %tmp100, 16
  %v2_2199a = inttoptr i32 %v1_2199a to i32*
  %v3_2199a = load i32, i32* %v2_2199a, align 4
  %v1_219a1 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_219a7 = call i32 @unknown_41bf0(i32 %v1_219a1, i32 %v3_2199a)
  %v2_219ac = load i32, i32* %arg1, align 4
  store i32 %v2_219ac, i32* %ebx.global-to-local, align 4
  %v12_219ae = icmp eq i32 %v2_219ac, %tmp100
  %v1_219b0 = icmp eq i1 %v12_219ae, false
  br i1 %v1_219b0, label %dec_label_pc_219ba, label %dec_label_pc_219b2

dec_label_pc_219b2:                               ; preds = %dec_label_pc_2199a
  %v0_219b2 = call i32 @function_219d3()
  ret i32 %v0_219b2

dec_label_pc_219ba:                               ; preds = %dec_label_pc_2199a
  %v1_219ba = inttoptr i32 %v2_219ac to i32*
  %v2_219ba = load i32, i32* %v1_219ba, align 4
  store i32 %v2_219ba, i32* %esi.global-to-local, align 4
  %v1_219bc = add i32 %v2_219ac, 12
  store i32 %v1_219bc, i32* @eax, align 4
  %v2_219c2 = call i32 @function_353e0(i32 %v1_219bc)
  ret i32 %v2_219c2

; uselistorder directives
  uselistorder i32 %v2_219ac, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_219d3() local_unnamed_addr {
dec_label_pc_219d3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_219d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_219d7 = xor i32 %v1_219d7, %tmp9
  %v3_219d7 = icmp eq i32 %v2_219d7, 0
  store i32 %v2_219d7, i32* @eax, align 4
  %v1_219de = icmp eq i1 %v3_219d7, false
  br i1 %v1_219de, label %bb, label %dec_label_pc_219e0

bb:                                               ; preds = %dec_label_pc_219d3
  %v2_219de = call i32 @function_21a04()
  br label %dec_label_pc_219e0

dec_label_pc_219e0:                               ; preds = %bb, %dec_label_pc_219d3
  %v5_219e9 = phi i32 [ %v2_219de, %bb ], [ %v2_219d7, %dec_label_pc_219d3 ]
  ret i32 %v5_219e9
}

define i32 @function_219f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_219f0:
  %v1_219f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_219f4 = xor i32 %v1_219f4, %arg1
  %v3_219f4 = icmp eq i32 %v2_219f4, 0
  store i32 %v2_219f4, i32* @eax, align 4
  %v1_219fb = icmp eq i1 %v3_219f4, false
  br i1 %v1_219fb, label %bb, label %dec_label_pc_219fd

bb:                                               ; preds = %dec_label_pc_219f0
  %v2_219fb = call i32 @function_21a04()
  br label %dec_label_pc_219fd

dec_label_pc_219fd:                               ; preds = %bb, %dec_label_pc_219f0
  %v0_21a03 = phi i32 [ %v2_219fb, %bb ], [ %v2_219f4, %dec_label_pc_219f0 ]
  ret i32 %v0_21a03

; uselistorder directives
  uselistorder i32 ()* @function_21a04, { 1, 0 }
}

define i32 @function_21a04() local_unnamed_addr {
dec_label_pc_21a04:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot3IbRKSsSF_jNS_8functionIFbSF_SF_jEEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21a10:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21a10 = load i32, i32* %edi.global-to-local, align 4
  %v0_21a11 = load i32, i32* %esi.global-to-local, align 4
  %v0_21a12 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21a26 = icmp eq i32* %arg1, null
  br i1 %v1_21a26, label %bb, label %dec_label_pc_21a2a

bb:                                               ; preds = %dec_label_pc_21a10
  %v0_21a1a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21a28 = call i32 @function_21a80(i32 %v0_21a1a, i32 %v0_21a12, i32 %v0_21a11, i32 %v0_21a10)
  br label %dec_label_pc_21a2a

dec_label_pc_21a2a:                               ; preds = %bb, %dec_label_pc_21a10
  %v1_21a2a = add i32 %tmp100, 16
  %v2_21a2a = inttoptr i32 %v1_21a2a to i32*
  %v3_21a2a = load i32, i32* %v2_21a2a, align 4
  %v1_21a31 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21a37 = call i32 @unknown_41e60(i32 %v1_21a31, i32 %v3_21a2a)
  %v2_21a3c = load i32, i32* %arg1, align 4
  store i32 %v2_21a3c, i32* %ebx.global-to-local, align 4
  %v12_21a3e = icmp eq i32 %v2_21a3c, %tmp100
  %v1_21a40 = icmp eq i1 %v12_21a3e, false
  br i1 %v1_21a40, label %dec_label_pc_21a4a, label %dec_label_pc_21a42

dec_label_pc_21a42:                               ; preds = %dec_label_pc_21a2a
  %v0_21a42 = call i32 @function_21a63()
  ret i32 %v0_21a42

dec_label_pc_21a4a:                               ; preds = %dec_label_pc_21a2a
  %v1_21a4a = inttoptr i32 %v2_21a3c to i32*
  %v2_21a4a = load i32, i32* %v1_21a4a, align 4
  store i32 %v2_21a4a, i32* %esi.global-to-local, align 4
  %v1_21a4c = add i32 %v2_21a3c, 12
  store i32 %v1_21a4c, i32* @eax, align 4
  %v2_21a52 = call i32 @function_35470(i32 %v1_21a4c)
  ret i32 %v2_21a52

; uselistorder directives
  uselistorder i32 %v2_21a3c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_21a63() local_unnamed_addr {
dec_label_pc_21a63:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_21a67 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21a67 = xor i32 %v1_21a67, %tmp9
  %v3_21a67 = icmp eq i32 %v2_21a67, 0
  store i32 %v2_21a67, i32* @eax, align 4
  %v1_21a6e = icmp eq i1 %v3_21a67, false
  br i1 %v1_21a6e, label %bb, label %dec_label_pc_21a70

bb:                                               ; preds = %dec_label_pc_21a63
  %v2_21a6e = call i32 @function_21a94()
  br label %dec_label_pc_21a70

dec_label_pc_21a70:                               ; preds = %bb, %dec_label_pc_21a63
  %v5_21a79 = phi i32 [ %v2_21a6e, %bb ], [ %v2_21a67, %dec_label_pc_21a63 ]
  ret i32 %v5_21a79
}

define i32 @function_21a80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21a80:
  %v1_21a84 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21a84 = xor i32 %v1_21a84, %arg1
  %v3_21a84 = icmp eq i32 %v2_21a84, 0
  store i32 %v2_21a84, i32* @eax, align 4
  %v1_21a8b = icmp eq i1 %v3_21a84, false
  br i1 %v1_21a8b, label %bb, label %dec_label_pc_21a8d

bb:                                               ; preds = %dec_label_pc_21a80
  %v2_21a8b = call i32 @function_21a94()
  br label %dec_label_pc_21a8d

dec_label_pc_21a8d:                               ; preds = %bb, %dec_label_pc_21a80
  %v0_21a93 = phi i32 [ %v2_21a8b, %bb ], [ %v2_21a84, %dec_label_pc_21a80 ]
  ret i32 %v0_21a93

; uselistorder directives
  uselistorder i32 ()* @function_21a94, { 1, 0 }
}

define i32 @function_21a94() local_unnamed_addr {
dec_label_pc_21a94:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbxNS_8functionIFbxEEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21aa0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21aa0 = load i32, i32* %edi.global-to-local, align 4
  %v0_21aa1 = load i32, i32* %esi.global-to-local, align 4
  %v0_21aa2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21ab6 = icmp eq i32* %arg1, null
  br i1 %v1_21ab6, label %bb, label %dec_label_pc_21aba

bb:                                               ; preds = %dec_label_pc_21aa0
  %v0_21aaa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21ab8 = call i32 @function_21b10(i32 %v0_21aaa, i32 %v0_21aa2, i32 %v0_21aa1, i32 %v0_21aa0)
  br label %dec_label_pc_21aba

dec_label_pc_21aba:                               ; preds = %bb, %dec_label_pc_21aa0
  %v1_21aba = add i32 %tmp100, 16
  %v2_21aba = inttoptr i32 %v1_21aba to i32*
  %v3_21aba = load i32, i32* %v2_21aba, align 4
  %v1_21ac1 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21ac7 = call i32 @unknown_420d0(i32 %v1_21ac1, i32 %v3_21aba)
  %v2_21acc = load i32, i32* %arg1, align 4
  store i32 %v2_21acc, i32* %ebx.global-to-local, align 4
  %v12_21ace = icmp eq i32 %v2_21acc, %tmp100
  %v1_21ad0 = icmp eq i1 %v12_21ace, false
  br i1 %v1_21ad0, label %dec_label_pc_21ada, label %dec_label_pc_21ad2

dec_label_pc_21ad2:                               ; preds = %dec_label_pc_21aba
  %v0_21ad2 = call i32 @function_21af3()
  ret i32 %v0_21ad2

dec_label_pc_21ada:                               ; preds = %dec_label_pc_21aba
  %v1_21ada = inttoptr i32 %v2_21acc to i32*
  %v2_21ada = load i32, i32* %v1_21ada, align 4
  store i32 %v2_21ada, i32* %esi.global-to-local, align 4
  %v1_21adc = add i32 %v2_21acc, 12
  store i32 %v1_21adc, i32* @eax, align 4
  %v2_21ae2 = call i32 @function_35500(i32 %v1_21adc)
  ret i32 %v2_21ae2

; uselistorder directives
  uselistorder i32 %v2_21acc, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_21af3() local_unnamed_addr {
dec_label_pc_21af3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_21af7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21af7 = xor i32 %v1_21af7, %tmp9
  %v3_21af7 = icmp eq i32 %v2_21af7, 0
  store i32 %v2_21af7, i32* @eax, align 4
  %v1_21afe = icmp eq i1 %v3_21af7, false
  br i1 %v1_21afe, label %bb, label %dec_label_pc_21b00

bb:                                               ; preds = %dec_label_pc_21af3
  %v2_21afe = call i32 @function_21b24()
  br label %dec_label_pc_21b00

dec_label_pc_21b00:                               ; preds = %bb, %dec_label_pc_21af3
  %v5_21b09 = phi i32 [ %v2_21afe, %bb ], [ %v2_21af7, %dec_label_pc_21af3 ]
  ret i32 %v5_21b09
}

define i32 @function_21b10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21b10:
  %v1_21b14 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21b14 = xor i32 %v1_21b14, %arg1
  %v3_21b14 = icmp eq i32 %v2_21b14, 0
  store i32 %v2_21b14, i32* @eax, align 4
  %v1_21b1b = icmp eq i1 %v3_21b14, false
  br i1 %v1_21b1b, label %bb, label %dec_label_pc_21b1d

bb:                                               ; preds = %dec_label_pc_21b10
  %v2_21b1b = call i32 @function_21b24()
  br label %dec_label_pc_21b1d

dec_label_pc_21b1d:                               ; preds = %bb, %dec_label_pc_21b10
  %v0_21b23 = phi i32 [ %v2_21b1b, %bb ], [ %v2_21b14, %dec_label_pc_21b10 ]
  ret i32 %v0_21b23

; uselistorder directives
  uselistorder i32 ()* @function_21b24, { 1, 0 }
}

define i32 @function_21b24() local_unnamed_addr {
dec_label_pc_21b24:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IvRKSsNS_8functionIFvSF_EEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21b30:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21b30 = load i32, i32* %edi.global-to-local, align 4
  %v0_21b31 = load i32, i32* %esi.global-to-local, align 4
  %v0_21b32 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21b46 = icmp eq i32* %arg1, null
  br i1 %v1_21b46, label %bb, label %dec_label_pc_21b4a

bb:                                               ; preds = %dec_label_pc_21b30
  %v0_21b3a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21b48 = call i32 @function_21ba0(i32 %v0_21b3a, i32 %v0_21b32, i32 %v0_21b31, i32 %v0_21b30)
  br label %dec_label_pc_21b4a

dec_label_pc_21b4a:                               ; preds = %bb, %dec_label_pc_21b30
  %v1_21b4a = add i32 %tmp100, 16
  %v2_21b4a = inttoptr i32 %v1_21b4a to i32*
  %v3_21b4a = load i32, i32* %v2_21b4a, align 4
  %v1_21b51 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21b57 = call i32 @unknown_42340(i32 %v1_21b51, i32 %v3_21b4a)
  %v2_21b5c = load i32, i32* %arg1, align 4
  store i32 %v2_21b5c, i32* %ebx.global-to-local, align 4
  %v12_21b5e = icmp eq i32 %v2_21b5c, %tmp100
  %v1_21b60 = icmp eq i1 %v12_21b5e, false
  br i1 %v1_21b60, label %dec_label_pc_21b6a, label %dec_label_pc_21b62

dec_label_pc_21b62:                               ; preds = %dec_label_pc_21b4a
  %v0_21b62 = call i32 @function_21b83()
  ret i32 %v0_21b62

dec_label_pc_21b6a:                               ; preds = %dec_label_pc_21b4a
  %v1_21b6a = inttoptr i32 %v2_21b5c to i32*
  %v2_21b6a = load i32, i32* %v1_21b6a, align 4
  store i32 %v2_21b6a, i32* %esi.global-to-local, align 4
  %v1_21b6c = add i32 %v2_21b5c, 12
  store i32 %v1_21b6c, i32* @eax, align 4
  %v2_21b72 = call i32 @function_35590(i32 %v1_21b6c)
  ret i32 %v2_21b72

; uselistorder directives
  uselistorder i32 %v2_21b5c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_21b83() local_unnamed_addr {
dec_label_pc_21b83:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_21b87 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21b87 = xor i32 %v1_21b87, %tmp9
  %v3_21b87 = icmp eq i32 %v2_21b87, 0
  store i32 %v2_21b87, i32* @eax, align 4
  %v1_21b8e = icmp eq i1 %v3_21b87, false
  br i1 %v1_21b8e, label %bb, label %dec_label_pc_21b90

bb:                                               ; preds = %dec_label_pc_21b83
  %v2_21b8e = call i32 @function_21bb4()
  br label %dec_label_pc_21b90

dec_label_pc_21b90:                               ; preds = %bb, %dec_label_pc_21b83
  %v5_21b99 = phi i32 [ %v2_21b8e, %bb ], [ %v2_21b87, %dec_label_pc_21b83 ]
  ret i32 %v5_21b99
}

define i32 @function_21ba0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21ba0:
  %v1_21ba4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21ba4 = xor i32 %v1_21ba4, %arg1
  %v3_21ba4 = icmp eq i32 %v2_21ba4, 0
  store i32 %v2_21ba4, i32* @eax, align 4
  %v1_21bab = icmp eq i1 %v3_21ba4, false
  br i1 %v1_21bab, label %bb, label %dec_label_pc_21bad

bb:                                               ; preds = %dec_label_pc_21ba0
  %v2_21bab = call i32 @function_21bb4()
  br label %dec_label_pc_21bad

dec_label_pc_21bad:                               ; preds = %bb, %dec_label_pc_21ba0
  %v0_21bb3 = phi i32 [ %v2_21bab, %bb ], [ %v2_21ba4, %dec_label_pc_21ba0 ]
  ret i32 %v0_21bb3

; uselistorder directives
  uselistorder i32 ()* @function_21bb4, { 1, 0 }
}

define i32 @function_21bb4() local_unnamed_addr {
dec_label_pc_21bb4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21bc0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21bc0 = load i32, i32* %edi.global-to-local, align 4
  %v0_21bc1 = load i32, i32* %esi.global-to-local, align 4
  %v0_21bc2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21bd6 = icmp eq i32* %arg1, null
  br i1 %v1_21bd6, label %bb, label %dec_label_pc_21bda

bb:                                               ; preds = %dec_label_pc_21bc0
  %v0_21bca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21bd8 = call i32 @function_21c30(i32 %v0_21bca, i32 %v0_21bc2, i32 %v0_21bc1, i32 %v0_21bc0)
  br label %dec_label_pc_21bda

dec_label_pc_21bda:                               ; preds = %bb, %dec_label_pc_21bc0
  %v1_21bda = add i32 %tmp100, 16
  %v2_21bda = inttoptr i32 %v1_21bda to i32*
  %v3_21bda = load i32, i32* %v2_21bda, align 4
  %v1_21be1 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21be7 = call i32 @unknown_425b0(i32 %v1_21be1, i32 %v3_21bda)
  %v2_21bec = load i32, i32* %arg1, align 4
  store i32 %v2_21bec, i32* %ebx.global-to-local, align 4
  %v12_21bee = icmp eq i32 %v2_21bec, %tmp100
  %v1_21bf0 = icmp eq i1 %v12_21bee, false
  br i1 %v1_21bf0, label %dec_label_pc_21bfa, label %dec_label_pc_21bf2

dec_label_pc_21bf2:                               ; preds = %dec_label_pc_21bda
  %v0_21bf2 = call i32 @function_21c13()
  ret i32 %v0_21bf2

dec_label_pc_21bfa:                               ; preds = %dec_label_pc_21bda
  %v1_21bfa = inttoptr i32 %v2_21bec to i32*
  %v2_21bfa = load i32, i32* %v1_21bfa, align 4
  store i32 %v2_21bfa, i32* %esi.global-to-local, align 4
  %v1_21bfc = add i32 %v2_21bec, 12
  store i32 %v1_21bfc, i32* @eax, align 4
  %v2_21c02 = call i32 @function_35620(i32 %v1_21bfc)
  ret i32 %v2_21c02

; uselistorder directives
  uselistorder i32 %v2_21bec, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_21c13() local_unnamed_addr {
dec_label_pc_21c13:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_21c17 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21c17 = xor i32 %v1_21c17, %tmp9
  %v3_21c17 = icmp eq i32 %v2_21c17, 0
  store i32 %v2_21c17, i32* @eax, align 4
  %v1_21c1e = icmp eq i1 %v3_21c17, false
  br i1 %v1_21c1e, label %bb, label %dec_label_pc_21c20

bb:                                               ; preds = %dec_label_pc_21c13
  %v2_21c1e = call i32 @function_21c44()
  br label %dec_label_pc_21c20

dec_label_pc_21c20:                               ; preds = %bb, %dec_label_pc_21c13
  %v5_21c29 = phi i32 [ %v2_21c1e, %bb ], [ %v2_21c17, %dec_label_pc_21c13 ]
  ret i32 %v5_21c29
}

define i32 @function_21c30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21c30:
  %v1_21c34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21c34 = xor i32 %v1_21c34, %arg1
  %v3_21c34 = icmp eq i32 %v2_21c34, 0
  store i32 %v2_21c34, i32* @eax, align 4
  %v1_21c3b = icmp eq i1 %v3_21c34, false
  br i1 %v1_21c3b, label %bb, label %dec_label_pc_21c3d

bb:                                               ; preds = %dec_label_pc_21c30
  %v2_21c3b = call i32 @function_21c44()
  br label %dec_label_pc_21c3d

dec_label_pc_21c3d:                               ; preds = %bb, %dec_label_pc_21c30
  %v0_21c43 = phi i32 [ %v2_21c3b, %bb ], [ %v2_21c34, %dec_label_pc_21c30 ]
  ret i32 %v0_21c43

; uselistorder directives
  uselistorder i32 ()* @function_21c44, { 1, 0 }
}

define i32 @function_21c44() local_unnamed_addr {
dec_label_pc_21c44:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot0IvNS_8functionIFvvEEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21c50:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21c50 = load i32, i32* %edi.global-to-local, align 4
  %v0_21c51 = load i32, i32* %esi.global-to-local, align 4
  %v0_21c52 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21c66 = icmp eq i32* %arg1, null
  br i1 %v1_21c66, label %bb, label %dec_label_pc_21c6a

bb:                                               ; preds = %dec_label_pc_21c50
  %v0_21c5a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21c68 = call i32 @function_21cc0(i32 %v0_21c5a, i32 %v0_21c52, i32 %v0_21c51, i32 %v0_21c50)
  br label %dec_label_pc_21c6a

dec_label_pc_21c6a:                               ; preds = %bb, %dec_label_pc_21c50
  %v1_21c6a = add i32 %tmp100, 16
  %v2_21c6a = inttoptr i32 %v1_21c6a to i32*
  %v3_21c6a = load i32, i32* %v2_21c6a, align 4
  %v1_21c71 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21c77 = call i32 @unknown_42820(i32 %v1_21c71, i32 %v3_21c6a)
  %v2_21c7c = load i32, i32* %arg1, align 4
  store i32 %v2_21c7c, i32* %ebx.global-to-local, align 4
  %v12_21c7e = icmp eq i32 %v2_21c7c, %tmp100
  %v1_21c80 = icmp eq i1 %v12_21c7e, false
  br i1 %v1_21c80, label %dec_label_pc_21c8a, label %dec_label_pc_21c82

dec_label_pc_21c82:                               ; preds = %dec_label_pc_21c6a
  %v0_21c82 = call i32 @function_21ca3()
  ret i32 %v0_21c82

dec_label_pc_21c8a:                               ; preds = %dec_label_pc_21c6a
  %v1_21c8a = inttoptr i32 %v2_21c7c to i32*
  %v2_21c8a = load i32, i32* %v1_21c8a, align 4
  store i32 %v2_21c8a, i32* %esi.global-to-local, align 4
  %v1_21c8c = add i32 %v2_21c7c, 12
  store i32 %v1_21c8c, i32* @eax, align 4
  %v2_21c92 = call i32 @function_356b0(i32 %v1_21c8c)
  ret i32 %v2_21c92

; uselistorder directives
  uselistorder i32 %v2_21c7c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_21ca3() local_unnamed_addr {
dec_label_pc_21ca3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_21ca7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21ca7 = xor i32 %v1_21ca7, %tmp9
  %v3_21ca7 = icmp eq i32 %v2_21ca7, 0
  store i32 %v2_21ca7, i32* @eax, align 4
  %v1_21cae = icmp eq i1 %v3_21ca7, false
  br i1 %v1_21cae, label %bb, label %dec_label_pc_21cb0

bb:                                               ; preds = %dec_label_pc_21ca3
  %v2_21cae = call i32 @function_21cd4()
  br label %dec_label_pc_21cb0

dec_label_pc_21cb0:                               ; preds = %bb, %dec_label_pc_21ca3
  %v5_21cb9 = phi i32 [ %v2_21cae, %bb ], [ %v2_21ca7, %dec_label_pc_21ca3 ]
  ret i32 %v5_21cb9
}

define i32 @function_21cc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21cc0:
  %v1_21cc4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21cc4 = xor i32 %v1_21cc4, %arg1
  %v3_21cc4 = icmp eq i32 %v2_21cc4, 0
  store i32 %v2_21cc4, i32* @eax, align 4
  %v1_21ccb = icmp eq i1 %v3_21cc4, false
  br i1 %v1_21ccb, label %bb, label %dec_label_pc_21ccd

bb:                                               ; preds = %dec_label_pc_21cc0
  %v2_21ccb = call i32 @function_21cd4()
  br label %dec_label_pc_21ccd

dec_label_pc_21ccd:                               ; preds = %bb, %dec_label_pc_21cc0
  %v0_21cd3 = phi i32 [ %v2_21ccb, %bb ], [ %v2_21cc4, %dec_label_pc_21cc0 ]
  ret i32 %v0_21cd3

; uselistorder directives
  uselistorder i32 ()* @function_21cd4, { 1, 0 }
}

define i32 @function_21cd4() local_unnamed_addr {
dec_label_pc_21cd4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21ce0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21ce0 = load i32, i32* %edi.global-to-local, align 4
  %v0_21ce1 = load i32, i32* %esi.global-to-local, align 4
  %v0_21ce2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21cf6 = icmp eq i32* %arg1, null
  br i1 %v1_21cf6, label %bb, label %dec_label_pc_21cfa

bb:                                               ; preds = %dec_label_pc_21ce0
  %v0_21cea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21cf8 = call i32 @function_21d50(i32 %v0_21cea, i32 %v0_21ce2, i32 %v0_21ce1, i32 %v0_21ce0)
  br label %dec_label_pc_21cfa

dec_label_pc_21cfa:                               ; preds = %bb, %dec_label_pc_21ce0
  %v1_21cfa = add i32 %tmp100, 16
  %v2_21cfa = inttoptr i32 %v1_21cfa to i32*
  %v3_21cfa = load i32, i32* %v2_21cfa, align 4
  %v1_21d01 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21d07 = call i32 @unknown_42a90(i32 %v1_21d01, i32 %v3_21cfa)
  %v2_21d0c = load i32, i32* %arg1, align 4
  store i32 %v2_21d0c, i32* %ebx.global-to-local, align 4
  %v12_21d0e = icmp eq i32 %v2_21d0c, %tmp100
  %v1_21d10 = icmp eq i1 %v12_21d0e, false
  br i1 %v1_21d10, label %dec_label_pc_21d1a, label %dec_label_pc_21d12

dec_label_pc_21d12:                               ; preds = %dec_label_pc_21cfa
  %v0_21d12 = call i32 @function_21d33()
  ret i32 %v0_21d12

dec_label_pc_21d1a:                               ; preds = %dec_label_pc_21cfa
  %v1_21d1a = inttoptr i32 %v2_21d0c to i32*
  %v2_21d1a = load i32, i32* %v1_21d1a, align 4
  store i32 %v2_21d1a, i32* %esi.global-to-local, align 4
  %v1_21d1c = add i32 %v2_21d0c, 12
  store i32 %v1_21d1c, i32* @eax, align 4
  %v2_21d22 = call i32 @function_35740(i32 %v1_21d1c)
  ret i32 %v2_21d22

; uselistorder directives
  uselistorder i32 %v2_21d0c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_21d33() local_unnamed_addr {
dec_label_pc_21d33:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_21d37 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21d37 = xor i32 %v1_21d37, %tmp9
  %v3_21d37 = icmp eq i32 %v2_21d37, 0
  store i32 %v2_21d37, i32* @eax, align 4
  %v1_21d3e = icmp eq i1 %v3_21d37, false
  br i1 %v1_21d3e, label %bb, label %dec_label_pc_21d40

bb:                                               ; preds = %dec_label_pc_21d33
  %v2_21d3e = call i32 @function_21d64()
  br label %dec_label_pc_21d40

dec_label_pc_21d40:                               ; preds = %bb, %dec_label_pc_21d33
  %v5_21d49 = phi i32 [ %v2_21d3e, %bb ], [ %v2_21d37, %dec_label_pc_21d33 ]
  ret i32 %v5_21d49
}

define i32 @function_21d50(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21d50:
  %v1_21d54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21d54 = xor i32 %v1_21d54, %arg1
  %v3_21d54 = icmp eq i32 %v2_21d54, 0
  store i32 %v2_21d54, i32* @eax, align 4
  %v1_21d5b = icmp eq i1 %v3_21d54, false
  br i1 %v1_21d5b, label %bb, label %dec_label_pc_21d5d

bb:                                               ; preds = %dec_label_pc_21d50
  %v2_21d5b = call i32 @function_21d64()
  br label %dec_label_pc_21d5d

dec_label_pc_21d5d:                               ; preds = %bb, %dec_label_pc_21d50
  %v0_21d63 = phi i32 [ %v2_21d5b, %bb ], [ %v2_21d54, %dec_label_pc_21d50 ]
  ret i32 %v0_21d63

; uselistorder directives
  uselistorder i32 ()* @function_21d64, { 1, 0 }
}

define i32 @function_21d64() local_unnamed_addr {
dec_label_pc_21d64:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSG_SH_EEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_21d70:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_21d70 = load i32, i32* %edi.global-to-local, align 4
  %v0_21d71 = load i32, i32* %esi.global-to-local, align 4
  %v0_21d72 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edi.global-to-local, align 4
  %v1_21d86 = icmp eq i32* %arg1, null
  br i1 %v1_21d86, label %bb, label %dec_label_pc_21d8a

bb:                                               ; preds = %dec_label_pc_21d70
  %v0_21d7a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v5_21d88 = call i32 @function_21de0(i32 %v0_21d7a, i32 %v0_21d72, i32 %v0_21d71, i32 %v0_21d70)
  br label %dec_label_pc_21d8a

dec_label_pc_21d8a:                               ; preds = %bb, %dec_label_pc_21d70
  %v1_21d8a = add i32 %tmp100, 16
  %v2_21d8a = inttoptr i32 %v1_21d8a to i32*
  %v3_21d8a = load i32, i32* %v2_21d8a, align 4
  %v1_21d91 = add i32 %tmp100, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_21d97 = call i32 @unknown_42d00(i32 %v1_21d91, i32 %v3_21d8a)
  %v2_21d9c = load i32, i32* %arg1, align 4
  store i32 %v2_21d9c, i32* %ebx.global-to-local, align 4
  %v12_21d9e = icmp eq i32 %v2_21d9c, %tmp100
  %v1_21da0 = icmp eq i1 %v12_21d9e, false
  br i1 %v1_21da0, label %dec_label_pc_21daa, label %dec_label_pc_21da2

dec_label_pc_21da2:                               ; preds = %dec_label_pc_21d8a
  %v0_21da2 = call i32 @function_21dc3()
  ret i32 %v0_21da2

dec_label_pc_21daa:                               ; preds = %dec_label_pc_21d8a
  %v1_21daa = inttoptr i32 %v2_21d9c to i32*
  %v2_21daa = load i32, i32* %v1_21daa, align 4
  store i32 %v2_21daa, i32* %esi.global-to-local, align 4
  %v1_21dac = add i32 %v2_21d9c, 12
  store i32 %v1_21dac, i32* @eax, align 4
  %v2_21db2 = call i32 @function_357d0(i32 %v1_21dac)
  ret i32 %v2_21db2

; uselistorder directives
  uselistorder i32 %v2_21d9c, { 2, 1, 0, 3 }
  uselistorder i32 %tmp100, { 0, 2, 1, 3 }
}

define i32 @function_21dc3() local_unnamed_addr {
dec_label_pc_21dc3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v1_21dc7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21dc7 = xor i32 %v1_21dc7, %tmp9
  %v3_21dc7 = icmp eq i32 %v2_21dc7, 0
  store i32 %v2_21dc7, i32* @eax, align 4
  %v1_21dce = icmp eq i1 %v3_21dc7, false
  br i1 %v1_21dce, label %bb, label %dec_label_pc_21dd0

bb:                                               ; preds = %dec_label_pc_21dc3
  %v2_21dce = call i32 @function_21df4()
  br label %dec_label_pc_21dd0

dec_label_pc_21dd0:                               ; preds = %bb, %dec_label_pc_21dc3
  %v5_21dd9 = phi i32 [ %v2_21dce, %bb ], [ %v2_21dc7, %dec_label_pc_21dc3 ]
  ret i32 %v5_21dd9
}

define i32 @function_21de0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21de0:
  %v1_21de4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21de4 = xor i32 %v1_21de4, %arg1
  %v3_21de4 = icmp eq i32 %v2_21de4, 0
  store i32 %v2_21de4, i32* @eax, align 4
  %v1_21deb = icmp eq i1 %v3_21de4, false
  br i1 %v1_21deb, label %bb, label %dec_label_pc_21ded

bb:                                               ; preds = %dec_label_pc_21de0
  %v2_21deb = call i32 @function_21df4()
  br label %dec_label_pc_21ded

dec_label_pc_21ded:                               ; preds = %bb, %dec_label_pc_21de0
  %v0_21df3 = phi i32 [ %v2_21deb, %bb ], [ %v2_21de4, %dec_label_pc_21de0 ]
  ret i32 %v0_21df3

; uselistorder directives
  uselistorder i32 ()* @function_21df4, { 1, 0 }
}

define i32 @function_21df4() local_unnamed_addr {
dec_label_pc_21df4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvP15CCryptoKeyStoreNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21e00:
  ret i32 0
}

define i32 @function_21e2a(i32* %arg1) local_unnamed_addr {
dec_label_pc_21e2a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_21e2a = load i32, i32* %ebx.global-to-local, align 4
  %v1_21e2a = add i32 %v0_21e2a, 1149890808
  %v2_21e2a = inttoptr i32 %v1_21e2a to i32*
  %v3_21e2a = load i32, i32* %v2_21e2a, align 4
  %v4_21e2a = add i32 %v3_21e2a, 1
  store i32 %v4_21e2a, i32* %v2_21e2a, align 4
  %v0_21e30 = load i32, i32* %eax.global-to-local, align 4
  %v1_21e30 = trunc i32 %v0_21e30 to i8
  %v2_21e30 = and i8 %v1_21e30, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_21e30 = icmp eq i8 %v2_21e30, 0
  %v8_21e30 = zext i8 %v2_21e30 to i32
  %v10_21e30 = and i32 %v0_21e30, -256
  %v11_21e30 = or i32 %v8_21e30, %v10_21e30
  store i32 %v11_21e30, i32* %eax.global-to-local, align 4
  br i1 %v3_21e30, label %dec_label_pc_21e5c, label %dec_label_pc_21e34

dec_label_pc_21e34:                               ; preds = %dec_label_pc_21e2a
  %v0_21e34 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21e34 = add i32 %v0_21e34, 16
  %v2_21e34 = inttoptr i32 %v1_21e34 to i32*
  %v3_21e34 = load i32, i32* %v2_21e34, align 4
  store i32 %v3_21e34, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_21e3b = add i32 %tmp102, 16
  %v3_21e3b = inttoptr i32 %v2_21e3b to i32*
  store i32 %v3_21e34, i32* %v3_21e3b, align 4
  %v0_21e3e = load i32, i32* %edx.global-to-local, align 4
  %v1_21e3e = add i32 %v0_21e3e, 20
  %v2_21e3e = inttoptr i32 %v1_21e3e to i8*
  store i8 0, i8* %v2_21e3e, align 1
  %v0_21e42 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21e42 = add i32 %v0_21e42, 20
  %v2_21e42 = inttoptr i32 %v1_21e42 to i8*
  %v3_21e42 = load i8, i8* %v2_21e42, align 1
  %v10_21e42 = icmp eq i8 %v3_21e42, 0
  br i1 %v10_21e42, label %dec_label_pc_21e52, label %dec_label_pc_21e48

dec_label_pc_21e48:                               ; preds = %dec_label_pc_21e34
  %v1_21e48 = add i32 %v0_21e42, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_21e48 = inttoptr i32 %v1_21e48 to i32*
  %v3_21e48 = load i32, i32* %v2_21e48, align 4
  store i32 %v3_21e48, i32* %eax.global-to-local, align 4
  %v0_21e4b = load i32, i32* %edx.global-to-local, align 4
  %v1_21e4b = add i32 %v0_21e4b, 20
  %v2_21e4b = inttoptr i32 %v1_21e4b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_21e4b, align 1
  %v0_21e4f = load i32, i32* %eax.global-to-local, align 4
  %v1_21e4f = load i32, i32* %edx.global-to-local, align 4
  %v2_21e4f = add i32 %v1_21e4f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_21e4f = inttoptr i32 %v2_21e4f to i32*
  store i32 %v0_21e4f, i32* %v3_21e4f, align 4
  %v0_21e52.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_21e52

dec_label_pc_21e52:                               ; preds = %dec_label_pc_21e48, %dec_label_pc_21e34
  %v0_21e52 = phi i32 [ %v0_21e52.pre, %dec_label_pc_21e48 ], [ %v0_21e42, %dec_label_pc_21e34 ]
  %v1_21e52 = add i32 %v0_21e52, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_21e52 = inttoptr i32 %v1_21e52 to i32*
  %v3_21e52 = load i32, i32* %v2_21e52, align 4
  store i32 %v3_21e52, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_21e59 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_21e59 = inttoptr i32 %v2_21e59 to i32*
  store i32 %v3_21e52, i32* %v3_21e59, align 4
  br label %dec_label_pc_21e5c

dec_label_pc_21e5c:                               ; preds = %dec_label_pc_21e52, %dec_label_pc_21e2a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_21e60 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_21e60, i32* %eax.global-to-local, align 4
  %v1_21e62 = add i32 %tmp102, 12
  %v2_21e62 = inttoptr i32 %v1_21e62 to i32*
  store i32 0, i32* %v2_21e62, align 4
  %v0_21e69 = load i32, i32* %eax.global-to-local, align 4
  %v1_21e69 = load i32, i32* %edx.global-to-local, align 4
  %v2_21e69 = inttoptr i32 %v1_21e69 to i32*
  store i32 %v0_21e69, i32* %v2_21e69, align 4
  %v0_21e6b = load i32, i32* %ebx.global-to-local, align 4
  %v1_21e6b = add i32 %v0_21e6b, 12
  %v2_21e6b = inttoptr i32 %v1_21e6b to i32*
  %v3_21e6b = load i32, i32* %v2_21e6b, align 4
  store i32 %v3_21e6b, i32* %eax.global-to-local, align 4
  %v0_21e6e = load i32, i32* %edx.global-to-local, align 4
  %v1_21e6e = add i32 %v0_21e6e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_21e6e = inttoptr i32 %v1_21e6e to i32*
  store i32 0, i32* %v2_21e6e, align 4
  %v0_21e75 = load i32, i32* %esi.global-to-local, align 4
  %v1_21e75 = load i32, i32* %edx.global-to-local, align 4
  %v2_21e75 = add i32 %v1_21e75, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_21e75 = inttoptr i32 %v2_21e75 to i32*
  store i32 %v0_21e75, i32* %v3_21e75, align 4
  %v0_21e78 = load i32, i32* %eax.global-to-local, align 4
  %v1_21e78 = icmp eq i32 %v0_21e78, 0
  br i1 %v1_21e78, label %dec_label_pc_21e93, label %dec_label_pc_21e7c

dec_label_pc_21e7c:                               ; preds = %dec_label_pc_21e5c
  %v0_21e7c = load i32, i32* %edx.global-to-local, align 4
  %v2_21e87 = call i32 @unknown_43c00(i32 %v0_21e78, i32 %v0_21e7c)
  store i32 %v2_21e87, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_21e87, i32* %v2_21e62, align 4
  br label %dec_label_pc_21e93

dec_label_pc_21e93:                               ; preds = %dec_label_pc_21e7c, %dec_label_pc_21e5c
  %v0_21e93 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21e93 = add i32 %v0_21e93, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_21e93 = inttoptr i32 %v1_21e93 to i32*
  %v3_21e93 = load i32, i32* %v2_21e93, align 4
  store i32 %v3_21e93, i32* %esi.global-to-local, align 4
  %v1_21e9a = icmp eq i32 %v3_21e93, 0
  %v1_21e9c = icmp eq i1 %v1_21e9a, false
  br i1 %v1_21e9c, label %dec_label_pc_21ea2, label %dec_label_pc_21e9e

dec_label_pc_21e9e:                               ; preds = %dec_label_pc_21e93
  %v0_21e9e = call i32 @function_21f0e()
  store i32 %v0_21e9e, i32* %eax.global-to-local, align 4
  ret i32 %v0_21e9e

dec_label_pc_21ea2:                               ; preds = %dec_label_pc_21e93
  %v2_21ea2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_21ea2

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_21eb2() local_unnamed_addr {
dec_label_pc_21eb2:
  %eax.global-to-local = alloca i32, align 4
  %v0_21eb2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21eb2
}

define i32 @function_21f0e() local_unnamed_addr {
dec_label_pc_21f0e:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_21f12 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21f12 = icmp eq i32 %v1_21f12, %tmp6
  %v1_21f1d = icmp eq i1 %v3_21f12, false
  br i1 %v1_21f1d, label %dec_label_pc_21f27, label %dec_label_pc_21f1f

dec_label_pc_21f1f:                               ; preds = %dec_label_pc_21f0e
  ret i32 %tmp5

dec_label_pc_21f27:                               ; preds = %dec_label_pc_21f0e
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_21f4a() local_unnamed_addr {
dec_label_pc_21f4a:
  %eax.global-to-local = alloca i32, align 4
  %v0_21f4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21f4a
}

define i32 @_ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC1ERKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21f60:
  ret i32 %arg1
}

define i32 @function_21fe0() local_unnamed_addr {
dec_label_pc_21fe0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_21fe0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_21fe0 = add i32 %v0_21fe0, 1977563419
  %v2_21fe0 = inttoptr i32 %v1_21fe0 to i32*
  %v3_21fe0 = load i32, i32* %v2_21fe0, align 4
  %v4_21fe0 = add i32 %v3_21fe0, -1
  store i32 %v4_21fe0, i32* %v2_21fe0, align 4
  %v0_21fe6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_21fe7 = add i32 %v0_21fe6, add (i32 ptrtoint (i16** @global_var_4.3276 to i32), i32 40)
  %v2_21fe7 = inttoptr i32 %v1_21fe7 to i32*
  %v3_21fe7 = load i32, i32* %v2_21fe7, align 4
  store i32 %v3_21fe7, i32* %eax.global-to-local, align 4
  %v3_21feb = load i32, i32* %v2_21fe7, align 4
  store i32 %v3_21feb, i32* %ecx.global-to-local, align 4
  %v1_21fef = add i32 %v3_21fe7, 12
  %v2_21fef = inttoptr i32 %v1_21fef to i32*
  store i32 0, i32* %v2_21fef, align 4
  %v0_21ff6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_21ff6, i32* %edx.global-to-local, align 4
  %v1_21ff8 = add i32 %v0_21ff6, 16
  %v2_21ff8 = inttoptr i32 %v1_21ff8 to i32*
  store i32 0, i32* %v2_21ff8, align 4
  %v0_21fff = load i32, i32* %edx.global-to-local, align 4
  %v1_21fff = add i32 %v0_21fff, 8
  store i32 %v1_21fff, i32* %edx.global-to-local, align 4
  %v0_22002 = load i32, i32* %eax.global-to-local, align 4
  %v1_22002 = add i32 %v0_22002, 28
  %v2_22002 = inttoptr i32 %v1_22002 to i32*
  store i32 0, i32* %v2_22002, align 4
  %v0_22009 = load i32, i32* %eax.global-to-local, align 4
  %v1_22009 = add i32 %v0_22009, 12
  store i32 %v1_22009, i32* %eax.global-to-local, align 4
  %v1_2200c = load i32, i32* %ecx.global-to-local, align 4
  %v2_2200c = add i32 %v1_2200c, 20
  %v3_2200c = inttoptr i32 %v2_2200c to i32*
  store i32 %v1_22009, i32* %v3_2200c, align 4
  %v0_2200f = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_2200f, i32* %ebp.global-to-local, align 4
  %v1_22011 = load i32, i32* %ecx.global-to-local, align 4
  %v2_22011 = add i32 %v1_22011, 24
  %v3_22011 = inttoptr i32 %v2_22011 to i32*
  store i32 %v0_2200f, i32* %v3_22011, align 4
  %v0_22014 = load i32, i32* @esp, align 4
  %v1_22014 = add i32 %v0_22014, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_22014 = inttoptr i32 %v1_22014 to i32*
  %v3_22014 = load i32, i32* %v2_22014, align 4
  store i32 %v3_22014, i32* %ecx.global-to-local, align 4
  %v0_22018 = load i32, i32* %eax.global-to-local, align 4
  %v2_22018 = add i32 %v0_22014, 36
  %v3_22018 = inttoptr i32 %v2_22018 to i32*
  store i32 %v0_22018, i32* %v3_22018, align 4
  %v0_2201c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2201c = add i32 %v0_2201c, 16
  %v2_2201c = inttoptr i32 %v1_2201c to i32*
  %v3_2201c = load i32, i32* %v2_2201c, align 4
  store i32 %v3_2201c, i32* %eax.global-to-local, align 4
  %v1_2201f = icmp eq i32 %v3_2201c, 0
  br i1 %v1_2201f, label %dec_label_pc_22072, label %dec_label_pc_22023

dec_label_pc_22023:                               ; preds = %dec_label_pc_21fe0
  %v0_22023 = load i32, i32* %ebp.global-to-local, align 4
  %v1_22023 = load i32, i32* @esp, align 4
  %v2_22023 = add i32 %v1_22023, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_22023 = inttoptr i32 %v2_22023 to i32*
  store i32 %v0_22023, i32* %v3_22023, align 4
  %v1_22027 = load i32, i32* @esp, align 4
  %v2_22027 = add i32 %v1_22027, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_22027 = inttoptr i32 %v2_22027 to i32*
  store i32 %v3_2201c, i32* %v3_22027, align 4
  %v0_2202b = load i32, i32* %edx.global-to-local, align 4
  %v1_2202b = load i32, i32* @esp, align 4
  %v2_2202b = inttoptr i32 %v1_2202b to i32*
  store i32 %v0_2202b, i32* %v2_2202b, align 4
  %v0_2202e = call i32 @unknown_43d60()
  store i32 %v0_2202e, i32* %eax.global-to-local, align 4
  %v0_22033 = load i32, i32* @esp, align 4
  %v1_22033 = add i32 %v0_22033, 40
  %v2_22033 = inttoptr i32 %v1_22033 to i32*
  %v3_22033 = load i32, i32* %v2_22033, align 4
  store i32 %v3_22033, i32* %edx.global-to-local, align 4
  store i32 %v0_2202e, i32* %ebp.global-to-local, align 4
  %v2_22039 = add i32 %v3_22033, 16
  %v3_22039 = inttoptr i32 %v2_22039 to i32*
  store i32 %v0_2202e, i32* %v3_22039, align 4
  %v0_22042.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_22042113 = add i32 %v0_22042.pre, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_22042114 = inttoptr i32 %v1_22042113 to i32*
  %v3_22042115 = load i32, i32* %v2_22042114, align 4
  store i32 %v3_22042115, i32* %edx.global-to-local, align 4
  %v1_22045116 = icmp eq i32 %v3_22042115, 0
  %v1_22047117 = icmp eq i1 %v1_22045116, false
  br i1 %v1_22047117, label %dec_label_pc_22040, label %dec_label_pc_22049

dec_label_pc_22040:                               ; preds = %dec_label_pc_22023, %dec_label_pc_22040
  %v3_22042118 = phi i32 [ %v3_22042, %dec_label_pc_22040 ], [ %v3_22042115, %dec_label_pc_22023 ]
  store i32 %v3_22042118, i32* %ebp.global-to-local, align 4
  %v1_22042 = add i32 %v3_22042118, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_22042 = inttoptr i32 %v1_22042 to i32*
  %v3_22042 = load i32, i32* %v2_22042, align 4
  store i32 %v3_22042, i32* %edx.global-to-local, align 4
  %v1_22045 = icmp eq i32 %v3_22042, 0
  %v1_22047 = icmp eq i1 %v1_22045, false
  br i1 %v1_22047, label %dec_label_pc_22040, label %dec_label_pc_22049

dec_label_pc_22049:                               ; preds = %dec_label_pc_22040, %dec_label_pc_22023
  %v0_2204d.lcssa = phi i32 [ %v0_22042.pre, %dec_label_pc_22023 ], [ %v3_22042118, %dec_label_pc_22040 ]
  %v0_22049 = load i32, i32* @esp, align 4
  %v1_22049 = add i32 %v0_22049, 40
  %v2_22049 = inttoptr i32 %v1_22049 to i32*
  %v3_22049 = load i32, i32* %v2_22049, align 4
  store i32 %v3_22049, i32* %ecx.global-to-local, align 4
  %v2_2204d = add i32 %v3_22049, 20
  %v3_2204d = inttoptr i32 %v2_2204d to i32*
  store i32 %v0_2204d.lcssa, i32* %v3_2204d, align 4
  %v0_2205a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_2205a105 = add i32 %v0_2205a.pre, 12
  %v2_2205a106 = inttoptr i32 %v1_2205a105 to i32*
  %v3_2205a107 = load i32, i32* %v2_2205a106, align 4
  store i32 %v3_2205a107, i32* %edx.global-to-local, align 4
  %v1_2205d108 = icmp eq i32 %v3_2205a107, 0
  %v1_2205f109 = icmp eq i1 %v1_2205d108, false
  br i1 %v1_2205f109, label %dec_label_pc_22058, label %dec_label_pc_22061

dec_label_pc_22058:                               ; preds = %dec_label_pc_22049, %dec_label_pc_22058
  %v3_2205a110 = phi i32 [ %v3_2205a, %dec_label_pc_22058 ], [ %v3_2205a107, %dec_label_pc_22049 ]
  store i32 %v3_2205a110, i32* %eax.global-to-local, align 4
  %v1_2205a = add i32 %v3_2205a110, 12
  %v2_2205a = inttoptr i32 %v1_2205a to i32*
  %v3_2205a = load i32, i32* %v2_2205a, align 4
  store i32 %v3_2205a, i32* %edx.global-to-local, align 4
  %v1_2205d = icmp eq i32 %v3_2205a, 0
  %v1_2205f = icmp eq i1 %v1_2205d, false
  br i1 %v1_2205f, label %dec_label_pc_22058, label %dec_label_pc_22061

dec_label_pc_22061:                               ; preds = %dec_label_pc_22058, %dec_label_pc_22049
  %v0_22069.lcssa = phi i32 [ %v0_2205a.pre, %dec_label_pc_22049 ], [ %v3_2205a110, %dec_label_pc_22058 ]
  %v0_22061 = load i32, i32* @esp, align 4
  %v1_22061 = add i32 %v0_22061, 40
  %v2_22061 = inttoptr i32 %v1_22061 to i32*
  %v3_22061 = load i32, i32* %v2_22061, align 4
  store i32 %v3_22061, i32* %edx.global-to-local, align 4
  %v1_22065 = add i32 %v0_22061, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_22065 = inttoptr i32 %v1_22065 to i32*
  %v3_22065 = load i32, i32* %v2_22065, align 4
  store i32 %v3_22065, i32* %ecx.global-to-local, align 4
  %v2_22069 = add i32 %v3_22061, 24
  %v3_22069 = inttoptr i32 %v2_22069 to i32*
  store i32 %v0_22069.lcssa, i32* %v3_22069, align 4
  %v0_2206c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2206c = add i32 %v0_2206c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2206c = inttoptr i32 %v1_2206c to i32*
  %v3_2206c = load i32, i32* %v2_2206c, align 4
  store i32 %v3_2206c, i32* %eax.global-to-local, align 4
  %v1_2206f = load i32, i32* %edx.global-to-local, align 4
  %v2_2206f = add i32 %v1_2206f, 28
  %v3_2206f = inttoptr i32 %v2_2206f to i32*
  store i32 %v3_2206c, i32* %v3_2206f, align 4
  br label %dec_label_pc_22072

dec_label_pc_22072:                               ; preds = %dec_label_pc_22061, %dec_label_pc_21fe0
  %v0_22072 = load i32, i32* @esp, align 4
  %v1_22072 = add i32 %v0_22072, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_22072 = inttoptr i32 %v1_22072 to i32*
  %v3_22072 = load i32, i32* %v2_22072, align 4
  store i32 %v3_22072, i32* %edx.global-to-local, align 4
  %v1_22076 = add i32 %v0_22072, 40
  %v2_22076 = inttoptr i32 %v1_22076 to i32*
  %v3_22076 = load i32, i32* %v2_22076, align 4
  store i32 %v3_22076, i32* @eax, align 4
  %v1_2207a = add i32 %v3_22072, 20
  %v2_2207a = inttoptr i32 %v1_2207a to i32*
  %v3_2207a = load i32, i32* %v2_2207a, align 4
  store i32 %v3_2207a, i32* %edi.global-to-local, align 4
  %v1_2207d = add i32 %v3_22072, 12
  store i32 %v1_2207d, i32* %edx.global-to-local, align 4
  %v1_22080 = inttoptr i32 %v3_22076 to i32*
  %v2_22080 = load i32, i32* %v1_22080, align 4
  store i32 %v2_22080, i32* %esi.global-to-local, align 4
  %v2_22082 = add i32 %v0_22072, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_22082 = inttoptr i32 %v2_22082 to i32*
  store i32 %v1_2207d, i32* %v3_22082, align 4
  %v0_22086 = load i32, i32* %edi.global-to-local, align 4
  %v1_22086 = load i32, i32* %edx.global-to-local, align 4
  %v12_22086 = icmp eq i32 %v0_22086, %v1_22086
  br i1 %v12_22086, label %bb, label %dec_label_pc_2208a

bb:                                               ; preds = %dec_label_pc_22072
  %v1_22088 = call i32 @function_220e0()
  store i32 %v1_22088, i32* @eax, align 4
  br label %dec_label_pc_2208a

dec_label_pc_2208a:                               ; preds = %bb, %dec_label_pc_22072
  %v0_22090 = load i32, i32* @esp, align 4
  %v1_22090 = add i32 %v0_22090, 36
  %v2_22090 = inttoptr i32 %v1_22090 to i32*
  %v3_22090 = load i32, i32* %v2_22090, align 4
  %v4_22090 = load i32, i32* %ebp.global-to-local, align 4
  %v15_22090 = icmp eq i32 %v3_22090, %v4_22090
  br i1 %v15_22090, label %bb104, label %dec_label_pc_2209a

bb104:                                            ; preds = %dec_label_pc_2208a
  %v1_22094 = call i32 @function_221cf()
  store i32 %v1_22094, i32* @eax, align 4
  %v0_2209a.pre = load i32, i32* @esp, align 4
  %v1_2209e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2209a

dec_label_pc_2209a:                               ; preds = %bb104, %dec_label_pc_2208a
  %v1_2209e = phi i32 [ %v1_2209e.pre, %bb104 ], [ %v4_22090, %dec_label_pc_2208a ]
  %v0_2209a = phi i32 [ %v0_2209a.pre, %bb104 ], [ %v0_22090, %dec_label_pc_2208a ]
  %v1_2209a = add i32 %v0_2209a, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2209a = inttoptr i32 %v1_2209a to i32*
  %v3_2209a = load i32, i32* %v2_2209a, align 4
  %v4_2209a = load i32, i32* %edi.global-to-local, align 4
  %v15_2209a = icmp eq i32 %v3_2209a, %v4_2209a
  %v0_2209e = load i32, i32* %esi.global-to-local, align 4
  %v2_2209e = add i32 %v1_2209e, 28
  %v3_2209e = inttoptr i32 %v2_2209e to i32*
  store i32 %v0_2209e, i32* %v3_2209e, align 4
  %v0_220a1 = load i32, i32* @esp, align 4
  %v1_220a1 = add i32 %v0_220a1, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_220a1 = inttoptr i32 %v1_220a1 to i32*
  %v3_220a1 = load i32, i32* %v2_220a1, align 4
  store i32 %v3_220a1, i32* %ebx.global-to-local, align 4
  %v0_220aa.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v15_2209a, label %dec_label_pc_220aa, label %dec_label_pc_220a7

dec_label_pc_220a7:                               ; preds = %dec_label_pc_2209a
  %v1_220a7 = add i32 %v0_220aa.pre, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_220a7 = inttoptr i32 %v1_220a7 to i32*
  %v3_220a7 = load i32, i32* %v2_220a7, align 4
  store i32 %v3_220a7, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_220aa

dec_label_pc_220aa:                               ; preds = %dec_label_pc_2209a, %dec_label_pc_220a7
  %v2_220aa = inttoptr i32 %v0_220a1 to i32*
  store i32 %v0_220aa.pre, i32* %v2_220aa, align 4
  %v3_220aa = load i32, i32* @eax, align 4
  ret i32 %v3_220aa

; uselistorder directives
  uselistorder i32 %v4_22090, { 1, 0 }
  uselistorder i32 %v3_2205a, { 1, 2, 0 }
  uselistorder i32 %v3_22042, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 12, 6, 13, 7, 8, 9, 10, 11 }
  uselistorder i32* %ebp.global-to-local, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_220aa, { 1, 0 }
  uselistorder label %dec_label_pc_22058, { 1, 0 }
  uselistorder label %dec_label_pc_22040, { 1, 0 }
}

define i32 @function_220b1() local_unnamed_addr {
dec_label_pc_220b1:
  %cf.global-to-local = alloca i1, align 1
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_220b1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_220b1 = add i32 %v0_220b1, 608472007
  %v2_220b1 = inttoptr i32 %v1_220b1 to i32*
  %v3_220b1 = load i32, i32* %v2_220b1, align 4
  %v4_220b1 = add i32 %v3_220b1, -1
  store i32 %v4_220b1, i32* %v2_220b1, align 4
  %v2_220b7 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_220b7 = load i32, i32* %ebx.global-to-local, align 4
  %v4_220b7 = lshr i32 %v3_220b7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_220b7 = trunc i32 %v4_220b7 to i8
  %v6_220b7 = and i8 %v5_220b7, %v2_220b7
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* %of.global-to-local, align 1
  %v8_220b7 = icmp slt i8 %v6_220b7, 0
  store i1 %v8_220b7, i1* %sf.global-to-local, align 1
  %v13_220b7 = inttoptr i32 %v3_220b7 to i8*
  store i8 %v6_220b7, i8* %v13_220b7, align 1
  %v0_220b9 = load i1, i1* %sf.global-to-local, align 1
  %v1_220b9 = load i1, i1* %of.global-to-local, align 1
  %v2_220b9 = icmp eq i1 %v0_220b9, %v1_220b9
  br i1 %v2_220b9, label %dec_label_pc_220b1.dec_label_pc_220bb_crit_edge, label %bb

dec_label_pc_220b1.dec_label_pc_220bb_crit_edge:  ; preds = %dec_label_pc_220b1
  %v0_220bb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_220bb

bb:                                               ; preds = %dec_label_pc_220b1
  %v3_220b9 = call i32 @function_220df()
  br label %dec_label_pc_220bb

dec_label_pc_220bb:                               ; preds = %dec_label_pc_220b1.dec_label_pc_220bb_crit_edge, %bb
  %v32_220bb = phi i32 [ %v0_220bb.pre, %dec_label_pc_220b1.dec_label_pc_220bb_crit_edge ], [ %v3_220b9, %bb ]
  %v1_220bb = trunc i32 %v32_220bb to i8
  %v2_220bb = load i1, i1* %cf.global-to-local, align 1
  %v3_220bb = zext i1 %v2_220bb to i8
  %v4_220bb = sub i8 %v1_220bb, ptrtoint (i8* @global_var_74.3482 to i8)
  %v5_220bb = add i8 %v4_220bb, %v3_220bb
  %v17_220bb = icmp ult i8 %v1_220bb, 116
  %v18_220bb = or i1 %v2_220bb, %v17_220bb
  %v21_220bb = sub i8 %v4_220bb, %v3_220bb
  %tmp100 = xor i8 %v21_220bb, -128
  %v24_220bb = and i8 %tmp100, %v1_220bb
  %v25_220bb = icmp slt i8 %v24_220bb, 0
  store i1 %v18_220bb, i1* %cf.global-to-local, align 1
  store i1 %v25_220bb, i1* %of.global-to-local, align 1
  %v27_220bb = icmp slt i8 %v5_220bb, 0
  store i1 %v27_220bb, i1* %sf.global-to-local, align 1
  %v0_220be = load i32, i32* %edi.global-to-local, align 4
  %v1_220be = add i32 %v0_220be, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_220be = inttoptr i32 %v1_220be to i32*
  %v3_220be = load i32, i32* %v2_220be, align 4
  %v0_220cc.pre = load i32, i32* %ebx.global-to-local, align 4
  %v2_220cc101 = sub i32 %v0_220cc.pre, %v3_220be
  %v12_220cc102 = icmp eq i32 %v2_220cc101, 0
  %v1_220ce103 = icmp eq i1 %v12_220cc102, false
  br i1 %v1_220ce103, label %dec_label_pc_220c8.lr.ph, label %dec_label_pc_220d0

dec_label_pc_220c8.lr.ph:                         ; preds = %dec_label_pc_220bb
  %v0_220ca.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_220c8

dec_label_pc_220c8:                               ; preds = %dec_label_pc_220c8.lr.ph, %dec_label_pc_220c8
  %v0_220ca = phi i32 [ %v0_220ca.pre, %dec_label_pc_220c8.lr.ph ], [ %v2_220ca, %dec_label_pc_220c8 ]
  %v0_220c8104 = phi i32 [ %v0_220cc.pre, %dec_label_pc_220c8.lr.ph ], [ %v2_220c8, %dec_label_pc_220c8 ]
  %v1_220c8 = inttoptr i32 %v0_220c8104 to i32*
  %v2_220c8 = load i32, i32* %v1_220c8, align 4
  store i32 %v2_220c8, i32* %ebx.global-to-local, align 4
  %v1_220ca = inttoptr i32 %v0_220ca to i32*
  %v2_220ca = load i32, i32* %v1_220ca, align 4
  store i32 %v2_220ca, i32* %esi.global-to-local, align 4
  %v2_220cc = sub i32 %v2_220c8, %v3_220be
  %v12_220cc = icmp eq i32 %v2_220cc, 0
  %v1_220ce = icmp eq i1 %v12_220cc, false
  br i1 %v1_220ce, label %dec_label_pc_220c8, label %dec_label_pc_220d0

dec_label_pc_220d0:                               ; preds = %dec_label_pc_220c8, %dec_label_pc_220bb
  %v0_220c8.lcssa = phi i32 [ %v0_220cc.pre, %dec_label_pc_220bb ], [ %v2_220c8, %dec_label_pc_220c8 ]
  %v2_220cc.lcssa = phi i32 [ %v2_220cc101, %dec_label_pc_220bb ], [ %v2_220cc, %dec_label_pc_220c8 ]
  %v7_220cc = icmp ult i32 %v0_220c8.lcssa, %v3_220be
  %v9_220cc = xor i32 %v2_220cc.lcssa, %v0_220c8.lcssa
  %v8_220cc = xor i32 %v0_220c8.lcssa, %v3_220be
  %v10_220cc = and i32 %v9_220cc, %v8_220cc
  %v11_220cc = icmp slt i32 %v10_220cc, 0
  %v13_220cc = icmp slt i32 %v2_220cc.lcssa, 0
  store i1 %v7_220cc, i1* %cf.global-to-local, align 1
  store i1 %v11_220cc, i1* %of.global-to-local, align 1
  store i1 %v13_220cc, i1* %sf.global-to-local, align 1
  ret i32 %v3_220be

; uselistorder directives
  uselistorder i32 %v0_220c8.lcssa, { 2, 1, 0 }
  uselistorder i32 %v2_220ca, { 1, 0 }
  uselistorder i32 %v2_220c8, { 0, 1, 3, 2 }
  uselistorder i32 %v3_220be, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_220c8, { 1, 0 }
  uselistorder label %dec_label_pc_220bb, { 1, 0 }
}

define i32 @function_220df() local_unnamed_addr {
dec_label_pc_220df:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_220e0() local_unnamed_addr {
dec_label_pc_220e0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_220e8 = add i32 %tmp2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_220e8 = inttoptr i32 %v1_220e8 to i32*
  store i32 0, i32* %v2_220e8, align 4
  %v0_220ef = load i32, i32* %eax.global-to-local, align 4
  %v1_220ef = load i32, i32* %edx.global-to-local, align 4
  %v2_220ef = inttoptr i32 %v1_220ef to i32*
  store i32 %v0_220ef, i32* %v2_220ef, align 4
  %v2_220f1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_220f1

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_2212c() local_unnamed_addr {
dec_label_pc_2212c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2212c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2212c
}

define i32 @function_22146(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_22146:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_22146 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22146 = add i32 %v0_22146, 1698440268
  %v2_22146 = inttoptr i32 %v1_22146 to i32*
  %v3_22146 = load i32, i32* %v2_22146, align 4
  %v4_22146 = add i32 %v3_22146, -1
  store i32 %v4_22146, i32* %v2_22146, align 4
  %v0_2214c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2214c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2214c = xor i32 %v1_2214c, %v0_2214c
  %v3_2214c = icmp eq i32 %v2_2214c, 0
  store i32 %v2_2214c, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v0_22156 = load i32, i32* @eax, align 4
  %v1_22156 = add i32 %v0_22156, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_22156 = inttoptr i32 %v1_22156 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_22156, align 4
  %v0_2215d = load i32, i32* @eax, align 4
  %v1_2215d = add i32 %v0_2215d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2215d = inttoptr i32 %v1_2215d to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_2215d, align 4
  %v0_22164 = load i32, i32* @eax, align 4
  %v1_22164 = inttoptr i32 %v0_22164 to i32*
  store i32 ptrtoint (%vtable_39548_type* @global_var_39548.3571 to i32), i32* %v1_22164, align 4
  %v0_2216a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2216a = load i32, i32* @eax, align 4
  %v2_2216a = add i32 %v1_2216a, 12
  %v3_2216a = inttoptr i32 %v2_2216a to i32*
  store i32 %v0_2216a, i32* %v3_2216a, align 4
  %v0_2216d = load i32, i32* @eax, align 4
  %v1_2216d = load i32, i32* %edx.global-to-local, align 4
  %v2_2216d = add i32 %v1_2216d, 12
  %v3_2216d = inttoptr i32 %v2_2216d to i32*
  store i32 %v0_2216d, i32* %v3_2216d, align 4
  %v1_22170 = icmp eq i1 %v3_2214c, false
  br i1 %v1_22170, label %bb, label %dec_label_pc_22146.dec_label_pc_22172_crit_edge

dec_label_pc_22146.dec_label_pc_22172_crit_edge:  ; preds = %dec_label_pc_22146
  %v0_22179.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_22172

bb:                                               ; preds = %dec_label_pc_22146
  %v2_22170 = call i32 @function_2219c()
  br label %dec_label_pc_22172

dec_label_pc_22172:                               ; preds = %dec_label_pc_22146.dec_label_pc_22172_crit_edge, %bb
  %v0_22179 = phi i32 [ %v0_22179.pre, %dec_label_pc_22146.dec_label_pc_22172_crit_edge ], [ %v2_22170, %bb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_22179

; uselistorder directives
  uselistorder label %dec_label_pc_22172, { 1, 0 }
}

define i32 @function_2217b() local_unnamed_addr {
dec_label_pc_2217b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2217b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2217b
}

define i32 @function_2217f(i16 %arg1) local_unnamed_addr {
dec_label_pc_2217f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2217f = load i32, i32* %ecx.global-to-local, align 4
  %v1_2217f = add i32 %v0_2217f, 1760044036
  %v2_2217f = inttoptr i32 %v1_2217f to i8*
  %v3_2217f = load i8, i8* %v2_2217f, align 1
  %v5_2217f = trunc i32 %v0_2217f to i8
  %v6_2217f = sub i8 %v3_2217f, %v5_2217f
  store i8 %v6_2217f, i8* %v2_2217f, align 1
  %v6_22185 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_22185
}

define i32 @function_22188() local_unnamed_addr {
dec_label_pc_22188:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2219c() local_unnamed_addr {
dec_label_pc_2219c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_221b7() local_unnamed_addr {
dec_label_pc_221b7:
  %eax.global-to-local = alloca i32, align 4
  %v0_221b7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_221b7
}

define i32 @function_221b8() local_unnamed_addr {
dec_label_pc_221b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_221cf() local_unnamed_addr {
dec_label_pc_221cf:
  %v3_221e7 = load i32, i32* @eax, align 4
  ret i32 %v3_221e7
}

define i32 @function_221f2(i16 %arg1) local_unnamed_addr {
dec_label_pc_221f2:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_221f2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_221f2 = add i32 %v0_221f2, 608472003
  %v2_221f2 = inttoptr i32 %v1_221f2 to i32*
  %v3_221f2 = load i32, i32* %v2_221f2, align 4
  %v4_221f2 = add i32 %v3_221f2, -1
  store i32 %v4_221f2, i32* %v2_221f2, align 4
  %v0_221f8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_221f8 = add i32 %v0_221f8, -269999100
  %v2_221f8 = inttoptr i32 %v1_221f8 to i8*
  %v3_221f8 = load i8, i8* %v2_221f8, align 1
  %v5_221f8 = trunc i32 %v0_221f8 to i8
  %v6_221f8 = sub i8 %v3_221f8, %v5_221f8
  store i8 %v6_221f8, i8* %v2_221f8, align 1
  %v6_221fe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_221fe
}

define i32 @function_22201() local_unnamed_addr {
dec_label_pc_22201:
  %v0_22201 = call i32 @function_22188()
  ret i32 %v0_22201
}

define i32 @function_2221d() local_unnamed_addr {
dec_label_pc_2221d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2221d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2221d
}

define i32 @function_22223() local_unnamed_addr {
dec_label_pc_22223:
  %v0_22223 = call i32 @function_221b8()
  ret i32 %v0_22223
}

define i32 @function_22226() local_unnamed_addr {
dec_label_pc_22226:
  %eax.global-to-local = alloca i32, align 4
  %v0_22226 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22226
}

define i32 @_ZN5boost8signals26detail12signal1_implIvP15CCryptoKeyStoreNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEEC1ERKS6_RKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22240:
  %stack_var_-56 = alloca i32, align 4
  %v2_2225b = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_2225b
}

define i32 @function_222bd(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_222bd:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %stack_var_32 = alloca i32, align 4
  %v0_222bd = load i32, i32* %ecx.global-to-local, align 4
  %v1_222bd = add i32 %v0_222bd, 1086786680
  %v2_222bd = inttoptr i32 %v1_222bd to i32*
  %v3_222bd = load i32, i32* %v2_222bd, align 4
  %v4_222bd = add i32 %v3_222bd, -1
  store i32 %v4_222bd, i32* %v2_222bd, align 4
  %v0_222c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_222c3 = trunc i32 %v0_222c3 to i8
  %v2_222c3 = add i8 %v1_222c3, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_222c3 = zext i8 %v2_222c3 to i32
  %v18_222c3 = and i32 %v0_222c3, -256
  %v19_222c3 = or i32 %v16_222c3, %v18_222c3
  store i32 %v19_222c3, i32* %eax.global-to-local, align 4
  %v1_222c5 = inttoptr i32 %v19_222c3 to i8*
  %v2_222c5 = load i8, i8* %v1_222c5, align 1
  %v5_222c5 = add i8 %v2_222c5, %v2_222c3
  store i8 %v5_222c5, i8* %v1_222c5, align 1
  %v0_222c7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_222c7 = lshr i32 %v0_222c7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_222c7 = load i32, i32* %eax.global-to-local, align 4
  %v5_222c7 = add i32 %v1_222c7, %v3_222c7
  %v20_222c7 = urem i32 %v5_222c7, 256
  %v22_222c7 = shl i32 %v20_222c7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_222c7 = and i32 %v0_222c7, -65281
  %v24_222c7 = or i32 %v22_222c7, %v23_222c7
  store i32 %v24_222c7, i32* %ebx.global-to-local, align 4
  %v1_222c9 = add i32 %v3_222c7, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_222c9 = trunc i32 %v1_222c9 to i8
  store i32 %v1_222c9, i32* %eax.global-to-local, align 4
  %v2_222ca = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_222ca = or i8 %v2_222ca, %v11_222c9
  %v11_222ca = load i32, i32* %ecx.global-to-local, align 4
  %v12_222ca = inttoptr i32 %v11_222ca to i8*
  store i8 %v5_222ca, i8* %v12_222ca, align 1
  %v0_222cc = load i32, i32* %eax.global-to-local, align 4
  %v1_222cc = inttoptr i32 %v0_222cc to i8*
  %v2_222cc = load i8, i8* %v1_222cc, align 1
  %v4_222cc = trunc i32 %v0_222cc to i8
  %v5_222cc = add i8 %v2_222cc, %v4_222cc
  store i8 %v5_222cc, i8* %v1_222cc, align 1
  %v0_222ce = load i32, i32* %ebx.global-to-local, align 4
  %v1_222ce = udiv i32 %v0_222ce, 256
  %v3_222ce = load i32, i32* %eax.global-to-local, align 4
  %v5_222ce = add i32 %v1_222ce, %v3_222ce
  %v20_222ce = and i32 %v5_222ce, 255
  %v22_222ce = mul nuw nsw i32 %v20_222ce, 256
  %v23_222ce = and i32 %v0_222ce, -65281
  %v24_222ce = or i32 %v22_222ce, %v23_222ce
  store i32 %v24_222ce, i32* %ebx.global-to-local, align 4
  %v1_222d0 = inttoptr i32 %v3_222ce to i8*
  %v2_222d0 = load i8, i8* %v1_222d0, align 1
  %v3_222d0 = load i32, i32* %ecx.global-to-local, align 4
  %v4_222d0 = trunc i32 %v3_222d0 to i8
  %v5_222d0 = add i8 %v4_222d0, %v2_222d0
  store i8 %v5_222d0, i8* %v1_222d0, align 1
  %v0_222d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_222d2 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_222d2, i32* %ebp.global-to-local, align 4
  %v4_222d3 = add i32 %v1_222d2, %v0_222d2
  %v1_222d5 = load i32, i32* %esi.global-to-local, align 4
  %v2_222d5 = add i32 %v1_222d5, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_222d5 = inttoptr i32 %v2_222d5 to i32*
  store i32 %v4_222d3, i32* %v3_222d5, align 4
  %v2_222e0 = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_222e0, i32* %eax.global-to-local, align 4
  %v2_222e7 = call i32 @unknown_420f0(i32 %v2_222e0, i32 %arg2)
  store i32 %v2_222e7, i32* %eax.global-to-local, align 4
  %v1_222f0 = load i32, i32* %ebx.global-to-local, align 4
  %v12_222f0 = icmp eq i32 %tmp101, %v1_222f0
  %v1_222f2 = icmp eq i1 %v12_222f0, false
  br i1 %v1_222f2, label %dec_label_pc_222fa, label %dec_label_pc_22313

dec_label_pc_222f8:                               ; preds = %dec_label_pc_222fa
  br label %dec_label_pc_222fa

dec_label_pc_222fa:                               ; preds = %dec_label_pc_222bd, %dec_label_pc_222f8
  %v0_222fa = phi i32 [ %v2_222fa, %dec_label_pc_222f8 ], [ %tmp101, %dec_label_pc_222bd ]
  %v1_222fa = inttoptr i32 %v0_222fa to i32*
  %v2_222fa = load i32, i32* %v1_222fa, align 4
  store i32 %v2_222fa, i32* %ebp.global-to-local, align 4
  %v1_222fc = add i32 %v0_222fa, 12
  store i32 %v1_222fc, i32* @eax, align 4
  %v1_22302 = call i32 @function_35ca0(i32 %v1_222fc)
  store i32 %v1_22302, i32* %eax.global-to-local, align 4
  %v1_2230f = load i32, i32* %ebx.global-to-local, align 4
  %v12_2230f = icmp eq i32 %v2_222fa, %v1_2230f
  %v1_22311 = icmp eq i1 %v12_2230f, false
  br i1 %v1_22311, label %dec_label_pc_222f8, label %dec_label_pc_22313

dec_label_pc_22313:                               ; preds = %dec_label_pc_222fa, %dec_label_pc_222bd
  %v2_22313 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_22313, i32* @eax, align 4
  %v1_22315 = icmp eq i32 %v2_22313, 0
  br i1 %v1_22315, label %bb, label %dec_label_pc_22319

bb:                                               ; preds = %dec_label_pc_22313
  %v1_22317 = call i32 @function_22385()
  store i32 %v1_22317, i32* %eax.global-to-local, align 4
  %v2_22319.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_22319

dec_label_pc_22319:                               ; preds = %bb, %dec_label_pc_22313
  %v2_22319 = phi i32 [ %v2_22319.pre, %bb ], [ %v2_22313, %dec_label_pc_22313 ]
  store i32 %v2_22319, i32* @eax, align 4
  %v1_2231b = icmp eq i32 %v2_22319, 0
  br i1 %v1_2231b, label %bb107, label %dec_label_pc_2231f

bb107:                                            ; preds = %dec_label_pc_22319
  %v1_2231d = call i32 @function_22361()
  store i32 %v1_2231d, i32* @eax, align 4
  %v1_2231f.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_2231f

dec_label_pc_2231f:                               ; preds = %bb107, %dec_label_pc_22319
  %v1_2231f = phi i32 [ %v1_2231f.pre, %bb107 ], [ %v2_22319, %dec_label_pc_22319 ]
  %v0_2231f = phi i32 [ %v1_2231d, %bb107 ], [ %v2_22319, %dec_label_pc_22319 ]
  %v2_2231f = add i32 %v1_2231f, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_2231f = inttoptr i32 %v2_2231f to i32*
  store i32 %v0_2231f, i32* %v3_2231f, align 4
  %v0_22322 = load i32, i32* %esi.global-to-local, align 4
  %v1_22322 = add i32 %v0_22322, 12
  store i32 %v1_22322, i32* %esi.global-to-local, align 4
  %v3_2232d = load i32, i32* @eax, align 4
  ret i32 %v3_2232d

; uselistorder directives
  uselistorder i32 %v2_22319, { 1, 0, 3, 2 }
  uselistorder i32 %v2_222fa, { 0, 2, 1 }
  uselistorder i32 %v0_222fa, { 1, 0 }
  uselistorder i32 %v3_222ce, { 1, 0 }
  uselistorder i32 %v0_222ce, { 1, 0 }
  uselistorder i32 %v3_222c7, { 1, 0 }
  uselistorder i32 %tmp101, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder label %dec_label_pc_222fa, { 1, 0 }
}

define i32 @function_22334(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22334:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_22334 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22334 = add i32 %v0_22334, 1698440260
  %v2_22334 = inttoptr i32 %v1_22334 to i32*
  %v3_22334 = load i32, i32* %v2_22334, align 4
  %v4_22334 = add i32 %v3_22334, -1
  store i32 %v4_22334, i32* %v2_22334, align 4
  %v0_2233a = load i32, i32* %eax.global-to-local, align 4
  %v1_2233a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2233a = xor i32 %v1_2233a, %v0_2233a
  %v3_2233a = icmp eq i32 %v2_2233a, 0
  store i32 %v2_2233a, i32* @eax, align 4
  %v1_22340 = icmp eq i1 %v3_2233a, false
  br i1 %v1_22340, label %bb, label %dec_label_pc_22342

bb:                                               ; preds = %dec_label_pc_22334
  %v2_22340 = call i32 @function_2235c()
  store i32 %v2_22340, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_22342

dec_label_pc_22342:                               ; preds = %bb, %dec_label_pc_22334
  %v0_22349 = phi i32 [ %v2_22340, %bb ], [ %v2_2233a, %dec_label_pc_22334 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_22349
}

define i32 @function_2234c() local_unnamed_addr {
dec_label_pc_2234c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2235c() local_unnamed_addr {
dec_label_pc_2235c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22361() local_unnamed_addr {
dec_label_pc_22361:
  %v3_22379 = load i32, i32* @eax, align 4
  ret i32 %v3_22379
}

define i32 @function_22385() local_unnamed_addr {
dec_label_pc_22385:
  %v3_2239d = load i32, i32* @eax, align 4
  ret i32 %v3_2239d
}

define i32 @function_223bd() local_unnamed_addr {
dec_label_pc_223bd:
  %ecx.global-to-local = alloca i32, align 4
  %v0_223bd = load i32, i32* %ecx.global-to-local, align 4
  %v1_223bd = add i32 %v0_223bd, 607947206
  %v2_223bd = inttoptr i32 %v1_223bd to i32*
  %v3_223bd = load i32, i32* %v2_223bd, align 4
  %v4_223bd = add i32 %v3_223bd, -1
  store i32 %v4_223bd, i32* %v2_223bd, align 4
  %v0_223c8 = call i32 @function_2234c()
  ret i32 %v0_223c8
}

define i32 @function_223d1() local_unnamed_addr {
dec_label_pc_223d1:
  %v0_223d1 = call i32 @function_2234c()
  ret i32 %v0_223d1

; uselistorder directives
  uselistorder i32 ()* @function_2234c, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot5IvP7CWalletRKNS1_7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_EERKSsb10ChangeTypeNS1_8functionIFvSE_SO_SQ_bSR_EEEEENS2_5mutexEEEEEEESt10_Select1stIS10_ENS3_14group_key_lessIiSt4lessIiEEESaIS10_EE7_M_copyEPKSt13_Rb_tree_nodeIS10_EPS1A_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_223e0:
  ret i32 0
}

define i32 @function_2240a(i32* %arg1) local_unnamed_addr {
dec_label_pc_2240a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_2240a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2240a = add i32 %v0_2240a, 1149890808
  %v2_2240a = inttoptr i32 %v1_2240a to i32*
  %v3_2240a = load i32, i32* %v2_2240a, align 4
  %v4_2240a = add i32 %v3_2240a, 1
  store i32 %v4_2240a, i32* %v2_2240a, align 4
  %v0_22410 = load i32, i32* %eax.global-to-local, align 4
  %v1_22410 = trunc i32 %v0_22410 to i8
  %v2_22410 = and i8 %v1_22410, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_22410 = icmp eq i8 %v2_22410, 0
  %v8_22410 = zext i8 %v2_22410 to i32
  %v10_22410 = and i32 %v0_22410, -256
  %v11_22410 = or i32 %v8_22410, %v10_22410
  store i32 %v11_22410, i32* %eax.global-to-local, align 4
  br i1 %v3_22410, label %dec_label_pc_2243c, label %dec_label_pc_22414

dec_label_pc_22414:                               ; preds = %dec_label_pc_2240a
  %v0_22414 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22414 = add i32 %v0_22414, 16
  %v2_22414 = inttoptr i32 %v1_22414 to i32*
  %v3_22414 = load i32, i32* %v2_22414, align 4
  store i32 %v3_22414, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_2241b = add i32 %tmp102, 16
  %v3_2241b = inttoptr i32 %v2_2241b to i32*
  store i32 %v3_22414, i32* %v3_2241b, align 4
  %v0_2241e = load i32, i32* %edx.global-to-local, align 4
  %v1_2241e = add i32 %v0_2241e, 20
  %v2_2241e = inttoptr i32 %v1_2241e to i8*
  store i8 0, i8* %v2_2241e, align 1
  %v0_22422 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22422 = add i32 %v0_22422, 20
  %v2_22422 = inttoptr i32 %v1_22422 to i8*
  %v3_22422 = load i8, i8* %v2_22422, align 1
  %v10_22422 = icmp eq i8 %v3_22422, 0
  br i1 %v10_22422, label %dec_label_pc_22432, label %dec_label_pc_22428

dec_label_pc_22428:                               ; preds = %dec_label_pc_22414
  %v1_22428 = add i32 %v0_22422, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_22428 = inttoptr i32 %v1_22428 to i32*
  %v3_22428 = load i32, i32* %v2_22428, align 4
  store i32 %v3_22428, i32* %eax.global-to-local, align 4
  %v0_2242b = load i32, i32* %edx.global-to-local, align 4
  %v1_2242b = add i32 %v0_2242b, 20
  %v2_2242b = inttoptr i32 %v1_2242b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_2242b, align 1
  %v0_2242f = load i32, i32* %eax.global-to-local, align 4
  %v1_2242f = load i32, i32* %edx.global-to-local, align 4
  %v2_2242f = add i32 %v1_2242f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_2242f = inttoptr i32 %v2_2242f to i32*
  store i32 %v0_2242f, i32* %v3_2242f, align 4
  %v0_22432.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_22432

dec_label_pc_22432:                               ; preds = %dec_label_pc_22428, %dec_label_pc_22414
  %v0_22432 = phi i32 [ %v0_22432.pre, %dec_label_pc_22428 ], [ %v0_22422, %dec_label_pc_22414 ]
  %v1_22432 = add i32 %v0_22432, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_22432 = inttoptr i32 %v1_22432 to i32*
  %v3_22432 = load i32, i32* %v2_22432, align 4
  store i32 %v3_22432, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_22439 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_22439 = inttoptr i32 %v2_22439 to i32*
  store i32 %v3_22432, i32* %v3_22439, align 4
  br label %dec_label_pc_2243c

dec_label_pc_2243c:                               ; preds = %dec_label_pc_22432, %dec_label_pc_2240a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_22440 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_22440, i32* %eax.global-to-local, align 4
  %v1_22442 = add i32 %tmp102, 12
  %v2_22442 = inttoptr i32 %v1_22442 to i32*
  store i32 0, i32* %v2_22442, align 4
  %v0_22449 = load i32, i32* %eax.global-to-local, align 4
  %v1_22449 = load i32, i32* %edx.global-to-local, align 4
  %v2_22449 = inttoptr i32 %v1_22449 to i32*
  store i32 %v0_22449, i32* %v2_22449, align 4
  %v0_2244b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2244b = add i32 %v0_2244b, 12
  %v2_2244b = inttoptr i32 %v1_2244b to i32*
  %v3_2244b = load i32, i32* %v2_2244b, align 4
  store i32 %v3_2244b, i32* %eax.global-to-local, align 4
  %v0_2244e = load i32, i32* %edx.global-to-local, align 4
  %v1_2244e = add i32 %v0_2244e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2244e = inttoptr i32 %v1_2244e to i32*
  store i32 0, i32* %v2_2244e, align 4
  %v0_22455 = load i32, i32* %esi.global-to-local, align 4
  %v1_22455 = load i32, i32* %edx.global-to-local, align 4
  %v2_22455 = add i32 %v1_22455, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_22455 = inttoptr i32 %v2_22455 to i32*
  store i32 %v0_22455, i32* %v3_22455, align 4
  %v0_22458 = load i32, i32* %eax.global-to-local, align 4
  %v1_22458 = icmp eq i32 %v0_22458, 0
  br i1 %v1_22458, label %dec_label_pc_22473, label %dec_label_pc_2245c

dec_label_pc_2245c:                               ; preds = %dec_label_pc_2243c
  %v0_2245c = load i32, i32* %edx.global-to-local, align 4
  %v2_22467 = call i32 @unknown_447c0(i32 %v0_22458, i32 %v0_2245c)
  store i32 %v2_22467, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_22467, i32* %v2_22442, align 4
  br label %dec_label_pc_22473

dec_label_pc_22473:                               ; preds = %dec_label_pc_2245c, %dec_label_pc_2243c
  %v0_22473 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22473 = add i32 %v0_22473, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_22473 = inttoptr i32 %v1_22473 to i32*
  %v3_22473 = load i32, i32* %v2_22473, align 4
  store i32 %v3_22473, i32* %esi.global-to-local, align 4
  %v1_2247a = icmp eq i32 %v3_22473, 0
  %v1_2247c = icmp eq i1 %v1_2247a, false
  br i1 %v1_2247c, label %dec_label_pc_22482, label %dec_label_pc_2247e

dec_label_pc_2247e:                               ; preds = %dec_label_pc_22473
  %v0_2247e = call i32 @function_224ee()
  store i32 %v0_2247e, i32* %eax.global-to-local, align 4
  ret i32 %v0_2247e

dec_label_pc_22482:                               ; preds = %dec_label_pc_22473
  %v2_22482 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_22482

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 4, 0, 1, 6, 2, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_22492() local_unnamed_addr {
dec_label_pc_22492:
  %eax.global-to-local = alloca i32, align 4
  %v0_22492 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22492
}

define i32 @function_224ee() local_unnamed_addr {
dec_label_pc_224ee:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_224f2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_224f2 = icmp eq i32 %v1_224f2, %tmp6
  %v1_224fd = icmp eq i1 %v3_224f2, false
  br i1 %v1_224fd, label %dec_label_pc_22507, label %dec_label_pc_224ff

dec_label_pc_224ff:                               ; preds = %dec_label_pc_224ee
  ret i32 %tmp5

dec_label_pc_22507:                               ; preds = %dec_label_pc_224ee
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_2252a() local_unnamed_addr {
dec_label_pc_2252a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2252a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2252a
}

define i32 @_ZN5boost8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_SE_SG_bSH_EEENSM_IFvRKNS0_10connectionES4_SE_SG_bSH_EEENS0_5mutexEE16invocation_stateC1ERKNS1_12grouped_listIiSL_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot5IvS4_SE_SG_bSH_SO_EESU_EEEEEERKSJ_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22540:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_-92 = alloca i32, align 4
  store i32 36, i32* %stack_var_-92, align 4
  store i32 %tmp103, i32* %arg1, align 4
  %v2_22576 = add i32 %tmp103, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_22576 = inttoptr i32 %v2_22576 to i32*
  store i32 %tmp103, i32* %v3_22576, align 4
  %v1_2257d = inttoptr i32 %arg2 to i32*
  %v2_2257d = load i32, i32* %v1_2257d, align 4
  %v12_2257f = icmp eq i32 %v2_2257d, %arg2
  br i1 %v12_2257f, label %bb, label %dec_label_pc_22583

bb:                                               ; preds = %dec_label_pc_22540
  %v1_22581 = load i32, i32* %stack_var_-92, align 4
  %v2_22581 = call i32 @function_225c7(i32 %v1_22581)
  br label %dec_label_pc_22583

dec_label_pc_22583:                               ; preds = %bb, %dec_label_pc_22540
  %v0_22587 = phi i32 [ %v2_22581, %bb ], [ %arg2, %dec_label_pc_22540 ]
  ret i32 %v0_22587

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_225c7(i32 %arg1) local_unnamed_addr {
dec_label_pc_225c7:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %v1_225cf = add i32 %tmp14, 12
  %v2_225cf = inttoptr i32 %v1_225cf to i32*
  store i32 0, i32* %v2_225cf, align 4
  %v0_225d6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_225d6, i32* %edx.global-to-local, align 4
  %v1_225d8 = add i32 %v0_225d6, 16
  %v2_225d8 = inttoptr i32 %v1_225d8 to i32*
  store i32 0, i32* %v2_225d8, align 4
  %v0_225df = load i32, i32* %edx.global-to-local, align 4
  %v1_225df = add i32 %v0_225df, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_225df, i32* %edx.global-to-local, align 4
  %v0_225e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_225e2 = add i32 %v0_225e2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_225e2 = inttoptr i32 %v1_225e2 to i32*
  store i32 0, i32* %v2_225e2, align 4
  %v0_225e9 = load i32, i32* %eax.global-to-local, align 4
  %v1_225e9 = add i32 %v0_225e9, 12
  store i32 %v1_225e9, i32* %eax.global-to-local, align 4
  %v1_225ec = load i32, i32* %ecx.global-to-local, align 4
  %v2_225ec = add i32 %v1_225ec, 20
  %v3_225ec = inttoptr i32 %v2_225ec to i32*
  store i32 %v1_225e9, i32* %v3_225ec, align 4
  %v0_225ef = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_225ef, i32* %ebp.global-to-local, align 4
  %v1_225f1 = load i32, i32* %ecx.global-to-local, align 4
  %v2_225f1 = add i32 %v1_225f1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_225f1 = inttoptr i32 %v2_225f1 to i32*
  store i32 %v0_225ef, i32* %v3_225f1, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v0_225f8 = load i32, i32* %eax.global-to-local, align 4
  %v1_225fc = add i32 %arg1, 16
  %v2_225fc = inttoptr i32 %v1_225fc to i32*
  %v3_225fc = load i32, i32* %v2_225fc, align 4
  store i32 %v3_225fc, i32* %eax.global-to-local, align 4
  %v1_225ff = icmp eq i32 %v3_225fc, 0
  br i1 %v1_225ff, label %dec_label_pc_22652, label %dec_label_pc_22603

dec_label_pc_22603:                               ; preds = %dec_label_pc_225c7
  %v0_2260b = load i32, i32* %edx.global-to-local, align 4
  %v3_2260e = call i32 @unknown_44920(i32 %v0_2260b, i32 %v3_225fc)
  store i32 %v3_2260e, i32* %eax.global-to-local, align 4
  store i32 %v3_2260e, i32* %ebp.global-to-local, align 4
  %v2_22619 = add i32 %tmp14, 16
  %v3_22619 = inttoptr i32 %v2_22619 to i32*
  store i32 %v3_2260e, i32* %v3_22619, align 4
  %v0_22622.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_2262224 = add i32 %v0_22622.pre, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2262225 = inttoptr i32 %v1_2262224 to i32*
  %v3_2262226 = load i32, i32* %v2_2262225, align 4
  store i32 %v3_2262226, i32* %edx.global-to-local, align 4
  %v1_2262527 = icmp eq i32 %v3_2262226, 0
  %v1_2262728 = icmp eq i1 %v1_2262527, false
  br i1 %v1_2262728, label %dec_label_pc_22620, label %dec_label_pc_22629

dec_label_pc_22620:                               ; preds = %dec_label_pc_22603, %dec_label_pc_22620
  %v3_2262229 = phi i32 [ %v3_22622, %dec_label_pc_22620 ], [ %v3_2262226, %dec_label_pc_22603 ]
  store i32 %v3_2262229, i32* %ebp.global-to-local, align 4
  %v1_22622 = add i32 %v3_2262229, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_22622 = inttoptr i32 %v1_22622 to i32*
  %v3_22622 = load i32, i32* %v2_22622, align 4
  store i32 %v3_22622, i32* %edx.global-to-local, align 4
  %v1_22625 = icmp eq i32 %v3_22622, 0
  %v1_22627 = icmp eq i1 %v1_22625, false
  br i1 %v1_22627, label %dec_label_pc_22620, label %dec_label_pc_22629

dec_label_pc_22629:                               ; preds = %dec_label_pc_22620, %dec_label_pc_22603
  %v0_2262d.lcssa = phi i32 [ %v0_22622.pre, %dec_label_pc_22603 ], [ %v3_2262229, %dec_label_pc_22620 ]
  %v2_2262d = add i32 %tmp14, 20
  %v3_2262d = inttoptr i32 %v2_2262d to i32*
  store i32 %v0_2262d.lcssa, i32* %v3_2262d, align 4
  %v0_2263a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_2263a16 = add i32 %v0_2263a.pre, 12
  %v2_2263a17 = inttoptr i32 %v1_2263a16 to i32*
  %v3_2263a18 = load i32, i32* %v2_2263a17, align 4
  store i32 %v3_2263a18, i32* %edx.global-to-local, align 4
  %v1_2263d19 = icmp eq i32 %v3_2263a18, 0
  %v1_2263f20 = icmp eq i1 %v1_2263d19, false
  br i1 %v1_2263f20, label %dec_label_pc_22638, label %dec_label_pc_22641

dec_label_pc_22638:                               ; preds = %dec_label_pc_22629, %dec_label_pc_22638
  %v3_2263a21 = phi i32 [ %v3_2263a, %dec_label_pc_22638 ], [ %v3_2263a18, %dec_label_pc_22629 ]
  store i32 %v3_2263a21, i32* %eax.global-to-local, align 4
  %v1_2263a = add i32 %v3_2263a21, 12
  %v2_2263a = inttoptr i32 %v1_2263a to i32*
  %v3_2263a = load i32, i32* %v2_2263a, align 4
  store i32 %v3_2263a, i32* %edx.global-to-local, align 4
  %v1_2263d = icmp eq i32 %v3_2263a, 0
  %v1_2263f = icmp eq i1 %v1_2263d, false
  br i1 %v1_2263f, label %dec_label_pc_22638, label %dec_label_pc_22641

dec_label_pc_22641:                               ; preds = %dec_label_pc_22638, %dec_label_pc_22629
  %v0_22649.lcssa = phi i32 [ %v0_2263a.pre, %dec_label_pc_22629 ], [ %v3_2263a21, %dec_label_pc_22638 ]
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v2_22649 = add i32 %tmp14, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_22649 = inttoptr i32 %v2_22649 to i32*
  store i32 %v0_22649.lcssa, i32* %v3_22649, align 4
  %v0_2264c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2264c = add i32 %v0_2264c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2264c = inttoptr i32 %v1_2264c to i32*
  %v3_2264c = load i32, i32* %v2_2264c, align 4
  store i32 %v3_2264c, i32* %eax.global-to-local, align 4
  %v1_2264f = load i32, i32* %edx.global-to-local, align 4
  %v2_2264f = add i32 %v1_2264f, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_2264f = inttoptr i32 %v2_2264f to i32*
  store i32 %v3_2264c, i32* %v3_2264f, align 4
  br label %dec_label_pc_22652

dec_label_pc_22652:                               ; preds = %dec_label_pc_22641, %dec_label_pc_225c7
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_2265a = add i32 %arg1, 20
  %v2_2265a = inttoptr i32 %v1_2265a to i32*
  %v3_2265a = load i32, i32* %v2_2265a, align 4
  store i32 %v3_2265a, i32* %edi.global-to-local, align 4
  %v1_2265d = add i32 %arg1, 12
  store i32 %v1_2265d, i32* %edx.global-to-local, align 4
  %v1_22660 = inttoptr i32 %tmp14 to i32*
  %v2_22660 = load i32, i32* %v1_22660, align 4
  store i32 %v2_22660, i32* %esi.global-to-local, align 4
  %v12_22666 = icmp eq i32 %v3_2265a, %v1_2265d
  br i1 %v12_22666, label %bb, label %dec_label_pc_2266a

bb:                                               ; preds = %dec_label_pc_22652
  %v2_22668 = call i32 @function_226c0(i32 %v1_2265d)
  store i32 %v2_22668, i32* @eax, align 4
  br label %dec_label_pc_2266a

dec_label_pc_2266a:                               ; preds = %bb, %dec_label_pc_22652
  %v4_22670 = load i32, i32* %ebp.global-to-local, align 4
  %v15_22670 = icmp eq i32 %v0_225f8, %v4_22670
  br i1 %v15_22670, label %bb15, label %dec_label_pc_2267a

bb15:                                             ; preds = %dec_label_pc_2266a
  %v1_22674 = call i32 @function_227af()
  store i32 %v1_22674, i32* @eax, align 4
  %v1_2267e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2267a

dec_label_pc_2267a:                               ; preds = %bb15, %dec_label_pc_2266a
  %v1_2267e = phi i32 [ %v1_2267e.pre, %bb15 ], [ %v4_22670, %dec_label_pc_2266a ]
  %v4_2267a = load i32, i32* %edi.global-to-local, align 4
  %v15_2267a = icmp eq i32 %v1_2265d, %v4_2267a
  %v0_2267e = load i32, i32* %esi.global-to-local, align 4
  %v2_2267e = add i32 %v1_2267e, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_2267e = inttoptr i32 %v2_2267e to i32*
  store i32 %v0_2267e, i32* %v3_2267e, align 4
  br i1 %v15_2267a, label %dec_label_pc_2268a, label %dec_label_pc_22687

dec_label_pc_22687:                               ; preds = %dec_label_pc_2267a
  br label %dec_label_pc_2268a

dec_label_pc_2268a:                               ; preds = %dec_label_pc_22687, %dec_label_pc_2267a
  %v4_2268a = load i32, i32* @eax, align 4
  ret i32 %v4_2268a

; uselistorder directives
  uselistorder i32 %v4_22670, { 1, 0 }
  uselistorder i32 %v1_2265d, { 0, 2, 1, 3 }
  uselistorder i32 %v3_2263a, { 1, 2, 0 }
  uselistorder i32 %v3_22622, { 1, 2, 0 }
  uselistorder i32 %tmp14, { 0, 3, 2, 1, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 9, 4, 10, 5, 6, 7, 8 }
  uselistorder i32* %ebp.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_22638, { 1, 0 }
  uselistorder label %dec_label_pc_22620, { 1, 0 }
}

define i32 @function_22691(i32 %arg1) local_unnamed_addr {
dec_label_pc_22691:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_22691 = load i32, i32* %ecx.global-to-local, align 4
  %v1_22691 = add i32 %v0_22691, 608472007
  %v2_22691 = inttoptr i32 %v1_22691 to i32*
  %v3_22691 = load i32, i32* %v2_22691, align 4
  %v4_22691 = add i32 %v3_22691, -1
  store i32 %v4_22691, i32* %v2_22691, align 4
  %v2_22697 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_22697 = load i32, i32* %ebx.global-to-local, align 4
  %v4_22697 = lshr i32 %v3_22697, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_22697 = trunc i32 %v4_22697 to i8
  %v6_22697 = and i8 %v5_22697, %v2_22697
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* %of.global-to-local, align 1
  %v8_22697 = icmp slt i8 %v6_22697, 0
  store i1 %v8_22697, i1* %sf.global-to-local, align 1
  %v13_22697 = inttoptr i32 %v3_22697 to i8*
  store i8 %v6_22697, i8* %v13_22697, align 1
  %v0_22699 = load i1, i1* %sf.global-to-local, align 1
  %v1_22699 = load i1, i1* %of.global-to-local, align 1
  %v2_22699 = icmp eq i1 %v0_22699, %v1_22699
  %v0_2269b = load i32, i32* %eax.global-to-local, align 4
  br i1 %v2_22699, label %dec_label_pc_2269b, label %dec_label_pc_226bf

dec_label_pc_2269b:                               ; preds = %dec_label_pc_22691
  %v1_2269b = trunc i32 %v0_2269b to i8
  %v2_2269b = load i1, i1* %cf.global-to-local, align 1
  %v3_2269b = zext i1 %v2_2269b to i8
  %v4_2269b = sub i8 %v1_2269b, ptrtoint (i8* @global_var_74.3482 to i8)
  %v5_2269b = add i8 %v3_2269b, %v4_2269b
  %v17_2269b = icmp ult i8 %v1_2269b, 116
  %v18_2269b = or i1 %v17_2269b, %v2_2269b
  %v21_2269b = sub i8 %v4_2269b, %v3_2269b
  %tmp100 = xor i8 %v21_2269b, -128
  %v24_2269b = and i8 %tmp100, %v1_2269b
  %v25_2269b = icmp slt i8 %v24_2269b, 0
  store i1 %v18_2269b, i1* %cf.global-to-local, align 1
  store i1 %v25_2269b, i1* %of.global-to-local, align 1
  %v27_2269b = icmp slt i8 %v5_2269b, 0
  store i1 %v27_2269b, i1* %sf.global-to-local, align 1
  %v31_2269b = zext i8 %v5_2269b to i32
  %v33_2269b = and i32 %v0_2269b, -256
  %v34_2269b = or i32 %v31_2269b, %v33_2269b
  store i32 %v34_2269b, i32* %eax.global-to-local, align 4
  %v0_2269e = load i32, i32* %edi.global-to-local, align 4
  %v1_2269e = add i32 %v0_2269e, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2269e = inttoptr i32 %v1_2269e to i32*
  %v3_2269e = load i32, i32* %v2_2269e, align 4
  store i32 %v3_2269e, i32* %eax.global-to-local, align 4
  %v0_226ac.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_226ac101 = icmp eq i32 %v0_226ac.pre, %v3_2269e
  %v1_226ae102 = icmp eq i1 %v12_226ac101, false
  br i1 %v1_226ae102, label %dec_label_pc_226a8.lr.ph, label %dec_label_pc_226b0

dec_label_pc_226a8.lr.ph:                         ; preds = %dec_label_pc_2269b
  %v0_226aa.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_226a8

dec_label_pc_226a8:                               ; preds = %dec_label_pc_226a8.lr.ph, %dec_label_pc_226a8
  %v0_226aa = phi i32 [ %v0_226aa.pre, %dec_label_pc_226a8.lr.ph ], [ %v2_226aa, %dec_label_pc_226a8 ]
  %v0_226a8103 = phi i32 [ %v0_226ac.pre, %dec_label_pc_226a8.lr.ph ], [ %v2_226a8, %dec_label_pc_226a8 ]
  %v1_226a8 = inttoptr i32 %v0_226a8103 to i32*
  %v2_226a8 = load i32, i32* %v1_226a8, align 4
  store i32 %v2_226a8, i32* %ebx.global-to-local, align 4
  %v1_226aa = inttoptr i32 %v0_226aa to i32*
  %v2_226aa = load i32, i32* %v1_226aa, align 4
  store i32 %v2_226aa, i32* %esi.global-to-local, align 4
  %v12_226ac = icmp eq i32 %v2_226a8, %v3_2269e
  %v1_226ae = icmp eq i1 %v12_226ac, false
  br i1 %v1_226ae, label %dec_label_pc_226a8, label %dec_label_pc_226b0

dec_label_pc_226b0:                               ; preds = %dec_label_pc_226a8, %dec_label_pc_2269b
  %v5_226b8 = sub i32 %v0_2269e, %arg1
  %v10_226b8 = icmp ult i32 %v0_2269e, %arg1
  %v11_226b8 = xor i32 %v0_2269e, %arg1
  %v12_226b8 = xor i32 %v5_226b8, %v0_2269e
  %v13_226b8 = and i32 %v12_226b8, %v11_226b8
  %v14_226b8 = icmp slt i32 %v13_226b8, 0
  store i1 %v10_226b8, i1* %cf.global-to-local, align 1
  store i1 %v14_226b8, i1* %of.global-to-local, align 1
  %v16_226b8 = icmp slt i32 %v5_226b8, 0
  store i1 %v16_226b8, i1* %sf.global-to-local, align 1
  ret i32 %v3_2269e

dec_label_pc_226bf:                               ; preds = %dec_label_pc_22691
  ret i32 %v0_2269b

; uselistorder directives
  uselistorder i32 %v5_226b8, { 1, 0 }
  uselistorder i32 %v2_226aa, { 1, 0 }
  uselistorder i32 %v2_226a8, { 0, 2, 1 }
  uselistorder i32 %v3_2269e, { 2, 1, 0, 3 }
  uselistorder i32 %v0_2269e, { 0, 1, 3, 2, 4 }
  uselistorder i8 %v4_2269b, { 1, 0 }
  uselistorder i8 %v3_2269b, { 1, 0 }
  uselistorder i32 %v0_2269b, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1 }
  uselistorder label %dec_label_pc_226a8, { 1, 0 }
}

define i32 @function_226c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_226c0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_226c8 = add i32 %tmp2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_226c8 = inttoptr i32 %v1_226c8 to i32*
  store i32 0, i32* %v2_226c8, align 4
  %v0_226cf = load i32, i32* %eax.global-to-local, align 4
  %v1_226cf = load i32, i32* %edx.global-to-local, align 4
  %v2_226cf = inttoptr i32 %v1_226cf to i32*
  store i32 %v0_226cf, i32* %v2_226cf, align 4
  %v2_226d1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_226d1
}

define i32 @function_2270a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2270a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2270a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2270a = add i32 %v0_2270a, 608472003
  %v2_2270a = inttoptr i32 %v1_2270a to i32*
  %v3_2270a = load i32, i32* %v2_2270a, align 4
  %v4_2270a = add i32 %v3_2270a, -1
  store i32 %v4_2270a, i32* %v2_2270a, align 4
  %v0_22713 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22713 = lshr i32 %v0_22713, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_227131 = or i32 %v1_22713, %arg1
  %v11_22713 = urem i32 %v5_227131, 256
  %v13_22713 = shl i32 %v11_22713, ptrtoint (i8** @global_var_8.3277 to i32)
  %v14_22713 = and i32 %v0_22713, -65281
  %v15_22713 = or i32 %v13_22713, %v14_22713
  store i32 %v15_22713, i32* %ebx.global-to-local, align 4
  %v1_22715 = add i32 %arg1, ptrtoint (i8** @global_var_1.3274 to i32)
  %v8_22716 = and i32 %v1_22715, ptrtoint (i8* @global_var_ff.3305 to i32)
  %v12_22716 = and i32 %v1_22715, or (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 -256)
  store i32 %v12_22716, i32* %eax.global-to-local, align 4
  %v1_22718 = inttoptr i32 %v12_22716 to i8*
  %v2_22718 = load i8, i8* %v1_22718, align 1
  %v4_22718 = trunc i32 %v8_22716 to i8
  %v5_22718 = add i8 %v2_22718, %v4_22718
  store i8 %v5_22718, i8* %v1_22718, align 1
  %v0_2271a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2271a = lshr i32 %v0_2271a, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_2271a = load i32, i32* %eax.global-to-local, align 4
  %v4_2271a = trunc i32 %v3_2271a to i8
  %v5_2271a = add i32 %v1_2271a, %v3_2271a
  %v20_2271a = mul i32 %v5_2271a, 256
  %v22_2271a = and i32 %v20_2271a, 65280
  %v23_2271a = and i32 %v0_2271a, -65281
  %v24_2271a = or i32 %v22_2271a, %v23_2271a
  store i32 %v24_2271a, i32* %ebx.global-to-local, align 4
  %v2_2271c = add i8 %v4_2271a, 36
  %v6_2271c = icmp ugt i8 %v4_2271a, -37
  %v16_2271c = zext i8 %v2_2271c to i32
  %v18_2271c = and i32 %v3_2271a, -256
  %v19_2271c = or i32 %v16_2271c, %v18_2271c
  store i32 %v19_2271c, i32* @eax, align 4
  %v1_2271e = inttoptr i32 %v19_2271c to i8*
  %v2_2271e = load i8, i8* %v1_2271e, align 1
  %v6_2271e = zext i1 %v6_2271c to i8
  %v7_2271e = add i8 %v2_2271e, %v2_2271c
  %v8_2271e = add i8 %v7_2271e, %v6_2271e
  store i8 %v8_2271e, i8* %v1_2271e, align 1
  %v0_22720 = load i32, i32* @eax, align 4
  %v1_22720 = inttoptr i32 %v0_22720 to i8*
  %v2_22720 = load i8, i8* %v1_22720, align 1
  %v4_22720 = trunc i32 %v0_22720 to i8
  %v5_22720 = add i8 %v2_22720, %v4_22720
  store i8 %v5_22720, i8* %v1_22720, align 1
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_2272b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2272b = xor i32 %v1_2272b, %arg3
  %v3_2272b = icmp eq i32 %v2_2272b, 0
  store i32 %v2_2272b, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v0_22736 = load i32, i32* @eax, align 4
  %v1_22736 = add i32 %v0_22736, 4
  %v2_22736 = inttoptr i32 %v1_22736 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_22736, align 4
  %v0_2273d = load i32, i32* @eax, align 4
  %v1_2273d = add i32 %v0_2273d, 8
  %v2_2273d = inttoptr i32 %v1_2273d to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_2273d, align 4
  %v0_22744 = load i32, i32* @eax, align 4
  %v1_22744 = inttoptr i32 %v0_22744 to i32*
  store i32 ptrtoint (%vtable_39548_type* @global_var_39548.3571 to i32), i32* %v1_22744, align 4
  %v0_2274a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2274a = load i32, i32* @eax, align 4
  %v2_2274a = add i32 %v1_2274a, 12
  %v3_2274a = inttoptr i32 %v2_2274a to i32*
  store i32 %v0_2274a, i32* %v3_2274a, align 4
  %v0_2274d = load i32, i32* @eax, align 4
  %v1_2274d = load i32, i32* %edx.global-to-local, align 4
  %v2_2274d = add i32 %v1_2274d, 12
  %v3_2274d = inttoptr i32 %v2_2274d to i32*
  store i32 %v0_2274d, i32* %v3_2274d, align 4
  %v1_22750 = icmp eq i1 %v3_2272b, false
  br i1 %v1_22750, label %bb, label %dec_label_pc_2270a.dec_label_pc_22752_crit_edge

dec_label_pc_2270a.dec_label_pc_22752_crit_edge:  ; preds = %dec_label_pc_2270a
  %v0_22759.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_22752

bb:                                               ; preds = %dec_label_pc_2270a
  %v2_22750 = call i32 @function_2277c()
  store i32 %v2_22750, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_22752

dec_label_pc_22752:                               ; preds = %dec_label_pc_2270a.dec_label_pc_22752_crit_edge, %bb
  %v0_22759 = phi i32 [ %v0_22759.pre, %dec_label_pc_2270a.dec_label_pc_22752_crit_edge ], [ %v2_22750, %bb ]
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_22759

; uselistorder directives
  uselistorder i8 %v4_2271a, { 1, 0 }
  uselistorder i32 %v3_2271a, { 1, 0, 2 }
  uselistorder i32 %v12_22716, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_22752, { 1, 0 }
}

define i32 @function_2275b() local_unnamed_addr {
dec_label_pc_2275b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2275b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2275b
}

define i32 @function_22768() local_unnamed_addr {
dec_label_pc_22768:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2277c() local_unnamed_addr {
dec_label_pc_2277c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22797() local_unnamed_addr {
dec_label_pc_22797:
  %eax.global-to-local = alloca i32, align 4
  %v0_22797 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22797
}

define i32 @function_22798() local_unnamed_addr {
dec_label_pc_22798:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_227af() local_unnamed_addr {
dec_label_pc_227af:
  %v3_227c7 = load i32, i32* @eax, align 4
  ret i32 %v3_227c7
}

define i32 @function_227d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_227d3:
  %v1_227dc = call i32 @unknown_3fa90(i32 %arg1)
  store i32 %v1_227dc, i32* @eax, align 4
  %v0_227e1 = call i32 @function_22768()
  ret i32 %v0_227e1
}

define i32 @function_227fd() local_unnamed_addr {
dec_label_pc_227fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_227fd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_227fd
}

define i32 @function_22803() local_unnamed_addr {
dec_label_pc_22803:
  %v0_22803 = call i32 @function_22798()
  ret i32 %v0_22803
}

define i32 @function_22806() local_unnamed_addr {
dec_label_pc_22806:
  %eax.global-to-local = alloca i32, align 4
  %v0_22806 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22806
}

define i32 @_ZN5boost8signals26detail12signal5_implIvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_EERKSsb10ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_SE_SG_bSH_EEENSM_IFvRKNS0_10connectionES4_SE_SG_bSH_EEENS0_5mutexEEC1ERKSJ_RKSL_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22820:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %stack_var_-68 = alloca i32, align 4
  %v2_22827 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %tmp107, i32* %esi.global-to-local, align 4
  %v2_2283b = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_2283b, i32* %eax.global-to-local, align 4
  store i32 %v2_22827, i32* %stack_var_-68, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_22884 = call i32 @unknown_44d60(i32 %v2_2283b, i32 %v2_22827)
  store i32 %v2_22884, i32* %eax.global-to-local, align 4
  %v1_22889 = load i32, i32* %esi.global-to-local, align 4
  %v2_22889 = inttoptr i32 %v1_22889 to i32*
  store i32 %v2_2283b, i32* %v2_22889, align 4
  %v0_2288b = load i32, i32* %esi.global-to-local, align 4
  %v1_2288b = add i32 %v0_2288b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2288b = inttoptr i32 %v1_2288b to i32*
  store i32 0, i32* %v2_2288b, align 4
  %v2_22892 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_22892
}

define i32 @function_2289d(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2289d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %stack_var_32 = alloca i32, align 4
  %v0_2289d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2289d = add i32 %v0_2289d, 1086786680
  %v2_2289d = inttoptr i32 %v1_2289d to i32*
  %v3_2289d = load i32, i32* %v2_2289d, align 4
  %v4_2289d = add i32 %v3_2289d, -1
  store i32 %v4_2289d, i32* %v2_2289d, align 4
  %v0_228a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_228a3 = trunc i32 %v0_228a3 to i8
  %v2_228a3 = add i8 %v1_228a3, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_228a3 = zext i8 %v2_228a3 to i32
  %v18_228a3 = and i32 %v0_228a3, -256
  %v19_228a3 = or i32 %v16_228a3, %v18_228a3
  store i32 %v19_228a3, i32* %eax.global-to-local, align 4
  %v1_228a5 = inttoptr i32 %v19_228a3 to i8*
  %v2_228a5 = load i8, i8* %v1_228a5, align 1
  %v5_228a5 = add i8 %v2_228a5, %v2_228a3
  store i8 %v5_228a5, i8* %v1_228a5, align 1
  %v0_228a7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_228a7 = lshr i32 %v0_228a7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_228a7 = load i32, i32* %eax.global-to-local, align 4
  %v5_228a7 = add i32 %v1_228a7, %v3_228a7
  %v20_228a7 = urem i32 %v5_228a7, 256
  %v22_228a7 = shl i32 %v20_228a7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_228a7 = and i32 %v0_228a7, -65281
  %v24_228a7 = or i32 %v22_228a7, %v23_228a7
  store i32 %v24_228a7, i32* %ebx.global-to-local, align 4
  %v1_228a9 = add i32 %v3_228a7, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_228a9 = trunc i32 %v1_228a9 to i8
  store i32 %v1_228a9, i32* %eax.global-to-local, align 4
  %v2_228aa = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_228aa = or i8 %v2_228aa, %v11_228a9
  %v11_228aa = load i32, i32* %ecx.global-to-local, align 4
  %v12_228aa = inttoptr i32 %v11_228aa to i8*
  store i8 %v5_228aa, i8* %v12_228aa, align 1
  %v0_228ac = load i32, i32* %eax.global-to-local, align 4
  %v1_228ac = inttoptr i32 %v0_228ac to i8*
  %v2_228ac = load i8, i8* %v1_228ac, align 1
  %v4_228ac = trunc i32 %v0_228ac to i8
  %v5_228ac = add i8 %v2_228ac, %v4_228ac
  store i8 %v5_228ac, i8* %v1_228ac, align 1
  %v0_228ae = load i32, i32* %ebx.global-to-local, align 4
  %v1_228ae = udiv i32 %v0_228ae, 256
  %v3_228ae = load i32, i32* %eax.global-to-local, align 4
  %v5_228ae = add i32 %v1_228ae, %v3_228ae
  %v20_228ae = and i32 %v5_228ae, 255
  %v22_228ae = mul nuw nsw i32 %v20_228ae, 256
  %v23_228ae = and i32 %v0_228ae, -65281
  %v24_228ae = or i32 %v22_228ae, %v23_228ae
  store i32 %v24_228ae, i32* %ebx.global-to-local, align 4
  %v1_228b0 = add i32 %v3_228ae, -107
  %v2_228b0 = inttoptr i32 %v1_228b0 to i8*
  %v3_228b0 = load i8, i8* %v2_228b0, align 1
  %v4_228b0 = load i32, i32* %ecx.global-to-local, align 4
  %v5_228b0 = lshr i32 %v4_228b0, ptrtoint (i8** @global_var_8.3277 to i32)
  %v6_228b0 = trunc i32 %v5_228b0 to i8
  %v7_228b0 = add i8 %v6_228b0, %v3_228b0
  store i8 %v7_228b0, i8* %v2_228b0, align 1
  %v0_228b3 = load i32, i32* %eax.global-to-local, align 4
  %v2_228b3 = inttoptr i32 %v0_228b3 to i32*
  %v3_228b3 = load i32, i32* %v2_228b3, align 4
  %v4_228b3 = add i32 %v3_228b3, %v0_228b3
  %v1_228b5 = load i32, i32* %esi.global-to-local, align 4
  %v2_228b5 = add i32 %v1_228b5, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_228b5 = inttoptr i32 %v2_228b5 to i32*
  store i32 %v4_228b3, i32* %v3_228b5, align 4
  %v2_228c0 = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_228c0, i32* %eax.global-to-local, align 4
  %v1_228c7 = call i32 @unknown_428b0(i32 %v2_228c0)
  store i32 %v1_228c7, i32* %eax.global-to-local, align 4
  %v1_228d0 = load i32, i32* %ebx.global-to-local, align 4
  %v12_228d0 = icmp eq i32 %tmp101, %v1_228d0
  %v1_228d2 = icmp eq i1 %v12_228d0, false
  br i1 %v1_228d2, label %dec_label_pc_228da, label %dec_label_pc_228f3

dec_label_pc_228d8:                               ; preds = %dec_label_pc_228da
  br label %dec_label_pc_228da

dec_label_pc_228da:                               ; preds = %dec_label_pc_2289d, %dec_label_pc_228d8
  %v0_228da = phi i32 [ %v2_228da, %dec_label_pc_228d8 ], [ %tmp101, %dec_label_pc_2289d ]
  %v1_228da = inttoptr i32 %v0_228da to i32*
  %v2_228da = load i32, i32* %v1_228da, align 4
  %v1_228dc = add i32 %v0_228da, 12
  store i32 %v1_228dc, i32* @eax, align 4
  %v1_228e2 = call i32 @function_36280(i32 %v1_228dc)
  store i32 %v1_228e2, i32* %eax.global-to-local, align 4
  %v1_228ef = load i32, i32* %ebx.global-to-local, align 4
  %v12_228ef = icmp eq i32 %v2_228da, %v1_228ef
  %v1_228f1 = icmp eq i1 %v12_228ef, false
  br i1 %v1_228f1, label %dec_label_pc_228d8, label %dec_label_pc_228f3

dec_label_pc_228f3:                               ; preds = %dec_label_pc_228da, %dec_label_pc_2289d
  %v2_228f3 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_228f3, i32* @eax, align 4
  %v1_228f5 = icmp eq i32 %v2_228f3, 0
  br i1 %v1_228f5, label %bb, label %dec_label_pc_228f9

bb:                                               ; preds = %dec_label_pc_228f3
  %v1_228f7 = call i32 @function_22965()
  store i32 %v1_228f7, i32* %eax.global-to-local, align 4
  %v2_228f9.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_228f9

dec_label_pc_228f9:                               ; preds = %bb, %dec_label_pc_228f3
  %v2_228f9 = phi i32 [ %v2_228f9.pre, %bb ], [ %v2_228f3, %dec_label_pc_228f3 ]
  store i32 %v2_228f9, i32* @eax, align 4
  %v1_228fb = icmp eq i32 %v2_228f9, 0
  br i1 %v1_228fb, label %bb107, label %dec_label_pc_228ff

bb107:                                            ; preds = %dec_label_pc_228f9
  %v1_228fd = call i32 @function_22941()
  store i32 %v1_228fd, i32* @eax, align 4
  %v1_228ff.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_228ff

dec_label_pc_228ff:                               ; preds = %bb107, %dec_label_pc_228f9
  %v1_228ff = phi i32 [ %v1_228ff.pre, %bb107 ], [ %v2_228f9, %dec_label_pc_228f9 ]
  %v0_228ff = phi i32 [ %v1_228fd, %bb107 ], [ %v2_228f9, %dec_label_pc_228f9 ]
  %v2_228ff = add i32 %v1_228ff, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_228ff = inttoptr i32 %v2_228ff to i32*
  store i32 %v0_228ff, i32* %v3_228ff, align 4
  %v0_22902 = load i32, i32* %esi.global-to-local, align 4
  %v1_22902 = add i32 %v0_22902, 12
  store i32 %v1_22902, i32* %esi.global-to-local, align 4
  %v3_2290d = load i32, i32* @eax, align 4
  ret i32 %v3_2290d

; uselistorder directives
  uselistorder i32 %v2_228f9, { 1, 0, 3, 2 }
  uselistorder i32 %v0_228da, { 1, 0 }
  uselistorder i32 %v3_228ae, { 1, 0 }
  uselistorder i32 %v0_228ae, { 1, 0 }
  uselistorder i32 %v3_228a7, { 1, 0 }
  uselistorder i32 %tmp101, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder label %dec_label_pc_228da, { 1, 0 }
}

define i32 @function_22914(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22914:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_22914 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22914 = add i32 %v0_22914, 1698440260
  %v2_22914 = inttoptr i32 %v1_22914 to i32*
  %v3_22914 = load i32, i32* %v2_22914, align 4
  %v4_22914 = add i32 %v3_22914, -1
  store i32 %v4_22914, i32* %v2_22914, align 4
  %v0_2291a = load i32, i32* %eax.global-to-local, align 4
  %v1_2291a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2291a = xor i32 %v1_2291a, %v0_2291a
  %v3_2291a = icmp eq i32 %v2_2291a, 0
  store i32 %v2_2291a, i32* @eax, align 4
  %v1_22920 = icmp eq i1 %v3_2291a, false
  br i1 %v1_22920, label %bb, label %dec_label_pc_22922

bb:                                               ; preds = %dec_label_pc_22914
  %v2_22920 = call i32 @function_2293c()
  store i32 %v2_22920, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_22922

dec_label_pc_22922:                               ; preds = %bb, %dec_label_pc_22914
  %v0_22929 = phi i32 [ %v2_22920, %bb ], [ %v2_2291a, %dec_label_pc_22914 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_22929
}

define i32 @function_2292c() local_unnamed_addr {
dec_label_pc_2292c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2293c() local_unnamed_addr {
dec_label_pc_2293c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22941() local_unnamed_addr {
dec_label_pc_22941:
  %v3_22959 = load i32, i32* @eax, align 4
  ret i32 %v3_22959
}

define i32 @function_22965() local_unnamed_addr {
dec_label_pc_22965:
  %v3_2297d = load i32, i32* @eax, align 4
  ret i32 %v3_2297d
}

define i32 @function_2299d() local_unnamed_addr {
dec_label_pc_2299d:
  %ecx.global-to-local = alloca i32, align 4
  %v0_2299d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2299d = add i32 %v0_2299d, 607947206
  %v2_2299d = inttoptr i32 %v1_2299d to i32*
  %v3_2299d = load i32, i32* %v2_2299d, align 4
  %v4_2299d = add i32 %v3_2299d, -1
  store i32 %v4_2299d, i32* %v2_2299d, align 4
  %v0_229a8 = call i32 @function_2292c()
  ret i32 %v0_229a8
}

define i32 @function_229b1() local_unnamed_addr {
dec_label_pc_229b1:
  %v0_229b1 = call i32 @function_2292c()
  ret i32 %v0_229b1

; uselistorder directives
  uselistorder i32 ()* @function_2292c, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IvP7CWalletRK7uint25610ChangeTypeNS1_8functionIFvSE_SH_SI_EEEEENS2_5mutexEEEEEEESt10_Select1stISR_ENS3_14group_key_lessIiSt4lessIiEEESaISR_EE7_M_copyEPKSt13_Rb_tree_nodeISR_EPS11_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_229c0:
  ret i32 0
}

define i32 @function_229ea(i32* %arg1) local_unnamed_addr {
dec_label_pc_229ea:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_229ea = load i32, i32* %ebx.global-to-local, align 4
  %v1_229ea = add i32 %v0_229ea, 1149890808
  %v2_229ea = inttoptr i32 %v1_229ea to i32*
  %v3_229ea = load i32, i32* %v2_229ea, align 4
  %v4_229ea = add i32 %v3_229ea, 1
  store i32 %v4_229ea, i32* %v2_229ea, align 4
  %v0_229f0 = load i32, i32* %eax.global-to-local, align 4
  %v1_229f0 = trunc i32 %v0_229f0 to i8
  %v2_229f0 = and i8 %v1_229f0, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_229f0 = icmp eq i8 %v2_229f0, 0
  %v8_229f0 = zext i8 %v2_229f0 to i32
  %v10_229f0 = and i32 %v0_229f0, -256
  %v11_229f0 = or i32 %v8_229f0, %v10_229f0
  store i32 %v11_229f0, i32* %eax.global-to-local, align 4
  br i1 %v3_229f0, label %dec_label_pc_22a1c, label %dec_label_pc_229f4

dec_label_pc_229f4:                               ; preds = %dec_label_pc_229ea
  %v0_229f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_229f4 = add i32 %v0_229f4, 16
  %v2_229f4 = inttoptr i32 %v1_229f4 to i32*
  %v3_229f4 = load i32, i32* %v2_229f4, align 4
  store i32 %v3_229f4, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_229fb = add i32 %tmp102, 16
  %v3_229fb = inttoptr i32 %v2_229fb to i32*
  store i32 %v3_229f4, i32* %v3_229fb, align 4
  %v0_229fe = load i32, i32* %edx.global-to-local, align 4
  %v1_229fe = add i32 %v0_229fe, 20
  %v2_229fe = inttoptr i32 %v1_229fe to i8*
  store i8 0, i8* %v2_229fe, align 1
  %v0_22a02 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22a02 = add i32 %v0_22a02, 20
  %v2_22a02 = inttoptr i32 %v1_22a02 to i8*
  %v3_22a02 = load i8, i8* %v2_22a02, align 1
  %v10_22a02 = icmp eq i8 %v3_22a02, 0
  br i1 %v10_22a02, label %dec_label_pc_22a12, label %dec_label_pc_22a08

dec_label_pc_22a08:                               ; preds = %dec_label_pc_229f4
  %v1_22a08 = add i32 %v0_22a02, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_22a08 = inttoptr i32 %v1_22a08 to i32*
  %v3_22a08 = load i32, i32* %v2_22a08, align 4
  store i32 %v3_22a08, i32* %eax.global-to-local, align 4
  %v0_22a0b = load i32, i32* %edx.global-to-local, align 4
  %v1_22a0b = add i32 %v0_22a0b, 20
  %v2_22a0b = inttoptr i32 %v1_22a0b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_22a0b, align 1
  %v0_22a0f = load i32, i32* %eax.global-to-local, align 4
  %v1_22a0f = load i32, i32* %edx.global-to-local, align 4
  %v2_22a0f = add i32 %v1_22a0f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_22a0f = inttoptr i32 %v2_22a0f to i32*
  store i32 %v0_22a0f, i32* %v3_22a0f, align 4
  %v0_22a12.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_22a12

dec_label_pc_22a12:                               ; preds = %dec_label_pc_22a08, %dec_label_pc_229f4
  %v0_22a12 = phi i32 [ %v0_22a12.pre, %dec_label_pc_22a08 ], [ %v0_22a02, %dec_label_pc_229f4 ]
  %v1_22a12 = add i32 %v0_22a12, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_22a12 = inttoptr i32 %v1_22a12 to i32*
  %v3_22a12 = load i32, i32* %v2_22a12, align 4
  store i32 %v3_22a12, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_22a19 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_22a19 = inttoptr i32 %v2_22a19 to i32*
  store i32 %v3_22a12, i32* %v3_22a19, align 4
  br label %dec_label_pc_22a1c

dec_label_pc_22a1c:                               ; preds = %dec_label_pc_22a12, %dec_label_pc_229ea
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_22a20 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_22a20, i32* %eax.global-to-local, align 4
  %v1_22a22 = add i32 %tmp102, 12
  %v2_22a22 = inttoptr i32 %v1_22a22 to i32*
  store i32 0, i32* %v2_22a22, align 4
  %v0_22a29 = load i32, i32* %eax.global-to-local, align 4
  %v1_22a29 = load i32, i32* %edx.global-to-local, align 4
  %v2_22a29 = inttoptr i32 %v1_22a29 to i32*
  store i32 %v0_22a29, i32* %v2_22a29, align 4
  %v0_22a2b = load i32, i32* %ebx.global-to-local, align 4
  %v1_22a2b = add i32 %v0_22a2b, 12
  %v2_22a2b = inttoptr i32 %v1_22a2b to i32*
  %v3_22a2b = load i32, i32* %v2_22a2b, align 4
  store i32 %v3_22a2b, i32* %eax.global-to-local, align 4
  %v0_22a2e = load i32, i32* %edx.global-to-local, align 4
  %v1_22a2e = add i32 %v0_22a2e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_22a2e = inttoptr i32 %v1_22a2e to i32*
  store i32 0, i32* %v2_22a2e, align 4
  %v0_22a35 = load i32, i32* %esi.global-to-local, align 4
  %v1_22a35 = load i32, i32* %edx.global-to-local, align 4
  %v2_22a35 = add i32 %v1_22a35, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_22a35 = inttoptr i32 %v2_22a35 to i32*
  store i32 %v0_22a35, i32* %v3_22a35, align 4
  %v0_22a38 = load i32, i32* %eax.global-to-local, align 4
  %v1_22a38 = icmp eq i32 %v0_22a38, 0
  br i1 %v1_22a38, label %dec_label_pc_22a53, label %dec_label_pc_22a3c

dec_label_pc_22a3c:                               ; preds = %dec_label_pc_22a1c
  %v0_22a3c = load i32, i32* %edx.global-to-local, align 4
  %v2_22a47 = call i32 @unknown_45380(i32 %v0_22a38, i32 %v0_22a3c)
  store i32 %v2_22a47, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_22a47, i32* %v2_22a22, align 4
  br label %dec_label_pc_22a53

dec_label_pc_22a53:                               ; preds = %dec_label_pc_22a3c, %dec_label_pc_22a1c
  %v0_22a53 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22a53 = add i32 %v0_22a53, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_22a53 = inttoptr i32 %v1_22a53 to i32*
  %v3_22a53 = load i32, i32* %v2_22a53, align 4
  store i32 %v3_22a53, i32* %esi.global-to-local, align 4
  %v1_22a5a = icmp eq i32 %v3_22a53, 0
  %v1_22a5c = icmp eq i1 %v1_22a5a, false
  br i1 %v1_22a5c, label %dec_label_pc_22a62, label %dec_label_pc_22a5e

dec_label_pc_22a5e:                               ; preds = %dec_label_pc_22a53
  %v0_22a5e = call i32 @function_22ace()
  store i32 %v0_22a5e, i32* %eax.global-to-local, align 4
  ret i32 %v0_22a5e

dec_label_pc_22a62:                               ; preds = %dec_label_pc_22a53
  %v2_22a62 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_22a62

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 4, 0, 1, 6, 2, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_22a72() local_unnamed_addr {
dec_label_pc_22a72:
  %eax.global-to-local = alloca i32, align 4
  %v0_22a72 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22a72
}

define i32 @function_22ace() local_unnamed_addr {
dec_label_pc_22ace:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_22ad2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22ad2 = icmp eq i32 %v1_22ad2, %tmp6
  %v1_22add = icmp eq i1 %v3_22ad2, false
  br i1 %v1_22add, label %dec_label_pc_22ae7, label %dec_label_pc_22adf

dec_label_pc_22adf:                               ; preds = %dec_label_pc_22ace
  ret i32 %tmp5

dec_label_pc_22ae7:                               ; preds = %dec_label_pc_22ace
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_22b0a() local_unnamed_addr {
dec_label_pc_22b0a:
  %eax.global-to-local = alloca i32, align 4
  %v0_22b0a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22b0a
}

define i32 @_ZN5boost8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S7_S8_EEENSD_IFvRKNS0_10connectionES4_S7_S8_EEENS0_5mutexEE16invocation_stateC1ERKNS1_12grouped_listIiSC_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IvS4_S7_S8_SF_EESL_EEEEEERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22b20:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_-92 = alloca i32, align 4
  store i32 36, i32* %stack_var_-92, align 4
  store i32 %tmp103, i32* %arg1, align 4
  %v2_22b56 = add i32 %tmp103, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_22b56 = inttoptr i32 %v2_22b56 to i32*
  store i32 %tmp103, i32* %v3_22b56, align 4
  %v1_22b5d = inttoptr i32 %arg2 to i32*
  %v2_22b5d = load i32, i32* %v1_22b5d, align 4
  %v12_22b5f = icmp eq i32 %v2_22b5d, %arg2
  br i1 %v12_22b5f, label %bb, label %dec_label_pc_22b63

bb:                                               ; preds = %dec_label_pc_22b20
  %v1_22b61 = load i32, i32* %stack_var_-92, align 4
  %v2_22b61 = call i32 @function_22ba7(i32 %v1_22b61)
  br label %dec_label_pc_22b63

dec_label_pc_22b63:                               ; preds = %bb, %dec_label_pc_22b20
  %v0_22b67 = phi i32 [ %v2_22b61, %bb ], [ %arg2, %dec_label_pc_22b20 ]
  ret i32 %v0_22b67

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_22ba7(i32 %arg1) local_unnamed_addr {
dec_label_pc_22ba7:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %v1_22baf = add i32 %tmp14, 12
  %v2_22baf = inttoptr i32 %v1_22baf to i32*
  store i32 0, i32* %v2_22baf, align 4
  %v0_22bb6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_22bb6, i32* %edx.global-to-local, align 4
  %v1_22bb8 = add i32 %v0_22bb6, 16
  %v2_22bb8 = inttoptr i32 %v1_22bb8 to i32*
  store i32 0, i32* %v2_22bb8, align 4
  %v0_22bbf = load i32, i32* %edx.global-to-local, align 4
  %v1_22bbf = add i32 %v0_22bbf, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_22bbf, i32* %edx.global-to-local, align 4
  %v0_22bc2 = load i32, i32* %eax.global-to-local, align 4
  %v1_22bc2 = add i32 %v0_22bc2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_22bc2 = inttoptr i32 %v1_22bc2 to i32*
  store i32 0, i32* %v2_22bc2, align 4
  %v0_22bc9 = load i32, i32* %eax.global-to-local, align 4
  %v1_22bc9 = add i32 %v0_22bc9, 12
  store i32 %v1_22bc9, i32* %eax.global-to-local, align 4
  %v1_22bcc = load i32, i32* %ecx.global-to-local, align 4
  %v2_22bcc = add i32 %v1_22bcc, 20
  %v3_22bcc = inttoptr i32 %v2_22bcc to i32*
  store i32 %v1_22bc9, i32* %v3_22bcc, align 4
  %v0_22bcf = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_22bcf, i32* %ebp.global-to-local, align 4
  %v1_22bd1 = load i32, i32* %ecx.global-to-local, align 4
  %v2_22bd1 = add i32 %v1_22bd1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_22bd1 = inttoptr i32 %v2_22bd1 to i32*
  store i32 %v0_22bcf, i32* %v3_22bd1, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v0_22bd8 = load i32, i32* %eax.global-to-local, align 4
  %v1_22bdc = add i32 %arg1, 16
  %v2_22bdc = inttoptr i32 %v1_22bdc to i32*
  %v3_22bdc = load i32, i32* %v2_22bdc, align 4
  store i32 %v3_22bdc, i32* %eax.global-to-local, align 4
  %v1_22bdf = icmp eq i32 %v3_22bdc, 0
  br i1 %v1_22bdf, label %dec_label_pc_22c32, label %dec_label_pc_22be3

dec_label_pc_22be3:                               ; preds = %dec_label_pc_22ba7
  %v0_22beb = load i32, i32* %edx.global-to-local, align 4
  %v3_22bee = call i32 @unknown_454e0(i32 %v0_22beb, i32 %v3_22bdc)
  store i32 %v3_22bee, i32* %eax.global-to-local, align 4
  store i32 %v3_22bee, i32* %ebp.global-to-local, align 4
  %v2_22bf9 = add i32 %tmp14, 16
  %v3_22bf9 = inttoptr i32 %v2_22bf9 to i32*
  store i32 %v3_22bee, i32* %v3_22bf9, align 4
  %v0_22c02.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_22c0224 = add i32 %v0_22c02.pre, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_22c0225 = inttoptr i32 %v1_22c0224 to i32*
  %v3_22c0226 = load i32, i32* %v2_22c0225, align 4
  store i32 %v3_22c0226, i32* %edx.global-to-local, align 4
  %v1_22c0527 = icmp eq i32 %v3_22c0226, 0
  %v1_22c0728 = icmp eq i1 %v1_22c0527, false
  br i1 %v1_22c0728, label %dec_label_pc_22c00, label %dec_label_pc_22c09

dec_label_pc_22c00:                               ; preds = %dec_label_pc_22be3, %dec_label_pc_22c00
  %v3_22c0229 = phi i32 [ %v3_22c02, %dec_label_pc_22c00 ], [ %v3_22c0226, %dec_label_pc_22be3 ]
  store i32 %v3_22c0229, i32* %ebp.global-to-local, align 4
  %v1_22c02 = add i32 %v3_22c0229, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_22c02 = inttoptr i32 %v1_22c02 to i32*
  %v3_22c02 = load i32, i32* %v2_22c02, align 4
  store i32 %v3_22c02, i32* %edx.global-to-local, align 4
  %v1_22c05 = icmp eq i32 %v3_22c02, 0
  %v1_22c07 = icmp eq i1 %v1_22c05, false
  br i1 %v1_22c07, label %dec_label_pc_22c00, label %dec_label_pc_22c09

dec_label_pc_22c09:                               ; preds = %dec_label_pc_22c00, %dec_label_pc_22be3
  %v0_22c0d.lcssa = phi i32 [ %v0_22c02.pre, %dec_label_pc_22be3 ], [ %v3_22c0229, %dec_label_pc_22c00 ]
  %v2_22c0d = add i32 %tmp14, 20
  %v3_22c0d = inttoptr i32 %v2_22c0d to i32*
  store i32 %v0_22c0d.lcssa, i32* %v3_22c0d, align 4
  %v0_22c1a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_22c1a16 = add i32 %v0_22c1a.pre, 12
  %v2_22c1a17 = inttoptr i32 %v1_22c1a16 to i32*
  %v3_22c1a18 = load i32, i32* %v2_22c1a17, align 4
  store i32 %v3_22c1a18, i32* %edx.global-to-local, align 4
  %v1_22c1d19 = icmp eq i32 %v3_22c1a18, 0
  %v1_22c1f20 = icmp eq i1 %v1_22c1d19, false
  br i1 %v1_22c1f20, label %dec_label_pc_22c18, label %dec_label_pc_22c21

dec_label_pc_22c18:                               ; preds = %dec_label_pc_22c09, %dec_label_pc_22c18
  %v3_22c1a21 = phi i32 [ %v3_22c1a, %dec_label_pc_22c18 ], [ %v3_22c1a18, %dec_label_pc_22c09 ]
  store i32 %v3_22c1a21, i32* %eax.global-to-local, align 4
  %v1_22c1a = add i32 %v3_22c1a21, 12
  %v2_22c1a = inttoptr i32 %v1_22c1a to i32*
  %v3_22c1a = load i32, i32* %v2_22c1a, align 4
  store i32 %v3_22c1a, i32* %edx.global-to-local, align 4
  %v1_22c1d = icmp eq i32 %v3_22c1a, 0
  %v1_22c1f = icmp eq i1 %v1_22c1d, false
  br i1 %v1_22c1f, label %dec_label_pc_22c18, label %dec_label_pc_22c21

dec_label_pc_22c21:                               ; preds = %dec_label_pc_22c18, %dec_label_pc_22c09
  %v0_22c29.lcssa = phi i32 [ %v0_22c1a.pre, %dec_label_pc_22c09 ], [ %v3_22c1a21, %dec_label_pc_22c18 ]
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v2_22c29 = add i32 %tmp14, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_22c29 = inttoptr i32 %v2_22c29 to i32*
  store i32 %v0_22c29.lcssa, i32* %v3_22c29, align 4
  %v0_22c2c = load i32, i32* %ecx.global-to-local, align 4
  %v1_22c2c = add i32 %v0_22c2c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_22c2c = inttoptr i32 %v1_22c2c to i32*
  %v3_22c2c = load i32, i32* %v2_22c2c, align 4
  store i32 %v3_22c2c, i32* %eax.global-to-local, align 4
  %v1_22c2f = load i32, i32* %edx.global-to-local, align 4
  %v2_22c2f = add i32 %v1_22c2f, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_22c2f = inttoptr i32 %v2_22c2f to i32*
  store i32 %v3_22c2c, i32* %v3_22c2f, align 4
  br label %dec_label_pc_22c32

dec_label_pc_22c32:                               ; preds = %dec_label_pc_22c21, %dec_label_pc_22ba7
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_22c3a = add i32 %arg1, 20
  %v2_22c3a = inttoptr i32 %v1_22c3a to i32*
  %v3_22c3a = load i32, i32* %v2_22c3a, align 4
  store i32 %v3_22c3a, i32* %edi.global-to-local, align 4
  %v1_22c3d = add i32 %arg1, 12
  store i32 %v1_22c3d, i32* %edx.global-to-local, align 4
  %v1_22c40 = inttoptr i32 %tmp14 to i32*
  %v2_22c40 = load i32, i32* %v1_22c40, align 4
  store i32 %v2_22c40, i32* %esi.global-to-local, align 4
  %v12_22c46 = icmp eq i32 %v3_22c3a, %v1_22c3d
  br i1 %v12_22c46, label %bb, label %dec_label_pc_22c4a

bb:                                               ; preds = %dec_label_pc_22c32
  %v2_22c48 = call i32 @function_22ca0(i32 %v1_22c3d)
  store i32 %v2_22c48, i32* @eax, align 4
  br label %dec_label_pc_22c4a

dec_label_pc_22c4a:                               ; preds = %bb, %dec_label_pc_22c32
  %v4_22c50 = load i32, i32* %ebp.global-to-local, align 4
  %v15_22c50 = icmp eq i32 %v0_22bd8, %v4_22c50
  br i1 %v15_22c50, label %bb15, label %dec_label_pc_22c5a

bb15:                                             ; preds = %dec_label_pc_22c4a
  %v1_22c54 = call i32 @function_22d8f()
  store i32 %v1_22c54, i32* @eax, align 4
  %v1_22c5e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_22c5a

dec_label_pc_22c5a:                               ; preds = %bb15, %dec_label_pc_22c4a
  %v1_22c5e = phi i32 [ %v1_22c5e.pre, %bb15 ], [ %v4_22c50, %dec_label_pc_22c4a ]
  %v4_22c5a = load i32, i32* %edi.global-to-local, align 4
  %v15_22c5a = icmp eq i32 %v1_22c3d, %v4_22c5a
  %v0_22c5e = load i32, i32* %esi.global-to-local, align 4
  %v2_22c5e = add i32 %v1_22c5e, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_22c5e = inttoptr i32 %v2_22c5e to i32*
  store i32 %v0_22c5e, i32* %v3_22c5e, align 4
  br i1 %v15_22c5a, label %dec_label_pc_22c6a, label %dec_label_pc_22c67

dec_label_pc_22c67:                               ; preds = %dec_label_pc_22c5a
  br label %dec_label_pc_22c6a

dec_label_pc_22c6a:                               ; preds = %dec_label_pc_22c67, %dec_label_pc_22c5a
  %v4_22c6a = load i32, i32* @eax, align 4
  ret i32 %v4_22c6a

; uselistorder directives
  uselistorder i32 %v4_22c50, { 1, 0 }
  uselistorder i32 %v1_22c3d, { 0, 2, 1, 3 }
  uselistorder i32 %v3_22c1a, { 1, 2, 0 }
  uselistorder i32 %v3_22c02, { 1, 2, 0 }
  uselistorder i32 %tmp14, { 0, 3, 2, 1, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 10, 4, 9, 5, 6, 7, 8 }
  uselistorder i32* %ebp.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_22c18, { 1, 0 }
  uselistorder label %dec_label_pc_22c00, { 1, 0 }
}

define i32 @function_22c71(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c71:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_22c71 = load i32, i32* %ecx.global-to-local, align 4
  %v1_22c71 = add i32 %v0_22c71, 608472007
  %v2_22c71 = inttoptr i32 %v1_22c71 to i32*
  %v3_22c71 = load i32, i32* %v2_22c71, align 4
  %v4_22c71 = add i32 %v3_22c71, -1
  store i32 %v4_22c71, i32* %v2_22c71, align 4
  %v2_22c77 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_22c77 = load i32, i32* %ebx.global-to-local, align 4
  %v4_22c77 = lshr i32 %v3_22c77, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_22c77 = trunc i32 %v4_22c77 to i8
  %v6_22c77 = and i8 %v5_22c77, %v2_22c77
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* %of.global-to-local, align 1
  %v8_22c77 = icmp slt i8 %v6_22c77, 0
  store i1 %v8_22c77, i1* %sf.global-to-local, align 1
  %v13_22c77 = inttoptr i32 %v3_22c77 to i8*
  store i8 %v6_22c77, i8* %v13_22c77, align 1
  %v0_22c79 = load i1, i1* %sf.global-to-local, align 1
  %v1_22c79 = load i1, i1* %of.global-to-local, align 1
  %v2_22c79 = icmp eq i1 %v0_22c79, %v1_22c79
  %v0_22c7b = load i32, i32* %eax.global-to-local, align 4
  br i1 %v2_22c79, label %dec_label_pc_22c7b, label %dec_label_pc_22c9f

dec_label_pc_22c7b:                               ; preds = %dec_label_pc_22c71
  %v1_22c7b = trunc i32 %v0_22c7b to i8
  %v2_22c7b = load i1, i1* %cf.global-to-local, align 1
  %v3_22c7b = zext i1 %v2_22c7b to i8
  %v4_22c7b = sub i8 %v1_22c7b, ptrtoint (i8* @global_var_74.3482 to i8)
  %v5_22c7b = add i8 %v3_22c7b, %v4_22c7b
  %v17_22c7b = icmp ult i8 %v1_22c7b, 116
  %v18_22c7b = or i1 %v17_22c7b, %v2_22c7b
  %v21_22c7b = sub i8 %v4_22c7b, %v3_22c7b
  %tmp100 = xor i8 %v21_22c7b, -128
  %v24_22c7b = and i8 %tmp100, %v1_22c7b
  %v25_22c7b = icmp slt i8 %v24_22c7b, 0
  store i1 %v18_22c7b, i1* %cf.global-to-local, align 1
  store i1 %v25_22c7b, i1* %of.global-to-local, align 1
  %v27_22c7b = icmp slt i8 %v5_22c7b, 0
  store i1 %v27_22c7b, i1* %sf.global-to-local, align 1
  %v31_22c7b = zext i8 %v5_22c7b to i32
  %v33_22c7b = and i32 %v0_22c7b, -256
  %v34_22c7b = or i32 %v31_22c7b, %v33_22c7b
  store i32 %v34_22c7b, i32* %eax.global-to-local, align 4
  %v0_22c7e = load i32, i32* %edi.global-to-local, align 4
  %v1_22c7e = add i32 %v0_22c7e, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_22c7e = inttoptr i32 %v1_22c7e to i32*
  %v3_22c7e = load i32, i32* %v2_22c7e, align 4
  store i32 %v3_22c7e, i32* %eax.global-to-local, align 4
  %v0_22c8c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_22c8c101 = icmp eq i32 %v0_22c8c.pre, %v3_22c7e
  %v1_22c8e102 = icmp eq i1 %v12_22c8c101, false
  br i1 %v1_22c8e102, label %dec_label_pc_22c88.lr.ph, label %dec_label_pc_22c90

dec_label_pc_22c88.lr.ph:                         ; preds = %dec_label_pc_22c7b
  %v0_22c8a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_22c88

dec_label_pc_22c88:                               ; preds = %dec_label_pc_22c88.lr.ph, %dec_label_pc_22c88
  %v0_22c8a = phi i32 [ %v0_22c8a.pre, %dec_label_pc_22c88.lr.ph ], [ %v2_22c8a, %dec_label_pc_22c88 ]
  %v0_22c88103 = phi i32 [ %v0_22c8c.pre, %dec_label_pc_22c88.lr.ph ], [ %v2_22c88, %dec_label_pc_22c88 ]
  %v1_22c88 = inttoptr i32 %v0_22c88103 to i32*
  %v2_22c88 = load i32, i32* %v1_22c88, align 4
  store i32 %v2_22c88, i32* %ebx.global-to-local, align 4
  %v1_22c8a = inttoptr i32 %v0_22c8a to i32*
  %v2_22c8a = load i32, i32* %v1_22c8a, align 4
  store i32 %v2_22c8a, i32* %esi.global-to-local, align 4
  %v12_22c8c = icmp eq i32 %v2_22c88, %v3_22c7e
  %v1_22c8e = icmp eq i1 %v12_22c8c, false
  br i1 %v1_22c8e, label %dec_label_pc_22c88, label %dec_label_pc_22c90

dec_label_pc_22c90:                               ; preds = %dec_label_pc_22c88, %dec_label_pc_22c7b
  %v5_22c98 = sub i32 %v0_22c7e, %arg1
  %v10_22c98 = icmp ult i32 %v0_22c7e, %arg1
  %v11_22c98 = xor i32 %v0_22c7e, %arg1
  %v12_22c98 = xor i32 %v5_22c98, %v0_22c7e
  %v13_22c98 = and i32 %v12_22c98, %v11_22c98
  %v14_22c98 = icmp slt i32 %v13_22c98, 0
  store i1 %v10_22c98, i1* %cf.global-to-local, align 1
  store i1 %v14_22c98, i1* %of.global-to-local, align 1
  %v16_22c98 = icmp slt i32 %v5_22c98, 0
  store i1 %v16_22c98, i1* %sf.global-to-local, align 1
  ret i32 %v3_22c7e

dec_label_pc_22c9f:                               ; preds = %dec_label_pc_22c71
  ret i32 %v0_22c7b

; uselistorder directives
  uselistorder i32 %v5_22c98, { 1, 0 }
  uselistorder i32 %v2_22c8a, { 1, 0 }
  uselistorder i32 %v2_22c88, { 0, 2, 1 }
  uselistorder i32 %v3_22c7e, { 2, 1, 0, 3 }
  uselistorder i32 %v0_22c7e, { 0, 1, 3, 2, 4 }
  uselistorder i8 %v4_22c7b, { 1, 0 }
  uselistorder i8 %v3_22c7b, { 1, 0 }
  uselistorder i32 %v0_22c7b, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1 }
  uselistorder label %dec_label_pc_22c88, { 1, 0 }
}

define i32 @function_22ca0(i32 %arg1) local_unnamed_addr {
dec_label_pc_22ca0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_22ca8 = add i32 %tmp2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_22ca8 = inttoptr i32 %v1_22ca8 to i32*
  store i32 0, i32* %v2_22ca8, align 4
  %v0_22caf = load i32, i32* %eax.global-to-local, align 4
  %v1_22caf = load i32, i32* %edx.global-to-local, align 4
  %v2_22caf = inttoptr i32 %v1_22caf to i32*
  store i32 %v0_22caf, i32* %v2_22caf, align 4
  %v2_22cb1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_22cb1
}

define i32 @function_22cea(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_22cea:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_22cea = load i32, i32* %ecx.global-to-local, align 4
  %v1_22cea = add i32 %v0_22cea, 608472003
  %v2_22cea = inttoptr i32 %v1_22cea to i32*
  %v3_22cea = load i32, i32* %v2_22cea, align 4
  %v4_22cea = add i32 %v3_22cea, -1
  store i32 %v4_22cea, i32* %v2_22cea, align 4
  %v0_22cf3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22cf3 = lshr i32 %v0_22cf3, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_22cf31 = or i32 %v1_22cf3, %arg1
  %v11_22cf3 = urem i32 %v5_22cf31, 256
  %v13_22cf3 = shl i32 %v11_22cf3, ptrtoint (i8** @global_var_8.3277 to i32)
  %v14_22cf3 = and i32 %v0_22cf3, -65281
  %v15_22cf3 = or i32 %v13_22cf3, %v14_22cf3
  store i32 %v15_22cf3, i32* %ebx.global-to-local, align 4
  %v1_22cf5 = add i32 %arg1, ptrtoint (i8** @global_var_1.3274 to i32)
  %v8_22cf6 = and i32 %v1_22cf5, ptrtoint (i8* @global_var_ff.3305 to i32)
  %v12_22cf6 = and i32 %v1_22cf5, or (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 -256)
  store i32 %v12_22cf6, i32* %eax.global-to-local, align 4
  %v1_22cf8 = inttoptr i32 %v12_22cf6 to i8*
  %v2_22cf8 = load i8, i8* %v1_22cf8, align 1
  %v4_22cf8 = trunc i32 %v8_22cf6 to i8
  %v5_22cf8 = add i8 %v2_22cf8, %v4_22cf8
  store i8 %v5_22cf8, i8* %v1_22cf8, align 1
  %v0_22cfa = load i32, i32* %ebx.global-to-local, align 4
  %v1_22cfa = lshr i32 %v0_22cfa, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_22cfa = load i32, i32* %eax.global-to-local, align 4
  %v4_22cfa = trunc i32 %v3_22cfa to i8
  %v5_22cfa = add i32 %v1_22cfa, %v3_22cfa
  %v20_22cfa = mul i32 %v5_22cfa, 256
  %v22_22cfa = and i32 %v20_22cfa, 65280
  %v23_22cfa = and i32 %v0_22cfa, -65281
  %v24_22cfa = or i32 %v22_22cfa, %v23_22cfa
  store i32 %v24_22cfa, i32* %ebx.global-to-local, align 4
  %v2_22cfc = add i8 %v4_22cfa, 36
  %v6_22cfc = icmp ugt i8 %v4_22cfa, -37
  %v16_22cfc = zext i8 %v2_22cfc to i32
  %v18_22cfc = and i32 %v3_22cfa, -256
  %v19_22cfc = or i32 %v16_22cfc, %v18_22cfc
  store i32 %v19_22cfc, i32* @eax, align 4
  %v1_22cfe = inttoptr i32 %v19_22cfc to i8*
  %v2_22cfe = load i8, i8* %v1_22cfe, align 1
  %v6_22cfe = zext i1 %v6_22cfc to i8
  %v7_22cfe = add i8 %v2_22cfe, %v2_22cfc
  %v8_22cfe = add i8 %v7_22cfe, %v6_22cfe
  store i8 %v8_22cfe, i8* %v1_22cfe, align 1
  %v0_22d00 = load i32, i32* @eax, align 4
  %v1_22d00 = inttoptr i32 %v0_22d00 to i8*
  %v2_22d00 = load i8, i8* %v1_22d00, align 1
  %v4_22d00 = trunc i32 %v0_22d00 to i8
  %v5_22d00 = add i8 %v2_22d00, %v4_22d00
  store i8 %v5_22d00, i8* %v1_22d00, align 1
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v1_22d0b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22d0b = xor i32 %v1_22d0b, %arg3
  %v3_22d0b = icmp eq i32 %v2_22d0b, 0
  store i32 %v2_22d0b, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v0_22d16 = load i32, i32* @eax, align 4
  %v1_22d16 = add i32 %v0_22d16, 4
  %v2_22d16 = inttoptr i32 %v1_22d16 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_22d16, align 4
  %v0_22d1d = load i32, i32* @eax, align 4
  %v1_22d1d = add i32 %v0_22d1d, 8
  %v2_22d1d = inttoptr i32 %v1_22d1d to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_22d1d, align 4
  %v0_22d24 = load i32, i32* @eax, align 4
  %v1_22d24 = inttoptr i32 %v0_22d24 to i32*
  store i32 ptrtoint (%vtable_39548_type* @global_var_39548.3571 to i32), i32* %v1_22d24, align 4
  %v0_22d2a = load i32, i32* %ebx.global-to-local, align 4
  %v1_22d2a = load i32, i32* @eax, align 4
  %v2_22d2a = add i32 %v1_22d2a, 12
  %v3_22d2a = inttoptr i32 %v2_22d2a to i32*
  store i32 %v0_22d2a, i32* %v3_22d2a, align 4
  %v0_22d2d = load i32, i32* @eax, align 4
  %v1_22d2d = load i32, i32* %edx.global-to-local, align 4
  %v2_22d2d = add i32 %v1_22d2d, 12
  %v3_22d2d = inttoptr i32 %v2_22d2d to i32*
  store i32 %v0_22d2d, i32* %v3_22d2d, align 4
  %v1_22d30 = icmp eq i1 %v3_22d0b, false
  br i1 %v1_22d30, label %bb, label %dec_label_pc_22cea.dec_label_pc_22d32_crit_edge

dec_label_pc_22cea.dec_label_pc_22d32_crit_edge:  ; preds = %dec_label_pc_22cea
  %v0_22d39.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_22d32

bb:                                               ; preds = %dec_label_pc_22cea
  %v2_22d30 = call i32 @function_22d5c()
  store i32 %v2_22d30, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_22d32

dec_label_pc_22d32:                               ; preds = %dec_label_pc_22cea.dec_label_pc_22d32_crit_edge, %bb
  %v0_22d39 = phi i32 [ %v0_22d39.pre, %dec_label_pc_22cea.dec_label_pc_22d32_crit_edge ], [ %v2_22d30, %bb ]
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_22d39

; uselistorder directives
  uselistorder i8 %v4_22cfa, { 1, 0 }
  uselistorder i32 %v3_22cfa, { 1, 0, 2 }
  uselistorder i32 %v12_22cf6, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_22d32, { 1, 0 }
}

define i32 @function_22d3b() local_unnamed_addr {
dec_label_pc_22d3b:
  %eax.global-to-local = alloca i32, align 4
  %v0_22d3b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22d3b
}

define i32 @function_22d48() local_unnamed_addr {
dec_label_pc_22d48:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22d5c() local_unnamed_addr {
dec_label_pc_22d5c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22d77() local_unnamed_addr {
dec_label_pc_22d77:
  %eax.global-to-local = alloca i32, align 4
  %v0_22d77 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22d77
}

define i32 @function_22d78() local_unnamed_addr {
dec_label_pc_22d78:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22d8f() local_unnamed_addr {
dec_label_pc_22d8f:
  %v3_22da7 = load i32, i32* @eax, align 4
  ret i32 %v3_22da7
}

define i32 @function_22db3(i32 %arg1) local_unnamed_addr {
dec_label_pc_22db3:
  %v1_22dbc = call i32 @unknown_400d0(i32 %arg1)
  store i32 %v1_22dbc, i32* @eax, align 4
  %v0_22dc1 = call i32 @function_22d48()
  ret i32 %v0_22dc1
}

define i32 @function_22dc4() local_unnamed_addr {
dec_label_pc_22dc4:
  %v0_22dc4 = load i32, i32* @eax, align 4
  %v2_22dc4 = add i32 %v0_22dc4, 36
  %v16_22dc4 = and i32 %v2_22dc4, 255
  %v18_22dc4 = and i32 %v0_22dc4, -256
  %v19_22dc4 = or i32 %v16_22dc4, %v18_22dc4
  ret i32 %v19_22dc4

; uselistorder directives
  uselistorder i32 %v0_22dc4, { 1, 0 }
}

define i32 @function_22ddd() local_unnamed_addr {
dec_label_pc_22ddd:
  %eax.global-to-local = alloca i32, align 4
  %v0_22ddd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22ddd
}

define i32 @function_22de3() local_unnamed_addr {
dec_label_pc_22de3:
  %v0_22de3 = call i32 @function_22d78()
  ret i32 %v0_22de3
}

define i32 @function_22de6() local_unnamed_addr {
dec_label_pc_22de6:
  %eax.global-to-local = alloca i32, align 4
  %v0_22de6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22de6
}

define i32 @_ZN5boost8signals26detail12signal3_implIvP7CWalletRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S7_S8_EEENSD_IFvRKNS0_10connectionES4_S7_S8_EEENS0_5mutexEEC1ERKSA_RKSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22e00:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %stack_var_-68 = alloca i32, align 4
  %v2_22e07 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %tmp107, i32* %esi.global-to-local, align 4
  %v2_22e1b = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_22e1b, i32* %eax.global-to-local, align 4
  store i32 %v2_22e07, i32* %stack_var_-68, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_22e64 = call i32 @unknown_45920(i32 %v2_22e1b, i32 %v2_22e07)
  store i32 %v2_22e64, i32* %eax.global-to-local, align 4
  %v1_22e69 = load i32, i32* %esi.global-to-local, align 4
  %v2_22e69 = inttoptr i32 %v1_22e69 to i32*
  store i32 %v2_22e1b, i32* %v2_22e69, align 4
  %v0_22e6b = load i32, i32* %esi.global-to-local, align 4
  %v1_22e6b = add i32 %v0_22e6b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_22e6b = inttoptr i32 %v1_22e6b to i32*
  store i32 0, i32* %v2_22e6b, align 4
  %v2_22e72 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_22e72
}

define i32 @function_22e7d(i32* %arg1) local_unnamed_addr {
dec_label_pc_22e7d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %stack_var_33 = alloca i32, align 4
  %v0_22e7d = load i32, i32* %ecx.global-to-local, align 4
  %v1_22e7d = add i32 %v0_22e7d, 1086786680
  %v2_22e7d = inttoptr i32 %v1_22e7d to i32*
  %v3_22e7d = load i32, i32* %v2_22e7d, align 4
  %v4_22e7d = add i32 %v3_22e7d, -1
  store i32 %v4_22e7d, i32* %v2_22e7d, align 4
  %v0_22e83 = load i32, i32* %eax.global-to-local, align 4
  %v1_22e83 = trunc i32 %v0_22e83 to i8
  %v2_22e83 = add i8 %v1_22e83, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_22e83 = zext i8 %v2_22e83 to i32
  %v18_22e83 = and i32 %v0_22e83, -256
  %v19_22e83 = or i32 %v16_22e83, %v18_22e83
  store i32 %v19_22e83, i32* %eax.global-to-local, align 4
  %v1_22e85 = inttoptr i32 %v19_22e83 to i8*
  %v2_22e85 = load i8, i8* %v1_22e85, align 1
  %v5_22e85 = add i8 %v2_22e85, %v2_22e83
  store i8 %v5_22e85, i8* %v1_22e85, align 1
  %v0_22e87 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22e87 = lshr i32 %v0_22e87, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_22e87 = load i32, i32* %eax.global-to-local, align 4
  %v5_22e87 = add i32 %v1_22e87, %v3_22e87
  %v20_22e87 = urem i32 %v5_22e87, 256
  %v22_22e87 = shl i32 %v20_22e87, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_22e87 = and i32 %v0_22e87, -65281
  %v24_22e87 = or i32 %v22_22e87, %v23_22e87
  store i32 %v24_22e87, i32* %ebx.global-to-local, align 4
  %v1_22e89 = add i32 %v3_22e87, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_22e89 = trunc i32 %v1_22e89 to i8
  store i32 %v1_22e89, i32* %eax.global-to-local, align 4
  %v2_22e8a = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_22e8a = or i8 %v2_22e8a, %v11_22e89
  %v11_22e8a = load i32, i32* %ecx.global-to-local, align 4
  %v12_22e8a = inttoptr i32 %v11_22e8a to i8*
  store i8 %v5_22e8a, i8* %v12_22e8a, align 1
  %v0_22e8c = load i32, i32* %eax.global-to-local, align 4
  %v1_22e8c = inttoptr i32 %v0_22e8c to i8*
  %v2_22e8c = load i8, i8* %v1_22e8c, align 1
  %v4_22e8c = trunc i32 %v0_22e8c to i8
  %v5_22e8c = add i8 %v2_22e8c, %v4_22e8c
  store i8 %v5_22e8c, i8* %v1_22e8c, align 1
  %v0_22e8e = load i32, i32* %ebx.global-to-local, align 4
  %v1_22e8e = udiv i32 %v0_22e8e, 256
  %v3_22e8e = load i32, i32* %eax.global-to-local, align 4
  %v5_22e8e = add i32 %v1_22e8e, %v3_22e8e
  %v20_22e8e = and i32 %v5_22e8e, 255
  %v22_22e8e = mul nuw nsw i32 %v20_22e8e, 256
  %v23_22e8e = and i32 %v0_22e8e, -65281
  %v24_22e8e = or i32 %v22_22e8e, %v23_22e8e
  store i32 %v24_22e8e, i32* %ebx.global-to-local, align 4
  %v1_22e90 = add i32 %v3_22e8e, -1996487787
  %v2_22e90 = inttoptr i32 %v1_22e90 to i8*
  %v3_22e90 = load i8, i8* %v2_22e90, align 1
  %v4_22e90 = load i32, i32* %ecx.global-to-local, align 4
  %v5_22e90 = lshr i32 %v4_22e90, ptrtoint (i8** @global_var_8.3277 to i32)
  %v6_22e90 = trunc i32 %v5_22e90 to i8
  %v7_22e90 = add i8 %v6_22e90, %v3_22e90
  store i8 %v7_22e90, i8* %v2_22e90, align 1
  %v0_22e96 = load i32, i32* %esi.global-to-local, align 4
  %v1_22e96 = add i32 %v0_22e96, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_22e96, i32* %esi.global-to-local, align 4
  %v0_22e97 = load i32, i32* %eax.global-to-local, align 4
  %v2_22e97 = add i32 %v0_22e97, 11
  %v2_22e9a = and i32 %v2_22e97, 40
  %v10_22e9a = and i32 %v0_22e97, -256
  %v11_22e9a = or i32 %v2_22e9a, %v10_22e9a
  %v2_22ea0 = ptrtoint i32* %stack_var_33 to i32
  store i32 %v2_22ea0, i32* %eax.global-to-local, align 4
  %v3_22ea7 = call i32 @unknown_43070(i32 %v2_22ea0, i32 %v11_22e9a)
  store i32 %v3_22ea7, i32* %eax.global-to-local, align 4
  %v1_22eb0 = load i32, i32* %ebx.global-to-local, align 4
  %v12_22eb0 = icmp eq i32 %tmp100, %v1_22eb0
  %v1_22eb2 = icmp eq i1 %v12_22eb0, false
  br i1 %v1_22eb2, label %dec_label_pc_22eba, label %dec_label_pc_22ed3

dec_label_pc_22eb8:                               ; preds = %dec_label_pc_22eba
  br label %dec_label_pc_22eba

dec_label_pc_22eba:                               ; preds = %dec_label_pc_22e7d, %dec_label_pc_22eb8
  %v0_22eba = phi i32 [ %v2_22eba, %dec_label_pc_22eb8 ], [ %tmp100, %dec_label_pc_22e7d ]
  %v1_22eba = inttoptr i32 %v0_22eba to i32*
  %v2_22eba = load i32, i32* %v1_22eba, align 4
  %v1_22ebc = add i32 %v0_22eba, 12
  store i32 %v1_22ebc, i32* @eax, align 4
  %v2_22ec2 = call i32 @function_36860(i32 %v1_22ebc)
  store i32 %v2_22ec2, i32* %eax.global-to-local, align 4
  %v1_22ecf = load i32, i32* %ebx.global-to-local, align 4
  %v12_22ecf = icmp eq i32 %v2_22eba, %v1_22ecf
  %v1_22ed1 = icmp eq i1 %v12_22ecf, false
  br i1 %v1_22ed1, label %dec_label_pc_22eb8, label %dec_label_pc_22ed3

dec_label_pc_22ed3:                               ; preds = %dec_label_pc_22eba, %dec_label_pc_22e7d
  %v0_22ed3 = load i32, i32* %esi.global-to-local, align 4
  %v1_22ed3 = inttoptr i32 %v0_22ed3 to i32*
  %v2_22ed3 = load i32, i32* %v1_22ed3, align 4
  store i32 %v2_22ed3, i32* @eax, align 4
  %v1_22ed5 = icmp eq i32 %v2_22ed3, 0
  br i1 %v1_22ed5, label %bb, label %dec_label_pc_22ed9

bb:                                               ; preds = %dec_label_pc_22ed3
  %v1_22ed7 = call i32 @function_22f45()
  store i32 %v1_22ed7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_22ed9

dec_label_pc_22ed9:                               ; preds = %bb, %dec_label_pc_22ed3
  %v0_22ed9 = phi i32 [ %v1_22ed7, %bb ], [ %v2_22ed3, %dec_label_pc_22ed3 ]
  %v1_22ed9 = inttoptr i32 %v0_22ed9 to i32*
  %v2_22ed9 = load i32, i32* %v1_22ed9, align 4
  store i32 %v2_22ed9, i32* @eax, align 4
  %v1_22edb = icmp eq i32 %v2_22ed9, 0
  br i1 %v1_22edb, label %bb107, label %dec_label_pc_22edf

bb107:                                            ; preds = %dec_label_pc_22ed9
  %v1_22edd = call i32 @function_22f21()
  store i32 %v1_22edd, i32* @eax, align 4
  br label %dec_label_pc_22edf

dec_label_pc_22edf:                               ; preds = %bb107, %dec_label_pc_22ed9
  %v0_22edf = phi i32 [ %v1_22edd, %bb107 ], [ %v2_22ed9, %dec_label_pc_22ed9 ]
  %v1_22edf = load i32, i32* %esi.global-to-local, align 4
  %v2_22edf = add i32 %v1_22edf, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_22edf = inttoptr i32 %v2_22edf to i32*
  store i32 %v0_22edf, i32* %v3_22edf, align 4
  %v0_22ee2 = load i32, i32* %esi.global-to-local, align 4
  %v1_22ee2 = add i32 %v0_22ee2, 12
  store i32 %v1_22ee2, i32* %esi.global-to-local, align 4
  %v4_22eed = load i32, i32* @eax, align 4
  ret i32 %v4_22eed

; uselistorder directives
  uselistorder i32 %v0_22eba, { 1, 0 }
  uselistorder i32 %v0_22e97, { 1, 0 }
  uselistorder i32 %v3_22e8e, { 1, 0 }
  uselistorder i32 %v0_22e8e, { 1, 0 }
  uselistorder i32 %v3_22e87, { 1, 0 }
  uselistorder i32 %tmp100, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder label %dec_label_pc_22eba, { 1, 0 }
}

define i32 @function_22ef4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22ef4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_22ef4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22ef4 = add i32 %v0_22ef4, 1698440260
  %v2_22ef4 = inttoptr i32 %v1_22ef4 to i32*
  %v3_22ef4 = load i32, i32* %v2_22ef4, align 4
  %v4_22ef4 = add i32 %v3_22ef4, -1
  store i32 %v4_22ef4, i32* %v2_22ef4, align 4
  %v0_22efa = load i32, i32* %eax.global-to-local, align 4
  %v1_22efa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22efa = xor i32 %v1_22efa, %v0_22efa
  %v3_22efa = icmp eq i32 %v2_22efa, 0
  store i32 %v2_22efa, i32* @eax, align 4
  %v1_22f00 = icmp eq i1 %v3_22efa, false
  br i1 %v1_22f00, label %bb, label %dec_label_pc_22f02

bb:                                               ; preds = %dec_label_pc_22ef4
  %v2_22f00 = call i32 @function_22f1c()
  store i32 %v2_22f00, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_22f02

dec_label_pc_22f02:                               ; preds = %bb, %dec_label_pc_22ef4
  %v0_22f09 = phi i32 [ %v2_22f00, %bb ], [ %v2_22efa, %dec_label_pc_22ef4 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_22f09
}

define i32 @function_22f0c() local_unnamed_addr {
dec_label_pc_22f0c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22f1c() local_unnamed_addr {
dec_label_pc_22f1c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22f21() local_unnamed_addr {
dec_label_pc_22f21:
  %v3_22f39 = load i32, i32* @eax, align 4
  ret i32 %v3_22f39
}

define i32 @function_22f45() local_unnamed_addr {
dec_label_pc_22f45:
  %v3_22f5d = load i32, i32* @eax, align 4
  ret i32 %v3_22f5d
}

define i32 @function_22f7d() local_unnamed_addr {
dec_label_pc_22f7d:
  %ecx.global-to-local = alloca i32, align 4
  %v0_22f7d = load i32, i32* %ecx.global-to-local, align 4
  %v1_22f7d = add i32 %v0_22f7d, 607947206
  %v2_22f7d = inttoptr i32 %v1_22f7d to i32*
  %v3_22f7d = load i32, i32* %v2_22f7d, align 4
  %v4_22f7d = add i32 %v3_22f7d, -1
  store i32 %v4_22f7d, i32* %v2_22f7d, align 4
  %v0_22f88 = call i32 @function_22f0c()
  ret i32 %v0_22f88
}

define i32 @function_22f91() local_unnamed_addr {
dec_label_pc_22f91:
  %v0_22f91 = call i32 @function_22f0c()
  ret i32 %v0_22f91

; uselistorder directives
  uselistorder i32 ()* @function_22f0c, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22fa0:
  ret i32 0
}

define i32 @function_22fca(i32* %arg1) local_unnamed_addr {
dec_label_pc_22fca:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_22fca = load i32, i32* %ebx.global-to-local, align 4
  %v1_22fca = add i32 %v0_22fca, 1149890808
  %v2_22fca = inttoptr i32 %v1_22fca to i32*
  %v3_22fca = load i32, i32* %v2_22fca, align 4
  %v4_22fca = add i32 %v3_22fca, 1
  store i32 %v4_22fca, i32* %v2_22fca, align 4
  %v0_22fd0 = load i32, i32* %eax.global-to-local, align 4
  %v1_22fd0 = trunc i32 %v0_22fd0 to i8
  %v2_22fd0 = and i8 %v1_22fd0, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_22fd0 = icmp eq i8 %v2_22fd0, 0
  %v8_22fd0 = zext i8 %v2_22fd0 to i32
  %v10_22fd0 = and i32 %v0_22fd0, -256
  %v11_22fd0 = or i32 %v8_22fd0, %v10_22fd0
  store i32 %v11_22fd0, i32* %eax.global-to-local, align 4
  br i1 %v3_22fd0, label %dec_label_pc_22ffc, label %dec_label_pc_22fd4

dec_label_pc_22fd4:                               ; preds = %dec_label_pc_22fca
  %v0_22fd4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22fd4 = add i32 %v0_22fd4, 16
  %v2_22fd4 = inttoptr i32 %v1_22fd4 to i32*
  %v3_22fd4 = load i32, i32* %v2_22fd4, align 4
  store i32 %v3_22fd4, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_22fdb = add i32 %tmp102, 16
  %v3_22fdb = inttoptr i32 %v2_22fdb to i32*
  store i32 %v3_22fd4, i32* %v3_22fdb, align 4
  %v0_22fde = load i32, i32* %edx.global-to-local, align 4
  %v1_22fde = add i32 %v0_22fde, 20
  %v2_22fde = inttoptr i32 %v1_22fde to i8*
  store i8 0, i8* %v2_22fde, align 1
  %v0_22fe2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22fe2 = add i32 %v0_22fe2, 20
  %v2_22fe2 = inttoptr i32 %v1_22fe2 to i8*
  %v3_22fe2 = load i8, i8* %v2_22fe2, align 1
  %v10_22fe2 = icmp eq i8 %v3_22fe2, 0
  br i1 %v10_22fe2, label %dec_label_pc_22ff2, label %dec_label_pc_22fe8

dec_label_pc_22fe8:                               ; preds = %dec_label_pc_22fd4
  %v1_22fe8 = add i32 %v0_22fe2, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_22fe8 = inttoptr i32 %v1_22fe8 to i32*
  %v3_22fe8 = load i32, i32* %v2_22fe8, align 4
  store i32 %v3_22fe8, i32* %eax.global-to-local, align 4
  %v0_22feb = load i32, i32* %edx.global-to-local, align 4
  %v1_22feb = add i32 %v0_22feb, 20
  %v2_22feb = inttoptr i32 %v1_22feb to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_22feb, align 1
  %v0_22fef = load i32, i32* %eax.global-to-local, align 4
  %v1_22fef = load i32, i32* %edx.global-to-local, align 4
  %v2_22fef = add i32 %v1_22fef, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_22fef = inttoptr i32 %v2_22fef to i32*
  store i32 %v0_22fef, i32* %v3_22fef, align 4
  %v0_22ff2.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_22ff2

dec_label_pc_22ff2:                               ; preds = %dec_label_pc_22fe8, %dec_label_pc_22fd4
  %v0_22ff2 = phi i32 [ %v0_22ff2.pre, %dec_label_pc_22fe8 ], [ %v0_22fe2, %dec_label_pc_22fd4 ]
  %v1_22ff2 = add i32 %v0_22ff2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_22ff2 = inttoptr i32 %v1_22ff2 to i32*
  %v3_22ff2 = load i32, i32* %v2_22ff2, align 4
  store i32 %v3_22ff2, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_22ff9 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_22ff9 = inttoptr i32 %v2_22ff9 to i32*
  store i32 %v3_22ff2, i32* %v3_22ff9, align 4
  br label %dec_label_pc_22ffc

dec_label_pc_22ffc:                               ; preds = %dec_label_pc_22ff2, %dec_label_pc_22fca
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_23000 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_23000, i32* %eax.global-to-local, align 4
  %v1_23002 = add i32 %tmp102, 12
  %v2_23002 = inttoptr i32 %v1_23002 to i32*
  store i32 0, i32* %v2_23002, align 4
  %v0_23009 = load i32, i32* %eax.global-to-local, align 4
  %v1_23009 = load i32, i32* %edx.global-to-local, align 4
  %v2_23009 = inttoptr i32 %v1_23009 to i32*
  store i32 %v0_23009, i32* %v2_23009, align 4
  %v0_2300b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2300b = add i32 %v0_2300b, 12
  %v2_2300b = inttoptr i32 %v1_2300b to i32*
  %v3_2300b = load i32, i32* %v2_2300b, align 4
  store i32 %v3_2300b, i32* %eax.global-to-local, align 4
  %v0_2300e = load i32, i32* %edx.global-to-local, align 4
  %v1_2300e = add i32 %v0_2300e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2300e = inttoptr i32 %v1_2300e to i32*
  store i32 0, i32* %v2_2300e, align 4
  %v0_23015 = load i32, i32* %esi.global-to-local, align 4
  %v1_23015 = load i32, i32* %edx.global-to-local, align 4
  %v2_23015 = add i32 %v1_23015, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_23015 = inttoptr i32 %v2_23015 to i32*
  store i32 %v0_23015, i32* %v3_23015, align 4
  %v0_23018 = load i32, i32* %eax.global-to-local, align 4
  %v1_23018 = icmp eq i32 %v0_23018, 0
  br i1 %v1_23018, label %dec_label_pc_23033, label %dec_label_pc_2301c

dec_label_pc_2301c:                               ; preds = %dec_label_pc_22ffc
  %v0_2301c = load i32, i32* %edx.global-to-local, align 4
  %v2_23027 = call i32 @unknown_45f40(i32 %v0_23018, i32 %v0_2301c)
  store i32 %v2_23027, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_23027, i32* %v2_23002, align 4
  br label %dec_label_pc_23033

dec_label_pc_23033:                               ; preds = %dec_label_pc_2301c, %dec_label_pc_22ffc
  %v0_23033 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23033 = add i32 %v0_23033, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_23033 = inttoptr i32 %v1_23033 to i32*
  %v3_23033 = load i32, i32* %v2_23033, align 4
  store i32 %v3_23033, i32* %esi.global-to-local, align 4
  %v1_2303a = icmp eq i32 %v3_23033, 0
  %v1_2303c = icmp eq i1 %v1_2303a, false
  br i1 %v1_2303c, label %dec_label_pc_23042, label %dec_label_pc_2303e

dec_label_pc_2303e:                               ; preds = %dec_label_pc_23033
  %v0_2303e = call i32 @function_230ae()
  store i32 %v0_2303e, i32* %eax.global-to-local, align 4
  ret i32 %v0_2303e

dec_label_pc_23042:                               ; preds = %dec_label_pc_23033
  %v2_23042 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_23042

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 4, 0, 1, 6, 2, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_23052() local_unnamed_addr {
dec_label_pc_23052:
  %eax.global-to-local = alloca i32, align 4
  %v0_23052 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_23052
}

define i32 @function_230ae() local_unnamed_addr {
dec_label_pc_230ae:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_230b2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_230b2 = icmp eq i32 %v1_230b2, %tmp6
  %v1_230bd = icmp eq i1 %v3_230b2, false
  br i1 %v1_230bd, label %dec_label_pc_230c7, label %dec_label_pc_230bf

dec_label_pc_230bf:                               ; preds = %dec_label_pc_230ae
  ret i32 %tmp5

dec_label_pc_230c7:                               ; preds = %dec_label_pc_230ae
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_230ea() local_unnamed_addr {
dec_label_pc_230ea:
  %eax.global-to-local = alloca i32, align 4
  %v0_230ea = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_230ea
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbRKSsSE_jNS_8functionIFbSE_SE_jEEEEENS0_5mutexEEEEEEC1ERKSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23100:
  %eax.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %tmp100, i32* @esi, align 4
  store i32 %tmp100, i32* %arg1, align 4
  %v0_23122 = load i32, i32* @esi, align 4
  %v2_23122 = add i32 %v0_23122, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_23122 = inttoptr i32 %v2_23122 to i32*
  store i32 %v0_23122, i32* %v3_23122, align 4
  %v0_23125 = load i32, i32* %eax.global-to-local, align 4
  %v1_23125 = inttoptr i32 %v0_23125 to i32*
  %v2_23125 = load i32, i32* %v1_23125, align 4
  %v12_23127 = icmp eq i32 %v0_23125, %v2_23125
  br i1 %v12_23127, label %bb, label %dec_label_pc_2312b

bb:                                               ; preds = %dec_label_pc_23100
  %v2_23129 = call i32 @function_23167(i32 %arg2)
  store i32 %v2_23129, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2312b

dec_label_pc_2312b:                               ; preds = %bb, %dec_label_pc_23100
  %v0_2312b = phi i32 [ %v2_23129, %bb ], [ %v0_23125, %dec_label_pc_23100 ]
  ret i32 %v0_2312b

; uselistorder directives
  uselistorder i32 %v0_23125, { 1, 0, 2 }
  uselistorder i32 %v0_23122, { 1, 0 }
}

define i32 @function_23167(i32 %arg1) local_unnamed_addr {
dec_label_pc_23167:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_23167 = load i32, i32* @esi, align 4
  %v1_23167 = add i32 %v0_23167, 12
  store i32 %v1_23167, i32* %ecx.global-to-local, align 4
  %v2_2316a = add i32 %v0_23167, 20
  %v3_2316a = inttoptr i32 %v2_2316a to i32*
  store i32 %v1_23167, i32* %v3_2316a, align 4
  %v0_2316d = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_2316d, i32* @ebp, align 4
  %v1_2316f = load i32, i32* @esi, align 4
  %v2_2316f = add i32 %v1_2316f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_2316f = inttoptr i32 %v2_2316f to i32*
  store i32 %v0_2316d, i32* %v3_2316f, align 4
  %v0_23172 = load i32, i32* @esi, align 4
  %v1_23172 = add i32 %v0_23172, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_23172, i32* %edx.global-to-local, align 4
  %v0_23175 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_2317d = add i32 %v0_23172, 12
  %v2_2317d = inttoptr i32 %v1_2317d to i32*
  store i32 0, i32* %v2_2317d, align 4
  %v0_23184 = load i32, i32* @esi, align 4
  %v1_23184 = add i32 %v0_23184, 16
  %v2_23184 = inttoptr i32 %v1_23184 to i32*
  store i32 0, i32* %v2_23184, align 4
  %v0_2318b = load i32, i32* @esi, align 4
  %v1_2318b = add i32 %v0_2318b, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2318b = inttoptr i32 %v1_2318b to i32*
  store i32 0, i32* %v2_2318b, align 4
  %v0_23192 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23192 = add i32 %v0_23192, 16
  %v2_23192 = inttoptr i32 %v1_23192 to i32*
  %v3_23192 = load i32, i32* %v2_23192, align 4
  store i32 %v3_23192, i32* @eax, align 4
  %v1_23195 = icmp eq i32 %v3_23192, 0
  br i1 %v1_23195, label %dec_label_pc_231d6, label %dec_label_pc_23199

dec_label_pc_23199:                               ; preds = %dec_label_pc_23167
  %v0_231a1 = load i32, i32* %edx.global-to-local, align 4
  %v3_231a4 = call i32 @unknown_460a0(i32 %v0_231a1, i32 %v3_23192)
  store i32 %v3_231a4, i32* %eax.global-to-local, align 4
  %v1_231a9 = load i32, i32* @esi, align 4
  %v2_231a9 = add i32 %v1_231a9, 16
  %v3_231a9 = inttoptr i32 %v2_231a9 to i32*
  store i32 %v3_231a4, i32* %v3_231a9, align 4
  %v0_231ac = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_231b2

dec_label_pc_231b2:                               ; preds = %dec_label_pc_231b2, %dec_label_pc_23199
  %v0_231b9 = phi i32 [ %v0_231ac, %dec_label_pc_23199 ], [ %v3_231b2, %dec_label_pc_231b2 ]
  store i32 %v0_231b9, i32* @ebp, align 4
  %v1_231b2 = add i32 %v0_231b9, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_231b2 = inttoptr i32 %v1_231b2 to i32*
  %v3_231b2 = load i32, i32* %v2_231b2, align 4
  store i32 %v3_231b2, i32* %edx.global-to-local, align 4
  %v1_231b5 = icmp eq i32 %v3_231b2, 0
  %v1_231b7 = icmp eq i1 %v1_231b5, false
  br i1 %v1_231b7, label %dec_label_pc_231b2, label %dec_label_pc_231b9

dec_label_pc_231b9:                               ; preds = %dec_label_pc_231b2
  %v1_231b9 = load i32, i32* @esi, align 4
  %v2_231b9 = add i32 %v1_231b9, 20
  %v3_231b9 = inttoptr i32 %v2_231b9 to i32*
  store i32 %v0_231b9, i32* %v3_231b9, align 4
  %v0_231c2.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_231c213 = add i32 %v0_231c2.pre, 12
  %v2_231c214 = inttoptr i32 %v1_231c213 to i32*
  %v3_231c215 = load i32, i32* %v2_231c214, align 4
  store i32 %v3_231c215, i32* %edx.global-to-local, align 4
  %v1_231c516 = icmp eq i32 %v3_231c215, 0
  %v1_231c717 = icmp eq i1 %v1_231c516, false
  br i1 %v1_231c717, label %dec_label_pc_231c0, label %dec_label_pc_231c9

dec_label_pc_231c0:                               ; preds = %dec_label_pc_231b9, %dec_label_pc_231c0
  %v3_231c218 = phi i32 [ %v3_231c2, %dec_label_pc_231c0 ], [ %v3_231c215, %dec_label_pc_231b9 ]
  store i32 %v3_231c218, i32* %eax.global-to-local, align 4
  %v1_231c2 = add i32 %v3_231c218, 12
  %v2_231c2 = inttoptr i32 %v1_231c2 to i32*
  %v3_231c2 = load i32, i32* %v2_231c2, align 4
  store i32 %v3_231c2, i32* %edx.global-to-local, align 4
  %v1_231c5 = icmp eq i32 %v3_231c2, 0
  %v1_231c7 = icmp eq i1 %v1_231c5, false
  br i1 %v1_231c7, label %dec_label_pc_231c0, label %dec_label_pc_231c9

dec_label_pc_231c9:                               ; preds = %dec_label_pc_231c0, %dec_label_pc_231b9
  %v0_231cd.lcssa = phi i32 [ %v0_231c2.pre, %dec_label_pc_231b9 ], [ %v3_231c218, %dec_label_pc_231c0 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_231cd = load i32, i32* @esi, align 4
  %v2_231cd = add i32 %v1_231cd, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_231cd = inttoptr i32 %v2_231cd to i32*
  store i32 %v0_231cd.lcssa, i32* %v3_231cd, align 4
  %v0_231d0 = load i32, i32* %edx.global-to-local, align 4
  %v1_231d0 = add i32 %v0_231d0, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_231d0 = inttoptr i32 %v1_231d0 to i32*
  %v3_231d0 = load i32, i32* %v2_231d0, align 4
  store i32 %v3_231d0, i32* @eax, align 4
  %v1_231d3 = load i32, i32* @esi, align 4
  %v2_231d3 = add i32 %v1_231d3, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_231d3 = inttoptr i32 %v2_231d3 to i32*
  store i32 %v3_231d0, i32* %v3_231d3, align 4
  br label %dec_label_pc_231d6

dec_label_pc_231d6:                               ; preds = %dec_label_pc_231c9, %dec_label_pc_23167
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_231dc = add i32 %arg1, 20
  %v2_231dc = inttoptr i32 %v1_231dc to i32*
  %v3_231dc = load i32, i32* %v2_231dc, align 4
  store i32 %v3_231dc, i32* @edi, align 4
  %v1_231df = add i32 %arg1, 12
  store i32 %v1_231df, i32* %ecx.global-to-local, align 4
  %v12_231e6 = icmp eq i32 %v1_231df, %v3_231dc
  br i1 %v12_231e6, label %bb, label %dec_label_pc_231ea

bb:                                               ; preds = %dec_label_pc_231d6
  %v2_231e8 = call i32 @function_23230(i32 %v1_231df)
  store i32 %v2_231e8, i32* @eax, align 4
  br label %dec_label_pc_231ea

dec_label_pc_231ea:                               ; preds = %bb, %dec_label_pc_231d6
  %v4_231f0 = load i32, i32* @ebp, align 4
  %v15_231f0 = icmp eq i32 %v0_23175, %v4_231f0
  br i1 %v15_231f0, label %bb12, label %dec_label_pc_231f6

bb12:                                             ; preds = %dec_label_pc_231ea
  %v1_231f4 = call i32 @function_2325c()
  store i32 %v1_231f4, i32* @eax, align 4
  %v1_231f6.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_231f6

dec_label_pc_231f6:                               ; preds = %bb12, %dec_label_pc_231ea
  %v1_231f6 = phi i32 [ %v1_231f6.pre, %bb12 ], [ %v4_231f0, %dec_label_pc_231ea ]
  %v0_231f6 = load i32, i32* @esi, align 4
  %v2_231f6 = add i32 %v1_231f6, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_231f6 = inttoptr i32 %v2_231f6 to i32*
  store i32 %v0_231f6, i32* %v3_231f6, align 4
  %v4_231fc = load i32, i32* @eax, align 4
  ret i32 %v4_231fc

; uselistorder directives
  uselistorder i32 %v4_231f0, { 1, 0 }
  uselistorder i32 %v1_231df, { 1, 0, 2 }
  uselistorder i32 %v3_231c2, { 1, 2, 0 }
  uselistorder i32 %v3_231b2, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_231c0, { 1, 0 }
}

define i32 @function_23204(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23204:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_23204 = load i32, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v15_2320a = icmp eq i32 %v0_23204, %arg1
  br i1 %v15_2320a, label %dec_label_pc_2321c.preheader, label %dec_label_pc_23210

dec_label_pc_23210:                               ; preds = %dec_label_pc_23204
  %v1_23210 = add i32 %v0_23204, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_23210 = inttoptr i32 %v1_23210 to i32*
  %v3_23210 = load i32, i32* %v2_23210, align 4
  store i32 %v3_23210, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2321c.preheader

dec_label_pc_2321c.preheader:                     ; preds = %dec_label_pc_23204, %dec_label_pc_23210
  %v0_2322c = phi i32 [ %arg2, %dec_label_pc_23204 ], [ %v3_23210, %dec_label_pc_23210 ]
  %v0_2321c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_2321c102 = icmp eq i32 %v0_2321c.pre, %v0_2322c
  %v1_2321e103 = icmp eq i1 %v12_2321c102, false
  br i1 %v1_2321e103, label %dec_label_pc_23218.lr.ph, label %dec_label_pc_23220

dec_label_pc_23218.lr.ph:                         ; preds = %dec_label_pc_2321c.preheader
  %v0_2321a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_23218

dec_label_pc_23218:                               ; preds = %dec_label_pc_23218.lr.ph, %dec_label_pc_23218
  %v0_2321a = phi i32 [ %v0_2321a.pre, %dec_label_pc_23218.lr.ph ], [ %v2_2321a, %dec_label_pc_23218 ]
  %v0_23218104 = phi i32 [ %v0_2321c.pre, %dec_label_pc_23218.lr.ph ], [ %v2_23218, %dec_label_pc_23218 ]
  %v1_23218 = inttoptr i32 %v0_23218104 to i32*
  %v2_23218 = load i32, i32* %v1_23218, align 4
  store i32 %v2_23218, i32* %ebx.global-to-local, align 4
  %v1_2321a = inttoptr i32 %v0_2321a to i32*
  %v2_2321a = load i32, i32* %v1_2321a, align 4
  store i32 %v2_2321a, i32* %esi.global-to-local, align 4
  %v12_2321c = icmp eq i32 %v2_23218, %v0_2322c
  %v1_2321e = icmp eq i1 %v12_2321c, false
  br i1 %v1_2321e, label %dec_label_pc_23218, label %dec_label_pc_23220

dec_label_pc_23220:                               ; preds = %dec_label_pc_23218, %dec_label_pc_2321c.preheader
  ret i32 %v0_2322c

; uselistorder directives
  uselistorder i32 %v2_2321a, { 1, 0 }
  uselistorder i32 %v2_23218, { 0, 2, 1 }
  uselistorder i32 %v0_2322c, { 2, 1, 0 }
  uselistorder i32 %v0_23204, { 1, 0 }
  uselistorder label %dec_label_pc_23218, { 1, 0 }
  uselistorder label %dec_label_pc_2321c.preheader, { 1, 0 }
}

define i32 @function_23230(i32 %arg1) local_unnamed_addr {
dec_label_pc_23230:
  %v1_23234 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23234 = xor i32 %v1_23234, %arg1
  %v3_23234 = icmp eq i32 %v2_23234, 0
  %v1_2323b = icmp eq i1 %v3_23234, false
  br i1 %v1_2323b, label %dec_label_pc_23257, label %dec_label_pc_2323d

dec_label_pc_2323d:                               ; preds = %dec_label_pc_23230
  ret i32 %v2_23234

dec_label_pc_23257:                               ; preds = %dec_label_pc_23230
  ret i32 %v2_23234

; uselistorder directives
  uselistorder i32 %v2_23234, { 1, 0, 2 }
}

define i32 @function_23245() local_unnamed_addr {
dec_label_pc_23245:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_2324a = call i32 @unknown_40710(i32 %tmp92)
  ret i32 %v1_2324a
}

define i32 @function_2325c() local_unnamed_addr {
dec_label_pc_2325c:
  %v0_23282 = load i32, i32* @esi, align 4
  %v2_23285 = call i32 @unknown_40710(i32 %v0_23282)
  ret i32 %v2_23285
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEEC1ERKS6_RKS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_232a0:
  %stack_var_-56 = alloca i32, align 4
  %v2_232bb = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_232bb
}

define i32 @function_23390(i32 %arg1) local_unnamed_addr {
dec_label_pc_23390:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_0, align 4
  %v0_23390 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23390 = add i32 %v0_23390, 1086786672
  %v2_23390 = inttoptr i32 %v1_23390 to i32*
  %v3_23390 = load i32, i32* %v2_23390, align 4
  %v4_23390 = add i32 %v3_23390, -1
  store i32 %v4_23390, i32* %v2_23390, align 4
  %v0_23396 = load i32, i32* %eax.global-to-local, align 4
  %v1_23396 = trunc i32 %v0_23396 to i8
  %v2_23396 = add i8 %v1_23396, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_23396 = zext i8 %v2_23396 to i32
  %v18_23396 = and i32 %v0_23396, -256
  %v19_23396 = or i32 %v16_23396, %v18_23396
  store i32 %v19_23396, i32* %eax.global-to-local, align 4
  %v1_23398 = inttoptr i32 %v19_23396 to i8*
  %v2_23398 = load i8, i8* %v1_23398, align 1
  %v5_23398 = add i8 %v2_23398, %v2_23396
  store i8 %v5_23398, i8* %v1_23398, align 1
  %v0_2339a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2339a = lshr i32 %v0_2339a, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_2339a = load i32, i32* %eax.global-to-local, align 4
  %v5_2339a = add i32 %v1_2339a, %v3_2339a
  %v20_2339a = urem i32 %v5_2339a, 256
  %v22_2339a = shl i32 %v20_2339a, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_2339a = and i32 %v0_2339a, -65281
  %v24_2339a = or i32 %v22_2339a, %v23_2339a
  store i32 %v24_2339a, i32* %ebx.global-to-local, align 4
  %v1_2339c = add i32 %v3_2339a, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_2339c = trunc i32 %v1_2339c to i8
  store i32 %v1_2339c, i32* %eax.global-to-local, align 4
  %v2_2339d = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_2339d = or i8 %v2_2339d, %v11_2339c
  %v11_2339d = load i32, i32* %ecx.global-to-local, align 4
  %v12_2339d = inttoptr i32 %v11_2339d to i8*
  store i8 %v5_2339d, i8* %v12_2339d, align 1
  %v0_2339f = load i32, i32* %eax.global-to-local, align 4
  %v1_2339f = inttoptr i32 %v0_2339f to i8*
  %v2_2339f = load i8, i8* %v1_2339f, align 1
  %v4_2339f = trunc i32 %v0_2339f to i8
  %v5_2339f = add i8 %v2_2339f, %v4_2339f
  store i8 %v5_2339f, i8* %v1_2339f, align 1
  %v0_233a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_233a1 = lshr i32 %v0_233a1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_233a1 = load i32, i32* %eax.global-to-local, align 4
  %v5_233a1 = add i32 %v1_233a1, %v3_233a1
  %v20_233a1 = and i32 %v5_233a1, 255
  %v22_233a1 = mul nuw nsw i32 %v20_233a1, 256
  %v23_233a1 = and i32 %v0_233a1, -65281
  %v24_233a1 = or i32 %v22_233a1, %v23_233a1
  store i32 %v24_233a1, i32* %ebx.global-to-local, align 4
  %v1_233a3 = inttoptr i32 %v3_233a1 to i8*
  %v2_233a3 = load i8, i8* %v1_233a3, align 1
  %v4_233a3 = trunc i32 %v0_233a1 to i8
  %v5_233a3 = add i8 %v2_233a3, %v4_233a3
  store i8 %v5_233a3, i8* %v1_233a3, align 1
  %v2_233a5 = ptrtoint i32* %stack_var_0 to i32
  %v3_233a6 = load i32, i32* %stack_var_0, align 4
  %v4_233a6 = add i32 %v3_233a6, %v2_233a5
  store i32 %v4_233a6, i32* %eax.global-to-local, align 4
  %v1_233a8 = load i32, i32* %edi.global-to-local, align 4
  %v2_233a8 = add i32 %v1_233a8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_233a8 = inttoptr i32 %v2_233a8 to i32*
  store i32 %v4_233a6, i32* %v3_233a8, align 4
  %v0_233ab = load i32, i32* @esp, align 4
  %v1_233ab = add i32 %v0_233ab, 40
  %v2_233ab = inttoptr i32 %v1_233ab to i32*
  %v3_233ab = load i32, i32* %v2_233ab, align 4
  %v2_233af = add i32 %v0_233ab, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_233af = inttoptr i32 %v2_233af to i32*
  store i32 %v3_233ab, i32* %v3_233af, align 4
  %v0_233b3 = load i32, i32* @esp, align 4
  %v1_233b3 = add i32 %v0_233b3, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_233b3, i32* %eax.global-to-local, align 4
  %v2_233b7 = inttoptr i32 %v0_233b3 to i32*
  store i32 %v1_233b3, i32* %v2_233b7, align 4
  %v0_233ba = call i32 @unknown_436f0()
  store i32 %v0_233ba, i32* %eax.global-to-local, align 4
  %v0_233bf = load i32, i32* @esp, align 4
  %v1_233bf = add i32 %v0_233bf, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_233bf = inttoptr i32 %v1_233bf to i32*
  %v3_233bf = load i32, i32* %v2_233bf, align 4
  store i32 %v3_233bf, i32* %esi.global-to-local, align 4
  %v1_233c3 = load i32, i32* %ebx.global-to-local, align 4
  %v12_233c3 = icmp eq i32 %v3_233bf, %v1_233c3
  %v1_233c5 = icmp eq i1 %v12_233c3, false
  br i1 %v1_233c5, label %dec_label_pc_233d2, label %dec_label_pc_233eb

dec_label_pc_233d0:                               ; preds = %dec_label_pc_233d2
  store i32 %v0_233e7, i32* %esi.global-to-local, align 4
  %v1_233d7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_233d2

dec_label_pc_233d2:                               ; preds = %dec_label_pc_23390, %dec_label_pc_233d0
  %v1_233d7 = phi i32 [ %v1_233d7.pre, %dec_label_pc_233d0 ], [ %v0_233bf, %dec_label_pc_23390 ]
  %v0_233d2 = phi i32 [ %v0_233e7, %dec_label_pc_233d0 ], [ %v3_233bf, %dec_label_pc_23390 ]
  %v1_233d2 = inttoptr i32 %v0_233d2 to i32*
  %v2_233d2 = load i32, i32* %v1_233d2, align 4
  store i32 %v2_233d2, i32* %ebp.global-to-local, align 4
  %v1_233d4 = add i32 %v0_233d2, 12
  store i32 %v1_233d4, i32* @eax, align 4
  %v2_233d7 = inttoptr i32 %v1_233d7 to i32*
  store i32 %v1_233d4, i32* %v2_233d7, align 4
  %v0_233da = call i32 @function_36d00()
  store i32 %v0_233da, i32* %eax.global-to-local, align 4
  %v0_233df = load i32, i32* %esi.global-to-local, align 4
  %v1_233df = load i32, i32* @esp, align 4
  %v2_233df = inttoptr i32 %v1_233df to i32*
  store i32 %v0_233df, i32* %v2_233df, align 4
  %v0_233e7 = load i32, i32* %ebp.global-to-local, align 4
  %v1_233e7 = load i32, i32* %ebx.global-to-local, align 4
  %v12_233e7 = icmp eq i32 %v0_233e7, %v1_233e7
  %v1_233e9 = icmp eq i1 %v12_233e7, false
  br i1 %v1_233e9, label %dec_label_pc_233d0, label %dec_label_pc_233eb

dec_label_pc_233eb:                               ; preds = %dec_label_pc_233d2, %dec_label_pc_23390
  %v2_233eb = load i32, i32* %edi.global-to-local, align 4
  store i32 %v2_233eb, i32* @eax, align 4
  %v1_233ed = icmp eq i32 %v2_233eb, 0
  br i1 %v1_233ed, label %bb, label %dec_label_pc_233f1

bb:                                               ; preds = %dec_label_pc_233eb
  %v1_233ef = call i32 @function_2343e()
  store i32 %v1_233ef, i32* %eax.global-to-local, align 4
  %v2_233f1.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_233f1

dec_label_pc_233f1:                               ; preds = %bb, %dec_label_pc_233eb
  %v2_233f1 = phi i32 [ %v2_233f1.pre, %bb ], [ %v2_233eb, %dec_label_pc_233eb ]
  store i32 %v2_233f1, i32* @eax, align 4
  %v1_233f3 = icmp eq i32 %v2_233f1, 0
  br i1 %v1_233f3, label %bb103, label %dec_label_pc_233f7

bb103:                                            ; preds = %dec_label_pc_233f1
  %v1_233f5 = call i32 @function_23439()
  store i32 %v1_233f5, i32* @eax, align 4
  %v1_233f7.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_233f7

dec_label_pc_233f7:                               ; preds = %bb103, %dec_label_pc_233f1
  %v1_233f7 = phi i32 [ %v1_233f7.pre, %bb103 ], [ %v2_233f1, %dec_label_pc_233f1 ]
  %v0_233f7 = phi i32 [ %v1_233f5, %bb103 ], [ %v2_233f1, %dec_label_pc_233f1 ]
  %v2_233f7 = add i32 %v1_233f7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_233f7 = inttoptr i32 %v2_233f7 to i32*
  store i32 %v0_233f7, i32* %v3_233f7, align 4
  %v0_233fa = load i32, i32* %edi.global-to-local, align 4
  %v1_233fa = add i32 %v0_233fa, 12
  store i32 %v1_233fa, i32* %edi.global-to-local, align 4
  %v0_233fd = load i32, i32* @esp, align 4
  %v1_233fd = add i32 %v0_233fd, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_233fd = inttoptr i32 %v1_233fd to i32*
  store i32 0, i32* %v2_233fd, align 4
  %v0_23405 = load i32, i32* %edi.global-to-local, align 4
  %v1_23405 = load i32, i32* @esp, align 4
  %v2_23405 = inttoptr i32 %v1_23405 to i32*
  store i32 %v0_23405, i32* %v2_23405, align 4
  %v3_23405 = load i32, i32* @eax, align 4
  ret i32 %v3_23405

; uselistorder directives
  uselistorder i32 %v2_233f1, { 1, 0, 3, 2 }
  uselistorder i32 %v0_233e7, { 0, 2, 1 }
  uselistorder i32 %v0_233d2, { 1, 0 }
  uselistorder i32 %v3_233bf, { 1, 0, 2 }
  uselistorder i32 %v3_233a1, { 1, 0 }
  uselistorder i32 %v0_233a1, { 1, 0, 2 }
  uselistorder i32 %v3_2339a, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder label %dec_label_pc_233d2, { 1, 0 }
}

define i32 @function_2340c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2340c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2340c = load i32, i32* %ebx.global-to-local, align 4
  %v1_2340c = add i32 %v0_2340c, 1698440260
  %v2_2340c = inttoptr i32 %v1_2340c to i32*
  %v3_2340c = load i32, i32* %v2_2340c, align 4
  %v4_2340c = add i32 %v3_2340c, -1
  store i32 %v4_2340c, i32* %v2_2340c, align 4
  %v0_23412 = load i32, i32* %eax.global-to-local, align 4
  %v1_23412 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23412 = xor i32 %v1_23412, %v0_23412
  %v3_23412 = icmp eq i32 %v2_23412, 0
  store i32 %v2_23412, i32* @eax, align 4
  %v1_23418 = icmp eq i1 %v3_23412, false
  br i1 %v1_23418, label %bb, label %dec_label_pc_2341a

bb:                                               ; preds = %dec_label_pc_2340c
  %v2_23418 = call i32 @function_23434()
  store i32 %v2_23418, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2341a

dec_label_pc_2341a:                               ; preds = %bb, %dec_label_pc_2340c
  %v0_23421 = phi i32 [ %v2_23418, %bb ], [ %v2_23412, %dec_label_pc_2340c ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_23421
}

define i32 @function_23424() local_unnamed_addr {
dec_label_pc_23424:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23434() local_unnamed_addr {
dec_label_pc_23434:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23439() local_unnamed_addr {
dec_label_pc_23439:
  %v0_23439 = call i32 @function_347de()
  ret i32 %v0_23439
}

define i32 @function_2343e() local_unnamed_addr {
dec_label_pc_2343e:
  %v0_23440 = call i32 @function_346a6()
  ret i32 %v0_23440
}

define i32 @function_23476() local_unnamed_addr {
dec_label_pc_23476:
  %v0_23476 = call i32 @function_23424()
  ret i32 %v0_23476
}

define i32 @function_2347f() local_unnamed_addr {
dec_label_pc_2347f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2348a() local_unnamed_addr {
dec_label_pc_2348a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23492() local_unnamed_addr {
dec_label_pc_23492:
  %v0_23492 = call i32 @function_23424()
  ret i32 %v0_23492

; uselistorder directives
  uselistorder i32 ()* @function_23424, { 1, 0 }
}

define i32 @function_23494() local_unnamed_addr {
dec_label_pc_23494:
  %v0_23496 = call i32 @function_2347f()
  ret i32 %v0_23496
}

define i32 @function_234bc() local_unnamed_addr {
dec_label_pc_234bc:
  %v0_234bc = call i32 @function_2348a()
  ret i32 %v0_234bc
}

define i32 @function_234be() local_unnamed_addr {
dec_label_pc_234be:
  %v0_234c0 = call i32 @function_2348a()
  ret i32 %v0_234c0
}

define i32 @function_234c9() local_unnamed_addr {
dec_label_pc_234c9:
  %v0_234c9 = call i32 @function_2348a()
  ret i32 %v0_234c9

; uselistorder directives
  uselistorder i32 ()* @function_2348a, { 2, 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbxNS1_8functionIFbxEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_copyEPKSt13_Rb_tree_nodeISL_EPSV_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_234d0:
  ret i32 0
}

define i32 @function_234fa(i32* %arg1) local_unnamed_addr {
dec_label_pc_234fa:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_234fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_234fa = add i32 %v0_234fa, 1149890808
  %v2_234fa = inttoptr i32 %v1_234fa to i32*
  %v3_234fa = load i32, i32* %v2_234fa, align 4
  %v4_234fa = add i32 %v3_234fa, 1
  store i32 %v4_234fa, i32* %v2_234fa, align 4
  %v0_23500 = load i32, i32* %eax.global-to-local, align 4
  %v1_23500 = trunc i32 %v0_23500 to i8
  %v2_23500 = and i8 %v1_23500, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_23500 = icmp eq i8 %v2_23500, 0
  %v8_23500 = zext i8 %v2_23500 to i32
  %v10_23500 = and i32 %v0_23500, -256
  %v11_23500 = or i32 %v8_23500, %v10_23500
  store i32 %v11_23500, i32* %eax.global-to-local, align 4
  br i1 %v3_23500, label %dec_label_pc_2352c, label %dec_label_pc_23504

dec_label_pc_23504:                               ; preds = %dec_label_pc_234fa
  %v0_23504 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23504 = add i32 %v0_23504, 16
  %v2_23504 = inttoptr i32 %v1_23504 to i32*
  %v3_23504 = load i32, i32* %v2_23504, align 4
  store i32 %v3_23504, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_2350b = add i32 %tmp102, 16
  %v3_2350b = inttoptr i32 %v2_2350b to i32*
  store i32 %v3_23504, i32* %v3_2350b, align 4
  %v0_2350e = load i32, i32* %edx.global-to-local, align 4
  %v1_2350e = add i32 %v0_2350e, 20
  %v2_2350e = inttoptr i32 %v1_2350e to i8*
  store i8 0, i8* %v2_2350e, align 1
  %v0_23512 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23512 = add i32 %v0_23512, 20
  %v2_23512 = inttoptr i32 %v1_23512 to i8*
  %v3_23512 = load i8, i8* %v2_23512, align 1
  %v10_23512 = icmp eq i8 %v3_23512, 0
  br i1 %v10_23512, label %dec_label_pc_23522, label %dec_label_pc_23518

dec_label_pc_23518:                               ; preds = %dec_label_pc_23504
  %v1_23518 = add i32 %v0_23512, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_23518 = inttoptr i32 %v1_23518 to i32*
  %v3_23518 = load i32, i32* %v2_23518, align 4
  store i32 %v3_23518, i32* %eax.global-to-local, align 4
  %v0_2351b = load i32, i32* %edx.global-to-local, align 4
  %v1_2351b = add i32 %v0_2351b, 20
  %v2_2351b = inttoptr i32 %v1_2351b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_2351b, align 1
  %v0_2351f = load i32, i32* %eax.global-to-local, align 4
  %v1_2351f = load i32, i32* %edx.global-to-local, align 4
  %v2_2351f = add i32 %v1_2351f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_2351f = inttoptr i32 %v2_2351f to i32*
  store i32 %v0_2351f, i32* %v3_2351f, align 4
  %v0_23522.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_23522

dec_label_pc_23522:                               ; preds = %dec_label_pc_23518, %dec_label_pc_23504
  %v0_23522 = phi i32 [ %v0_23522.pre, %dec_label_pc_23518 ], [ %v0_23512, %dec_label_pc_23504 ]
  %v1_23522 = add i32 %v0_23522, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_23522 = inttoptr i32 %v1_23522 to i32*
  %v3_23522 = load i32, i32* %v2_23522, align 4
  store i32 %v3_23522, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_23529 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_23529 = inttoptr i32 %v2_23529 to i32*
  store i32 %v3_23522, i32* %v3_23529, align 4
  br label %dec_label_pc_2352c

dec_label_pc_2352c:                               ; preds = %dec_label_pc_23522, %dec_label_pc_234fa
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_23530 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_23530, i32* %eax.global-to-local, align 4
  %v1_23532 = add i32 %tmp102, 12
  %v2_23532 = inttoptr i32 %v1_23532 to i32*
  store i32 0, i32* %v2_23532, align 4
  %v0_23539 = load i32, i32* %eax.global-to-local, align 4
  %v1_23539 = load i32, i32* %edx.global-to-local, align 4
  %v2_23539 = inttoptr i32 %v1_23539 to i32*
  store i32 %v0_23539, i32* %v2_23539, align 4
  %v0_2353b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2353b = add i32 %v0_2353b, 12
  %v2_2353b = inttoptr i32 %v1_2353b to i32*
  %v3_2353b = load i32, i32* %v2_2353b, align 4
  store i32 %v3_2353b, i32* %eax.global-to-local, align 4
  %v0_2353e = load i32, i32* %edx.global-to-local, align 4
  %v1_2353e = add i32 %v0_2353e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2353e = inttoptr i32 %v1_2353e to i32*
  store i32 0, i32* %v2_2353e, align 4
  %v0_23545 = load i32, i32* %esi.global-to-local, align 4
  %v1_23545 = load i32, i32* %edx.global-to-local, align 4
  %v2_23545 = add i32 %v1_23545, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_23545 = inttoptr i32 %v2_23545 to i32*
  store i32 %v0_23545, i32* %v3_23545, align 4
  %v0_23548 = load i32, i32* %eax.global-to-local, align 4
  %v1_23548 = icmp eq i32 %v0_23548, 0
  br i1 %v1_23548, label %dec_label_pc_23563, label %dec_label_pc_2354c

dec_label_pc_2354c:                               ; preds = %dec_label_pc_2352c
  %v0_2354c = load i32, i32* %edx.global-to-local, align 4
  %v2_23557 = call i32 @unknown_469a0(i32 %v0_23548, i32 %v0_2354c)
  store i32 %v2_23557, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_23557, i32* %v2_23532, align 4
  br label %dec_label_pc_23563

dec_label_pc_23563:                               ; preds = %dec_label_pc_2354c, %dec_label_pc_2352c
  %v0_23563 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23563 = add i32 %v0_23563, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_23563 = inttoptr i32 %v1_23563 to i32*
  %v3_23563 = load i32, i32* %v2_23563, align 4
  store i32 %v3_23563, i32* %esi.global-to-local, align 4
  %v1_2356a = icmp eq i32 %v3_23563, 0
  %v1_2356c = icmp eq i1 %v1_2356a, false
  br i1 %v1_2356c, label %dec_label_pc_23572, label %dec_label_pc_2356e

dec_label_pc_2356e:                               ; preds = %dec_label_pc_23563
  %v0_2356e = call i32 @function_235de()
  store i32 %v0_2356e, i32* %eax.global-to-local, align 4
  ret i32 %v0_2356e

dec_label_pc_23572:                               ; preds = %dec_label_pc_23563
  %v2_23572 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_23572

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 4, 0, 1, 5, 2, 3, 6 }
  uselistorder i32* %eax.global-to-local, { 3, 0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_23582() local_unnamed_addr {
dec_label_pc_23582:
  %eax.global-to-local = alloca i32, align 4
  %v0_23582 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_23582
}

define i32 @function_235de() local_unnamed_addr {
dec_label_pc_235de:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_235e2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_235e2 = icmp eq i32 %v1_235e2, %tmp6
  %v1_235ed = icmp eq i1 %v3_235e2, false
  br i1 %v1_235ed, label %dec_label_pc_235f7, label %dec_label_pc_235ef

dec_label_pc_235ef:                               ; preds = %dec_label_pc_235de
  ret i32 %tmp5

dec_label_pc_235f7:                               ; preds = %dec_label_pc_235de
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_2361a() local_unnamed_addr {
dec_label_pc_2361a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2361a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2361a
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEE16invocation_stateC1ERKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbxS9_EESF_EEEEEERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23630:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_-92 = alloca i32, align 4
  store i32 36, i32* %stack_var_-92, align 4
  store i32 %tmp103, i32* %arg1, align 4
  %v2_23666 = add i32 %tmp103, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_23666 = inttoptr i32 %v2_23666 to i32*
  store i32 %tmp103, i32* %v3_23666, align 4
  %v1_2366d = inttoptr i32 %arg2 to i32*
  %v2_2366d = load i32, i32* %v1_2366d, align 4
  %v12_2366f = icmp eq i32 %v2_2366d, %arg2
  br i1 %v12_2366f, label %bb, label %dec_label_pc_23673

bb:                                               ; preds = %dec_label_pc_23630
  %v1_23671 = load i32, i32* %stack_var_-92, align 4
  %v2_23671 = call i32 @function_236b7(i32 %v1_23671)
  br label %dec_label_pc_23673

dec_label_pc_23673:                               ; preds = %bb, %dec_label_pc_23630
  %v0_23677 = phi i32 [ %v2_23671, %bb ], [ %arg2, %dec_label_pc_23630 ]
  ret i32 %v0_23677

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_236b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_236b7:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %v1_236bf = add i32 %tmp14, 12
  %v2_236bf = inttoptr i32 %v1_236bf to i32*
  store i32 0, i32* %v2_236bf, align 4
  %v0_236c6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_236c6, i32* %edx.global-to-local, align 4
  %v1_236c8 = add i32 %v0_236c6, 16
  %v2_236c8 = inttoptr i32 %v1_236c8 to i32*
  store i32 0, i32* %v2_236c8, align 4
  %v0_236cf = load i32, i32* %edx.global-to-local, align 4
  %v1_236cf = add i32 %v0_236cf, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_236cf, i32* %edx.global-to-local, align 4
  %v0_236d2 = load i32, i32* %eax.global-to-local, align 4
  %v1_236d2 = add i32 %v0_236d2, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_236d2 = inttoptr i32 %v1_236d2 to i32*
  store i32 0, i32* %v2_236d2, align 4
  %v0_236d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_236d9 = add i32 %v0_236d9, 12
  store i32 %v1_236d9, i32* %eax.global-to-local, align 4
  %v1_236dc = load i32, i32* %ecx.global-to-local, align 4
  %v2_236dc = add i32 %v1_236dc, 20
  %v3_236dc = inttoptr i32 %v2_236dc to i32*
  store i32 %v1_236d9, i32* %v3_236dc, align 4
  %v0_236df = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_236df, i32* %ebp.global-to-local, align 4
  %v1_236e1 = load i32, i32* %ecx.global-to-local, align 4
  %v2_236e1 = add i32 %v1_236e1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_236e1 = inttoptr i32 %v2_236e1 to i32*
  store i32 %v0_236df, i32* %v3_236e1, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v0_236e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_236ec = add i32 %arg1, 16
  %v2_236ec = inttoptr i32 %v1_236ec to i32*
  %v3_236ec = load i32, i32* %v2_236ec, align 4
  store i32 %v3_236ec, i32* %eax.global-to-local, align 4
  %v1_236ef = icmp eq i32 %v3_236ec, 0
  br i1 %v1_236ef, label %dec_label_pc_23742, label %dec_label_pc_236f3

dec_label_pc_236f3:                               ; preds = %dec_label_pc_236b7
  %v0_236fb = load i32, i32* %edx.global-to-local, align 4
  %v3_236fe = call i32 @unknown_46b00(i32 %v0_236fb, i32 %v3_236ec)
  store i32 %v3_236fe, i32* %eax.global-to-local, align 4
  store i32 %v3_236fe, i32* %ebp.global-to-local, align 4
  %v2_23709 = add i32 %tmp14, 16
  %v3_23709 = inttoptr i32 %v2_23709 to i32*
  store i32 %v3_236fe, i32* %v3_23709, align 4
  %v0_23712.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_2371224 = add i32 %v0_23712.pre, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2371225 = inttoptr i32 %v1_2371224 to i32*
  %v3_2371226 = load i32, i32* %v2_2371225, align 4
  store i32 %v3_2371226, i32* %edx.global-to-local, align 4
  %v1_2371527 = icmp eq i32 %v3_2371226, 0
  %v1_2371728 = icmp eq i1 %v1_2371527, false
  br i1 %v1_2371728, label %dec_label_pc_23710, label %dec_label_pc_23719

dec_label_pc_23710:                               ; preds = %dec_label_pc_236f3, %dec_label_pc_23710
  %v3_2371229 = phi i32 [ %v3_23712, %dec_label_pc_23710 ], [ %v3_2371226, %dec_label_pc_236f3 ]
  store i32 %v3_2371229, i32* %ebp.global-to-local, align 4
  %v1_23712 = add i32 %v3_2371229, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_23712 = inttoptr i32 %v1_23712 to i32*
  %v3_23712 = load i32, i32* %v2_23712, align 4
  store i32 %v3_23712, i32* %edx.global-to-local, align 4
  %v1_23715 = icmp eq i32 %v3_23712, 0
  %v1_23717 = icmp eq i1 %v1_23715, false
  br i1 %v1_23717, label %dec_label_pc_23710, label %dec_label_pc_23719

dec_label_pc_23719:                               ; preds = %dec_label_pc_23710, %dec_label_pc_236f3
  %v0_2371d.lcssa = phi i32 [ %v0_23712.pre, %dec_label_pc_236f3 ], [ %v3_2371229, %dec_label_pc_23710 ]
  %v2_2371d = add i32 %tmp14, 20
  %v3_2371d = inttoptr i32 %v2_2371d to i32*
  store i32 %v0_2371d.lcssa, i32* %v3_2371d, align 4
  %v0_2372a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_2372a16 = add i32 %v0_2372a.pre, 12
  %v2_2372a17 = inttoptr i32 %v1_2372a16 to i32*
  %v3_2372a18 = load i32, i32* %v2_2372a17, align 4
  store i32 %v3_2372a18, i32* %edx.global-to-local, align 4
  %v1_2372d19 = icmp eq i32 %v3_2372a18, 0
  %v1_2372f20 = icmp eq i1 %v1_2372d19, false
  br i1 %v1_2372f20, label %dec_label_pc_23728, label %dec_label_pc_23731

dec_label_pc_23728:                               ; preds = %dec_label_pc_23719, %dec_label_pc_23728
  %v3_2372a21 = phi i32 [ %v3_2372a, %dec_label_pc_23728 ], [ %v3_2372a18, %dec_label_pc_23719 ]
  store i32 %v3_2372a21, i32* %eax.global-to-local, align 4
  %v1_2372a = add i32 %v3_2372a21, 12
  %v2_2372a = inttoptr i32 %v1_2372a to i32*
  %v3_2372a = load i32, i32* %v2_2372a, align 4
  store i32 %v3_2372a, i32* %edx.global-to-local, align 4
  %v1_2372d = icmp eq i32 %v3_2372a, 0
  %v1_2372f = icmp eq i1 %v1_2372d, false
  br i1 %v1_2372f, label %dec_label_pc_23728, label %dec_label_pc_23731

dec_label_pc_23731:                               ; preds = %dec_label_pc_23728, %dec_label_pc_23719
  %v0_23739.lcssa = phi i32 [ %v0_2372a.pre, %dec_label_pc_23719 ], [ %v3_2372a21, %dec_label_pc_23728 ]
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v2_23739 = add i32 %tmp14, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_23739 = inttoptr i32 %v2_23739 to i32*
  store i32 %v0_23739.lcssa, i32* %v3_23739, align 4
  %v0_2373c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2373c = add i32 %v0_2373c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2373c = inttoptr i32 %v1_2373c to i32*
  %v3_2373c = load i32, i32* %v2_2373c, align 4
  store i32 %v3_2373c, i32* %eax.global-to-local, align 4
  %v1_2373f = load i32, i32* %edx.global-to-local, align 4
  %v2_2373f = add i32 %v1_2373f, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_2373f = inttoptr i32 %v2_2373f to i32*
  store i32 %v3_2373c, i32* %v3_2373f, align 4
  br label %dec_label_pc_23742

dec_label_pc_23742:                               ; preds = %dec_label_pc_23731, %dec_label_pc_236b7
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_2374a = add i32 %arg1, 20
  %v2_2374a = inttoptr i32 %v1_2374a to i32*
  %v3_2374a = load i32, i32* %v2_2374a, align 4
  store i32 %v3_2374a, i32* %edi.global-to-local, align 4
  %v1_2374d = add i32 %arg1, 12
  store i32 %v1_2374d, i32* %edx.global-to-local, align 4
  %v1_23750 = inttoptr i32 %tmp14 to i32*
  %v2_23750 = load i32, i32* %v1_23750, align 4
  store i32 %v2_23750, i32* %esi.global-to-local, align 4
  %v12_23756 = icmp eq i32 %v3_2374a, %v1_2374d
  br i1 %v12_23756, label %bb, label %dec_label_pc_2375a

bb:                                               ; preds = %dec_label_pc_23742
  %v2_23758 = call i32 @function_237b0(i32 %v1_2374d)
  store i32 %v2_23758, i32* @eax, align 4
  br label %dec_label_pc_2375a

dec_label_pc_2375a:                               ; preds = %bb, %dec_label_pc_23742
  %v4_23760 = load i32, i32* %ebp.global-to-local, align 4
  %v15_23760 = icmp eq i32 %v0_236e8, %v4_23760
  br i1 %v15_23760, label %bb15, label %dec_label_pc_2376a

bb15:                                             ; preds = %dec_label_pc_2375a
  %v1_23764 = call i32 @function_2389f()
  store i32 %v1_23764, i32* @eax, align 4
  %v1_2376e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2376a

dec_label_pc_2376a:                               ; preds = %bb15, %dec_label_pc_2375a
  %v1_2376e = phi i32 [ %v1_2376e.pre, %bb15 ], [ %v4_23760, %dec_label_pc_2375a ]
  %v4_2376a = load i32, i32* %edi.global-to-local, align 4
  %v15_2376a = icmp eq i32 %v1_2374d, %v4_2376a
  %v0_2376e = load i32, i32* %esi.global-to-local, align 4
  %v2_2376e = add i32 %v1_2376e, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_2376e = inttoptr i32 %v2_2376e to i32*
  store i32 %v0_2376e, i32* %v3_2376e, align 4
  br i1 %v15_2376a, label %dec_label_pc_2377a, label %dec_label_pc_23777

dec_label_pc_23777:                               ; preds = %dec_label_pc_2376a
  br label %dec_label_pc_2377a

dec_label_pc_2377a:                               ; preds = %dec_label_pc_23777, %dec_label_pc_2376a
  %v4_2377a = load i32, i32* @eax, align 4
  ret i32 %v4_2377a

; uselistorder directives
  uselistorder i32 %v4_23760, { 1, 0 }
  uselistorder i32 %v1_2374d, { 0, 2, 1, 3 }
  uselistorder i32 %v3_2372a, { 1, 2, 0 }
  uselistorder i32 %v3_23712, { 1, 2, 0 }
  uselistorder i32 %tmp14, { 0, 3, 2, 1, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 10, 4, 9, 5, 6, 7, 8 }
  uselistorder i32* %ebp.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_23728, { 1, 0 }
  uselistorder label %dec_label_pc_23710, { 1, 0 }
}

define i32 @function_23781(i32 %arg1) local_unnamed_addr {
dec_label_pc_23781:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_23781 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23781 = add i32 %v0_23781, 608472007
  %v2_23781 = inttoptr i32 %v1_23781 to i32*
  %v3_23781 = load i32, i32* %v2_23781, align 4
  %v4_23781 = add i32 %v3_23781, -1
  store i32 %v4_23781, i32* %v2_23781, align 4
  %v2_23787 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_23787 = load i32, i32* %ebx.global-to-local, align 4
  %v4_23787 = lshr i32 %v3_23787, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_23787 = trunc i32 %v4_23787 to i8
  %v6_23787 = and i8 %v5_23787, %v2_23787
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* %of.global-to-local, align 1
  %v8_23787 = icmp slt i8 %v6_23787, 0
  store i1 %v8_23787, i1* %sf.global-to-local, align 1
  %v13_23787 = inttoptr i32 %v3_23787 to i8*
  store i8 %v6_23787, i8* %v13_23787, align 1
  %v0_23789 = load i1, i1* %sf.global-to-local, align 1
  %v1_23789 = load i1, i1* %of.global-to-local, align 1
  %v2_23789 = icmp eq i1 %v0_23789, %v1_23789
  %v0_2378b = load i32, i32* %eax.global-to-local, align 4
  br i1 %v2_23789, label %dec_label_pc_2378b, label %dec_label_pc_237af

dec_label_pc_2378b:                               ; preds = %dec_label_pc_23781
  %v1_2378b = trunc i32 %v0_2378b to i8
  %v2_2378b = load i1, i1* %cf.global-to-local, align 1
  %v3_2378b = zext i1 %v2_2378b to i8
  %v4_2378b = sub i8 %v1_2378b, ptrtoint (i8* @global_var_74.3482 to i8)
  %v5_2378b = add i8 %v3_2378b, %v4_2378b
  %v17_2378b = icmp ult i8 %v1_2378b, 116
  %v18_2378b = or i1 %v17_2378b, %v2_2378b
  %v21_2378b = sub i8 %v4_2378b, %v3_2378b
  %tmp100 = xor i8 %v21_2378b, -128
  %v24_2378b = and i8 %tmp100, %v1_2378b
  %v25_2378b = icmp slt i8 %v24_2378b, 0
  store i1 %v18_2378b, i1* %cf.global-to-local, align 1
  store i1 %v25_2378b, i1* %of.global-to-local, align 1
  %v27_2378b = icmp slt i8 %v5_2378b, 0
  store i1 %v27_2378b, i1* %sf.global-to-local, align 1
  %v31_2378b = zext i8 %v5_2378b to i32
  %v33_2378b = and i32 %v0_2378b, -256
  %v34_2378b = or i32 %v31_2378b, %v33_2378b
  store i32 %v34_2378b, i32* %eax.global-to-local, align 4
  %v0_2378e = load i32, i32* %edi.global-to-local, align 4
  %v1_2378e = add i32 %v0_2378e, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2378e = inttoptr i32 %v1_2378e to i32*
  %v3_2378e = load i32, i32* %v2_2378e, align 4
  store i32 %v3_2378e, i32* %eax.global-to-local, align 4
  %v0_2379c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_2379c101 = icmp eq i32 %v0_2379c.pre, %v3_2378e
  %v1_2379e102 = icmp eq i1 %v12_2379c101, false
  br i1 %v1_2379e102, label %dec_label_pc_23798.lr.ph, label %dec_label_pc_237a0

dec_label_pc_23798.lr.ph:                         ; preds = %dec_label_pc_2378b
  %v0_2379a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_23798

dec_label_pc_23798:                               ; preds = %dec_label_pc_23798.lr.ph, %dec_label_pc_23798
  %v0_2379a = phi i32 [ %v0_2379a.pre, %dec_label_pc_23798.lr.ph ], [ %v2_2379a, %dec_label_pc_23798 ]
  %v0_23798103 = phi i32 [ %v0_2379c.pre, %dec_label_pc_23798.lr.ph ], [ %v2_23798, %dec_label_pc_23798 ]
  %v1_23798 = inttoptr i32 %v0_23798103 to i32*
  %v2_23798 = load i32, i32* %v1_23798, align 4
  store i32 %v2_23798, i32* %ebx.global-to-local, align 4
  %v1_2379a = inttoptr i32 %v0_2379a to i32*
  %v2_2379a = load i32, i32* %v1_2379a, align 4
  store i32 %v2_2379a, i32* %esi.global-to-local, align 4
  %v12_2379c = icmp eq i32 %v2_23798, %v3_2378e
  %v1_2379e = icmp eq i1 %v12_2379c, false
  br i1 %v1_2379e, label %dec_label_pc_23798, label %dec_label_pc_237a0

dec_label_pc_237a0:                               ; preds = %dec_label_pc_23798, %dec_label_pc_2378b
  %v5_237a8 = sub i32 %v0_2378e, %arg1
  %v10_237a8 = icmp ult i32 %v0_2378e, %arg1
  %v11_237a8 = xor i32 %v0_2378e, %arg1
  %v12_237a8 = xor i32 %v5_237a8, %v0_2378e
  %v13_237a8 = and i32 %v12_237a8, %v11_237a8
  %v14_237a8 = icmp slt i32 %v13_237a8, 0
  store i1 %v10_237a8, i1* %cf.global-to-local, align 1
  store i1 %v14_237a8, i1* %of.global-to-local, align 1
  %v16_237a8 = icmp slt i32 %v5_237a8, 0
  store i1 %v16_237a8, i1* %sf.global-to-local, align 1
  ret i32 %v3_2378e

dec_label_pc_237af:                               ; preds = %dec_label_pc_23781
  ret i32 %v0_2378b

; uselistorder directives
  uselistorder i32 %v5_237a8, { 1, 0 }
  uselistorder i32 %v2_2379a, { 1, 0 }
  uselistorder i32 %v2_23798, { 0, 2, 1 }
  uselistorder i32 %v3_2378e, { 2, 1, 0, 3 }
  uselistorder i32 %v0_2378e, { 0, 1, 3, 2, 4 }
  uselistorder i8 %v4_2378b, { 1, 0 }
  uselistorder i8 %v3_2378b, { 1, 0 }
  uselistorder i32 %v0_2378b, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1 }
  uselistorder label %dec_label_pc_23798, { 1, 0 }
}

define i32 @function_237b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_237b0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_237b8 = add i32 %tmp2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_237b8 = inttoptr i32 %v1_237b8 to i32*
  store i32 0, i32* %v2_237b8, align 4
  %v0_237bf = load i32, i32* %eax.global-to-local, align 4
  %v1_237bf = load i32, i32* %edx.global-to-local, align 4
  %v2_237bf = inttoptr i32 %v1_237bf to i32*
  store i32 %v0_237bf, i32* %v2_237bf, align 4
  %v2_237c1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_237c1
}

define i32 @function_237e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_237e0:
  %eax.global-to-local = alloca i32, align 4
  %v2_237e0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_237e0 = load i32, i32* @eax, align 4
  %v4_237e0 = trunc i32 %v3_237e0 to i8
  %v5_237e0 = add i8 %v4_237e0, %v2_237e0
  %v21_237e0 = inttoptr i32 %v3_237e0 to i8*
  store i8 %v5_237e0, i8* %v21_237e0, align 1
  %v3_237e2 = load i32, i32* @eax, align 4
  %v4_237e2 = trunc i32 %v3_237e2 to i8
  %v3_237e4 = load i32, i32* @edx, align 4
  %v4_237e4 = trunc i32 %v3_237e4 to i8
  %v5_237e4 = add i8 %v4_237e4, %v4_237e2
  %v21_237e4 = inttoptr i32 %v3_237e2 to i8*
  store i8 %v5_237e4, i8* %v21_237e4, align 1
  %v0_237e7 = load i32, i32* @eax, align 4
  %v4_237e7 = mul i32 %v0_237e7, 2
  store i32 %v4_237e7, i32* %eax.global-to-local, align 4
  %v0_237e9 = load i32, i32* @edx, align 4
  %v2_237e9 = add i32 %v4_237e7, 12
  %v3_237e9 = inttoptr i32 %v2_237e9 to i32*
  store i32 %v0_237e9, i32* %v3_237e9, align 4
  %v0_237ec = load i32, i32* %eax.global-to-local, align 4
  %v1_237ec = load i32, i32* @ecx, align 4
  %v2_237ec = add i32 %v1_237ec, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_237ec = inttoptr i32 %v2_237ec to i32*
  store i32 %v0_237ec, i32* %v3_237ec, align 4
  %v3_237ef = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_237ef

; uselistorder directives
  uselistorder i32 %v4_237e7, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
}

define i32 @function_237fc() local_unnamed_addr {
dec_label_pc_237fc:
  %eax.global-to-local = alloca i32, align 4
  %v0_237fc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_237fc
}

define i32 @function_23816(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_23816:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_23816 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23816 = add i32 %v0_23816, 1698440268
  %v2_23816 = inttoptr i32 %v1_23816 to i32*
  %v3_23816 = load i32, i32* %v2_23816, align 4
  %v4_23816 = add i32 %v3_23816, -1
  store i32 %v4_23816, i32* %v2_23816, align 4
  %v0_2381c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2381c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2381c = xor i32 %v1_2381c, %v0_2381c
  %v3_2381c = icmp eq i32 %v2_2381c, 0
  store i32 %v2_2381c, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v0_23826 = load i32, i32* @eax, align 4
  %v1_23826 = add i32 %v0_23826, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_23826 = inttoptr i32 %v1_23826 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_23826, align 4
  %v0_2382d = load i32, i32* @eax, align 4
  %v1_2382d = add i32 %v0_2382d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2382d = inttoptr i32 %v1_2382d to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_2382d, align 4
  %v0_23834 = load i32, i32* @eax, align 4
  %v1_23834 = inttoptr i32 %v0_23834 to i32*
  store i32 ptrtoint (%vtable_39bd0_type* @global_var_39bd0.3578 to i32), i32* %v1_23834, align 4
  %v0_2383a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2383a = load i32, i32* @eax, align 4
  %v2_2383a = add i32 %v1_2383a, 12
  %v3_2383a = inttoptr i32 %v2_2383a to i32*
  store i32 %v0_2383a, i32* %v3_2383a, align 4
  %v0_2383d = load i32, i32* @eax, align 4
  %v1_2383d = load i32, i32* %edx.global-to-local, align 4
  %v2_2383d = add i32 %v1_2383d, 12
  %v3_2383d = inttoptr i32 %v2_2383d to i32*
  store i32 %v0_2383d, i32* %v3_2383d, align 4
  %v1_23840 = icmp eq i1 %v3_2381c, false
  br i1 %v1_23840, label %bb, label %dec_label_pc_23816.dec_label_pc_23842_crit_edge

dec_label_pc_23816.dec_label_pc_23842_crit_edge:  ; preds = %dec_label_pc_23816
  %v0_23849.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_23842

bb:                                               ; preds = %dec_label_pc_23816
  %v2_23840 = call i32 @function_2386c()
  br label %dec_label_pc_23842

dec_label_pc_23842:                               ; preds = %dec_label_pc_23816.dec_label_pc_23842_crit_edge, %bb
  %v0_23849 = phi i32 [ %v0_23849.pre, %dec_label_pc_23816.dec_label_pc_23842_crit_edge ], [ %v2_23840, %bb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_23849

; uselistorder directives
  uselistorder label %dec_label_pc_23842, { 1, 0 }
}

define i32 @function_2384b() local_unnamed_addr {
dec_label_pc_2384b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2384b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2384b
}

define i32 @function_23858() local_unnamed_addr {
dec_label_pc_23858:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2386c() local_unnamed_addr {
dec_label_pc_2386c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23887() local_unnamed_addr {
dec_label_pc_23887:
  %eax.global-to-local = alloca i32, align 4
  %v0_23887 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_23887
}

define i32 @function_23888() local_unnamed_addr {
dec_label_pc_23888:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2389f() local_unnamed_addr {
dec_label_pc_2389f:
  %v3_238b7 = load i32, i32* @eax, align 4
  ret i32 %v3_238b7
}

define i32 @function_238c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_238c3:
  %v1_238cc = call i32 @unknown_40ca0(i32 %arg1)
  store i32 %v1_238cc, i32* @eax, align 4
  %v0_238d1 = call i32 @function_23858()
  ret i32 %v0_238d1
}

define i32 @function_238e1() local_unnamed_addr {
dec_label_pc_238e1:
  %eax.global-to-local = alloca i32, align 4
  %v0_238e1 = load i32, i32* %eax.global-to-local, align 4
  %v11_238e1 = and i32 %v0_238e1, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  store i32 %v11_238e1, i32* @eax, align 4
  %v0_238e3 = call i32 @function_e8023aff()
  store i32 %v0_238e3, i32* %eax.global-to-local, align 4
  ret i32 %v0_238e3
}

define i32 @function_238ed() local_unnamed_addr {
dec_label_pc_238ed:
  %eax.global-to-local = alloca i32, align 4
  %v0_238ed = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_238ed
}

define i32 @function_238f3() local_unnamed_addr {
dec_label_pc_238f3:
  %v0_238f3 = call i32 @function_23888()
  ret i32 %v0_238f3
}

define i32 @function_238f6() local_unnamed_addr {
dec_label_pc_238f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_238f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_238f6
}

define i32 @_ZN5boost8signals26detail12signal1_implIbxNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbxEEENS7_IFbRKNS0_10connectionExEEENS0_5mutexEEC1ERKS4_RKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23910:
  %stack_var_-56 = alloca i32, align 4
  %v2_2392b = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_2392b
}

define i32 @function_2398d(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2398d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %stack_var_32 = alloca i32, align 4
  %v0_2398d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2398d = add i32 %v0_2398d, 1086786680
  %v2_2398d = inttoptr i32 %v1_2398d to i32*
  %v3_2398d = load i32, i32* %v2_2398d, align 4
  %v4_2398d = add i32 %v3_2398d, -1
  store i32 %v4_2398d, i32* %v2_2398d, align 4
  %v0_23993 = load i32, i32* %eax.global-to-local, align 4
  %v1_23993 = trunc i32 %v0_23993 to i8
  %v2_23993 = add i8 %v1_23993, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_23993 = zext i8 %v2_23993 to i32
  %v18_23993 = and i32 %v0_23993, -256
  %v19_23993 = or i32 %v16_23993, %v18_23993
  store i32 %v19_23993, i32* %eax.global-to-local, align 4
  %v1_23995 = inttoptr i32 %v19_23993 to i8*
  %v2_23995 = load i8, i8* %v1_23995, align 1
  %v5_23995 = add i8 %v2_23995, %v2_23993
  store i8 %v5_23995, i8* %v1_23995, align 1
  %v0_23997 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23997 = lshr i32 %v0_23997, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_23997 = load i32, i32* %eax.global-to-local, align 4
  %v5_23997 = add i32 %v1_23997, %v3_23997
  %v20_23997 = urem i32 %v5_23997, 256
  %v22_23997 = shl i32 %v20_23997, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_23997 = and i32 %v0_23997, -65281
  %v24_23997 = or i32 %v22_23997, %v23_23997
  store i32 %v24_23997, i32* %ebx.global-to-local, align 4
  %v1_23999 = add i32 %v3_23997, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_23999 = trunc i32 %v1_23999 to i8
  store i32 %v1_23999, i32* %eax.global-to-local, align 4
  %v2_2399a = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_2399a = or i8 %v2_2399a, %v11_23999
  %v11_2399a = load i32, i32* %ecx.global-to-local, align 4
  %v12_2399a = inttoptr i32 %v11_2399a to i8*
  store i8 %v5_2399a, i8* %v12_2399a, align 1
  %v0_2399c = load i32, i32* %eax.global-to-local, align 4
  %v1_2399c = inttoptr i32 %v0_2399c to i8*
  %v2_2399c = load i8, i8* %v1_2399c, align 1
  %v4_2399c = trunc i32 %v0_2399c to i8
  %v5_2399c = add i8 %v2_2399c, %v4_2399c
  store i8 %v5_2399c, i8* %v1_2399c, align 1
  %v0_2399e = load i32, i32* %ebx.global-to-local, align 4
  %v3_2399e = load i32, i32* %eax.global-to-local, align 4
  %v5_2399e1 = mul i32 %v3_2399e, 256
  %v1_2399e2 = add i32 %v5_2399e1, %v0_2399e
  %v22_2399e = and i32 %v1_2399e2, 65280
  %v23_2399e = and i32 %v0_2399e, -65281
  %v24_2399e = or i32 %v22_2399e, %v23_2399e
  store i32 %v24_2399e, i32* %ebx.global-to-local, align 4
  %v2_239a0 = load i32, i32* %edx.global-to-local, align 4
  %v3_239a0 = lshr i32 %v2_239a0, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_239a0 = add i32 %v3_239a0, %v3_2399e
  %v20_239a0 = urem i32 %v5_239a0, 256
  %v22_239a0 = and i32 %v3_2399e, -256
  %v23_239a0 = or i32 %v20_239a0, %v22_239a0
  store i32 %v23_239a0, i32* %eax.global-to-local, align 4
  %v2_239a3 = inttoptr i32 %v23_239a0 to i32*
  %v3_239a3 = load i32, i32* %v2_239a3, align 4
  %v4_239a3 = add i32 %v23_239a0, %v3_239a3
  %v1_239a5 = load i32, i32* @esi, align 4
  %v2_239a5 = add i32 %v1_239a5, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_239a5 = inttoptr i32 %v2_239a5 to i32*
  store i32 %v4_239a3, i32* %v3_239a5, align 4
  %v2_239b0 = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_239b0, i32* %eax.global-to-local, align 4
  %v2_239b7 = call i32 @unknown_43f40(i32 %v2_239b0, i32 %arg2)
  store i32 %v2_239b7, i32* %eax.global-to-local, align 4
  %v1_239c0 = load i32, i32* %ebx.global-to-local, align 4
  %v12_239c0 = icmp eq i32 %tmp99, %v1_239c0
  %v1_239c2 = icmp eq i1 %v12_239c0, false
  br i1 %v1_239c2, label %dec_label_pc_239ca, label %dec_label_pc_239c4

dec_label_pc_239c4:                               ; preds = %dec_label_pc_2398d
  %v0_239c4 = call i32 @function_239e3()
  store i32 %v0_239c4, i32* %eax.global-to-local, align 4
  ret i32 %v0_239c4

dec_label_pc_239ca:                               ; preds = %dec_label_pc_2398d
  %v1_239cc = add i32 %tmp99, 12
  store i32 %v1_239cc, i32* @eax, align 4
  %v1_239d2 = call i32 @function_37370(i32 %v1_239cc)
  store i32 %v1_239d2, i32* %eax.global-to-local, align 4
  ret i32 %v1_239d2

; uselistorder directives
  uselistorder i32 %v3_2399e, { 2, 0, 1 }
  uselistorder i32 %v0_2399e, { 1, 0 }
  uselistorder i32 %v3_23997, { 1, 0 }
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_239e3() local_unnamed_addr {
dec_label_pc_239e3:
  %v2_239e3 = load i32, i32* @esi, align 4
  store i32 %v2_239e3, i32* @eax, align 4
  %v1_239e5 = icmp eq i32 %v2_239e3, 0
  br i1 %v1_239e5, label %bb, label %dec_label_pc_239e9

bb:                                               ; preds = %dec_label_pc_239e3
  %v1_239e7 = call i32 @function_23a55()
  %v2_239e9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_239e9

dec_label_pc_239e9:                               ; preds = %bb, %dec_label_pc_239e3
  %v2_239e9 = phi i32 [ %v2_239e9.pre, %bb ], [ %v2_239e3, %dec_label_pc_239e3 ]
  store i32 %v2_239e9, i32* @eax, align 4
  %v1_239eb = icmp eq i32 %v2_239e9, 0
  br i1 %v1_239eb, label %bb5, label %dec_label_pc_239ef

bb5:                                              ; preds = %dec_label_pc_239e9
  %v1_239ed = call i32 @function_23a31()
  store i32 %v1_239ed, i32* @eax, align 4
  %v1_239ef.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_239ef

dec_label_pc_239ef:                               ; preds = %bb5, %dec_label_pc_239e9
  %v1_239ef = phi i32 [ %v1_239ef.pre, %bb5 ], [ %v2_239e9, %dec_label_pc_239e9 ]
  %v0_239ef = phi i32 [ %v1_239ed, %bb5 ], [ %v2_239e9, %dec_label_pc_239e9 ]
  %v2_239ef = add i32 %v1_239ef, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_239ef = inttoptr i32 %v2_239ef to i32*
  store i32 %v0_239ef, i32* %v3_239ef, align 4
  %v3_239fd = load i32, i32* @eax, align 4
  ret i32 %v3_239fd

; uselistorder directives
  uselistorder i32 %v2_239e9, { 1, 0, 3, 2 }
}

define i32 @function_23a04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23a04:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_23a04 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23a04 = add i32 %v0_23a04, 1698440260
  %v2_23a04 = inttoptr i32 %v1_23a04 to i32*
  %v3_23a04 = load i32, i32* %v2_23a04, align 4
  %v4_23a04 = add i32 %v3_23a04, -1
  store i32 %v4_23a04, i32* %v2_23a04, align 4
  %v0_23a0a = load i32, i32* %eax.global-to-local, align 4
  %v1_23a0a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23a0a = xor i32 %v1_23a0a, %v0_23a0a
  %v3_23a0a = icmp eq i32 %v2_23a0a, 0
  store i32 %v2_23a0a, i32* @eax, align 4
  %v1_23a10 = icmp eq i1 %v3_23a0a, false
  br i1 %v1_23a10, label %bb, label %dec_label_pc_23a12

bb:                                               ; preds = %dec_label_pc_23a04
  %v2_23a10 = call i32 @function_23a2c()
  store i32 %v2_23a10, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_23a12

dec_label_pc_23a12:                               ; preds = %bb, %dec_label_pc_23a04
  %v0_23a19 = phi i32 [ %v2_23a10, %bb ], [ %v2_23a0a, %dec_label_pc_23a04 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_23a19
}

define i32 @function_23a1c() local_unnamed_addr {
dec_label_pc_23a1c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23a2c() local_unnamed_addr {
dec_label_pc_23a2c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23a31() local_unnamed_addr {
dec_label_pc_23a31:
  %v3_23a49 = load i32, i32* @eax, align 4
  ret i32 %v3_23a49
}

define i32 @function_23a55() local_unnamed_addr {
dec_label_pc_23a55:
  %v3_23a6d = load i32, i32* @eax, align 4
  ret i32 %v3_23a6d
}

define i32 @function_23a8d() local_unnamed_addr {
dec_label_pc_23a8d:
  %ecx.global-to-local = alloca i32, align 4
  %v0_23a8d = load i32, i32* %ecx.global-to-local, align 4
  %v1_23a8d = add i32 %v0_23a8d, 607947206
  %v2_23a8d = inttoptr i32 %v1_23a8d to i32*
  %v3_23a8d = load i32, i32* %v2_23a8d, align 4
  %v4_23a8d = add i32 %v3_23a8d, -1
  store i32 %v4_23a8d, i32* %v2_23a8d, align 4
  %v0_23a98 = call i32 @function_23a1c()
  ret i32 %v0_23a98
}

define i32 @function_23aa1() local_unnamed_addr {
dec_label_pc_23aa1:
  %v0_23aa1 = call i32 @function_23a1c()
  ret i32 %v0_23aa1

; uselistorder directives
  uselistorder i32 ()* @function_23a1c, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23ab0:
  ret i32 0
}

define i32 @function_23ada(i32* %arg1) local_unnamed_addr {
dec_label_pc_23ada:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_23ada = load i32, i32* %ebx.global-to-local, align 4
  %v1_23ada = add i32 %v0_23ada, 1149890808
  %v2_23ada = inttoptr i32 %v1_23ada to i32*
  %v3_23ada = load i32, i32* %v2_23ada, align 4
  %v4_23ada = add i32 %v3_23ada, 1
  store i32 %v4_23ada, i32* %v2_23ada, align 4
  %v0_23ae0 = load i32, i32* %eax.global-to-local, align 4
  %v1_23ae0 = trunc i32 %v0_23ae0 to i8
  %v2_23ae0 = and i8 %v1_23ae0, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_23ae0 = icmp eq i8 %v2_23ae0, 0
  %v8_23ae0 = zext i8 %v2_23ae0 to i32
  %v10_23ae0 = and i32 %v0_23ae0, -256
  %v11_23ae0 = or i32 %v8_23ae0, %v10_23ae0
  store i32 %v11_23ae0, i32* %eax.global-to-local, align 4
  br i1 %v3_23ae0, label %dec_label_pc_23b0c, label %dec_label_pc_23ae4

dec_label_pc_23ae4:                               ; preds = %dec_label_pc_23ada
  %v0_23ae4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23ae4 = add i32 %v0_23ae4, 16
  %v2_23ae4 = inttoptr i32 %v1_23ae4 to i32*
  %v3_23ae4 = load i32, i32* %v2_23ae4, align 4
  store i32 %v3_23ae4, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_23aeb = add i32 %tmp102, 16
  %v3_23aeb = inttoptr i32 %v2_23aeb to i32*
  store i32 %v3_23ae4, i32* %v3_23aeb, align 4
  %v0_23aee = load i32, i32* %edx.global-to-local, align 4
  %v1_23aee = add i32 %v0_23aee, 20
  %v2_23aee = inttoptr i32 %v1_23aee to i8*
  store i8 0, i8* %v2_23aee, align 1
  %v0_23af2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23af2 = add i32 %v0_23af2, 20
  %v2_23af2 = inttoptr i32 %v1_23af2 to i8*
  %v3_23af2 = load i8, i8* %v2_23af2, align 1
  %v10_23af2 = icmp eq i8 %v3_23af2, 0
  br i1 %v10_23af2, label %dec_label_pc_23b02, label %dec_label_pc_23af8

dec_label_pc_23af8:                               ; preds = %dec_label_pc_23ae4
  %v1_23af8 = add i32 %v0_23af2, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_23af8 = inttoptr i32 %v1_23af8 to i32*
  %v3_23af8 = load i32, i32* %v2_23af8, align 4
  store i32 %v3_23af8, i32* %eax.global-to-local, align 4
  %v0_23afb = load i32, i32* %edx.global-to-local, align 4
  %v1_23afb = add i32 %v0_23afb, 20
  %v2_23afb = inttoptr i32 %v1_23afb to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_23afb, align 1
  %v0_23aff = load i32, i32* %eax.global-to-local, align 4
  %v1_23aff = load i32, i32* %edx.global-to-local, align 4
  %v2_23aff = add i32 %v1_23aff, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_23aff = inttoptr i32 %v2_23aff to i32*
  store i32 %v0_23aff, i32* %v3_23aff, align 4
  %v0_23b02.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_23b02

dec_label_pc_23b02:                               ; preds = %dec_label_pc_23af8, %dec_label_pc_23ae4
  %v0_23b02 = phi i32 [ %v0_23b02.pre, %dec_label_pc_23af8 ], [ %v0_23af2, %dec_label_pc_23ae4 ]
  %v1_23b02 = add i32 %v0_23b02, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_23b02 = inttoptr i32 %v1_23b02 to i32*
  %v3_23b02 = load i32, i32* %v2_23b02, align 4
  store i32 %v3_23b02, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_23b09 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_23b09 = inttoptr i32 %v2_23b09 to i32*
  store i32 %v3_23b02, i32* %v3_23b09, align 4
  br label %dec_label_pc_23b0c

dec_label_pc_23b0c:                               ; preds = %dec_label_pc_23b02, %dec_label_pc_23ada
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_23b10 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_23b10, i32* %eax.global-to-local, align 4
  %v1_23b12 = add i32 %tmp102, 12
  %v2_23b12 = inttoptr i32 %v1_23b12 to i32*
  store i32 0, i32* %v2_23b12, align 4
  %v0_23b19 = load i32, i32* %eax.global-to-local, align 4
  %v1_23b19 = load i32, i32* %edx.global-to-local, align 4
  %v2_23b19 = inttoptr i32 %v1_23b19 to i32*
  store i32 %v0_23b19, i32* %v2_23b19, align 4
  %v0_23b1b = load i32, i32* %ebx.global-to-local, align 4
  %v1_23b1b = add i32 %v0_23b1b, 12
  %v2_23b1b = inttoptr i32 %v1_23b1b to i32*
  %v3_23b1b = load i32, i32* %v2_23b1b, align 4
  store i32 %v3_23b1b, i32* %eax.global-to-local, align 4
  %v0_23b1e = load i32, i32* %edx.global-to-local, align 4
  %v1_23b1e = add i32 %v0_23b1e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_23b1e = inttoptr i32 %v1_23b1e to i32*
  store i32 0, i32* %v2_23b1e, align 4
  %v0_23b25 = load i32, i32* %esi.global-to-local, align 4
  %v1_23b25 = load i32, i32* %edx.global-to-local, align 4
  %v2_23b25 = add i32 %v1_23b25, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_23b25 = inttoptr i32 %v2_23b25 to i32*
  store i32 %v0_23b25, i32* %v3_23b25, align 4
  %v0_23b28 = load i32, i32* %eax.global-to-local, align 4
  %v1_23b28 = icmp eq i32 %v0_23b28, 0
  br i1 %v1_23b28, label %dec_label_pc_23b43, label %dec_label_pc_23b2c

dec_label_pc_23b2c:                               ; preds = %dec_label_pc_23b0c
  %v0_23b2c = load i32, i32* %edx.global-to-local, align 4
  %v2_23b37 = call i32 @unknown_47560(i32 %v0_23b28, i32 %v0_23b2c)
  store i32 %v2_23b37, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_23b37, i32* %v2_23b12, align 4
  br label %dec_label_pc_23b43

dec_label_pc_23b43:                               ; preds = %dec_label_pc_23b2c, %dec_label_pc_23b0c
  %v0_23b43 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23b43 = add i32 %v0_23b43, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_23b43 = inttoptr i32 %v1_23b43 to i32*
  %v3_23b43 = load i32, i32* %v2_23b43, align 4
  store i32 %v3_23b43, i32* %esi.global-to-local, align 4
  %v1_23b4a = icmp eq i32 %v3_23b43, 0
  %v1_23b4c = icmp eq i1 %v1_23b4a, false
  br i1 %v1_23b4c, label %dec_label_pc_23b52, label %dec_label_pc_23b4e

dec_label_pc_23b4e:                               ; preds = %dec_label_pc_23b43
  %v0_23b4e = call i32 @function_23bbe()
  store i32 %v0_23b4e, i32* %eax.global-to-local, align 4
  ret i32 %v0_23b4e

dec_label_pc_23b52:                               ; preds = %dec_label_pc_23b43
  %v2_23b52 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_23b52

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_23b62() local_unnamed_addr {
dec_label_pc_23b62:
  %eax.global-to-local = alloca i32, align 4
  %v0_23b62 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_23b62
}

define i32 @function_23bbe() local_unnamed_addr {
dec_label_pc_23bbe:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_23bc2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_23bc2 = icmp eq i32 %v1_23bc2, %tmp6
  %v1_23bcd = icmp eq i1 %v3_23bc2, false
  br i1 %v1_23bcd, label %dec_label_pc_23bd7, label %dec_label_pc_23bcf

dec_label_pc_23bcf:                               ; preds = %dec_label_pc_23bbe
  ret i32 %tmp5

dec_label_pc_23bd7:                               ; preds = %dec_label_pc_23bbe
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_23bfa() local_unnamed_addr {
dec_label_pc_23bfa:
  %eax.global-to-local = alloca i32, align 4
  %v0_23bfa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_23bfa
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvRKSsNS_8functionIFvSE_EEEEENS0_5mutexEEEEEEC1ERKSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23c10:
  %eax.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %tmp100, i32* @esi, align 4
  store i32 %tmp100, i32* %arg1, align 4
  %v0_23c32 = load i32, i32* @esi, align 4
  %v2_23c32 = add i32 %v0_23c32, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_23c32 = inttoptr i32 %v2_23c32 to i32*
  store i32 %v0_23c32, i32* %v3_23c32, align 4
  %v0_23c35 = load i32, i32* %eax.global-to-local, align 4
  %v1_23c35 = inttoptr i32 %v0_23c35 to i32*
  %v2_23c35 = load i32, i32* %v1_23c35, align 4
  %v12_23c37 = icmp eq i32 %v0_23c35, %v2_23c35
  br i1 %v12_23c37, label %bb, label %dec_label_pc_23c3b

bb:                                               ; preds = %dec_label_pc_23c10
  %v2_23c39 = call i32 @function_23c77(i32 %arg2)
  store i32 %v2_23c39, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_23c3b

dec_label_pc_23c3b:                               ; preds = %bb, %dec_label_pc_23c10
  %v0_23c3b = phi i32 [ %v2_23c39, %bb ], [ %v0_23c35, %dec_label_pc_23c10 ]
  ret i32 %v0_23c3b

; uselistorder directives
  uselistorder i32 %v0_23c35, { 1, 0, 2 }
  uselistorder i32 %v0_23c32, { 1, 0 }
}

define i32 @function_23c77(i32 %arg1) local_unnamed_addr {
dec_label_pc_23c77:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_23c77 = load i32, i32* @esi, align 4
  %v1_23c77 = add i32 %v0_23c77, 12
  store i32 %v1_23c77, i32* %ecx.global-to-local, align 4
  %v2_23c7a = add i32 %v0_23c77, 20
  %v3_23c7a = inttoptr i32 %v2_23c7a to i32*
  store i32 %v1_23c77, i32* %v3_23c7a, align 4
  %v0_23c7d = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_23c7d, i32* @ebp, align 4
  %v1_23c7f = load i32, i32* @esi, align 4
  %v2_23c7f = add i32 %v1_23c7f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_23c7f = inttoptr i32 %v2_23c7f to i32*
  store i32 %v0_23c7d, i32* %v3_23c7f, align 4
  %v0_23c82 = load i32, i32* @esi, align 4
  %v1_23c82 = add i32 %v0_23c82, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_23c82, i32* %edx.global-to-local, align 4
  %v0_23c85 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_23c8d = add i32 %v0_23c82, 12
  %v2_23c8d = inttoptr i32 %v1_23c8d to i32*
  store i32 0, i32* %v2_23c8d, align 4
  %v0_23c94 = load i32, i32* @esi, align 4
  %v1_23c94 = add i32 %v0_23c94, 16
  %v2_23c94 = inttoptr i32 %v1_23c94 to i32*
  store i32 0, i32* %v2_23c94, align 4
  %v0_23c9b = load i32, i32* @esi, align 4
  %v1_23c9b = add i32 %v0_23c9b, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_23c9b = inttoptr i32 %v1_23c9b to i32*
  store i32 0, i32* %v2_23c9b, align 4
  %v0_23ca2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23ca2 = add i32 %v0_23ca2, 16
  %v2_23ca2 = inttoptr i32 %v1_23ca2 to i32*
  %v3_23ca2 = load i32, i32* %v2_23ca2, align 4
  store i32 %v3_23ca2, i32* @eax, align 4
  %v1_23ca5 = icmp eq i32 %v3_23ca2, 0
  br i1 %v1_23ca5, label %dec_label_pc_23ce6, label %dec_label_pc_23ca9

dec_label_pc_23ca9:                               ; preds = %dec_label_pc_23c77
  %v0_23cb1 = load i32, i32* %edx.global-to-local, align 4
  %v3_23cb4 = call i32 @unknown_476c0(i32 %v0_23cb1, i32 %v3_23ca2)
  store i32 %v3_23cb4, i32* %eax.global-to-local, align 4
  %v1_23cb9 = load i32, i32* @esi, align 4
  %v2_23cb9 = add i32 %v1_23cb9, 16
  %v3_23cb9 = inttoptr i32 %v2_23cb9 to i32*
  store i32 %v3_23cb4, i32* %v3_23cb9, align 4
  %v0_23cbc = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_23cc2

dec_label_pc_23cc2:                               ; preds = %dec_label_pc_23cc2, %dec_label_pc_23ca9
  %v0_23cc9 = phi i32 [ %v0_23cbc, %dec_label_pc_23ca9 ], [ %v3_23cc2, %dec_label_pc_23cc2 ]
  store i32 %v0_23cc9, i32* @ebp, align 4
  %v1_23cc2 = add i32 %v0_23cc9, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_23cc2 = inttoptr i32 %v1_23cc2 to i32*
  %v3_23cc2 = load i32, i32* %v2_23cc2, align 4
  store i32 %v3_23cc2, i32* %edx.global-to-local, align 4
  %v1_23cc5 = icmp eq i32 %v3_23cc2, 0
  %v1_23cc7 = icmp eq i1 %v1_23cc5, false
  br i1 %v1_23cc7, label %dec_label_pc_23cc2, label %dec_label_pc_23cc9

dec_label_pc_23cc9:                               ; preds = %dec_label_pc_23cc2
  %v1_23cc9 = load i32, i32* @esi, align 4
  %v2_23cc9 = add i32 %v1_23cc9, 20
  %v3_23cc9 = inttoptr i32 %v2_23cc9 to i32*
  store i32 %v0_23cc9, i32* %v3_23cc9, align 4
  %v0_23cd2.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_23cd213 = add i32 %v0_23cd2.pre, 12
  %v2_23cd214 = inttoptr i32 %v1_23cd213 to i32*
  %v3_23cd215 = load i32, i32* %v2_23cd214, align 4
  store i32 %v3_23cd215, i32* %edx.global-to-local, align 4
  %v1_23cd516 = icmp eq i32 %v3_23cd215, 0
  %v1_23cd717 = icmp eq i1 %v1_23cd516, false
  br i1 %v1_23cd717, label %dec_label_pc_23cd0, label %dec_label_pc_23cd9

dec_label_pc_23cd0:                               ; preds = %dec_label_pc_23cc9, %dec_label_pc_23cd0
  %v3_23cd218 = phi i32 [ %v3_23cd2, %dec_label_pc_23cd0 ], [ %v3_23cd215, %dec_label_pc_23cc9 ]
  store i32 %v3_23cd218, i32* %eax.global-to-local, align 4
  %v1_23cd2 = add i32 %v3_23cd218, 12
  %v2_23cd2 = inttoptr i32 %v1_23cd2 to i32*
  %v3_23cd2 = load i32, i32* %v2_23cd2, align 4
  store i32 %v3_23cd2, i32* %edx.global-to-local, align 4
  %v1_23cd5 = icmp eq i32 %v3_23cd2, 0
  %v1_23cd7 = icmp eq i1 %v1_23cd5, false
  br i1 %v1_23cd7, label %dec_label_pc_23cd0, label %dec_label_pc_23cd9

dec_label_pc_23cd9:                               ; preds = %dec_label_pc_23cd0, %dec_label_pc_23cc9
  %v0_23cdd.lcssa = phi i32 [ %v0_23cd2.pre, %dec_label_pc_23cc9 ], [ %v3_23cd218, %dec_label_pc_23cd0 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_23cdd = load i32, i32* @esi, align 4
  %v2_23cdd = add i32 %v1_23cdd, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_23cdd = inttoptr i32 %v2_23cdd to i32*
  store i32 %v0_23cdd.lcssa, i32* %v3_23cdd, align 4
  %v0_23ce0 = load i32, i32* %edx.global-to-local, align 4
  %v1_23ce0 = add i32 %v0_23ce0, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_23ce0 = inttoptr i32 %v1_23ce0 to i32*
  %v3_23ce0 = load i32, i32* %v2_23ce0, align 4
  store i32 %v3_23ce0, i32* @eax, align 4
  %v1_23ce3 = load i32, i32* @esi, align 4
  %v2_23ce3 = add i32 %v1_23ce3, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_23ce3 = inttoptr i32 %v2_23ce3 to i32*
  store i32 %v3_23ce0, i32* %v3_23ce3, align 4
  br label %dec_label_pc_23ce6

dec_label_pc_23ce6:                               ; preds = %dec_label_pc_23cd9, %dec_label_pc_23c77
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_23cec = add i32 %arg1, 20
  %v2_23cec = inttoptr i32 %v1_23cec to i32*
  %v3_23cec = load i32, i32* %v2_23cec, align 4
  store i32 %v3_23cec, i32* @edi, align 4
  %v1_23cef = add i32 %arg1, 12
  store i32 %v1_23cef, i32* %ecx.global-to-local, align 4
  %v12_23cf6 = icmp eq i32 %v1_23cef, %v3_23cec
  br i1 %v12_23cf6, label %bb, label %dec_label_pc_23cfa

bb:                                               ; preds = %dec_label_pc_23ce6
  %v2_23cf8 = call i32 @function_23d40(i32 %v1_23cef)
  store i32 %v2_23cf8, i32* @eax, align 4
  br label %dec_label_pc_23cfa

dec_label_pc_23cfa:                               ; preds = %bb, %dec_label_pc_23ce6
  %v4_23d00 = load i32, i32* @ebp, align 4
  %v15_23d00 = icmp eq i32 %v0_23c85, %v4_23d00
  br i1 %v15_23d00, label %bb12, label %dec_label_pc_23d06

bb12:                                             ; preds = %dec_label_pc_23cfa
  %v1_23d04 = call i32 @function_23d6c()
  store i32 %v1_23d04, i32* @eax, align 4
  %v1_23d06.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_23d06

dec_label_pc_23d06:                               ; preds = %bb12, %dec_label_pc_23cfa
  %v1_23d06 = phi i32 [ %v1_23d06.pre, %bb12 ], [ %v4_23d00, %dec_label_pc_23cfa ]
  %v0_23d06 = load i32, i32* @esi, align 4
  %v2_23d06 = add i32 %v1_23d06, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_23d06 = inttoptr i32 %v2_23d06 to i32*
  store i32 %v0_23d06, i32* %v3_23d06, align 4
  %v4_23d0c = load i32, i32* @eax, align 4
  ret i32 %v4_23d0c

; uselistorder directives
  uselistorder i32 %v4_23d00, { 1, 0 }
  uselistorder i32 %v1_23cef, { 1, 0, 2 }
  uselistorder i32 %v3_23cd2, { 1, 2, 0 }
  uselistorder i32 %v3_23cc2, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_23cd0, { 1, 0 }
}

define i32 @function_23d14(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23d14:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_23d14 = load i32, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v15_23d1a = icmp eq i32 %v0_23d14, %arg1
  br i1 %v15_23d1a, label %dec_label_pc_23d2c.preheader, label %dec_label_pc_23d20

dec_label_pc_23d20:                               ; preds = %dec_label_pc_23d14
  %v1_23d20 = add i32 %v0_23d14, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_23d20 = inttoptr i32 %v1_23d20 to i32*
  %v3_23d20 = load i32, i32* %v2_23d20, align 4
  store i32 %v3_23d20, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_23d2c.preheader

dec_label_pc_23d2c.preheader:                     ; preds = %dec_label_pc_23d14, %dec_label_pc_23d20
  %v0_23d3c = phi i32 [ %arg2, %dec_label_pc_23d14 ], [ %v3_23d20, %dec_label_pc_23d20 ]
  %v0_23d2c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_23d2c102 = icmp eq i32 %v0_23d2c.pre, %v0_23d3c
  %v1_23d2e103 = icmp eq i1 %v12_23d2c102, false
  br i1 %v1_23d2e103, label %dec_label_pc_23d28.lr.ph, label %dec_label_pc_23d30

dec_label_pc_23d28.lr.ph:                         ; preds = %dec_label_pc_23d2c.preheader
  %v0_23d2a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_23d28

dec_label_pc_23d28:                               ; preds = %dec_label_pc_23d28.lr.ph, %dec_label_pc_23d28
  %v0_23d2a = phi i32 [ %v0_23d2a.pre, %dec_label_pc_23d28.lr.ph ], [ %v2_23d2a, %dec_label_pc_23d28 ]
  %v0_23d28104 = phi i32 [ %v0_23d2c.pre, %dec_label_pc_23d28.lr.ph ], [ %v2_23d28, %dec_label_pc_23d28 ]
  %v1_23d28 = inttoptr i32 %v0_23d28104 to i32*
  %v2_23d28 = load i32, i32* %v1_23d28, align 4
  store i32 %v2_23d28, i32* %ebx.global-to-local, align 4
  %v1_23d2a = inttoptr i32 %v0_23d2a to i32*
  %v2_23d2a = load i32, i32* %v1_23d2a, align 4
  store i32 %v2_23d2a, i32* %esi.global-to-local, align 4
  %v12_23d2c = icmp eq i32 %v2_23d28, %v0_23d3c
  %v1_23d2e = icmp eq i1 %v12_23d2c, false
  br i1 %v1_23d2e, label %dec_label_pc_23d28, label %dec_label_pc_23d30

dec_label_pc_23d30:                               ; preds = %dec_label_pc_23d28, %dec_label_pc_23d2c.preheader
  ret i32 %v0_23d3c

; uselistorder directives
  uselistorder i32 %v2_23d2a, { 1, 0 }
  uselistorder i32 %v2_23d28, { 0, 2, 1 }
  uselistorder i32 %v0_23d3c, { 2, 1, 0 }
  uselistorder i32 %v0_23d14, { 1, 0 }
  uselistorder label %dec_label_pc_23d28, { 1, 0 }
  uselistorder label %dec_label_pc_23d2c.preheader, { 1, 0 }
}

define i32 @function_23d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_23d40:
  %v1_23d44 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23d44 = xor i32 %v1_23d44, %arg1
  %v3_23d44 = icmp eq i32 %v2_23d44, 0
  store i32 %v2_23d44, i32* @eax, align 4
  %v1_23d4b = icmp eq i1 %v3_23d44, false
  br i1 %v1_23d4b, label %bb, label %dec_label_pc_23d4d

bb:                                               ; preds = %dec_label_pc_23d40
  %v2_23d4b = call i32 @function_23d67()
  br label %dec_label_pc_23d4d

dec_label_pc_23d4d:                               ; preds = %bb, %dec_label_pc_23d40
  %v0_23d54 = phi i32 [ %v2_23d4b, %bb ], [ %v2_23d44, %dec_label_pc_23d40 ]
  ret i32 %v0_23d54
}

define i32 @function_23d56() local_unnamed_addr {
dec_label_pc_23d56:
  %eax.global-to-local = alloca i32, align 4
  %v0_23d56 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_23d56
}

define i32 @function_23d67() local_unnamed_addr {
dec_label_pc_23d67:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23d6c() local_unnamed_addr {
dec_label_pc_23d6c:
  %v0_23d92 = load i32, i32* @esi, align 4
  %v7_23d95 = call i32 @unknown_412e0(i32 %v0_23d92, i32 ptrtoint ([51 x i8]* @global_var_ad8c.3573 to i32), i32 ptrtoint (i32* @global_var_50.3473 to i32), i32 ptrtoint ([917 x i8]* @global_var_32500.3580 to i32))
  ret i32 %v7_23d95
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEEC1ERKS6_RKS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_23db0:
  %stack_var_-56 = alloca i32, align 4
  %v2_23dcb = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_23dcb
}

define i32 @function_23ea0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23ea0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp97 = ptrtoint i32* %arg1 to i32
  %stack_var_32 = alloca i32, align 4
  %v0_23ea0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_23ea0 = add i32 %v0_23ea0, 1086786672
  %v2_23ea0 = inttoptr i32 %v1_23ea0 to i32*
  %v3_23ea0 = load i32, i32* %v2_23ea0, align 4
  %v4_23ea0 = add i32 %v3_23ea0, -1
  store i32 %v4_23ea0, i32* %v2_23ea0, align 4
  %v0_23ea6 = load i32, i32* %eax.global-to-local, align 4
  %v1_23ea6 = trunc i32 %v0_23ea6 to i8
  %v2_23ea6 = add i8 %v1_23ea6, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_23ea6 = zext i8 %v2_23ea6 to i32
  %v18_23ea6 = and i32 %v0_23ea6, -256
  %v19_23ea6 = or i32 %v16_23ea6, %v18_23ea6
  store i32 %v19_23ea6, i32* %eax.global-to-local, align 4
  %v1_23ea8 = inttoptr i32 %v19_23ea6 to i8*
  %v2_23ea8 = load i8, i8* %v1_23ea8, align 1
  %v5_23ea8 = add i8 %v2_23ea8, %v2_23ea6
  store i8 %v5_23ea8, i8* %v1_23ea8, align 1
  %v0_23eaa = load i32, i32* %ebx.global-to-local, align 4
  %v1_23eaa = lshr i32 %v0_23eaa, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_23eaa = load i32, i32* %eax.global-to-local, align 4
  %v5_23eaa = add i32 %v1_23eaa, %v3_23eaa
  %v20_23eaa = urem i32 %v5_23eaa, 256
  %v22_23eaa = shl i32 %v20_23eaa, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_23eaa = and i32 %v0_23eaa, -65281
  %v24_23eaa = or i32 %v22_23eaa, %v23_23eaa
  store i32 %v24_23eaa, i32* %ebx.global-to-local, align 4
  %v1_23eac = add i32 %v3_23eaa, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_23eac = trunc i32 %v1_23eac to i8
  store i32 %v1_23eac, i32* %eax.global-to-local, align 4
  %v2_23ead = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_23ead = or i8 %v2_23ead, %v11_23eac
  %v11_23ead = load i32, i32* %ecx.global-to-local, align 4
  %v12_23ead = inttoptr i32 %v11_23ead to i8*
  store i8 %v5_23ead, i8* %v12_23ead, align 1
  %v0_23eaf = load i32, i32* %eax.global-to-local, align 4
  %v1_23eaf = inttoptr i32 %v0_23eaf to i8*
  %v2_23eaf = load i8, i8* %v1_23eaf, align 1
  %v4_23eaf = trunc i32 %v0_23eaf to i8
  %v5_23eaf = add i8 %v2_23eaf, %v4_23eaf
  store i8 %v5_23eaf, i8* %v1_23eaf, align 1
  %v0_23eb1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23eb1 = lshr i32 %v0_23eb1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_23eb1 = load i32, i32* %eax.global-to-local, align 4
  %v5_23eb1 = add i32 %v1_23eb1, %v3_23eb1
  %v20_23eb1 = urem i32 %v5_23eb1, 256
  %v22_23eb1 = shl i32 %v20_23eb1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_23eb1 = and i32 %v0_23eb1, -65281
  %v24_23eb1 = or i32 %v22_23eb1, %v23_23eb1
  %v4_23eb3 = mul i32 %v3_23eb1, 2
  %v19_23eb3 = and i32 %v4_23eb3, 254
  %v21_23eb3 = and i32 %v3_23eb1, -256
  %v22_23eb3 = or i32 %v19_23eb3, %v21_23eb3
  store i32 %v24_23eb1, i32* %eax.global-to-local, align 4
  store i32 %v22_23eb3, i32* %ebx.global-to-local, align 4
  %v2_23eb6 = inttoptr i32 %v24_23eb1 to i32*
  %v3_23eb6 = load i32, i32* %v2_23eb6, align 4
  %v4_23eb6 = add i32 %v24_23eb1, %v3_23eb6
  %v1_23eb8 = load i32, i32* @edi, align 4
  %v2_23eb8 = add i32 %v1_23eb8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_23eb8 = inttoptr i32 %v2_23eb8 to i32*
  store i32 %v4_23eb6, i32* %v3_23eb8, align 4
  %v2_23ec3 = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_23ec3, i32* %eax.global-to-local, align 4
  %v2_23eca = call i32 @unknown_445c0(i32 %v2_23ec3, i32 %arg2)
  store i32 %v2_23eca, i32* %eax.global-to-local, align 4
  %v1_23ed3 = load i32, i32* %ebx.global-to-local, align 4
  %v12_23ed3 = icmp eq i32 %tmp97, %v1_23ed3
  %v1_23ed5 = icmp eq i1 %v12_23ed3, false
  br i1 %v1_23ed5, label %dec_label_pc_23ee2, label %dec_label_pc_23ed7

dec_label_pc_23ed7:                               ; preds = %dec_label_pc_23ea0
  %v0_23ed7 = call i32 @function_23efb()
  store i32 %v0_23ed7, i32* %eax.global-to-local, align 4
  ret i32 %v0_23ed7

dec_label_pc_23ee2:                               ; preds = %dec_label_pc_23ea0
  %v1_23ee4 = add i32 %tmp97, 12
  store i32 %v1_23ee4, i32* @eax, align 4
  %v1_23eea = call i32 @function_37810(i32 %v1_23ee4)
  store i32 %v1_23eea, i32* %eax.global-to-local, align 4
  ret i32 %v1_23eea

; uselistorder directives
  uselistorder i32 %v24_23eb1, { 0, 2, 1 }
  uselistorder i32 %v3_23eb1, { 2, 0, 1 }
  uselistorder i32 %v3_23eaa, { 1, 0 }
  uselistorder i32 %tmp97, { 1, 0 }
}

define i32 @function_23efb() local_unnamed_addr {
dec_label_pc_23efb:
  %v2_23efb = load i32, i32* @edi, align 4
  store i32 %v2_23efb, i32* @eax, align 4
  %v1_23efd = icmp eq i32 %v2_23efb, 0
  br i1 %v1_23efd, label %bb, label %dec_label_pc_23f01

bb:                                               ; preds = %dec_label_pc_23efb
  %v1_23eff = call i32 @function_23f4e()
  %v2_23f01.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_23f01

dec_label_pc_23f01:                               ; preds = %bb, %dec_label_pc_23efb
  %v2_23f01 = phi i32 [ %v2_23f01.pre, %bb ], [ %v2_23efb, %dec_label_pc_23efb ]
  store i32 %v2_23f01, i32* @eax, align 4
  %v1_23f03 = icmp eq i32 %v2_23f01, 0
  br i1 %v1_23f03, label %bb5, label %dec_label_pc_23f07

bb5:                                              ; preds = %dec_label_pc_23f01
  %v1_23f05 = call i32 @function_23f49()
  store i32 %v1_23f05, i32* @eax, align 4
  %v1_23f07.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_23f07

dec_label_pc_23f07:                               ; preds = %bb5, %dec_label_pc_23f01
  %v1_23f07 = phi i32 [ %v1_23f07.pre, %bb5 ], [ %v2_23f01, %dec_label_pc_23f01 ]
  %v0_23f07 = phi i32 [ %v1_23f05, %bb5 ], [ %v2_23f01, %dec_label_pc_23f01 ]
  %v2_23f07 = add i32 %v1_23f07, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_23f07 = inttoptr i32 %v2_23f07 to i32*
  store i32 %v0_23f07, i32* %v3_23f07, align 4
  %v3_23f15 = load i32, i32* @eax, align 4
  ret i32 %v3_23f15

; uselistorder directives
  uselistorder i32 %v2_23f01, { 1, 0, 3, 2 }
}

define i32 @function_23f1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23f1c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_23f1c = load i32, i32* %ebx.global-to-local, align 4
  %v1_23f1c = add i32 %v0_23f1c, 1698440260
  %v2_23f1c = inttoptr i32 %v1_23f1c to i32*
  %v3_23f1c = load i32, i32* %v2_23f1c, align 4
  %v4_23f1c = add i32 %v3_23f1c, -1
  store i32 %v4_23f1c, i32* %v2_23f1c, align 4
  %v0_23f22 = load i32, i32* %eax.global-to-local, align 4
  %v1_23f22 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23f22 = xor i32 %v1_23f22, %v0_23f22
  %v3_23f22 = icmp eq i32 %v2_23f22, 0
  store i32 %v2_23f22, i32* @eax, align 4
  %v1_23f28 = icmp eq i1 %v3_23f22, false
  br i1 %v1_23f28, label %bb, label %dec_label_pc_23f2a

bb:                                               ; preds = %dec_label_pc_23f1c
  %v2_23f28 = call i32 @function_23f44()
  store i32 %v2_23f28, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_23f2a

dec_label_pc_23f2a:                               ; preds = %bb, %dec_label_pc_23f1c
  %v0_23f31 = phi i32 [ %v2_23f28, %bb ], [ %v2_23f22, %dec_label_pc_23f1c ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_23f31
}

define i32 @function_23f34() local_unnamed_addr {
dec_label_pc_23f34:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23f44() local_unnamed_addr {
dec_label_pc_23f44:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23f49() local_unnamed_addr {
dec_label_pc_23f49:
  %v0_23f49 = call i32 @function_35322()
  ret i32 %v0_23f49
}

define i32 @function_23f4e() local_unnamed_addr {
dec_label_pc_23f4e:
  %v0_23f50 = call i32 @function_351ea()
  ret i32 %v0_23f50
}

define i32 @function_23f86() local_unnamed_addr {
dec_label_pc_23f86:
  %v0_23f86 = call i32 @function_23f34()
  ret i32 %v0_23f86
}

define i32 @function_23f8f() local_unnamed_addr {
dec_label_pc_23f8f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23f9a() local_unnamed_addr {
dec_label_pc_23f9a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_23fa2() local_unnamed_addr {
dec_label_pc_23fa2:
  %v0_23fa2 = call i32 @function_23f34()
  ret i32 %v0_23fa2

; uselistorder directives
  uselistorder i32 ()* @function_23f34, { 1, 0 }
}

define i32 @function_23fa4() local_unnamed_addr {
dec_label_pc_23fa4:
  %v0_23fa6 = call i32 @function_23f8f()
  ret i32 %v0_23fa6
}

define i32 @function_23fcc() local_unnamed_addr {
dec_label_pc_23fcc:
  %v0_23fcc = call i32 @function_23f9a()
  ret i32 %v0_23fcc
}

define i32 @function_23fce() local_unnamed_addr {
dec_label_pc_23fce:
  %v0_23fd0 = call i32 @function_23f9a()
  ret i32 %v0_23fd0
}

define i32 @function_23fd9() local_unnamed_addr {
dec_label_pc_23fd9:
  %v0_23fd9 = call i32 @function_23f9a()
  ret i32 %v0_23fd9

; uselistorder directives
  uselistorder i32 ()* @function_23f9a, { 2, 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23fe0:
  ret i32 0
}

define i32 @function_2400a(i32* %arg1) local_unnamed_addr {
dec_label_pc_2400a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_2400a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2400a = add i32 %v0_2400a, 1149890808
  %v2_2400a = inttoptr i32 %v1_2400a to i32*
  %v3_2400a = load i32, i32* %v2_2400a, align 4
  %v4_2400a = add i32 %v3_2400a, 1
  store i32 %v4_2400a, i32* %v2_2400a, align 4
  %v0_24010 = load i32, i32* %eax.global-to-local, align 4
  %v1_24010 = trunc i32 %v0_24010 to i8
  %v2_24010 = and i8 %v1_24010, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_24010 = icmp eq i8 %v2_24010, 0
  %v8_24010 = zext i8 %v2_24010 to i32
  %v10_24010 = and i32 %v0_24010, -256
  %v11_24010 = or i32 %v8_24010, %v10_24010
  store i32 %v11_24010, i32* %eax.global-to-local, align 4
  br i1 %v3_24010, label %dec_label_pc_2403c, label %dec_label_pc_24014

dec_label_pc_24014:                               ; preds = %dec_label_pc_2400a
  %v0_24014 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24014 = add i32 %v0_24014, 16
  %v2_24014 = inttoptr i32 %v1_24014 to i32*
  %v3_24014 = load i32, i32* %v2_24014, align 4
  store i32 %v3_24014, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_2401b = add i32 %tmp102, 16
  %v3_2401b = inttoptr i32 %v2_2401b to i32*
  store i32 %v3_24014, i32* %v3_2401b, align 4
  %v0_2401e = load i32, i32* %edx.global-to-local, align 4
  %v1_2401e = add i32 %v0_2401e, 20
  %v2_2401e = inttoptr i32 %v1_2401e to i8*
  store i8 0, i8* %v2_2401e, align 1
  %v0_24022 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24022 = add i32 %v0_24022, 20
  %v2_24022 = inttoptr i32 %v1_24022 to i8*
  %v3_24022 = load i8, i8* %v2_24022, align 1
  %v10_24022 = icmp eq i8 %v3_24022, 0
  br i1 %v10_24022, label %dec_label_pc_24032, label %dec_label_pc_24028

dec_label_pc_24028:                               ; preds = %dec_label_pc_24014
  %v1_24028 = add i32 %v0_24022, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_24028 = inttoptr i32 %v1_24028 to i32*
  %v3_24028 = load i32, i32* %v2_24028, align 4
  store i32 %v3_24028, i32* %eax.global-to-local, align 4
  %v0_2402b = load i32, i32* %edx.global-to-local, align 4
  %v1_2402b = add i32 %v0_2402b, 20
  %v2_2402b = inttoptr i32 %v1_2402b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_2402b, align 1
  %v0_2402f = load i32, i32* %eax.global-to-local, align 4
  %v1_2402f = load i32, i32* %edx.global-to-local, align 4
  %v2_2402f = add i32 %v1_2402f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_2402f = inttoptr i32 %v2_2402f to i32*
  store i32 %v0_2402f, i32* %v3_2402f, align 4
  %v0_24032.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_24032

dec_label_pc_24032:                               ; preds = %dec_label_pc_24028, %dec_label_pc_24014
  %v0_24032 = phi i32 [ %v0_24032.pre, %dec_label_pc_24028 ], [ %v0_24022, %dec_label_pc_24014 ]
  %v1_24032 = add i32 %v0_24032, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24032 = inttoptr i32 %v1_24032 to i32*
  %v3_24032 = load i32, i32* %v2_24032, align 4
  store i32 %v3_24032, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_24039 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_24039 = inttoptr i32 %v2_24039 to i32*
  store i32 %v3_24032, i32* %v3_24039, align 4
  br label %dec_label_pc_2403c

dec_label_pc_2403c:                               ; preds = %dec_label_pc_24032, %dec_label_pc_2400a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_24040 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_24040, i32* %eax.global-to-local, align 4
  %v1_24042 = add i32 %tmp102, 12
  %v2_24042 = inttoptr i32 %v1_24042 to i32*
  store i32 0, i32* %v2_24042, align 4
  %v0_24049 = load i32, i32* %eax.global-to-local, align 4
  %v1_24049 = load i32, i32* %edx.global-to-local, align 4
  %v2_24049 = inttoptr i32 %v1_24049 to i32*
  store i32 %v0_24049, i32* %v2_24049, align 4
  %v0_2404b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2404b = add i32 %v0_2404b, 12
  %v2_2404b = inttoptr i32 %v1_2404b to i32*
  %v3_2404b = load i32, i32* %v2_2404b, align 4
  store i32 %v3_2404b, i32* %eax.global-to-local, align 4
  %v0_2404e = load i32, i32* %edx.global-to-local, align 4
  %v1_2404e = add i32 %v0_2404e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2404e = inttoptr i32 %v1_2404e to i32*
  store i32 0, i32* %v2_2404e, align 4
  %v0_24055 = load i32, i32* %esi.global-to-local, align 4
  %v1_24055 = load i32, i32* %edx.global-to-local, align 4
  %v2_24055 = add i32 %v1_24055, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_24055 = inttoptr i32 %v2_24055 to i32*
  store i32 %v0_24055, i32* %v3_24055, align 4
  %v0_24058 = load i32, i32* %eax.global-to-local, align 4
  %v1_24058 = icmp eq i32 %v0_24058, 0
  br i1 %v1_24058, label %dec_label_pc_24073, label %dec_label_pc_2405c

dec_label_pc_2405c:                               ; preds = %dec_label_pc_2403c
  %v0_2405c = load i32, i32* %edx.global-to-local, align 4
  %v2_24067 = call i32 @unknown_47fc0(i32 %v0_24058, i32 %v0_2405c)
  store i32 %v2_24067, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_24067, i32* %v2_24042, align 4
  br label %dec_label_pc_24073

dec_label_pc_24073:                               ; preds = %dec_label_pc_2405c, %dec_label_pc_2403c
  %v0_24073 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24073 = add i32 %v0_24073, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_24073 = inttoptr i32 %v1_24073 to i32*
  %v3_24073 = load i32, i32* %v2_24073, align 4
  store i32 %v3_24073, i32* %esi.global-to-local, align 4
  %v1_2407a = icmp eq i32 %v3_24073, 0
  %v1_2407c = icmp eq i1 %v1_2407a, false
  br i1 %v1_2407c, label %dec_label_pc_24082, label %dec_label_pc_2407e

dec_label_pc_2407e:                               ; preds = %dec_label_pc_24073
  %v0_2407e = call i32 @function_240ee()
  store i32 %v0_2407e, i32* %eax.global-to-local, align 4
  ret i32 %v0_2407e

dec_label_pc_24082:                               ; preds = %dec_label_pc_24073
  %v2_24082 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_24082

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_24092() local_unnamed_addr {
dec_label_pc_24092:
  %eax.global-to-local = alloca i32, align 4
  %v0_24092 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24092
}

define i32 @function_240ee() local_unnamed_addr {
dec_label_pc_240ee:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_240f2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_240f2 = icmp eq i32 %v1_240f2, %tmp6
  %v1_240fd = icmp eq i1 %v3_240f2, false
  br i1 %v1_240fd, label %dec_label_pc_24107, label %dec_label_pc_240ff

dec_label_pc_240ff:                               ; preds = %dec_label_pc_240ee
  ret i32 %tmp5

dec_label_pc_24107:                               ; preds = %dec_label_pc_240ee
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_2412a() local_unnamed_addr {
dec_label_pc_2412a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2412a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2412a
}

define i32 @_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEEC1ERKSM_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24140:
  %eax.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %tmp100, i32* @esi, align 4
  store i32 %tmp100, i32* %arg1, align 4
  %v0_24162 = load i32, i32* @esi, align 4
  %v2_24162 = add i32 %v0_24162, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_24162 = inttoptr i32 %v2_24162 to i32*
  store i32 %v0_24162, i32* %v3_24162, align 4
  %v0_24165 = load i32, i32* %eax.global-to-local, align 4
  %v1_24165 = inttoptr i32 %v0_24165 to i32*
  %v2_24165 = load i32, i32* %v1_24165, align 4
  %v12_24167 = icmp eq i32 %v0_24165, %v2_24165
  br i1 %v12_24167, label %bb, label %dec_label_pc_2416b

bb:                                               ; preds = %dec_label_pc_24140
  %v2_24169 = call i32 @function_241a7(i32 %arg2)
  store i32 %v2_24169, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2416b

dec_label_pc_2416b:                               ; preds = %bb, %dec_label_pc_24140
  %v0_2416b = phi i32 [ %v2_24169, %bb ], [ %v0_24165, %dec_label_pc_24140 ]
  ret i32 %v0_2416b

; uselistorder directives
  uselistorder i32 %v0_24165, { 1, 0, 2 }
  uselistorder i32 %v0_24162, { 1, 0 }
}

define i32 @function_241a7(i32 %arg1) local_unnamed_addr {
dec_label_pc_241a7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_241a7 = load i32, i32* @esi, align 4
  %v1_241a7 = add i32 %v0_241a7, 12
  store i32 %v1_241a7, i32* %ecx.global-to-local, align 4
  %v2_241aa = add i32 %v0_241a7, 20
  %v3_241aa = inttoptr i32 %v2_241aa to i32*
  store i32 %v1_241a7, i32* %v3_241aa, align 4
  %v0_241ad = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_241ad, i32* @ebp, align 4
  %v1_241af = load i32, i32* @esi, align 4
  %v2_241af = add i32 %v1_241af, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_241af = inttoptr i32 %v2_241af to i32*
  store i32 %v0_241ad, i32* %v3_241af, align 4
  %v0_241b2 = load i32, i32* @esi, align 4
  %v1_241b2 = add i32 %v0_241b2, ptrtoint (i8** @global_var_8.3277 to i32)
  store i32 %v1_241b2, i32* %edx.global-to-local, align 4
  %v0_241b5 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_241bd = add i32 %v0_241b2, 12
  %v2_241bd = inttoptr i32 %v1_241bd to i32*
  store i32 0, i32* %v2_241bd, align 4
  %v0_241c4 = load i32, i32* @esi, align 4
  %v1_241c4 = add i32 %v0_241c4, 16
  %v2_241c4 = inttoptr i32 %v1_241c4 to i32*
  store i32 0, i32* %v2_241c4, align 4
  %v0_241cb = load i32, i32* @esi, align 4
  %v1_241cb = add i32 %v0_241cb, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_241cb = inttoptr i32 %v1_241cb to i32*
  store i32 0, i32* %v2_241cb, align 4
  %v0_241d2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_241d2 = add i32 %v0_241d2, 16
  %v2_241d2 = inttoptr i32 %v1_241d2 to i32*
  %v3_241d2 = load i32, i32* %v2_241d2, align 4
  store i32 %v3_241d2, i32* @eax, align 4
  %v1_241d5 = icmp eq i32 %v3_241d2, 0
  br i1 %v1_241d5, label %dec_label_pc_24216, label %dec_label_pc_241d9

dec_label_pc_241d9:                               ; preds = %dec_label_pc_241a7
  %v0_241e1 = load i32, i32* %edx.global-to-local, align 4
  %v3_241e4 = call i32 @unknown_48120(i32 %v0_241e1, i32 %v3_241d2)
  store i32 %v3_241e4, i32* %eax.global-to-local, align 4
  %v1_241e9 = load i32, i32* @esi, align 4
  %v2_241e9 = add i32 %v1_241e9, 16
  %v3_241e9 = inttoptr i32 %v2_241e9 to i32*
  store i32 %v3_241e4, i32* %v3_241e9, align 4
  %v0_241ec = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_241f2

dec_label_pc_241f2:                               ; preds = %dec_label_pc_241f2, %dec_label_pc_241d9
  %v0_241f9 = phi i32 [ %v0_241ec, %dec_label_pc_241d9 ], [ %v3_241f2, %dec_label_pc_241f2 ]
  store i32 %v0_241f9, i32* @ebp, align 4
  %v1_241f2 = add i32 %v0_241f9, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_241f2 = inttoptr i32 %v1_241f2 to i32*
  %v3_241f2 = load i32, i32* %v2_241f2, align 4
  store i32 %v3_241f2, i32* %edx.global-to-local, align 4
  %v1_241f5 = icmp eq i32 %v3_241f2, 0
  %v1_241f7 = icmp eq i1 %v1_241f5, false
  br i1 %v1_241f7, label %dec_label_pc_241f2, label %dec_label_pc_241f9

dec_label_pc_241f9:                               ; preds = %dec_label_pc_241f2
  %v1_241f9 = load i32, i32* @esi, align 4
  %v2_241f9 = add i32 %v1_241f9, 20
  %v3_241f9 = inttoptr i32 %v2_241f9 to i32*
  store i32 %v0_241f9, i32* %v3_241f9, align 4
  %v0_24202.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_2420213 = add i32 %v0_24202.pre, 12
  %v2_2420214 = inttoptr i32 %v1_2420213 to i32*
  %v3_2420215 = load i32, i32* %v2_2420214, align 4
  store i32 %v3_2420215, i32* %edx.global-to-local, align 4
  %v1_2420516 = icmp eq i32 %v3_2420215, 0
  %v1_2420717 = icmp eq i1 %v1_2420516, false
  br i1 %v1_2420717, label %dec_label_pc_24200, label %dec_label_pc_24209

dec_label_pc_24200:                               ; preds = %dec_label_pc_241f9, %dec_label_pc_24200
  %v3_2420218 = phi i32 [ %v3_24202, %dec_label_pc_24200 ], [ %v3_2420215, %dec_label_pc_241f9 ]
  store i32 %v3_2420218, i32* %eax.global-to-local, align 4
  %v1_24202 = add i32 %v3_2420218, 12
  %v2_24202 = inttoptr i32 %v1_24202 to i32*
  %v3_24202 = load i32, i32* %v2_24202, align 4
  store i32 %v3_24202, i32* %edx.global-to-local, align 4
  %v1_24205 = icmp eq i32 %v3_24202, 0
  %v1_24207 = icmp eq i1 %v1_24205, false
  br i1 %v1_24207, label %dec_label_pc_24200, label %dec_label_pc_24209

dec_label_pc_24209:                               ; preds = %dec_label_pc_24200, %dec_label_pc_241f9
  %v0_2420d.lcssa = phi i32 [ %v0_24202.pre, %dec_label_pc_241f9 ], [ %v3_2420218, %dec_label_pc_24200 ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_2420d = load i32, i32* @esi, align 4
  %v2_2420d = add i32 %v1_2420d, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_2420d = inttoptr i32 %v2_2420d to i32*
  store i32 %v0_2420d.lcssa, i32* %v3_2420d, align 4
  %v0_24210 = load i32, i32* %edx.global-to-local, align 4
  %v1_24210 = add i32 %v0_24210, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24210 = inttoptr i32 %v1_24210 to i32*
  %v3_24210 = load i32, i32* %v2_24210, align 4
  store i32 %v3_24210, i32* @eax, align 4
  %v1_24213 = load i32, i32* @esi, align 4
  %v2_24213 = add i32 %v1_24213, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_24213 = inttoptr i32 %v2_24213 to i32*
  store i32 %v3_24210, i32* %v3_24213, align 4
  br label %dec_label_pc_24216

dec_label_pc_24216:                               ; preds = %dec_label_pc_24209, %dec_label_pc_241a7
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_2421c = add i32 %arg1, 20
  %v2_2421c = inttoptr i32 %v1_2421c to i32*
  %v3_2421c = load i32, i32* %v2_2421c, align 4
  store i32 %v3_2421c, i32* @edi, align 4
  %v1_2421f = add i32 %arg1, 12
  store i32 %v1_2421f, i32* %ecx.global-to-local, align 4
  %v12_24226 = icmp eq i32 %v1_2421f, %v3_2421c
  br i1 %v12_24226, label %bb, label %dec_label_pc_2422a

bb:                                               ; preds = %dec_label_pc_24216
  %v2_24228 = call i32 @function_24270(i32 %v1_2421f)
  store i32 %v2_24228, i32* @eax, align 4
  br label %dec_label_pc_2422a

dec_label_pc_2422a:                               ; preds = %bb, %dec_label_pc_24216
  %v4_24230 = load i32, i32* @ebp, align 4
  %v15_24230 = icmp eq i32 %v0_241b5, %v4_24230
  br i1 %v15_24230, label %bb12, label %dec_label_pc_24236

bb12:                                             ; preds = %dec_label_pc_2422a
  %v1_24234 = call i32 @function_2429c()
  store i32 %v1_24234, i32* @eax, align 4
  %v1_24236.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_24236

dec_label_pc_24236:                               ; preds = %bb12, %dec_label_pc_2422a
  %v1_24236 = phi i32 [ %v1_24236.pre, %bb12 ], [ %v4_24230, %dec_label_pc_2422a ]
  %v0_24236 = load i32, i32* @esi, align 4
  %v2_24236 = add i32 %v1_24236, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_24236 = inttoptr i32 %v2_24236 to i32*
  store i32 %v0_24236, i32* %v3_24236, align 4
  %v4_2423c = load i32, i32* @eax, align 4
  ret i32 %v4_2423c

; uselistorder directives
  uselistorder i32 %v4_24230, { 1, 0 }
  uselistorder i32 %v1_2421f, { 1, 0, 2 }
  uselistorder i32 %v3_24202, { 1, 2, 0 }
  uselistorder i32 %v3_241f2, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_24200, { 1, 0 }
}

define i32 @function_24244(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24244:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_24244 = load i32, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v15_2424a = icmp eq i32 %v0_24244, %arg1
  br i1 %v15_2424a, label %dec_label_pc_2425c.preheader, label %dec_label_pc_24250

dec_label_pc_24250:                               ; preds = %dec_label_pc_24244
  %v1_24250 = add i32 %v0_24244, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24250 = inttoptr i32 %v1_24250 to i32*
  %v3_24250 = load i32, i32* %v2_24250, align 4
  store i32 %v3_24250, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2425c.preheader

dec_label_pc_2425c.preheader:                     ; preds = %dec_label_pc_24244, %dec_label_pc_24250
  %v3_24260 = phi i32 [ %arg2, %dec_label_pc_24244 ], [ %v3_24250, %dec_label_pc_24250 ]
  %v0_2425c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_2425c103 = icmp eq i32 %v0_2425c.pre, %v3_24260
  %v1_2425e104 = icmp eq i1 %v12_2425c103, false
  br i1 %v1_2425e104, label %dec_label_pc_24258.lr.ph, label %dec_label_pc_24260

dec_label_pc_24258.lr.ph:                         ; preds = %dec_label_pc_2425c.preheader
  %v0_2425a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_24258

dec_label_pc_24258:                               ; preds = %dec_label_pc_24258.lr.ph, %dec_label_pc_24258
  %v0_2425a = phi i32 [ %v0_2425a.pre, %dec_label_pc_24258.lr.ph ], [ %v2_2425a, %dec_label_pc_24258 ]
  %v0_24258105 = phi i32 [ %v0_2425c.pre, %dec_label_pc_24258.lr.ph ], [ %v2_24258, %dec_label_pc_24258 ]
  %v1_24258 = inttoptr i32 %v0_24258105 to i32*
  %v2_24258 = load i32, i32* %v1_24258, align 4
  store i32 %v2_24258, i32* %ebx.global-to-local, align 4
  %v1_2425a = inttoptr i32 %v0_2425a to i32*
  %v2_2425a = load i32, i32* %v1_2425a, align 4
  store i32 %v2_2425a, i32* %esi.global-to-local, align 4
  %v12_2425c = icmp eq i32 %v2_24258, %v3_24260
  %v1_2425e = icmp eq i1 %v12_2425c, false
  br i1 %v1_2425e, label %dec_label_pc_24258, label %dec_label_pc_24260

dec_label_pc_24260:                               ; preds = %dec_label_pc_24258, %dec_label_pc_2425c.preheader
  ret i32 %v3_24260

; uselistorder directives
  uselistorder i32 %v2_2425a, { 1, 0 }
  uselistorder i32 %v2_24258, { 0, 2, 1 }
  uselistorder i32 %v0_2425c.pre, { 1, 0 }
  uselistorder i32 %v3_24260, { 2, 1, 0 }
  uselistorder i32 %v0_24244, { 1, 0 }
  uselistorder label %dec_label_pc_24258, { 1, 0 }
  uselistorder label %dec_label_pc_2425c.preheader, { 1, 0 }
}

define i32 @function_24270(i32 %arg1) local_unnamed_addr {
dec_label_pc_24270:
  %v1_24274 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24274 = xor i32 %v1_24274, %arg1
  %v3_24274 = icmp eq i32 %v2_24274, 0
  store i32 %v2_24274, i32* @eax, align 4
  %v1_2427b = icmp eq i1 %v3_24274, false
  br i1 %v1_2427b, label %bb, label %dec_label_pc_2427d

bb:                                               ; preds = %dec_label_pc_24270
  %v2_2427b = call i32 @function_24297()
  br label %dec_label_pc_2427d

dec_label_pc_2427d:                               ; preds = %bb, %dec_label_pc_24270
  %v0_24284 = phi i32 [ %v2_2427b, %bb ], [ %v2_24274, %dec_label_pc_24270 ]
  ret i32 %v0_24284
}

define i32 @function_24286() local_unnamed_addr {
dec_label_pc_24286:
  %eax.global-to-local = alloca i32, align 4
  %v0_24286 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24286
}

define i32 @function_24297() local_unnamed_addr {
dec_label_pc_24297:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2429c() local_unnamed_addr {
dec_label_pc_2429c:
  %v3_242b4 = load i32, i32* @eax, align 4
  ret i32 %v3_242b4
}

define i32 @function_242c1() local_unnamed_addr {
dec_label_pc_242c1:
  %eax.global-to-local = alloca i32, align 4
  %v0_242c1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_242c1
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEEC1ERKS6_RKS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_242e0:
  %stack_var_-56 = alloca i32, align 4
  %v2_242fb = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_242fb
}

define i32 @function_243d0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_243d0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp97 = ptrtoint i32* %arg1 to i32
  %stack_var_32 = alloca i32, align 4
  %v0_243d0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_243d0 = add i32 %v0_243d0, 1086786672
  %v2_243d0 = inttoptr i32 %v1_243d0 to i32*
  %v3_243d0 = load i32, i32* %v2_243d0, align 4
  %v4_243d0 = add i32 %v3_243d0, -1
  store i32 %v4_243d0, i32* %v2_243d0, align 4
  %v0_243d6 = load i32, i32* %eax.global-to-local, align 4
  %v1_243d6 = trunc i32 %v0_243d6 to i8
  %v2_243d6 = add i8 %v1_243d6, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_243d6 = zext i8 %v2_243d6 to i32
  %v18_243d6 = and i32 %v0_243d6, -256
  %v19_243d6 = or i32 %v16_243d6, %v18_243d6
  store i32 %v19_243d6, i32* %eax.global-to-local, align 4
  %v1_243d8 = inttoptr i32 %v19_243d6 to i8*
  %v2_243d8 = load i8, i8* %v1_243d8, align 1
  %v5_243d8 = add i8 %v2_243d8, %v2_243d6
  store i8 %v5_243d8, i8* %v1_243d8, align 1
  %v0_243da = load i32, i32* %ebx.global-to-local, align 4
  %v1_243da = lshr i32 %v0_243da, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_243da = load i32, i32* %eax.global-to-local, align 4
  %v5_243da = add i32 %v1_243da, %v3_243da
  %v20_243da = urem i32 %v5_243da, 256
  %v22_243da = shl i32 %v20_243da, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_243da = and i32 %v0_243da, -65281
  %v24_243da = or i32 %v22_243da, %v23_243da
  store i32 %v24_243da, i32* %ebx.global-to-local, align 4
  %v1_243dc = add i32 %v3_243da, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_243dc = trunc i32 %v1_243dc to i8
  store i32 %v1_243dc, i32* %eax.global-to-local, align 4
  %v2_243dd = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_243dd = or i8 %v2_243dd, %v11_243dc
  %v11_243dd = load i32, i32* %ecx.global-to-local, align 4
  %v12_243dd = inttoptr i32 %v11_243dd to i8*
  store i8 %v5_243dd, i8* %v12_243dd, align 1
  %v0_243df = load i32, i32* %eax.global-to-local, align 4
  %v1_243df = inttoptr i32 %v0_243df to i8*
  %v2_243df = load i8, i8* %v1_243df, align 1
  %v4_243df = trunc i32 %v0_243df to i8
  %v5_243df = add i8 %v2_243df, %v4_243df
  store i8 %v5_243df, i8* %v1_243df, align 1
  %v0_243e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_243e1 = udiv i32 %v0_243e1, 256
  %v3_243e1 = load i32, i32* %eax.global-to-local, align 4
  %v5_243e1 = add i32 %v1_243e1, %v3_243e1
  %v20_243e1 = and i32 %v5_243e1, 255
  %v22_243e1 = mul nuw nsw i32 %v20_243e1, 256
  %v23_243e1 = and i32 %v0_243e1, -65281
  %v24_243e1 = or i32 %v22_243e1, %v23_243e1
  store i32 %v24_243e1, i32* %ebx.global-to-local, align 4
  %v1_243e3 = inttoptr i32 %v3_243e1 to i8*
  %v2_243e3 = load i8, i8* %v1_243e3, align 1
  %v3_243e3 = load i32, i32* %ecx.global-to-local, align 4
  %v4_243e3 = trunc i32 %v3_243e3 to i8
  %v5_243e3 = add i8 %v4_243e3, %v2_243e3
  store i8 %v5_243e3, i8* %v1_243e3, align 1
  %v0_243e5 = load i32, i32* %eax.global-to-local, align 4
  %v1_243e5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_243e5, i32* %edx.global-to-local, align 4
  %v4_243e6 = add i32 %v1_243e5, %v0_243e5
  %v1_243e8 = load i32, i32* @edi, align 4
  %v2_243e8 = add i32 %v1_243e8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_243e8 = inttoptr i32 %v2_243e8 to i32*
  store i32 %v4_243e6, i32* %v3_243e8, align 4
  %v2_243f3 = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_243f3, i32* %eax.global-to-local, align 4
  %v2_243fa = call i32 @unknown_44cd0(i32 %v2_243f3, i32 %arg2)
  store i32 %v2_243fa, i32* %eax.global-to-local, align 4
  %v1_24403 = load i32, i32* %ebx.global-to-local, align 4
  %v12_24403 = icmp eq i32 %tmp97, %v1_24403
  %v1_24405 = icmp eq i1 %v12_24403, false
  br i1 %v1_24405, label %dec_label_pc_24412, label %dec_label_pc_24407

dec_label_pc_24407:                               ; preds = %dec_label_pc_243d0
  %v0_24407 = call i32 @function_2442b()
  store i32 %v0_24407, i32* %eax.global-to-local, align 4
  ret i32 %v0_24407

dec_label_pc_24412:                               ; preds = %dec_label_pc_243d0
  %v1_24414 = add i32 %tmp97, 12
  store i32 %v1_24414, i32* @eax, align 4
  %v1_2441a = call i32 @function_37d40(i32 %v1_24414)
  store i32 %v1_2441a, i32* %eax.global-to-local, align 4
  ret i32 %v1_2441a

; uselistorder directives
  uselistorder i32 %v3_243e1, { 1, 0 }
  uselistorder i32 %v0_243e1, { 1, 0 }
  uselistorder i32 %v3_243da, { 1, 0 }
  uselistorder i32 %tmp97, { 1, 0 }
}

define i32 @function_2442b() local_unnamed_addr {
dec_label_pc_2442b:
  %v2_2442b = load i32, i32* @edi, align 4
  store i32 %v2_2442b, i32* @eax, align 4
  %v1_2442d = icmp eq i32 %v2_2442b, 0
  br i1 %v1_2442d, label %bb, label %dec_label_pc_24431

bb:                                               ; preds = %dec_label_pc_2442b
  %v1_2442f = call i32 @function_2447e()
  %v2_24431.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_24431

dec_label_pc_24431:                               ; preds = %bb, %dec_label_pc_2442b
  %v2_24431 = phi i32 [ %v2_24431.pre, %bb ], [ %v2_2442b, %dec_label_pc_2442b ]
  store i32 %v2_24431, i32* @eax, align 4
  %v1_24433 = icmp eq i32 %v2_24431, 0
  br i1 %v1_24433, label %bb5, label %dec_label_pc_24437

bb5:                                              ; preds = %dec_label_pc_24431
  %v1_24435 = call i32 @function_24479()
  store i32 %v1_24435, i32* @eax, align 4
  %v1_24437.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_24437

dec_label_pc_24437:                               ; preds = %bb5, %dec_label_pc_24431
  %v1_24437 = phi i32 [ %v1_24437.pre, %bb5 ], [ %v2_24431, %dec_label_pc_24431 ]
  %v0_24437 = phi i32 [ %v1_24435, %bb5 ], [ %v2_24431, %dec_label_pc_24431 ]
  %v2_24437 = add i32 %v1_24437, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_24437 = inttoptr i32 %v2_24437 to i32*
  store i32 %v0_24437, i32* %v3_24437, align 4
  %v3_24445 = load i32, i32* @eax, align 4
  ret i32 %v3_24445

; uselistorder directives
  uselistorder i32 %v2_24431, { 1, 0, 3, 2 }
}

define i32 @function_2444c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2444c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2444c = load i32, i32* %ebx.global-to-local, align 4
  %v1_2444c = add i32 %v0_2444c, 1698440260
  %v2_2444c = inttoptr i32 %v1_2444c to i32*
  %v3_2444c = load i32, i32* %v2_2444c, align 4
  %v4_2444c = add i32 %v3_2444c, -1
  store i32 %v4_2444c, i32* %v2_2444c, align 4
  %v0_24452 = load i32, i32* %eax.global-to-local, align 4
  %v1_24452 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24452 = xor i32 %v1_24452, %v0_24452
  %v3_24452 = icmp eq i32 %v2_24452, 0
  store i32 %v2_24452, i32* @eax, align 4
  %v1_24458 = icmp eq i1 %v3_24452, false
  br i1 %v1_24458, label %bb, label %dec_label_pc_2445a

bb:                                               ; preds = %dec_label_pc_2444c
  %v2_24458 = call i32 @function_24474()
  store i32 %v2_24458, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2445a

dec_label_pc_2445a:                               ; preds = %bb, %dec_label_pc_2444c
  %v0_24461 = phi i32 [ %v2_24458, %bb ], [ %v2_24452, %dec_label_pc_2444c ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_24461
}

define i32 @function_24464() local_unnamed_addr {
dec_label_pc_24464:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24474() local_unnamed_addr {
dec_label_pc_24474:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24479() local_unnamed_addr {
dec_label_pc_24479:
  %v0_24479 = call i32 @function_3574e()
  ret i32 %v0_24479
}

define i32 @function_2447e() local_unnamed_addr {
dec_label_pc_2447e:
  %v0_24480 = call i32 @function_356b2()
  ret i32 %v0_24480
}

define i32 @function_244b6() local_unnamed_addr {
dec_label_pc_244b6:
  %v0_244b6 = call i32 @function_24464()
  ret i32 %v0_244b6
}

define i32 @function_244bf() local_unnamed_addr {
dec_label_pc_244bf:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_244ca() local_unnamed_addr {
dec_label_pc_244ca:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_244d2() local_unnamed_addr {
dec_label_pc_244d2:
  %v0_244d2 = call i32 @function_24464()
  ret i32 %v0_244d2

; uselistorder directives
  uselistorder i32 ()* @function_24464, { 1, 0 }
}

define i32 @function_244d4() local_unnamed_addr {
dec_label_pc_244d4:
  %v0_244d6 = call i32 @function_244bf()
  ret i32 %v0_244d6
}

define i32 @function_244fc() local_unnamed_addr {
dec_label_pc_244fc:
  %v0_244fc = call i32 @function_244ca()
  ret i32 %v0_244fc
}

define i32 @function_244fe() local_unnamed_addr {
dec_label_pc_244fe:
  %v0_24500 = call i32 @function_244ca()
  ret i32 %v0_24500
}

define i32 @function_24509() local_unnamed_addr {
dec_label_pc_24509:
  %v0_24509 = call i32 @function_244ca()
  ret i32 %v0_24509

; uselistorder directives
  uselistorder i32 ()* @function_244ca, { 2, 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot0IvNS1_8functionIFvvEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_copyEPKSt13_Rb_tree_nodeISL_EPSV_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24510:
  ret i32 0
}

define i32 @function_2453a(i32* %arg1) local_unnamed_addr {
dec_label_pc_2453a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_2453a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2453a = add i32 %v0_2453a, 1149890808
  %v2_2453a = inttoptr i32 %v1_2453a to i32*
  %v3_2453a = load i32, i32* %v2_2453a, align 4
  %v4_2453a = add i32 %v3_2453a, 1
  store i32 %v4_2453a, i32* %v2_2453a, align 4
  %v0_24540 = load i32, i32* %eax.global-to-local, align 4
  %v1_24540 = trunc i32 %v0_24540 to i8
  %v2_24540 = and i8 %v1_24540, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_24540 = icmp eq i8 %v2_24540, 0
  %v8_24540 = zext i8 %v2_24540 to i32
  %v10_24540 = and i32 %v0_24540, -256
  %v11_24540 = or i32 %v8_24540, %v10_24540
  store i32 %v11_24540, i32* %eax.global-to-local, align 4
  br i1 %v3_24540, label %dec_label_pc_2456c, label %dec_label_pc_24544

dec_label_pc_24544:                               ; preds = %dec_label_pc_2453a
  %v0_24544 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24544 = add i32 %v0_24544, 16
  %v2_24544 = inttoptr i32 %v1_24544 to i32*
  %v3_24544 = load i32, i32* %v2_24544, align 4
  store i32 %v3_24544, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_2454b = add i32 %tmp102, 16
  %v3_2454b = inttoptr i32 %v2_2454b to i32*
  store i32 %v3_24544, i32* %v3_2454b, align 4
  %v0_2454e = load i32, i32* %edx.global-to-local, align 4
  %v1_2454e = add i32 %v0_2454e, 20
  %v2_2454e = inttoptr i32 %v1_2454e to i8*
  store i8 0, i8* %v2_2454e, align 1
  %v0_24552 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24552 = add i32 %v0_24552, 20
  %v2_24552 = inttoptr i32 %v1_24552 to i8*
  %v3_24552 = load i8, i8* %v2_24552, align 1
  %v10_24552 = icmp eq i8 %v3_24552, 0
  br i1 %v10_24552, label %dec_label_pc_24562, label %dec_label_pc_24558

dec_label_pc_24558:                               ; preds = %dec_label_pc_24544
  %v1_24558 = add i32 %v0_24552, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_24558 = inttoptr i32 %v1_24558 to i32*
  %v3_24558 = load i32, i32* %v2_24558, align 4
  store i32 %v3_24558, i32* %eax.global-to-local, align 4
  %v0_2455b = load i32, i32* %edx.global-to-local, align 4
  %v1_2455b = add i32 %v0_2455b, 20
  %v2_2455b = inttoptr i32 %v1_2455b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_2455b, align 1
  %v0_2455f = load i32, i32* %eax.global-to-local, align 4
  %v1_2455f = load i32, i32* %edx.global-to-local, align 4
  %v2_2455f = add i32 %v1_2455f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_2455f = inttoptr i32 %v2_2455f to i32*
  store i32 %v0_2455f, i32* %v3_2455f, align 4
  %v0_24562.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_24562

dec_label_pc_24562:                               ; preds = %dec_label_pc_24558, %dec_label_pc_24544
  %v0_24562 = phi i32 [ %v0_24562.pre, %dec_label_pc_24558 ], [ %v0_24552, %dec_label_pc_24544 ]
  %v1_24562 = add i32 %v0_24562, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24562 = inttoptr i32 %v1_24562 to i32*
  %v3_24562 = load i32, i32* %v2_24562, align 4
  store i32 %v3_24562, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_24569 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_24569 = inttoptr i32 %v2_24569 to i32*
  store i32 %v3_24562, i32* %v3_24569, align 4
  br label %dec_label_pc_2456c

dec_label_pc_2456c:                               ; preds = %dec_label_pc_24562, %dec_label_pc_2453a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_24570 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_24570, i32* %eax.global-to-local, align 4
  %v1_24572 = add i32 %tmp102, 12
  %v2_24572 = inttoptr i32 %v1_24572 to i32*
  store i32 0, i32* %v2_24572, align 4
  %v0_24579 = load i32, i32* %eax.global-to-local, align 4
  %v1_24579 = load i32, i32* %edx.global-to-local, align 4
  %v2_24579 = inttoptr i32 %v1_24579 to i32*
  store i32 %v0_24579, i32* %v2_24579, align 4
  %v0_2457b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2457b = add i32 %v0_2457b, 12
  %v2_2457b = inttoptr i32 %v1_2457b to i32*
  %v3_2457b = load i32, i32* %v2_2457b, align 4
  store i32 %v3_2457b, i32* %eax.global-to-local, align 4
  %v0_2457e = load i32, i32* %edx.global-to-local, align 4
  %v1_2457e = add i32 %v0_2457e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2457e = inttoptr i32 %v1_2457e to i32*
  store i32 0, i32* %v2_2457e, align 4
  %v0_24585 = load i32, i32* %esi.global-to-local, align 4
  %v1_24585 = load i32, i32* %edx.global-to-local, align 4
  %v2_24585 = add i32 %v1_24585, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_24585 = inttoptr i32 %v2_24585 to i32*
  store i32 %v0_24585, i32* %v3_24585, align 4
  %v0_24588 = load i32, i32* %eax.global-to-local, align 4
  %v1_24588 = icmp eq i32 %v0_24588, 0
  br i1 %v1_24588, label %dec_label_pc_245a3, label %dec_label_pc_2458c

dec_label_pc_2458c:                               ; preds = %dec_label_pc_2456c
  %v0_2458c = load i32, i32* %edx.global-to-local, align 4
  %v2_24597 = call i32 @unknown_48a20(i32 %v0_24588, i32 %v0_2458c)
  store i32 %v2_24597, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_24597, i32* %v2_24572, align 4
  br label %dec_label_pc_245a3

dec_label_pc_245a3:                               ; preds = %dec_label_pc_2458c, %dec_label_pc_2456c
  %v0_245a3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_245a3 = add i32 %v0_245a3, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_245a3 = inttoptr i32 %v1_245a3 to i32*
  %v3_245a3 = load i32, i32* %v2_245a3, align 4
  store i32 %v3_245a3, i32* %esi.global-to-local, align 4
  %v1_245aa = icmp eq i32 %v3_245a3, 0
  %v1_245ac = icmp eq i1 %v1_245aa, false
  br i1 %v1_245ac, label %dec_label_pc_245b2, label %dec_label_pc_245ae

dec_label_pc_245ae:                               ; preds = %dec_label_pc_245a3
  %v0_245ae = call i32 @function_2461e()
  store i32 %v0_245ae, i32* %eax.global-to-local, align 4
  ret i32 %v0_245ae

dec_label_pc_245b2:                               ; preds = %dec_label_pc_245a3
  %v2_245b2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_245b2

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_245c2() local_unnamed_addr {
dec_label_pc_245c2:
  %eax.global-to-local = alloca i32, align 4
  %v0_245c2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_245c2
}

define i32 @function_2461e() local_unnamed_addr {
dec_label_pc_2461e:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_24622 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_24622 = icmp eq i32 %v1_24622, %tmp6
  %v1_2462d = icmp eq i1 %v3_24622, false
  br i1 %v1_2462d, label %dec_label_pc_24637, label %dec_label_pc_2462f

dec_label_pc_2462f:                               ; preds = %dec_label_pc_2461e
  ret i32 %tmp5

dec_label_pc_24637:                               ; preds = %dec_label_pc_2461e
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_2465a() local_unnamed_addr {
dec_label_pc_2465a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2465a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2465a
}

define i32 @_ZN5boost8signals26detail12signal0_implIvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS7_IFvRKNS0_10connectionEEEENS0_5mutexEE16invocation_stateC1ERKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot0IvS9_EESF_EEEEEERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24670:
  ret i32 %arg1
}

define i32 @function_246f0() local_unnamed_addr {
dec_label_pc_246f0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_246f0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_246f0 = add i32 %v0_246f0, 1977563419
  %v2_246f0 = inttoptr i32 %v1_246f0 to i32*
  %v3_246f0 = load i32, i32* %v2_246f0, align 4
  %v4_246f0 = add i32 %v3_246f0, -1
  store i32 %v4_246f0, i32* %v2_246f0, align 4
  %v0_246f6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_246f7 = add i32 %v0_246f6, add (i32 ptrtoint (i16** @global_var_4.3276 to i32), i32 40)
  %v2_246f7 = inttoptr i32 %v1_246f7 to i32*
  %v3_246f7 = load i32, i32* %v2_246f7, align 4
  store i32 %v3_246f7, i32* %eax.global-to-local, align 4
  %v3_246fb = load i32, i32* %v2_246f7, align 4
  store i32 %v3_246fb, i32* %ecx.global-to-local, align 4
  %v1_246ff = add i32 %v3_246f7, 12
  %v2_246ff = inttoptr i32 %v1_246ff to i32*
  store i32 0, i32* %v2_246ff, align 4
  %v0_24706 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_24706, i32* %edx.global-to-local, align 4
  %v1_24708 = add i32 %v0_24706, 16
  %v2_24708 = inttoptr i32 %v1_24708 to i32*
  store i32 0, i32* %v2_24708, align 4
  %v0_2470f = load i32, i32* %edx.global-to-local, align 4
  %v1_2470f = add i32 %v0_2470f, 8
  store i32 %v1_2470f, i32* %edx.global-to-local, align 4
  %v0_24712 = load i32, i32* %eax.global-to-local, align 4
  %v1_24712 = add i32 %v0_24712, 28
  %v2_24712 = inttoptr i32 %v1_24712 to i32*
  store i32 0, i32* %v2_24712, align 4
  %v0_24719 = load i32, i32* %eax.global-to-local, align 4
  %v1_24719 = add i32 %v0_24719, 12
  store i32 %v1_24719, i32* %eax.global-to-local, align 4
  %v1_2471c = load i32, i32* %ecx.global-to-local, align 4
  %v2_2471c = add i32 %v1_2471c, 20
  %v3_2471c = inttoptr i32 %v2_2471c to i32*
  store i32 %v1_24719, i32* %v3_2471c, align 4
  %v0_2471f = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_2471f, i32* %ebp.global-to-local, align 4
  %v1_24721 = load i32, i32* %ecx.global-to-local, align 4
  %v2_24721 = add i32 %v1_24721, 24
  %v3_24721 = inttoptr i32 %v2_24721 to i32*
  store i32 %v0_2471f, i32* %v3_24721, align 4
  %v0_24724 = load i32, i32* @esp, align 4
  %v1_24724 = add i32 %v0_24724, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_24724 = inttoptr i32 %v1_24724 to i32*
  %v3_24724 = load i32, i32* %v2_24724, align 4
  store i32 %v3_24724, i32* %ecx.global-to-local, align 4
  %v0_24728 = load i32, i32* %eax.global-to-local, align 4
  %v2_24728 = add i32 %v0_24724, 36
  %v3_24728 = inttoptr i32 %v2_24728 to i32*
  store i32 %v0_24728, i32* %v3_24728, align 4
  %v0_2472c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2472c = add i32 %v0_2472c, 16
  %v2_2472c = inttoptr i32 %v1_2472c to i32*
  %v3_2472c = load i32, i32* %v2_2472c, align 4
  store i32 %v3_2472c, i32* %eax.global-to-local, align 4
  %v1_2472f = icmp eq i32 %v3_2472c, 0
  br i1 %v1_2472f, label %dec_label_pc_24782, label %dec_label_pc_24733

dec_label_pc_24733:                               ; preds = %dec_label_pc_246f0
  %v0_24733 = load i32, i32* %ebp.global-to-local, align 4
  %v1_24733 = load i32, i32* @esp, align 4
  %v2_24733 = add i32 %v1_24733, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_24733 = inttoptr i32 %v2_24733 to i32*
  store i32 %v0_24733, i32* %v3_24733, align 4
  %v1_24737 = load i32, i32* @esp, align 4
  %v2_24737 = add i32 %v1_24737, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_24737 = inttoptr i32 %v2_24737 to i32*
  store i32 %v3_2472c, i32* %v3_24737, align 4
  %v0_2473b = load i32, i32* %edx.global-to-local, align 4
  %v1_2473b = load i32, i32* @esp, align 4
  %v2_2473b = inttoptr i32 %v1_2473b to i32*
  store i32 %v0_2473b, i32* %v2_2473b, align 4
  %v0_2473e = call i32 @unknown_48b80()
  store i32 %v0_2473e, i32* %eax.global-to-local, align 4
  %v0_24743 = load i32, i32* @esp, align 4
  %v1_24743 = add i32 %v0_24743, 40
  %v2_24743 = inttoptr i32 %v1_24743 to i32*
  %v3_24743 = load i32, i32* %v2_24743, align 4
  store i32 %v3_24743, i32* %edx.global-to-local, align 4
  store i32 %v0_2473e, i32* %ebp.global-to-local, align 4
  %v2_24749 = add i32 %v3_24743, 16
  %v3_24749 = inttoptr i32 %v2_24749 to i32*
  store i32 %v0_2473e, i32* %v3_24749, align 4
  %v0_24752.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_24752113 = add i32 %v0_24752.pre, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_24752114 = inttoptr i32 %v1_24752113 to i32*
  %v3_24752115 = load i32, i32* %v2_24752114, align 4
  store i32 %v3_24752115, i32* %edx.global-to-local, align 4
  %v1_24755116 = icmp eq i32 %v3_24752115, 0
  %v1_24757117 = icmp eq i1 %v1_24755116, false
  br i1 %v1_24757117, label %dec_label_pc_24750, label %dec_label_pc_24759

dec_label_pc_24750:                               ; preds = %dec_label_pc_24733, %dec_label_pc_24750
  %v3_24752118 = phi i32 [ %v3_24752, %dec_label_pc_24750 ], [ %v3_24752115, %dec_label_pc_24733 ]
  store i32 %v3_24752118, i32* %ebp.global-to-local, align 4
  %v1_24752 = add i32 %v3_24752118, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_24752 = inttoptr i32 %v1_24752 to i32*
  %v3_24752 = load i32, i32* %v2_24752, align 4
  store i32 %v3_24752, i32* %edx.global-to-local, align 4
  %v1_24755 = icmp eq i32 %v3_24752, 0
  %v1_24757 = icmp eq i1 %v1_24755, false
  br i1 %v1_24757, label %dec_label_pc_24750, label %dec_label_pc_24759

dec_label_pc_24759:                               ; preds = %dec_label_pc_24750, %dec_label_pc_24733
  %v0_2475d.lcssa = phi i32 [ %v0_24752.pre, %dec_label_pc_24733 ], [ %v3_24752118, %dec_label_pc_24750 ]
  %v0_24759 = load i32, i32* @esp, align 4
  %v1_24759 = add i32 %v0_24759, 40
  %v2_24759 = inttoptr i32 %v1_24759 to i32*
  %v3_24759 = load i32, i32* %v2_24759, align 4
  store i32 %v3_24759, i32* %ecx.global-to-local, align 4
  %v2_2475d = add i32 %v3_24759, 20
  %v3_2475d = inttoptr i32 %v2_2475d to i32*
  store i32 %v0_2475d.lcssa, i32* %v3_2475d, align 4
  %v0_2476a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_2476a105 = add i32 %v0_2476a.pre, 12
  %v2_2476a106 = inttoptr i32 %v1_2476a105 to i32*
  %v3_2476a107 = load i32, i32* %v2_2476a106, align 4
  store i32 %v3_2476a107, i32* %edx.global-to-local, align 4
  %v1_2476d108 = icmp eq i32 %v3_2476a107, 0
  %v1_2476f109 = icmp eq i1 %v1_2476d108, false
  br i1 %v1_2476f109, label %dec_label_pc_24768, label %dec_label_pc_24771

dec_label_pc_24768:                               ; preds = %dec_label_pc_24759, %dec_label_pc_24768
  %v3_2476a110 = phi i32 [ %v3_2476a, %dec_label_pc_24768 ], [ %v3_2476a107, %dec_label_pc_24759 ]
  store i32 %v3_2476a110, i32* %eax.global-to-local, align 4
  %v1_2476a = add i32 %v3_2476a110, 12
  %v2_2476a = inttoptr i32 %v1_2476a to i32*
  %v3_2476a = load i32, i32* %v2_2476a, align 4
  store i32 %v3_2476a, i32* %edx.global-to-local, align 4
  %v1_2476d = icmp eq i32 %v3_2476a, 0
  %v1_2476f = icmp eq i1 %v1_2476d, false
  br i1 %v1_2476f, label %dec_label_pc_24768, label %dec_label_pc_24771

dec_label_pc_24771:                               ; preds = %dec_label_pc_24768, %dec_label_pc_24759
  %v0_24779.lcssa = phi i32 [ %v0_2476a.pre, %dec_label_pc_24759 ], [ %v3_2476a110, %dec_label_pc_24768 ]
  %v0_24771 = load i32, i32* @esp, align 4
  %v1_24771 = add i32 %v0_24771, 40
  %v2_24771 = inttoptr i32 %v1_24771 to i32*
  %v3_24771 = load i32, i32* %v2_24771, align 4
  store i32 %v3_24771, i32* %edx.global-to-local, align 4
  %v1_24775 = add i32 %v0_24771, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_24775 = inttoptr i32 %v1_24775 to i32*
  %v3_24775 = load i32, i32* %v2_24775, align 4
  store i32 %v3_24775, i32* %ecx.global-to-local, align 4
  %v2_24779 = add i32 %v3_24771, 24
  %v3_24779 = inttoptr i32 %v2_24779 to i32*
  store i32 %v0_24779.lcssa, i32* %v3_24779, align 4
  %v0_2477c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2477c = add i32 %v0_2477c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2477c = inttoptr i32 %v1_2477c to i32*
  %v3_2477c = load i32, i32* %v2_2477c, align 4
  store i32 %v3_2477c, i32* %eax.global-to-local, align 4
  %v1_2477f = load i32, i32* %edx.global-to-local, align 4
  %v2_2477f = add i32 %v1_2477f, 28
  %v3_2477f = inttoptr i32 %v2_2477f to i32*
  store i32 %v3_2477c, i32* %v3_2477f, align 4
  br label %dec_label_pc_24782

dec_label_pc_24782:                               ; preds = %dec_label_pc_24771, %dec_label_pc_246f0
  %v0_24782 = load i32, i32* @esp, align 4
  %v1_24782 = add i32 %v0_24782, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_24782 = inttoptr i32 %v1_24782 to i32*
  %v3_24782 = load i32, i32* %v2_24782, align 4
  store i32 %v3_24782, i32* %edx.global-to-local, align 4
  %v1_24786 = add i32 %v0_24782, 40
  %v2_24786 = inttoptr i32 %v1_24786 to i32*
  %v3_24786 = load i32, i32* %v2_24786, align 4
  store i32 %v3_24786, i32* @eax, align 4
  %v1_2478a = add i32 %v3_24782, 20
  %v2_2478a = inttoptr i32 %v1_2478a to i32*
  %v3_2478a = load i32, i32* %v2_2478a, align 4
  store i32 %v3_2478a, i32* %edi.global-to-local, align 4
  %v1_2478d = add i32 %v3_24782, 12
  store i32 %v1_2478d, i32* %edx.global-to-local, align 4
  %v1_24790 = inttoptr i32 %v3_24786 to i32*
  %v2_24790 = load i32, i32* %v1_24790, align 4
  store i32 %v2_24790, i32* %esi.global-to-local, align 4
  %v2_24792 = add i32 %v0_24782, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_24792 = inttoptr i32 %v2_24792 to i32*
  store i32 %v1_2478d, i32* %v3_24792, align 4
  %v0_24796 = load i32, i32* %edi.global-to-local, align 4
  %v1_24796 = load i32, i32* %edx.global-to-local, align 4
  %v12_24796 = icmp eq i32 %v0_24796, %v1_24796
  br i1 %v12_24796, label %bb, label %dec_label_pc_2479a

bb:                                               ; preds = %dec_label_pc_24782
  %v1_24798 = call i32 @function_247f0()
  store i32 %v1_24798, i32* @eax, align 4
  br label %dec_label_pc_2479a

dec_label_pc_2479a:                               ; preds = %bb, %dec_label_pc_24782
  %v0_247a0 = load i32, i32* @esp, align 4
  %v1_247a0 = add i32 %v0_247a0, 36
  %v2_247a0 = inttoptr i32 %v1_247a0 to i32*
  %v3_247a0 = load i32, i32* %v2_247a0, align 4
  %v4_247a0 = load i32, i32* %ebp.global-to-local, align 4
  %v15_247a0 = icmp eq i32 %v3_247a0, %v4_247a0
  br i1 %v15_247a0, label %bb104, label %dec_label_pc_247aa

bb104:                                            ; preds = %dec_label_pc_2479a
  %v1_247a4 = call i32 @function_248df()
  store i32 %v1_247a4, i32* @eax, align 4
  %v0_247aa.pre = load i32, i32* @esp, align 4
  %v1_247ae.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_247aa

dec_label_pc_247aa:                               ; preds = %bb104, %dec_label_pc_2479a
  %v1_247ae = phi i32 [ %v1_247ae.pre, %bb104 ], [ %v4_247a0, %dec_label_pc_2479a ]
  %v0_247aa = phi i32 [ %v0_247aa.pre, %bb104 ], [ %v0_247a0, %dec_label_pc_2479a ]
  %v1_247aa = add i32 %v0_247aa, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_247aa = inttoptr i32 %v1_247aa to i32*
  %v3_247aa = load i32, i32* %v2_247aa, align 4
  %v4_247aa = load i32, i32* %edi.global-to-local, align 4
  %v15_247aa = icmp eq i32 %v3_247aa, %v4_247aa
  %v0_247ae = load i32, i32* %esi.global-to-local, align 4
  %v2_247ae = add i32 %v1_247ae, 28
  %v3_247ae = inttoptr i32 %v2_247ae to i32*
  store i32 %v0_247ae, i32* %v3_247ae, align 4
  %v0_247b1 = load i32, i32* @esp, align 4
  %v1_247b1 = add i32 %v0_247b1, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_247b1 = inttoptr i32 %v1_247b1 to i32*
  %v3_247b1 = load i32, i32* %v2_247b1, align 4
  store i32 %v3_247b1, i32* %ebx.global-to-local, align 4
  %v0_247ba.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v15_247aa, label %dec_label_pc_247ba, label %dec_label_pc_247b7

dec_label_pc_247b7:                               ; preds = %dec_label_pc_247aa
  %v1_247b7 = add i32 %v0_247ba.pre, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_247b7 = inttoptr i32 %v1_247b7 to i32*
  %v3_247b7 = load i32, i32* %v2_247b7, align 4
  store i32 %v3_247b7, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_247ba

dec_label_pc_247ba:                               ; preds = %dec_label_pc_247aa, %dec_label_pc_247b7
  %v2_247ba = inttoptr i32 %v0_247b1 to i32*
  store i32 %v0_247ba.pre, i32* %v2_247ba, align 4
  %v3_247ba = load i32, i32* @eax, align 4
  ret i32 %v3_247ba

; uselistorder directives
  uselistorder i32 %v4_247a0, { 1, 0 }
  uselistorder i32 %v3_2476a, { 1, 2, 0 }
  uselistorder i32 %v3_24752, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 12, 7, 8, 9, 10, 11 }
  uselistorder i32* %ebp.global-to-local, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_247ba, { 1, 0 }
  uselistorder label %dec_label_pc_24768, { 1, 0 }
  uselistorder label %dec_label_pc_24750, { 1, 0 }
}

define i32 @function_247c1() local_unnamed_addr {
dec_label_pc_247c1:
  %cf.global-to-local = alloca i1, align 1
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_247c1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_247c1 = add i32 %v0_247c1, 608472007
  %v2_247c1 = inttoptr i32 %v1_247c1 to i32*
  %v3_247c1 = load i32, i32* %v2_247c1, align 4
  %v4_247c1 = add i32 %v3_247c1, -1
  store i32 %v4_247c1, i32* %v2_247c1, align 4
  %v2_247c7 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_247c7 = load i32, i32* %ebx.global-to-local, align 4
  %v4_247c7 = lshr i32 %v3_247c7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_247c7 = trunc i32 %v4_247c7 to i8
  %v6_247c7 = and i8 %v5_247c7, %v2_247c7
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* %of.global-to-local, align 1
  %v8_247c7 = icmp slt i8 %v6_247c7, 0
  store i1 %v8_247c7, i1* %sf.global-to-local, align 1
  %v13_247c7 = inttoptr i32 %v3_247c7 to i8*
  store i8 %v6_247c7, i8* %v13_247c7, align 1
  %v0_247c9 = load i1, i1* %sf.global-to-local, align 1
  %v1_247c9 = load i1, i1* %of.global-to-local, align 1
  %v2_247c9 = icmp eq i1 %v0_247c9, %v1_247c9
  br i1 %v2_247c9, label %dec_label_pc_247c1.dec_label_pc_247cb_crit_edge, label %bb

dec_label_pc_247c1.dec_label_pc_247cb_crit_edge:  ; preds = %dec_label_pc_247c1
  %v0_247cb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_247cb

bb:                                               ; preds = %dec_label_pc_247c1
  %v3_247c9 = call i32 @function_247ef()
  br label %dec_label_pc_247cb

dec_label_pc_247cb:                               ; preds = %dec_label_pc_247c1.dec_label_pc_247cb_crit_edge, %bb
  %v32_247cb = phi i32 [ %v0_247cb.pre, %dec_label_pc_247c1.dec_label_pc_247cb_crit_edge ], [ %v3_247c9, %bb ]
  %v1_247cb = trunc i32 %v32_247cb to i8
  %v2_247cb = load i1, i1* %cf.global-to-local, align 1
  %v3_247cb = zext i1 %v2_247cb to i8
  %v4_247cb = sub i8 %v1_247cb, ptrtoint (i8* @global_var_74.3482 to i8)
  %v5_247cb = add i8 %v4_247cb, %v3_247cb
  %v17_247cb = icmp ult i8 %v1_247cb, 116
  %v18_247cb = or i1 %v2_247cb, %v17_247cb
  %v21_247cb = sub i8 %v4_247cb, %v3_247cb
  %tmp100 = xor i8 %v21_247cb, -128
  %v24_247cb = and i8 %tmp100, %v1_247cb
  %v25_247cb = icmp slt i8 %v24_247cb, 0
  store i1 %v18_247cb, i1* %cf.global-to-local, align 1
  store i1 %v25_247cb, i1* %of.global-to-local, align 1
  %v27_247cb = icmp slt i8 %v5_247cb, 0
  store i1 %v27_247cb, i1* %sf.global-to-local, align 1
  %v0_247ce = load i32, i32* %edi.global-to-local, align 4
  %v1_247ce = add i32 %v0_247ce, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_247ce = inttoptr i32 %v1_247ce to i32*
  %v3_247ce = load i32, i32* %v2_247ce, align 4
  %v0_247dc.pre = load i32, i32* %ebx.global-to-local, align 4
  %v2_247dc101 = sub i32 %v0_247dc.pre, %v3_247ce
  %v12_247dc102 = icmp eq i32 %v2_247dc101, 0
  %v1_247de103 = icmp eq i1 %v12_247dc102, false
  br i1 %v1_247de103, label %dec_label_pc_247d8.lr.ph, label %dec_label_pc_247e0

dec_label_pc_247d8.lr.ph:                         ; preds = %dec_label_pc_247cb
  %v0_247da.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_247d8

dec_label_pc_247d8:                               ; preds = %dec_label_pc_247d8.lr.ph, %dec_label_pc_247d8
  %v0_247da = phi i32 [ %v0_247da.pre, %dec_label_pc_247d8.lr.ph ], [ %v2_247da, %dec_label_pc_247d8 ]
  %v0_247d8104 = phi i32 [ %v0_247dc.pre, %dec_label_pc_247d8.lr.ph ], [ %v2_247d8, %dec_label_pc_247d8 ]
  %v1_247d8 = inttoptr i32 %v0_247d8104 to i32*
  %v2_247d8 = load i32, i32* %v1_247d8, align 4
  store i32 %v2_247d8, i32* %ebx.global-to-local, align 4
  %v1_247da = inttoptr i32 %v0_247da to i32*
  %v2_247da = load i32, i32* %v1_247da, align 4
  store i32 %v2_247da, i32* %esi.global-to-local, align 4
  %v2_247dc = sub i32 %v2_247d8, %v3_247ce
  %v12_247dc = icmp eq i32 %v2_247dc, 0
  %v1_247de = icmp eq i1 %v12_247dc, false
  br i1 %v1_247de, label %dec_label_pc_247d8, label %dec_label_pc_247e0

dec_label_pc_247e0:                               ; preds = %dec_label_pc_247d8, %dec_label_pc_247cb
  %v0_247d8.lcssa = phi i32 [ %v0_247dc.pre, %dec_label_pc_247cb ], [ %v2_247d8, %dec_label_pc_247d8 ]
  %v2_247dc.lcssa = phi i32 [ %v2_247dc101, %dec_label_pc_247cb ], [ %v2_247dc, %dec_label_pc_247d8 ]
  %v7_247dc = icmp ult i32 %v0_247d8.lcssa, %v3_247ce
  %v9_247dc = xor i32 %v2_247dc.lcssa, %v0_247d8.lcssa
  %v8_247dc = xor i32 %v0_247d8.lcssa, %v3_247ce
  %v10_247dc = and i32 %v9_247dc, %v8_247dc
  %v11_247dc = icmp slt i32 %v10_247dc, 0
  %v13_247dc = icmp slt i32 %v2_247dc.lcssa, 0
  store i1 %v7_247dc, i1* %cf.global-to-local, align 1
  store i1 %v11_247dc, i1* %of.global-to-local, align 1
  store i1 %v13_247dc, i1* %sf.global-to-local, align 1
  ret i32 %v3_247ce

; uselistorder directives
  uselistorder i32 %v0_247d8.lcssa, { 2, 1, 0 }
  uselistorder i32 %v2_247da, { 1, 0 }
  uselistorder i32 %v2_247d8, { 0, 1, 3, 2 }
  uselistorder i32 %v3_247ce, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_247d8, { 1, 0 }
  uselistorder label %dec_label_pc_247cb, { 1, 0 }
}

define i32 @function_247ef() local_unnamed_addr {
dec_label_pc_247ef:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_247f0() local_unnamed_addr {
dec_label_pc_247f0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_247f8 = add i32 %tmp2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_247f8 = inttoptr i32 %v1_247f8 to i32*
  store i32 0, i32* %v2_247f8, align 4
  %v0_247ff = load i32, i32* %eax.global-to-local, align 4
  %v1_247ff = load i32, i32* %edx.global-to-local, align 4
  %v2_247ff = inttoptr i32 %v1_247ff to i32*
  store i32 %v0_247ff, i32* %v2_247ff, align 4
  %v2_24801 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_24801
}

define i32 @function_2483c() local_unnamed_addr {
dec_label_pc_2483c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2483c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2483c
}

define i32 @function_24856(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_24856:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_24856 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24856 = add i32 %v0_24856, 1698440268
  %v2_24856 = inttoptr i32 %v1_24856 to i32*
  %v3_24856 = load i32, i32* %v2_24856, align 4
  %v4_24856 = add i32 %v3_24856, -1
  store i32 %v4_24856, i32* %v2_24856, align 4
  %v0_2485c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2485c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2485c = xor i32 %v1_2485c, %v0_2485c
  %v3_2485c = icmp eq i32 %v2_2485c, 0
  store i32 %v2_2485c, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v0_24866 = load i32, i32* @eax, align 4
  %v1_24866 = add i32 %v0_24866, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_24866 = inttoptr i32 %v1_24866 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_24866, align 4
  %v0_2486d = load i32, i32* @eax, align 4
  %v1_2486d = add i32 %v0_2486d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2486d = inttoptr i32 %v1_2486d to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_2486d, align 4
  %v0_24874 = load i32, i32* @eax, align 4
  %v1_24874 = inttoptr i32 %v0_24874 to i32*
  store i32 ptrtoint (%vtable_39548_type* @global_var_39548.3571 to i32), i32* %v1_24874, align 4
  %v0_2487a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2487a = load i32, i32* @eax, align 4
  %v2_2487a = add i32 %v1_2487a, 12
  %v3_2487a = inttoptr i32 %v2_2487a to i32*
  store i32 %v0_2487a, i32* %v3_2487a, align 4
  %v0_2487d = load i32, i32* @eax, align 4
  %v1_2487d = load i32, i32* %edx.global-to-local, align 4
  %v2_2487d = add i32 %v1_2487d, 12
  %v3_2487d = inttoptr i32 %v2_2487d to i32*
  store i32 %v0_2487d, i32* %v3_2487d, align 4
  %v1_24880 = icmp eq i1 %v3_2485c, false
  br i1 %v1_24880, label %bb, label %dec_label_pc_24856.dec_label_pc_24882_crit_edge

dec_label_pc_24856.dec_label_pc_24882_crit_edge:  ; preds = %dec_label_pc_24856
  %v0_24889.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_24882

bb:                                               ; preds = %dec_label_pc_24856
  %v2_24880 = call i32 @function_248ac()
  br label %dec_label_pc_24882

dec_label_pc_24882:                               ; preds = %dec_label_pc_24856.dec_label_pc_24882_crit_edge, %bb
  %v0_24889 = phi i32 [ %v0_24889.pre, %dec_label_pc_24856.dec_label_pc_24882_crit_edge ], [ %v2_24880, %bb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_24889

; uselistorder directives
  uselistorder label %dec_label_pc_24882, { 1, 0 }
}

define i32 @function_2488b() local_unnamed_addr {
dec_label_pc_2488b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2488b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2488b
}

define i32 @function_24898() local_unnamed_addr {
dec_label_pc_24898:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_248ac() local_unnamed_addr {
dec_label_pc_248ac:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_248c7() local_unnamed_addr {
dec_label_pc_248c7:
  %eax.global-to-local = alloca i32, align 4
  %v0_248c7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_248c7
}

define i32 @function_248c8() local_unnamed_addr {
dec_label_pc_248c8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_248df() local_unnamed_addr {
dec_label_pc_248df:
  %v3_248f7 = load i32, i32* @eax, align 4
  ret i32 %v3_248f7
}

define i32 @function_24903(i32 %arg1) local_unnamed_addr {
dec_label_pc_24903:
  %v1_2490c = call i32 @unknown_41e00(i32 %arg1)
  store i32 %v1_2490c, i32* @eax, align 4
  %v0_24911 = call i32 @function_24898()
  ret i32 %v0_24911
}

define i32 @function_2492d() local_unnamed_addr {
dec_label_pc_2492d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2492d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2492d
}

define i32 @function_24933() local_unnamed_addr {
dec_label_pc_24933:
  %v0_24933 = call i32 @function_248c8()
  ret i32 %v0_24933
}

define i32 @function_24936() local_unnamed_addr {
dec_label_pc_24936:
  %eax.global-to-local = alloca i32, align 4
  %v0_24936 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24936
}

define i32 @_ZN5boost8signals26detail12signal0_implIvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS7_IFvRKNS0_10connectionEEEENS0_5mutexEEC1ERKS4_RKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24950:
  %stack_var_-56 = alloca i32, align 4
  %v2_2496b = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_2496b
}

define i32 @function_249cd(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_249cd:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp97 = ptrtoint i32* %arg1 to i32
  %stack_var_32 = alloca i32, align 4
  %v0_249cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_249cd = add i32 %v0_249cd, 1086786680
  %v2_249cd = inttoptr i32 %v1_249cd to i32*
  %v3_249cd = load i32, i32* %v2_249cd, align 4
  %v4_249cd = add i32 %v3_249cd, -1
  store i32 %v4_249cd, i32* %v2_249cd, align 4
  %v0_249d3 = load i32, i32* %eax.global-to-local, align 4
  %v1_249d3 = trunc i32 %v0_249d3 to i8
  %v2_249d3 = add i8 %v1_249d3, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_249d3 = zext i8 %v2_249d3 to i32
  %v18_249d3 = and i32 %v0_249d3, -256
  %v19_249d3 = or i32 %v16_249d3, %v18_249d3
  store i32 %v19_249d3, i32* %eax.global-to-local, align 4
  %v1_249d5 = inttoptr i32 %v19_249d3 to i8*
  %v2_249d5 = load i8, i8* %v1_249d5, align 1
  %v5_249d5 = add i8 %v2_249d5, %v2_249d3
  store i8 %v5_249d5, i8* %v1_249d5, align 1
  %v0_249d7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_249d7 = lshr i32 %v0_249d7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_249d7 = load i32, i32* %eax.global-to-local, align 4
  %v5_249d7 = add i32 %v1_249d7, %v3_249d7
  %v20_249d7 = urem i32 %v5_249d7, 256
  %v22_249d7 = shl i32 %v20_249d7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_249d7 = and i32 %v0_249d7, -65281
  %v24_249d7 = or i32 %v22_249d7, %v23_249d7
  store i32 %v24_249d7, i32* %ebx.global-to-local, align 4
  %v1_249d9 = add i32 %v3_249d7, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_249d9 = trunc i32 %v1_249d9 to i8
  store i32 %v1_249d9, i32* %eax.global-to-local, align 4
  %v2_249da = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_249da = or i8 %v2_249da, %v11_249d9
  %v11_249da = load i32, i32* %ecx.global-to-local, align 4
  %v12_249da = inttoptr i32 %v11_249da to i8*
  store i8 %v5_249da, i8* %v12_249da, align 1
  %v0_249dc = load i32, i32* %eax.global-to-local, align 4
  %v1_249dc = inttoptr i32 %v0_249dc to i8*
  %v2_249dc = load i8, i8* %v1_249dc, align 1
  %v4_249dc = trunc i32 %v0_249dc to i8
  %v5_249dc = add i8 %v2_249dc, %v4_249dc
  store i8 %v5_249dc, i8* %v1_249dc, align 1
  %v0_249de = load i32, i32* %ebx.global-to-local, align 4
  %v1_249de = udiv i32 %v0_249de, 256
  %v3_249de = load i32, i32* %eax.global-to-local, align 4
  %v5_249de = add i32 %v1_249de, %v3_249de
  %v20_249de = and i32 %v5_249de, 255
  %v22_249de = mul nuw nsw i32 %v20_249de, 256
  %v23_249de = and i32 %v0_249de, -65281
  %v24_249de = or i32 %v22_249de, %v23_249de
  store i32 %v24_249de, i32* %ebx.global-to-local, align 4
  %v1_249e0 = add i32 %v3_249de, -100
  %v2_249e0 = inttoptr i32 %v1_249e0 to i8*
  %v3_249e0 = load i8, i8* %v2_249e0, align 1
  %v4_249e0 = load i32, i32* %edx.global-to-local, align 4
  %v5_249e0 = lshr i32 %v4_249e0, ptrtoint (i8** @global_var_8.3277 to i32)
  %v6_249e0 = trunc i32 %v5_249e0 to i8
  %v7_249e0 = add i8 %v6_249e0, %v3_249e0
  store i8 %v7_249e0, i8* %v2_249e0, align 1
  %v0_249e3 = load i32, i32* %eax.global-to-local, align 4
  %v2_249e3 = inttoptr i32 %v0_249e3 to i32*
  %v3_249e3 = load i32, i32* %v2_249e3, align 4
  %v4_249e3 = add i32 %v3_249e3, %v0_249e3
  %v1_249e5 = load i32, i32* @esi, align 4
  %v2_249e5 = add i32 %v1_249e5, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_249e5 = inttoptr i32 %v2_249e5 to i32*
  store i32 %v4_249e3, i32* %v3_249e5, align 4
  %v2_249f0 = ptrtoint i32* %stack_var_32 to i32
  store i32 %v2_249f0, i32* %eax.global-to-local, align 4
  %v2_249f7 = call i32 @unknown_45520(i32 %v2_249f0, i32 %arg2)
  store i32 %v2_249f7, i32* %eax.global-to-local, align 4
  %v1_24a00 = load i32, i32* %ebx.global-to-local, align 4
  %v12_24a00 = icmp eq i32 %tmp97, %v1_24a00
  %v1_24a02 = icmp eq i1 %v12_24a00, false
  br i1 %v1_24a02, label %dec_label_pc_24a0a, label %dec_label_pc_24a04

dec_label_pc_24a04:                               ; preds = %dec_label_pc_249cd
  %v0_24a04 = call i32 @function_24a23()
  store i32 %v0_24a04, i32* %eax.global-to-local, align 4
  ret i32 %v0_24a04

dec_label_pc_24a0a:                               ; preds = %dec_label_pc_249cd
  %v1_24a0c = add i32 %tmp97, 12
  store i32 %v1_24a0c, i32* @eax, align 4
  %v1_24a12 = call i32 @function_383b0(i32 %v1_24a0c)
  store i32 %v1_24a12, i32* %eax.global-to-local, align 4
  ret i32 %v1_24a12

; uselistorder directives
  uselistorder i32 %v3_249de, { 1, 0 }
  uselistorder i32 %v0_249de, { 1, 0 }
  uselistorder i32 %v3_249d7, { 1, 0 }
  uselistorder i32 %tmp97, { 1, 0 }
}

define i32 @function_24a23() local_unnamed_addr {
dec_label_pc_24a23:
  %v2_24a23 = load i32, i32* @esi, align 4
  store i32 %v2_24a23, i32* @eax, align 4
  %v1_24a25 = icmp eq i32 %v2_24a23, 0
  br i1 %v1_24a25, label %bb, label %dec_label_pc_24a29

bb:                                               ; preds = %dec_label_pc_24a23
  %v1_24a27 = call i32 @function_24a95()
  %v2_24a29.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_24a29

dec_label_pc_24a29:                               ; preds = %bb, %dec_label_pc_24a23
  %v2_24a29 = phi i32 [ %v2_24a29.pre, %bb ], [ %v2_24a23, %dec_label_pc_24a23 ]
  store i32 %v2_24a29, i32* @eax, align 4
  %v1_24a2b = icmp eq i32 %v2_24a29, 0
  br i1 %v1_24a2b, label %bb5, label %dec_label_pc_24a2f

bb5:                                              ; preds = %dec_label_pc_24a29
  %v1_24a2d = call i32 @function_24a71()
  store i32 %v1_24a2d, i32* @eax, align 4
  %v1_24a2f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_24a2f

dec_label_pc_24a2f:                               ; preds = %bb5, %dec_label_pc_24a29
  %v1_24a2f = phi i32 [ %v1_24a2f.pre, %bb5 ], [ %v2_24a29, %dec_label_pc_24a29 ]
  %v0_24a2f = phi i32 [ %v1_24a2d, %bb5 ], [ %v2_24a29, %dec_label_pc_24a29 ]
  %v2_24a2f = add i32 %v1_24a2f, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_24a2f = inttoptr i32 %v2_24a2f to i32*
  store i32 %v0_24a2f, i32* %v3_24a2f, align 4
  %v3_24a3d = load i32, i32* @eax, align 4
  ret i32 %v3_24a3d

; uselistorder directives
  uselistorder i32 %v2_24a29, { 1, 0, 3, 2 }
}

define i32 @function_24a44(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24a44:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_24a44 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24a44 = add i32 %v0_24a44, 1698440260
  %v2_24a44 = inttoptr i32 %v1_24a44 to i32*
  %v3_24a44 = load i32, i32* %v2_24a44, align 4
  %v4_24a44 = add i32 %v3_24a44, -1
  store i32 %v4_24a44, i32* %v2_24a44, align 4
  %v0_24a4a = load i32, i32* %eax.global-to-local, align 4
  %v1_24a4a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24a4a = xor i32 %v1_24a4a, %v0_24a4a
  %v3_24a4a = icmp eq i32 %v2_24a4a, 0
  store i32 %v2_24a4a, i32* @eax, align 4
  %v1_24a50 = icmp eq i1 %v3_24a4a, false
  br i1 %v1_24a50, label %bb, label %dec_label_pc_24a52

bb:                                               ; preds = %dec_label_pc_24a44
  %v2_24a50 = call i32 @function_24a6c()
  store i32 %v2_24a50, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_24a52

dec_label_pc_24a52:                               ; preds = %bb, %dec_label_pc_24a44
  %v0_24a59 = phi i32 [ %v2_24a50, %bb ], [ %v2_24a4a, %dec_label_pc_24a44 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_24a59
}

define i32 @function_24a5c() local_unnamed_addr {
dec_label_pc_24a5c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24a6c() local_unnamed_addr {
dec_label_pc_24a6c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24a71() local_unnamed_addr {
dec_label_pc_24a71:
  %v3_24a89 = load i32, i32* @eax, align 4
  ret i32 %v3_24a89
}

define i32 @function_24a95() local_unnamed_addr {
dec_label_pc_24a95:
  %v3_24aad = load i32, i32* @eax, align 4
  ret i32 %v3_24aad
}

define i32 @function_24ad8() local_unnamed_addr {
dec_label_pc_24ad8:
  %v0_24ad8 = call i32 @function_24a5c()
  ret i32 %v0_24ad8
}

define i32 @function_24ae1() local_unnamed_addr {
dec_label_pc_24ae1:
  %v0_24ae1 = call i32 @function_24a5c()
  ret i32 %v0_24ae1

; uselistorder directives
  uselistorder i32 ()* @function_24a5c, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_copyEPKSt13_Rb_tree_nodeISL_EPSV_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24af0:
  ret i32 0
}

define i32 @function_24b1a(i32* %arg1) local_unnamed_addr {
dec_label_pc_24b1a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_24b1a = load i32, i32* %ebx.global-to-local, align 4
  %v1_24b1a = add i32 %v0_24b1a, 1149890808
  %v2_24b1a = inttoptr i32 %v1_24b1a to i32*
  %v3_24b1a = load i32, i32* %v2_24b1a, align 4
  %v4_24b1a = add i32 %v3_24b1a, 1
  store i32 %v4_24b1a, i32* %v2_24b1a, align 4
  %v0_24b20 = load i32, i32* %eax.global-to-local, align 4
  %v1_24b20 = trunc i32 %v0_24b20 to i8
  %v2_24b20 = and i8 %v1_24b20, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_24b20 = icmp eq i8 %v2_24b20, 0
  %v8_24b20 = zext i8 %v2_24b20 to i32
  %v10_24b20 = and i32 %v0_24b20, -256
  %v11_24b20 = or i32 %v8_24b20, %v10_24b20
  store i32 %v11_24b20, i32* %eax.global-to-local, align 4
  br i1 %v3_24b20, label %dec_label_pc_24b4c, label %dec_label_pc_24b24

dec_label_pc_24b24:                               ; preds = %dec_label_pc_24b1a
  %v0_24b24 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24b24 = add i32 %v0_24b24, 16
  %v2_24b24 = inttoptr i32 %v1_24b24 to i32*
  %v3_24b24 = load i32, i32* %v2_24b24, align 4
  store i32 %v3_24b24, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_24b2b = add i32 %tmp102, 16
  %v3_24b2b = inttoptr i32 %v2_24b2b to i32*
  store i32 %v3_24b24, i32* %v3_24b2b, align 4
  %v0_24b2e = load i32, i32* %edx.global-to-local, align 4
  %v1_24b2e = add i32 %v0_24b2e, 20
  %v2_24b2e = inttoptr i32 %v1_24b2e to i8*
  store i8 0, i8* %v2_24b2e, align 1
  %v0_24b32 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24b32 = add i32 %v0_24b32, 20
  %v2_24b32 = inttoptr i32 %v1_24b32 to i8*
  %v3_24b32 = load i8, i8* %v2_24b32, align 1
  %v10_24b32 = icmp eq i8 %v3_24b32, 0
  br i1 %v10_24b32, label %dec_label_pc_24b42, label %dec_label_pc_24b38

dec_label_pc_24b38:                               ; preds = %dec_label_pc_24b24
  %v1_24b38 = add i32 %v0_24b32, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_24b38 = inttoptr i32 %v1_24b38 to i32*
  %v3_24b38 = load i32, i32* %v2_24b38, align 4
  store i32 %v3_24b38, i32* %eax.global-to-local, align 4
  %v0_24b3b = load i32, i32* %edx.global-to-local, align 4
  %v1_24b3b = add i32 %v0_24b3b, 20
  %v2_24b3b = inttoptr i32 %v1_24b3b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_24b3b, align 1
  %v0_24b3f = load i32, i32* %eax.global-to-local, align 4
  %v1_24b3f = load i32, i32* %edx.global-to-local, align 4
  %v2_24b3f = add i32 %v1_24b3f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_24b3f = inttoptr i32 %v2_24b3f to i32*
  store i32 %v0_24b3f, i32* %v3_24b3f, align 4
  %v0_24b42.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_24b42

dec_label_pc_24b42:                               ; preds = %dec_label_pc_24b38, %dec_label_pc_24b24
  %v0_24b42 = phi i32 [ %v0_24b42.pre, %dec_label_pc_24b38 ], [ %v0_24b32, %dec_label_pc_24b24 ]
  %v1_24b42 = add i32 %v0_24b42, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24b42 = inttoptr i32 %v1_24b42 to i32*
  %v3_24b42 = load i32, i32* %v2_24b42, align 4
  store i32 %v3_24b42, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_24b49 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_24b49 = inttoptr i32 %v2_24b49 to i32*
  store i32 %v3_24b42, i32* %v3_24b49, align 4
  br label %dec_label_pc_24b4c

dec_label_pc_24b4c:                               ; preds = %dec_label_pc_24b42, %dec_label_pc_24b1a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_24b50 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_24b50, i32* %eax.global-to-local, align 4
  %v1_24b52 = add i32 %tmp102, 12
  %v2_24b52 = inttoptr i32 %v1_24b52 to i32*
  store i32 0, i32* %v2_24b52, align 4
  %v0_24b59 = load i32, i32* %eax.global-to-local, align 4
  %v1_24b59 = load i32, i32* %edx.global-to-local, align 4
  %v2_24b59 = inttoptr i32 %v1_24b59 to i32*
  store i32 %v0_24b59, i32* %v2_24b59, align 4
  %v0_24b5b = load i32, i32* %ebx.global-to-local, align 4
  %v1_24b5b = add i32 %v0_24b5b, 12
  %v2_24b5b = inttoptr i32 %v1_24b5b to i32*
  %v3_24b5b = load i32, i32* %v2_24b5b, align 4
  store i32 %v3_24b5b, i32* %eax.global-to-local, align 4
  %v0_24b5e = load i32, i32* %edx.global-to-local, align 4
  %v1_24b5e = add i32 %v0_24b5e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_24b5e = inttoptr i32 %v1_24b5e to i32*
  store i32 0, i32* %v2_24b5e, align 4
  %v0_24b65 = load i32, i32* %esi.global-to-local, align 4
  %v1_24b65 = load i32, i32* %edx.global-to-local, align 4
  %v2_24b65 = add i32 %v1_24b65, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_24b65 = inttoptr i32 %v2_24b65 to i32*
  store i32 %v0_24b65, i32* %v3_24b65, align 4
  %v0_24b68 = load i32, i32* %eax.global-to-local, align 4
  %v1_24b68 = icmp eq i32 %v0_24b68, 0
  br i1 %v1_24b68, label %dec_label_pc_24b83, label %dec_label_pc_24b6c

dec_label_pc_24b6c:                               ; preds = %dec_label_pc_24b4c
  %v0_24b6c = load i32, i32* %edx.global-to-local, align 4
  %v2_24b77 = call i32 @unknown_495e0(i32 %v0_24b68, i32 %v0_24b6c)
  store i32 %v2_24b77, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_24b77, i32* %v2_24b52, align 4
  br label %dec_label_pc_24b83

dec_label_pc_24b83:                               ; preds = %dec_label_pc_24b6c, %dec_label_pc_24b4c
  %v0_24b83 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24b83 = add i32 %v0_24b83, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_24b83 = inttoptr i32 %v1_24b83 to i32*
  %v3_24b83 = load i32, i32* %v2_24b83, align 4
  store i32 %v3_24b83, i32* %esi.global-to-local, align 4
  %v1_24b8a = icmp eq i32 %v3_24b83, 0
  %v1_24b8c = icmp eq i1 %v1_24b8a, false
  br i1 %v1_24b8c, label %dec_label_pc_24b92, label %dec_label_pc_24b8e

dec_label_pc_24b8e:                               ; preds = %dec_label_pc_24b83
  %v0_24b8e = call i32 @function_24bfe()
  store i32 %v0_24b8e, i32* %eax.global-to-local, align 4
  ret i32 %v0_24b8e

dec_label_pc_24b92:                               ; preds = %dec_label_pc_24b83
  %v2_24b92 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_24b92

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
}

define i32 @function_24ba2() local_unnamed_addr {
dec_label_pc_24ba2:
  %eax.global-to-local = alloca i32, align 4
  %v0_24ba2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24ba2
}

define i32 @function_24bfe() local_unnamed_addr {
dec_label_pc_24bfe:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_24c02 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_24c02 = icmp eq i32 %v1_24c02, %tmp6
  %v1_24c0d = icmp eq i1 %v3_24c02, false
  br i1 %v1_24c0d, label %dec_label_pc_24c17, label %dec_label_pc_24c0f

dec_label_pc_24c0f:                               ; preds = %dec_label_pc_24bfe
  ret i32 %tmp5

dec_label_pc_24c17:                               ; preds = %dec_label_pc_24bfe
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_24c3a() local_unnamed_addr {
dec_label_pc_24c3a:
  %eax.global-to-local = alloca i32, align 4
  %v0_24c3a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24c3a
}

define i32 @_ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE16invocation_stateC1ERKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24c50:
  ret i32 %arg1
}

define i32 @function_24cd0() local_unnamed_addr {
dec_label_pc_24cd0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_24cd0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24cd0 = add i32 %v0_24cd0, 1977563419
  %v2_24cd0 = inttoptr i32 %v1_24cd0 to i32*
  %v3_24cd0 = load i32, i32* %v2_24cd0, align 4
  %v4_24cd0 = add i32 %v3_24cd0, -1
  store i32 %v4_24cd0, i32* %v2_24cd0, align 4
  %v0_24cd6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_24cd7 = add i32 %v0_24cd6, add (i32 ptrtoint (i16** @global_var_4.3276 to i32), i32 40)
  %v2_24cd7 = inttoptr i32 %v1_24cd7 to i32*
  %v3_24cd7 = load i32, i32* %v2_24cd7, align 4
  store i32 %v3_24cd7, i32* %eax.global-to-local, align 4
  %v3_24cdb = load i32, i32* %v2_24cd7, align 4
  store i32 %v3_24cdb, i32* %ecx.global-to-local, align 4
  %v1_24cdf = add i32 %v3_24cd7, 12
  %v2_24cdf = inttoptr i32 %v1_24cdf to i32*
  store i32 0, i32* %v2_24cdf, align 4
  %v0_24ce6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_24ce6, i32* %edx.global-to-local, align 4
  %v1_24ce8 = add i32 %v0_24ce6, 16
  %v2_24ce8 = inttoptr i32 %v1_24ce8 to i32*
  store i32 0, i32* %v2_24ce8, align 4
  %v0_24cef = load i32, i32* %edx.global-to-local, align 4
  %v1_24cef = add i32 %v0_24cef, 8
  store i32 %v1_24cef, i32* %edx.global-to-local, align 4
  %v0_24cf2 = load i32, i32* %eax.global-to-local, align 4
  %v1_24cf2 = add i32 %v0_24cf2, 28
  %v2_24cf2 = inttoptr i32 %v1_24cf2 to i32*
  store i32 0, i32* %v2_24cf2, align 4
  %v0_24cf9 = load i32, i32* %eax.global-to-local, align 4
  %v1_24cf9 = add i32 %v0_24cf9, 12
  store i32 %v1_24cf9, i32* %eax.global-to-local, align 4
  %v1_24cfc = load i32, i32* %ecx.global-to-local, align 4
  %v2_24cfc = add i32 %v1_24cfc, 20
  %v3_24cfc = inttoptr i32 %v2_24cfc to i32*
  store i32 %v1_24cf9, i32* %v3_24cfc, align 4
  %v0_24cff = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_24cff, i32* %ebp.global-to-local, align 4
  %v1_24d01 = load i32, i32* %ecx.global-to-local, align 4
  %v2_24d01 = add i32 %v1_24d01, 24
  %v3_24d01 = inttoptr i32 %v2_24d01 to i32*
  store i32 %v0_24cff, i32* %v3_24d01, align 4
  %v0_24d04 = load i32, i32* @esp, align 4
  %v1_24d04 = add i32 %v0_24d04, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_24d04 = inttoptr i32 %v1_24d04 to i32*
  %v3_24d04 = load i32, i32* %v2_24d04, align 4
  store i32 %v3_24d04, i32* %ecx.global-to-local, align 4
  %v0_24d08 = load i32, i32* %eax.global-to-local, align 4
  %v2_24d08 = add i32 %v0_24d04, 36
  %v3_24d08 = inttoptr i32 %v2_24d08 to i32*
  store i32 %v0_24d08, i32* %v3_24d08, align 4
  %v0_24d0c = load i32, i32* %ecx.global-to-local, align 4
  %v1_24d0c = add i32 %v0_24d0c, 16
  %v2_24d0c = inttoptr i32 %v1_24d0c to i32*
  %v3_24d0c = load i32, i32* %v2_24d0c, align 4
  store i32 %v3_24d0c, i32* %eax.global-to-local, align 4
  %v1_24d0f = icmp eq i32 %v3_24d0c, 0
  br i1 %v1_24d0f, label %dec_label_pc_24d62, label %dec_label_pc_24d13

dec_label_pc_24d13:                               ; preds = %dec_label_pc_24cd0
  %v0_24d13 = load i32, i32* %ebp.global-to-local, align 4
  %v1_24d13 = load i32, i32* @esp, align 4
  %v2_24d13 = add i32 %v1_24d13, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_24d13 = inttoptr i32 %v2_24d13 to i32*
  store i32 %v0_24d13, i32* %v3_24d13, align 4
  %v1_24d17 = load i32, i32* @esp, align 4
  %v2_24d17 = add i32 %v1_24d17, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_24d17 = inttoptr i32 %v2_24d17 to i32*
  store i32 %v3_24d0c, i32* %v3_24d17, align 4
  %v0_24d1b = load i32, i32* %edx.global-to-local, align 4
  %v1_24d1b = load i32, i32* @esp, align 4
  %v2_24d1b = inttoptr i32 %v1_24d1b to i32*
  store i32 %v0_24d1b, i32* %v2_24d1b, align 4
  %v0_24d1e = call i32 @unknown_49740()
  store i32 %v0_24d1e, i32* %eax.global-to-local, align 4
  %v0_24d23 = load i32, i32* @esp, align 4
  %v1_24d23 = add i32 %v0_24d23, 40
  %v2_24d23 = inttoptr i32 %v1_24d23 to i32*
  %v3_24d23 = load i32, i32* %v2_24d23, align 4
  store i32 %v3_24d23, i32* %edx.global-to-local, align 4
  store i32 %v0_24d1e, i32* %ebp.global-to-local, align 4
  %v2_24d29 = add i32 %v3_24d23, 16
  %v3_24d29 = inttoptr i32 %v2_24d29 to i32*
  store i32 %v0_24d1e, i32* %v3_24d29, align 4
  %v0_24d32.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_24d32113 = add i32 %v0_24d32.pre, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_24d32114 = inttoptr i32 %v1_24d32113 to i32*
  %v3_24d32115 = load i32, i32* %v2_24d32114, align 4
  store i32 %v3_24d32115, i32* %edx.global-to-local, align 4
  %v1_24d35116 = icmp eq i32 %v3_24d32115, 0
  %v1_24d37117 = icmp eq i1 %v1_24d35116, false
  br i1 %v1_24d37117, label %dec_label_pc_24d30, label %dec_label_pc_24d39

dec_label_pc_24d30:                               ; preds = %dec_label_pc_24d13, %dec_label_pc_24d30
  %v3_24d32118 = phi i32 [ %v3_24d32, %dec_label_pc_24d30 ], [ %v3_24d32115, %dec_label_pc_24d13 ]
  store i32 %v3_24d32118, i32* %ebp.global-to-local, align 4
  %v1_24d32 = add i32 %v3_24d32118, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_24d32 = inttoptr i32 %v1_24d32 to i32*
  %v3_24d32 = load i32, i32* %v2_24d32, align 4
  store i32 %v3_24d32, i32* %edx.global-to-local, align 4
  %v1_24d35 = icmp eq i32 %v3_24d32, 0
  %v1_24d37 = icmp eq i1 %v1_24d35, false
  br i1 %v1_24d37, label %dec_label_pc_24d30, label %dec_label_pc_24d39

dec_label_pc_24d39:                               ; preds = %dec_label_pc_24d30, %dec_label_pc_24d13
  %v0_24d3d.lcssa = phi i32 [ %v0_24d32.pre, %dec_label_pc_24d13 ], [ %v3_24d32118, %dec_label_pc_24d30 ]
  %v0_24d39 = load i32, i32* @esp, align 4
  %v1_24d39 = add i32 %v0_24d39, 40
  %v2_24d39 = inttoptr i32 %v1_24d39 to i32*
  %v3_24d39 = load i32, i32* %v2_24d39, align 4
  store i32 %v3_24d39, i32* %ecx.global-to-local, align 4
  %v2_24d3d = add i32 %v3_24d39, 20
  %v3_24d3d = inttoptr i32 %v2_24d3d to i32*
  store i32 %v0_24d3d.lcssa, i32* %v3_24d3d, align 4
  %v0_24d4a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_24d4a105 = add i32 %v0_24d4a.pre, 12
  %v2_24d4a106 = inttoptr i32 %v1_24d4a105 to i32*
  %v3_24d4a107 = load i32, i32* %v2_24d4a106, align 4
  store i32 %v3_24d4a107, i32* %edx.global-to-local, align 4
  %v1_24d4d108 = icmp eq i32 %v3_24d4a107, 0
  %v1_24d4f109 = icmp eq i1 %v1_24d4d108, false
  br i1 %v1_24d4f109, label %dec_label_pc_24d48, label %dec_label_pc_24d51

dec_label_pc_24d48:                               ; preds = %dec_label_pc_24d39, %dec_label_pc_24d48
  %v3_24d4a110 = phi i32 [ %v3_24d4a, %dec_label_pc_24d48 ], [ %v3_24d4a107, %dec_label_pc_24d39 ]
  store i32 %v3_24d4a110, i32* %eax.global-to-local, align 4
  %v1_24d4a = add i32 %v3_24d4a110, 12
  %v2_24d4a = inttoptr i32 %v1_24d4a to i32*
  %v3_24d4a = load i32, i32* %v2_24d4a, align 4
  store i32 %v3_24d4a, i32* %edx.global-to-local, align 4
  %v1_24d4d = icmp eq i32 %v3_24d4a, 0
  %v1_24d4f = icmp eq i1 %v1_24d4d, false
  br i1 %v1_24d4f, label %dec_label_pc_24d48, label %dec_label_pc_24d51

dec_label_pc_24d51:                               ; preds = %dec_label_pc_24d48, %dec_label_pc_24d39
  %v0_24d59.lcssa = phi i32 [ %v0_24d4a.pre, %dec_label_pc_24d39 ], [ %v3_24d4a110, %dec_label_pc_24d48 ]
  %v0_24d51 = load i32, i32* @esp, align 4
  %v1_24d51 = add i32 %v0_24d51, 40
  %v2_24d51 = inttoptr i32 %v1_24d51 to i32*
  %v3_24d51 = load i32, i32* %v2_24d51, align 4
  store i32 %v3_24d51, i32* %edx.global-to-local, align 4
  %v1_24d55 = add i32 %v0_24d51, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_24d55 = inttoptr i32 %v1_24d55 to i32*
  %v3_24d55 = load i32, i32* %v2_24d55, align 4
  store i32 %v3_24d55, i32* %ecx.global-to-local, align 4
  %v2_24d59 = add i32 %v3_24d51, 24
  %v3_24d59 = inttoptr i32 %v2_24d59 to i32*
  store i32 %v0_24d59.lcssa, i32* %v3_24d59, align 4
  %v0_24d5c = load i32, i32* %ecx.global-to-local, align 4
  %v1_24d5c = add i32 %v0_24d5c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24d5c = inttoptr i32 %v1_24d5c to i32*
  %v3_24d5c = load i32, i32* %v2_24d5c, align 4
  store i32 %v3_24d5c, i32* %eax.global-to-local, align 4
  %v1_24d5f = load i32, i32* %edx.global-to-local, align 4
  %v2_24d5f = add i32 %v1_24d5f, 28
  %v3_24d5f = inttoptr i32 %v2_24d5f to i32*
  store i32 %v3_24d5c, i32* %v3_24d5f, align 4
  br label %dec_label_pc_24d62

dec_label_pc_24d62:                               ; preds = %dec_label_pc_24d51, %dec_label_pc_24cd0
  %v0_24d62 = load i32, i32* @esp, align 4
  %v1_24d62 = add i32 %v0_24d62, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_24d62 = inttoptr i32 %v1_24d62 to i32*
  %v3_24d62 = load i32, i32* %v2_24d62, align 4
  store i32 %v3_24d62, i32* %edx.global-to-local, align 4
  %v1_24d66 = add i32 %v0_24d62, 40
  %v2_24d66 = inttoptr i32 %v1_24d66 to i32*
  %v3_24d66 = load i32, i32* %v2_24d66, align 4
  store i32 %v3_24d66, i32* @eax, align 4
  %v1_24d6a = add i32 %v3_24d62, 20
  %v2_24d6a = inttoptr i32 %v1_24d6a to i32*
  %v3_24d6a = load i32, i32* %v2_24d6a, align 4
  store i32 %v3_24d6a, i32* %edi.global-to-local, align 4
  %v1_24d6d = add i32 %v3_24d62, 12
  store i32 %v1_24d6d, i32* %edx.global-to-local, align 4
  %v1_24d70 = inttoptr i32 %v3_24d66 to i32*
  %v2_24d70 = load i32, i32* %v1_24d70, align 4
  store i32 %v2_24d70, i32* %esi.global-to-local, align 4
  %v2_24d72 = add i32 %v0_24d62, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_24d72 = inttoptr i32 %v2_24d72 to i32*
  store i32 %v1_24d6d, i32* %v3_24d72, align 4
  %v0_24d76 = load i32, i32* %edi.global-to-local, align 4
  %v1_24d76 = load i32, i32* %edx.global-to-local, align 4
  %v12_24d76 = icmp eq i32 %v0_24d76, %v1_24d76
  br i1 %v12_24d76, label %bb, label %dec_label_pc_24d7a

bb:                                               ; preds = %dec_label_pc_24d62
  %v1_24d78 = call i32 @function_24dd0()
  store i32 %v1_24d78, i32* @eax, align 4
  br label %dec_label_pc_24d7a

dec_label_pc_24d7a:                               ; preds = %bb, %dec_label_pc_24d62
  %v0_24d80 = load i32, i32* @esp, align 4
  %v1_24d80 = add i32 %v0_24d80, 36
  %v2_24d80 = inttoptr i32 %v1_24d80 to i32*
  %v3_24d80 = load i32, i32* %v2_24d80, align 4
  %v4_24d80 = load i32, i32* %ebp.global-to-local, align 4
  %v15_24d80 = icmp eq i32 %v3_24d80, %v4_24d80
  br i1 %v15_24d80, label %bb104, label %dec_label_pc_24d8a

bb104:                                            ; preds = %dec_label_pc_24d7a
  %v1_24d84 = call i32 @function_24ebf()
  store i32 %v1_24d84, i32* @eax, align 4
  %v0_24d8a.pre = load i32, i32* @esp, align 4
  %v1_24d8e.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_24d8a

dec_label_pc_24d8a:                               ; preds = %bb104, %dec_label_pc_24d7a
  %v1_24d8e = phi i32 [ %v1_24d8e.pre, %bb104 ], [ %v4_24d80, %dec_label_pc_24d7a ]
  %v0_24d8a = phi i32 [ %v0_24d8a.pre, %bb104 ], [ %v0_24d80, %dec_label_pc_24d7a ]
  %v1_24d8a = add i32 %v0_24d8a, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24d8a = inttoptr i32 %v1_24d8a to i32*
  %v3_24d8a = load i32, i32* %v2_24d8a, align 4
  %v4_24d8a = load i32, i32* %edi.global-to-local, align 4
  %v15_24d8a = icmp eq i32 %v3_24d8a, %v4_24d8a
  %v0_24d8e = load i32, i32* %esi.global-to-local, align 4
  %v2_24d8e = add i32 %v1_24d8e, 28
  %v3_24d8e = inttoptr i32 %v2_24d8e to i32*
  store i32 %v0_24d8e, i32* %v3_24d8e, align 4
  %v0_24d91 = load i32, i32* @esp, align 4
  %v1_24d91 = add i32 %v0_24d91, ptrtoint (i32* @global_var_20.3279 to i32)
  %v2_24d91 = inttoptr i32 %v1_24d91 to i32*
  %v3_24d91 = load i32, i32* %v2_24d91, align 4
  store i32 %v3_24d91, i32* %ebx.global-to-local, align 4
  %v0_24d9a.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v15_24d8a, label %dec_label_pc_24d9a, label %dec_label_pc_24d97

dec_label_pc_24d97:                               ; preds = %dec_label_pc_24d8a
  %v1_24d97 = add i32 %v0_24d9a.pre, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24d97 = inttoptr i32 %v1_24d97 to i32*
  %v3_24d97 = load i32, i32* %v2_24d97, align 4
  store i32 %v3_24d97, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_24d9a

dec_label_pc_24d9a:                               ; preds = %dec_label_pc_24d8a, %dec_label_pc_24d97
  %v2_24d9a = inttoptr i32 %v0_24d91 to i32*
  store i32 %v0_24d9a.pre, i32* %v2_24d9a, align 4
  %v3_24d9a = load i32, i32* @eax, align 4
  ret i32 %v3_24d9a

; uselistorder directives
  uselistorder i32 %v4_24d80, { 1, 0 }
  uselistorder i32 %v3_24d4a, { 1, 2, 0 }
  uselistorder i32 %v3_24d32, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 12, 6, 13, 7, 8, 9, 10, 11 }
  uselistorder i32* %ebp.global-to-local, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_24d9a, { 1, 0 }
  uselistorder label %dec_label_pc_24d48, { 1, 0 }
  uselistorder label %dec_label_pc_24d30, { 1, 0 }
}

define i32 @function_24da1(i32 %arg1) local_unnamed_addr {
dec_label_pc_24da1:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %sf.global-to-local = alloca i1, align 1
  %v0_24da1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_24da1 = add i32 %v0_24da1, 608472007
  %v2_24da1 = inttoptr i32 %v1_24da1 to i32*
  %v3_24da1 = load i32, i32* %v2_24da1, align 4
  %v4_24da1 = add i32 %v3_24da1, -1
  store i32 %v4_24da1, i32* %v2_24da1, align 4
  %v2_24da7 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v3_24da7 = load i32, i32* %ebx.global-to-local, align 4
  %v4_24da7 = lshr i32 %v3_24da7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_24da7 = trunc i32 %v4_24da7 to i8
  %v6_24da7 = and i8 %v5_24da7, %v2_24da7
  store i1 false, i1* %cf.global-to-local, align 1
  store i1 false, i1* %of.global-to-local, align 1
  %v8_24da7 = icmp slt i8 %v6_24da7, 0
  store i1 %v8_24da7, i1* %sf.global-to-local, align 1
  %v13_24da7 = inttoptr i32 %v3_24da7 to i8*
  store i8 %v6_24da7, i8* %v13_24da7, align 1
  %v0_24da9 = load i1, i1* %sf.global-to-local, align 1
  %v1_24da9 = load i1, i1* %of.global-to-local, align 1
  %v2_24da9 = icmp eq i1 %v0_24da9, %v1_24da9
  %v0_24dab = load i32, i32* %eax.global-to-local, align 4
  br i1 %v2_24da9, label %dec_label_pc_24dab, label %dec_label_pc_24dcf

dec_label_pc_24dab:                               ; preds = %dec_label_pc_24da1
  %v1_24dab = trunc i32 %v0_24dab to i8
  %v2_24dab = load i1, i1* %cf.global-to-local, align 1
  %v3_24dab = zext i1 %v2_24dab to i8
  %v4_24dab = sub i8 %v1_24dab, ptrtoint (i8* @global_var_74.3482 to i8)
  %v5_24dab = add i8 %v3_24dab, %v4_24dab
  %v17_24dab = icmp ult i8 %v1_24dab, 116
  %v18_24dab = or i1 %v17_24dab, %v2_24dab
  %v21_24dab = sub i8 %v4_24dab, %v3_24dab
  %tmp100 = xor i8 %v21_24dab, -128
  %v24_24dab = and i8 %tmp100, %v1_24dab
  %v25_24dab = icmp slt i8 %v24_24dab, 0
  store i1 %v18_24dab, i1* %cf.global-to-local, align 1
  store i1 %v25_24dab, i1* %of.global-to-local, align 1
  %v27_24dab = icmp slt i8 %v5_24dab, 0
  store i1 %v27_24dab, i1* %sf.global-to-local, align 1
  %v31_24dab = zext i8 %v5_24dab to i32
  %v33_24dab = and i32 %v0_24dab, -256
  %v34_24dab = or i32 %v31_24dab, %v33_24dab
  store i32 %v34_24dab, i32* %eax.global-to-local, align 4
  %v0_24dae = load i32, i32* %edi.global-to-local, align 4
  %v1_24dae = add i32 %v0_24dae, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_24dae = inttoptr i32 %v1_24dae to i32*
  %v3_24dae = load i32, i32* %v2_24dae, align 4
  store i32 %v3_24dae, i32* %eax.global-to-local, align 4
  %v0_24dbc.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_24dbc101 = icmp eq i32 %v0_24dbc.pre, %v3_24dae
  %v1_24dbe102 = icmp eq i1 %v12_24dbc101, false
  br i1 %v1_24dbe102, label %dec_label_pc_24db8.lr.ph, label %dec_label_pc_24dc0

dec_label_pc_24db8.lr.ph:                         ; preds = %dec_label_pc_24dab
  %v0_24dba.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_24db8

dec_label_pc_24db8:                               ; preds = %dec_label_pc_24db8.lr.ph, %dec_label_pc_24db8
  %v0_24dba = phi i32 [ %v0_24dba.pre, %dec_label_pc_24db8.lr.ph ], [ %v2_24dba, %dec_label_pc_24db8 ]
  %v0_24db8103 = phi i32 [ %v0_24dbc.pre, %dec_label_pc_24db8.lr.ph ], [ %v2_24db8, %dec_label_pc_24db8 ]
  %v1_24db8 = inttoptr i32 %v0_24db8103 to i32*
  %v2_24db8 = load i32, i32* %v1_24db8, align 4
  store i32 %v2_24db8, i32* %ebx.global-to-local, align 4
  %v1_24dba = inttoptr i32 %v0_24dba to i32*
  %v2_24dba = load i32, i32* %v1_24dba, align 4
  store i32 %v2_24dba, i32* %esi.global-to-local, align 4
  %v12_24dbc = icmp eq i32 %v2_24db8, %v3_24dae
  %v1_24dbe = icmp eq i1 %v12_24dbc, false
  br i1 %v1_24dbe, label %dec_label_pc_24db8, label %dec_label_pc_24dc0

dec_label_pc_24dc0:                               ; preds = %dec_label_pc_24db8, %dec_label_pc_24dab
  %v5_24dc8 = sub i32 %v0_24dae, %arg1
  %v10_24dc8 = icmp ult i32 %v0_24dae, %arg1
  %v11_24dc8 = xor i32 %v0_24dae, %arg1
  %v12_24dc8 = xor i32 %v5_24dc8, %v0_24dae
  %v13_24dc8 = and i32 %v12_24dc8, %v11_24dc8
  %v14_24dc8 = icmp slt i32 %v13_24dc8, 0
  store i1 %v10_24dc8, i1* %cf.global-to-local, align 1
  store i1 %v14_24dc8, i1* %of.global-to-local, align 1
  %v16_24dc8 = icmp slt i32 %v5_24dc8, 0
  store i1 %v16_24dc8, i1* %sf.global-to-local, align 1
  ret i32 %v3_24dae

dec_label_pc_24dcf:                               ; preds = %dec_label_pc_24da1
  ret i32 %v0_24dab

; uselistorder directives
  uselistorder i32 %v5_24dc8, { 1, 0 }
  uselistorder i32 %v2_24dba, { 1, 0 }
  uselistorder i32 %v2_24db8, { 0, 2, 1 }
  uselistorder i32 %v3_24dae, { 2, 1, 0, 3 }
  uselistorder i32 %v0_24dae, { 0, 1, 3, 2, 4 }
  uselistorder i8 %v4_24dab, { 1, 0 }
  uselistorder i8 %v3_24dab, { 1, 0 }
  uselistorder i32 %v0_24dab, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1 }
  uselistorder i8 ptrtoint (i8* @global_var_74.3482 to i8), { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_24db8, { 1, 0 }
}

define i32 @function_24dd0() local_unnamed_addr {
dec_label_pc_24dd0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v1_24dd8 = add i32 %tmp2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_24dd8 = inttoptr i32 %v1_24dd8 to i32*
  store i32 0, i32* %v2_24dd8, align 4
  %v0_24ddf = load i32, i32* %eax.global-to-local, align 4
  %v1_24ddf = load i32, i32* %edx.global-to-local, align 4
  %v2_24ddf = inttoptr i32 %v1_24ddf to i32*
  store i32 %v0_24ddf, i32* %v2_24ddf, align 4
  %v2_24de1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_24de1
}

define i32 @function_24e1c() local_unnamed_addr {
dec_label_pc_24e1c:
  %eax.global-to-local = alloca i32, align 4
  %v0_24e1c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24e1c
}

define i32 @function_24e36(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_24e36:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_24e36 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24e36 = add i32 %v0_24e36, 1698440268
  %v2_24e36 = inttoptr i32 %v1_24e36 to i32*
  %v3_24e36 = load i32, i32* %v2_24e36, align 4
  %v4_24e36 = add i32 %v3_24e36, -1
  store i32 %v4_24e36, i32* %v2_24e36, align 4
  %v0_24e3c = load i32, i32* %ecx.global-to-local, align 4
  %v1_24e3c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24e3c = xor i32 %v1_24e3c, %v0_24e3c
  %v3_24e3c = icmp eq i32 %v2_24e3c, 0
  store i32 %v2_24e3c, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v0_24e46 = load i32, i32* @eax, align 4
  %v1_24e46 = add i32 %v0_24e46, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_24e46 = inttoptr i32 %v1_24e46 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_24e46, align 4
  %v0_24e4d = load i32, i32* @eax, align 4
  %v1_24e4d = add i32 %v0_24e4d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_24e4d = inttoptr i32 %v1_24e4d to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_24e4d, align 4
  %v0_24e54 = load i32, i32* @eax, align 4
  %v1_24e54 = inttoptr i32 %v0_24e54 to i32*
  store i32 ptrtoint (%vtable_39548_type* @global_var_39548.3571 to i32), i32* %v1_24e54, align 4
  %v0_24e5a = load i32, i32* %ebx.global-to-local, align 4
  %v1_24e5a = load i32, i32* @eax, align 4
  %v2_24e5a = add i32 %v1_24e5a, 12
  %v3_24e5a = inttoptr i32 %v2_24e5a to i32*
  store i32 %v0_24e5a, i32* %v3_24e5a, align 4
  %v0_24e5d = load i32, i32* @eax, align 4
  %v1_24e5d = load i32, i32* %edx.global-to-local, align 4
  %v2_24e5d = add i32 %v1_24e5d, 12
  %v3_24e5d = inttoptr i32 %v2_24e5d to i32*
  store i32 %v0_24e5d, i32* %v3_24e5d, align 4
  %v1_24e60 = icmp eq i1 %v3_24e3c, false
  br i1 %v1_24e60, label %bb, label %dec_label_pc_24e36.dec_label_pc_24e62_crit_edge

dec_label_pc_24e36.dec_label_pc_24e62_crit_edge:  ; preds = %dec_label_pc_24e36
  %v0_24e69.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_24e62

bb:                                               ; preds = %dec_label_pc_24e36
  %v2_24e60 = call i32 @function_24e8c()
  br label %dec_label_pc_24e62

dec_label_pc_24e62:                               ; preds = %dec_label_pc_24e36.dec_label_pc_24e62_crit_edge, %bb
  %v0_24e69 = phi i32 [ %v0_24e69.pre, %dec_label_pc_24e36.dec_label_pc_24e62_crit_edge ], [ %v2_24e60, %bb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_24e69

; uselistorder directives
  uselistorder label %dec_label_pc_24e62, { 1, 0 }
}

define i32 @function_24e6b() local_unnamed_addr {
dec_label_pc_24e6b:
  %eax.global-to-local = alloca i32, align 4
  %v0_24e6b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24e6b
}

define i32 @function_24e78() local_unnamed_addr {
dec_label_pc_24e78:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24e8c() local_unnamed_addr {
dec_label_pc_24e8c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24ea7() local_unnamed_addr {
dec_label_pc_24ea7:
  %eax.global-to-local = alloca i32, align 4
  %v0_24ea7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24ea7
}

define i32 @function_24ea8() local_unnamed_addr {
dec_label_pc_24ea8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24ebf() local_unnamed_addr {
dec_label_pc_24ebf:
  %v3_24ed7 = load i32, i32* @eax, align 4
  ret i32 %v3_24ed7
}

define i32 @function_24ee3(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ee3:
  %v1_24eec = call i32 @unknown_42440(i32 %arg1)
  store i32 %v1_24eec, i32* @eax, align 4
  %v0_24ef1 = call i32 @function_24e78()
  ret i32 %v0_24ef1
}

define i32 @function_24f0d() local_unnamed_addr {
dec_label_pc_24f0d:
  %eax.global-to-local = alloca i32, align 4
  %v0_24f0d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24f0d
}

define i32 @function_24f13() local_unnamed_addr {
dec_label_pc_24f13:
  %v0_24f13 = call i32 @function_24ea8()
  ret i32 %v0_24f13
}

define i32 @function_24f16() local_unnamed_addr {
dec_label_pc_24f16:
  %eax.global-to-local = alloca i32, align 4
  %v0_24f16 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24f16
}

define i32 @_ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEEC1ERKS4_RKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24f30:
  %stack_var_-56 = alloca i32, align 4
  %v2_24f4b = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_24f4b
}

define i32 @function_24fad(i32* %arg1) local_unnamed_addr {
dec_label_pc_24fad:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp97 = ptrtoint i32* %arg1 to i32
  %stack_var_33 = alloca i32, align 4
  %v0_24fad = load i32, i32* %ecx.global-to-local, align 4
  %v1_24fad = add i32 %v0_24fad, 1086786680
  %v2_24fad = inttoptr i32 %v1_24fad to i32*
  %v3_24fad = load i32, i32* %v2_24fad, align 4
  %v4_24fad = add i32 %v3_24fad, -1
  store i32 %v4_24fad, i32* %v2_24fad, align 4
  %v0_24fb3 = load i32, i32* %eax.global-to-local, align 4
  %v1_24fb3 = trunc i32 %v0_24fb3 to i8
  %v2_24fb3 = add i8 %v1_24fb3, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_24fb3 = zext i8 %v2_24fb3 to i32
  %v18_24fb3 = and i32 %v0_24fb3, -256
  %v19_24fb3 = or i32 %v16_24fb3, %v18_24fb3
  store i32 %v19_24fb3, i32* %eax.global-to-local, align 4
  %v1_24fb5 = inttoptr i32 %v19_24fb3 to i8*
  %v2_24fb5 = load i8, i8* %v1_24fb5, align 1
  %v5_24fb5 = add i8 %v2_24fb5, %v2_24fb3
  store i8 %v5_24fb5, i8* %v1_24fb5, align 1
  %v0_24fb7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24fb7 = lshr i32 %v0_24fb7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_24fb7 = load i32, i32* %eax.global-to-local, align 4
  %v5_24fb7 = add i32 %v1_24fb7, %v3_24fb7
  %v20_24fb7 = urem i32 %v5_24fb7, 256
  %v22_24fb7 = shl i32 %v20_24fb7, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_24fb7 = and i32 %v0_24fb7, -65281
  %v24_24fb7 = or i32 %v22_24fb7, %v23_24fb7
  store i32 %v24_24fb7, i32* %ebx.global-to-local, align 4
  %v1_24fb9 = add i32 %v3_24fb7, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_24fb9 = trunc i32 %v1_24fb9 to i8
  store i32 %v1_24fb9, i32* %eax.global-to-local, align 4
  %v2_24fba = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_24fba = or i8 %v2_24fba, %v11_24fb9
  %v11_24fba = load i32, i32* %ecx.global-to-local, align 4
  %v12_24fba = inttoptr i32 %v11_24fba to i8*
  store i8 %v5_24fba, i8* %v12_24fba, align 1
  %v0_24fbc = load i32, i32* %eax.global-to-local, align 4
  %v1_24fbc = inttoptr i32 %v0_24fbc to i8*
  %v2_24fbc = load i8, i8* %v1_24fbc, align 1
  %v4_24fbc = trunc i32 %v0_24fbc to i8
  %v5_24fbc = add i8 %v2_24fbc, %v4_24fbc
  store i8 %v5_24fbc, i8* %v1_24fbc, align 1
  %v0_24fbe = load i32, i32* %ebx.global-to-local, align 4
  %v1_24fbe = udiv i32 %v0_24fbe, 256
  %v3_24fbe = load i32, i32* %eax.global-to-local, align 4
  %v5_24fbe = add i32 %v1_24fbe, %v3_24fbe
  %v20_24fbe = and i32 %v5_24fbe, 255
  %v22_24fbe = mul nuw nsw i32 %v20_24fbe, 256
  %v23_24fbe = and i32 %v0_24fbe, -65281
  %v24_24fbe = or i32 %v22_24fbe, %v23_24fbe
  store i32 %v24_24fbe, i32* %ebx.global-to-local, align 4
  %v1_24fc0 = add i32 %v3_24fbe, -1996487780
  %v2_24fc0 = inttoptr i32 %v1_24fc0 to i8*
  %v3_24fc0 = load i8, i8* %v2_24fc0, align 1
  %v4_24fc0 = load i32, i32* %edx.global-to-local, align 4
  %v5_24fc0 = lshr i32 %v4_24fc0, ptrtoint (i8** @global_var_8.3277 to i32)
  %v6_24fc0 = trunc i32 %v5_24fc0 to i8
  %v7_24fc0 = add i8 %v6_24fc0, %v3_24fc0
  store i8 %v7_24fc0, i8* %v2_24fc0, align 1
  %v0_24fc6 = load i32, i32* %esi.global-to-local, align 4
  %v1_24fc6 = add i32 %v0_24fc6, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_24fc6, i32* @esi, align 4
  %v0_24fc7 = load i32, i32* %eax.global-to-local, align 4
  %v2_24fc7 = add i32 %v0_24fc7, 11
  %v2_24fca = and i32 %v2_24fc7, 40
  %v10_24fca = and i32 %v0_24fc7, -256
  %v11_24fca = or i32 %v2_24fca, %v10_24fca
  %v2_24fd0 = ptrtoint i32* %stack_var_33 to i32
  store i32 %v2_24fd0, i32* %eax.global-to-local, align 4
  %v2_24fd7 = call i32 @unknown_45ce0(i32 %v2_24fd0, i32 %v11_24fca)
  store i32 %v2_24fd7, i32* %eax.global-to-local, align 4
  %v1_24fe0 = load i32, i32* %ebx.global-to-local, align 4
  %v12_24fe0 = icmp eq i32 %tmp97, %v1_24fe0
  %v1_24fe2 = icmp eq i1 %v12_24fe0, false
  br i1 %v1_24fe2, label %dec_label_pc_24fea, label %dec_label_pc_24fe4

dec_label_pc_24fe4:                               ; preds = %dec_label_pc_24fad
  %v0_24fe4 = call i32 @function_25003()
  store i32 %v0_24fe4, i32* %eax.global-to-local, align 4
  ret i32 %v0_24fe4

dec_label_pc_24fea:                               ; preds = %dec_label_pc_24fad
  %v1_24fec = add i32 %tmp97, 12
  store i32 %v1_24fec, i32* @eax, align 4
  %v1_24ff2 = call i32 @function_38990(i32 %v1_24fec)
  store i32 %v1_24ff2, i32* %eax.global-to-local, align 4
  ret i32 %v1_24ff2

; uselistorder directives
  uselistorder i32 %v0_24fc7, { 1, 0 }
  uselistorder i32 %v3_24fbe, { 1, 0 }
  uselistorder i32 %v0_24fbe, { 1, 0 }
  uselistorder i32 %v3_24fb7, { 1, 0 }
  uselistorder i32 %tmp97, { 1, 0 }
}

define i32 @function_25003() local_unnamed_addr {
dec_label_pc_25003:
  %v2_25003 = load i32, i32* @esi, align 4
  store i32 %v2_25003, i32* @eax, align 4
  %v1_25005 = icmp eq i32 %v2_25003, 0
  br i1 %v1_25005, label %bb, label %dec_label_pc_25009

bb:                                               ; preds = %dec_label_pc_25003
  %v1_25007 = call i32 @function_25075()
  %v2_25009.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_25009

dec_label_pc_25009:                               ; preds = %bb, %dec_label_pc_25003
  %v2_25009 = phi i32 [ %v2_25009.pre, %bb ], [ %v2_25003, %dec_label_pc_25003 ]
  store i32 %v2_25009, i32* @eax, align 4
  %v1_2500b = icmp eq i32 %v2_25009, 0
  br i1 %v1_2500b, label %bb5, label %dec_label_pc_2500f

bb5:                                              ; preds = %dec_label_pc_25009
  %v1_2500d = call i32 @function_25051()
  store i32 %v1_2500d, i32* @eax, align 4
  %v1_2500f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_2500f

dec_label_pc_2500f:                               ; preds = %bb5, %dec_label_pc_25009
  %v1_2500f = phi i32 [ %v1_2500f.pre, %bb5 ], [ %v2_25009, %dec_label_pc_25009 ]
  %v0_2500f = phi i32 [ %v1_2500d, %bb5 ], [ %v2_25009, %dec_label_pc_25009 ]
  %v2_2500f = add i32 %v1_2500f, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_2500f = inttoptr i32 %v2_2500f to i32*
  store i32 %v0_2500f, i32* %v3_2500f, align 4
  %v3_2501d = load i32, i32* @eax, align 4
  ret i32 %v3_2501d

; uselistorder directives
  uselistorder i32 %v2_25009, { 1, 0, 3, 2 }
}

define i32 @function_25024(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25024:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_25024 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25024 = add i32 %v0_25024, 1698440260
  %v2_25024 = inttoptr i32 %v1_25024 to i32*
  %v3_25024 = load i32, i32* %v2_25024, align 4
  %v4_25024 = add i32 %v3_25024, -1
  store i32 %v4_25024, i32* %v2_25024, align 4
  %v0_2502a = load i32, i32* %eax.global-to-local, align 4
  %v1_2502a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2502a = xor i32 %v1_2502a, %v0_2502a
  %v3_2502a = icmp eq i32 %v2_2502a, 0
  store i32 %v2_2502a, i32* @eax, align 4
  %v1_25030 = icmp eq i1 %v3_2502a, false
  br i1 %v1_25030, label %bb, label %dec_label_pc_25032

bb:                                               ; preds = %dec_label_pc_25024
  %v2_25030 = call i32 @function_2504c()
  store i32 %v2_25030, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_25032

dec_label_pc_25032:                               ; preds = %bb, %dec_label_pc_25024
  %v0_25039 = phi i32 [ %v2_25030, %bb ], [ %v2_2502a, %dec_label_pc_25024 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_25039
}

define i32 @function_2503c() local_unnamed_addr {
dec_label_pc_2503c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2504c() local_unnamed_addr {
dec_label_pc_2504c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25051() local_unnamed_addr {
dec_label_pc_25051:
  %v3_25069 = load i32, i32* @eax, align 4
  ret i32 %v3_25069
}

define i32 @function_25075() local_unnamed_addr {
dec_label_pc_25075:
  %v3_2508d = load i32, i32* @eax, align 4
  ret i32 %v3_2508d
}

define i32 @function_250ad() local_unnamed_addr {
dec_label_pc_250ad:
  %ecx.global-to-local = alloca i32, align 4
  %v0_250ad = load i32, i32* %ecx.global-to-local, align 4
  %v1_250ad = add i32 %v0_250ad, 607947206
  %v2_250ad = inttoptr i32 %v1_250ad to i32*
  %v3_250ad = load i32, i32* %v2_250ad, align 4
  %v4_250ad = add i32 %v3_250ad, -1
  store i32 %v4_250ad, i32* %v2_250ad, align 4
  %v0_250b8 = call i32 @function_2503c()
  ret i32 %v0_250b8
}

define i32 @function_250c1() local_unnamed_addr {
dec_label_pc_250c1:
  %v0_250c1 = call i32 @function_2503c()
  ret i32 %v0_250c1

; uselistorder directives
  uselistorder i32 ()* @function_2503c, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE7_M_copyEPKSt13_Rb_tree_nodeISP_EPSZ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_250d0:
  ret i32 0
}

define i32 @function_250fa(i32* %arg1) local_unnamed_addr {
dec_label_pc_250fa:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_250fa = load i32, i32* %ebx.global-to-local, align 4
  %v1_250fa = add i32 %v0_250fa, 1149890808
  %v2_250fa = inttoptr i32 %v1_250fa to i32*
  %v3_250fa = load i32, i32* %v2_250fa, align 4
  %v4_250fa = add i32 %v3_250fa, 1
  store i32 %v4_250fa, i32* %v2_250fa, align 4
  %v0_25100 = load i32, i32* %eax.global-to-local, align 4
  %v1_25100 = trunc i32 %v0_25100 to i8
  %v2_25100 = and i8 %v1_25100, ptrtoint (i32* @global_var_1c.3271 to i8)
  %v3_25100 = icmp eq i8 %v2_25100, 0
  %v8_25100 = zext i8 %v2_25100 to i32
  %v10_25100 = and i32 %v0_25100, -256
  %v11_25100 = or i32 %v8_25100, %v10_25100
  store i32 %v11_25100, i32* %eax.global-to-local, align 4
  br i1 %v3_25100, label %dec_label_pc_2512c, label %dec_label_pc_25104

dec_label_pc_25104:                               ; preds = %dec_label_pc_250fa
  %v0_25104 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25104 = add i32 %v0_25104, 16
  %v2_25104 = inttoptr i32 %v1_25104 to i32*
  %v3_25104 = load i32, i32* %v2_25104, align 4
  store i32 %v3_25104, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_2510b = add i32 %tmp102, 16
  %v3_2510b = inttoptr i32 %v2_2510b to i32*
  store i32 %v3_25104, i32* %v3_2510b, align 4
  %v0_2510e = load i32, i32* %edx.global-to-local, align 4
  %v1_2510e = add i32 %v0_2510e, 20
  %v2_2510e = inttoptr i32 %v1_2510e to i8*
  store i8 0, i8* %v2_2510e, align 1
  %v0_25112 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25112 = add i32 %v0_25112, 20
  %v2_25112 = inttoptr i32 %v1_25112 to i8*
  %v3_25112 = load i8, i8* %v2_25112, align 1
  %v10_25112 = icmp eq i8 %v3_25112, 0
  br i1 %v10_25112, label %dec_label_pc_25122, label %dec_label_pc_25118

dec_label_pc_25118:                               ; preds = %dec_label_pc_25104
  %v1_25118 = add i32 %v0_25112, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_25118 = inttoptr i32 %v1_25118 to i32*
  %v3_25118 = load i32, i32* %v2_25118, align 4
  store i32 %v3_25118, i32* %eax.global-to-local, align 4
  %v0_2511b = load i32, i32* %edx.global-to-local, align 4
  %v1_2511b = add i32 %v0_2511b, 20
  %v2_2511b = inttoptr i32 %v1_2511b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_2511b, align 1
  %v0_2511f = load i32, i32* %eax.global-to-local, align 4
  %v1_2511f = load i32, i32* %edx.global-to-local, align 4
  %v2_2511f = add i32 %v1_2511f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_2511f = inttoptr i32 %v2_2511f to i32*
  store i32 %v0_2511f, i32* %v3_2511f, align 4
  %v0_25122.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_25122

dec_label_pc_25122:                               ; preds = %dec_label_pc_25118, %dec_label_pc_25104
  %v0_25122 = phi i32 [ %v0_25122.pre, %dec_label_pc_25118 ], [ %v0_25112, %dec_label_pc_25104 ]
  %v1_25122 = add i32 %v0_25122, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_25122 = inttoptr i32 %v1_25122 to i32*
  %v3_25122 = load i32, i32* %v2_25122, align 4
  store i32 %v3_25122, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_25129 = add i32 %tmp102, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_25129 = inttoptr i32 %v2_25129 to i32*
  store i32 %v3_25122, i32* %v3_25129, align 4
  br label %dec_label_pc_2512c

dec_label_pc_2512c:                               ; preds = %dec_label_pc_25122, %dec_label_pc_250fa
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_25130 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_25130, i32* %eax.global-to-local, align 4
  %v1_25132 = add i32 %tmp102, 12
  %v2_25132 = inttoptr i32 %v1_25132 to i32*
  store i32 0, i32* %v2_25132, align 4
  %v0_25139 = load i32, i32* %eax.global-to-local, align 4
  %v1_25139 = load i32, i32* %edx.global-to-local, align 4
  %v2_25139 = inttoptr i32 %v1_25139 to i32*
  store i32 %v0_25139, i32* %v2_25139, align 4
  %v0_2513b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2513b = add i32 %v0_2513b, 12
  %v2_2513b = inttoptr i32 %v1_2513b to i32*
  %v3_2513b = load i32, i32* %v2_2513b, align 4
  store i32 %v3_2513b, i32* %eax.global-to-local, align 4
  %v0_2513e = load i32, i32* %edx.global-to-local, align 4
  %v1_2513e = add i32 %v0_2513e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2513e = inttoptr i32 %v1_2513e to i32*
  store i32 0, i32* %v2_2513e, align 4
  %v0_25145 = load i32, i32* %esi.global-to-local, align 4
  %v1_25145 = load i32, i32* %edx.global-to-local, align 4
  %v2_25145 = add i32 %v1_25145, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_25145 = inttoptr i32 %v2_25145 to i32*
  store i32 %v0_25145, i32* %v3_25145, align 4
  %v0_25148 = load i32, i32* %eax.global-to-local, align 4
  %v1_25148 = icmp eq i32 %v0_25148, 0
  br i1 %v1_25148, label %dec_label_pc_25163, label %dec_label_pc_2514c

dec_label_pc_2514c:                               ; preds = %dec_label_pc_2512c
  %v0_2514c = load i32, i32* %edx.global-to-local, align 4
  %v2_25157 = call i32 @unknown_4a1a0(i32 %v0_25148, i32 %v0_2514c)
  store i32 %v2_25157, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_25157, i32* %v2_25132, align 4
  br label %dec_label_pc_25163

dec_label_pc_25163:                               ; preds = %dec_label_pc_2514c, %dec_label_pc_2512c
  %v0_25163 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25163 = add i32 %v0_25163, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_25163 = inttoptr i32 %v1_25163 to i32*
  %v3_25163 = load i32, i32* %v2_25163, align 4
  store i32 %v3_25163, i32* %esi.global-to-local, align 4
  %v1_2516a = icmp eq i32 %v3_25163, 0
  %v1_2516c = icmp eq i1 %v1_2516a, false
  br i1 %v1_2516c, label %dec_label_pc_25172, label %dec_label_pc_2516e

dec_label_pc_2516e:                               ; preds = %dec_label_pc_25163
  %v0_2516e = call i32 @function_251de()
  store i32 %v0_2516e, i32* %eax.global-to-local, align 4
  ret i32 %v0_2516e

dec_label_pc_25172:                               ; preds = %dec_label_pc_25163
  %v2_25172 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_25172

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 5, 1, 2, 0, 3, 4, 6 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i8 ptrtoint (i32* @global_var_1c.3271 to i8), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
}

define i32 @function_25182() local_unnamed_addr {
dec_label_pc_25182:
  %eax.global-to-local = alloca i32, align 4
  %v0_25182 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25182
}

define i32 @function_251de() local_unnamed_addr {
dec_label_pc_251de:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_251e2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_251e2 = icmp eq i32 %v1_251e2, %tmp6
  %v1_251ed = icmp eq i1 %v3_251e2, false
  br i1 %v1_251ed, label %dec_label_pc_251f7, label %dec_label_pc_251ef

dec_label_pc_251ef:                               ; preds = %dec_label_pc_251de
  ret i32 %tmp5

dec_label_pc_251f7:                               ; preds = %dec_label_pc_251de
  ret i32 %tmp5

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_2521a() local_unnamed_addr {
dec_label_pc_2521a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2521a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2521a
}

define i32 @_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE16invocation_stateC1ERKNS1_12grouped_listIiSA_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEERKS8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25230:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_-92 = alloca i32, align 4
  store i32 36, i32* %stack_var_-92, align 4
  store i32 %tmp103, i32* %arg1, align 4
  %v2_25266 = add i32 %tmp103, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_25266 = inttoptr i32 %v2_25266 to i32*
  store i32 %tmp103, i32* %v3_25266, align 4
  %v1_2526d = inttoptr i32 %arg2 to i32*
  %v2_2526d = load i32, i32* %v1_2526d, align 4
  %v12_2526f = icmp eq i32 %v2_2526d, %arg2
  br i1 %v12_2526f, label %bb, label %dec_label_pc_25273

bb:                                               ; preds = %dec_label_pc_25230
  %v1_25271 = load i32, i32* %stack_var_-92, align 4
  %v2_25271 = call i32 @function_252b7(i32 %v1_25271)
  br label %dec_label_pc_25273

dec_label_pc_25273:                               ; preds = %bb, %dec_label_pc_25230
  %v0_25277 = phi i32 [ %v2_25271, %bb ], [ %arg2, %dec_label_pc_25230 ]
  ret i32 %v0_25277

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_252b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_252b7:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_252bf = add i32 %arg1, 12
  %v2_252bf = inttoptr i32 %v1_252bf to i32*
  store i32 0, i32* %v2_252bf, align 4
  %v0_252c6 = load i32, i32* %eax.global-to-local, align 4
  %v1_252c8 = add i32 %v0_252c6, 16
  %v2_252c8 = inttoptr i32 %v1_252c8 to i32*
  store i32 0, i32* %v2_252c8, align 4
  %v3_252c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_252c8
}

define i32 @function_252c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_252c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_252d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_252d0:
  %v0_252d0 = load i32, i32* @eax, align 4
  ret i32 %v0_252d0
}

define i32 @function_252d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_252d3:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_252d3 = load i32, i32* %eax.global-to-local, align 4
  %v1_252d3 = add i32 %v0_252d3, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_252d3 = trunc i32 %v1_252d3 to i8
  %v2_252d4 = load i1, i1* %cf.global-to-local, align 1
  %v3_252d4 = zext i1 %v2_252d4 to i8
  %v4_252d4 = add i8 %v3_252d4, %v11_252d3
  %v29_252d4 = zext i8 %v4_252d4 to i32
  %v31_252d4 = and i32 %v1_252d3, -256
  %v32_252d4 = or i32 %v29_252d4, %v31_252d4
  store i32 %v32_252d4, i32* %eax.global-to-local, align 4
  %v1_252d6 = inttoptr i32 %v32_252d4 to i8*
  %v2_252d6 = load i8, i8* %v1_252d6, align 1
  %v5_252d6 = add i8 %v2_252d6, %v4_252d4
  %v10_252d6 = icmp ult i8 %v5_252d6, %v2_252d6
  store i1 %v10_252d6, i1* %cf.global-to-local, align 1
  store i8 %v5_252d6, i8* %v1_252d6, align 1
  %v0_252d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_252d8 = add i32 %v0_252d8, 1099500736
  %v2_252d8 = inttoptr i32 %v1_252d8 to i8*
  %v3_252d8 = load i8, i8* %v2_252d8, align 1
  %v4_252d8 = load i32, i32* %eax.global-to-local, align 4
  %v5_252d8 = trunc i32 %v4_252d8 to i8
  %v6_252d8 = add i8 %v5_252d8, %v3_252d8
  %v11_252d8 = icmp ult i8 %v6_252d8, %v3_252d8
  store i1 %v11_252d8, i1* %cf.global-to-local, align 1
  store i8 %v6_252d8, i8* %v2_252d8, align 1
  %v0_252de = load i32, i32* %eax.global-to-local, align 4
  %v1_252de = trunc i32 %v0_252de to i8
  %v2_252de = load i1, i1* %cf.global-to-local, align 1
  %v3_252de = zext i1 %v2_252de to i8
  %v4_252de = add i8 %v1_252de, ptrtoint (i8* @global_var_89.3286 to i8)
  %v5_252de = add i8 %v4_252de, %v3_252de
  %v25_252de = zext i8 %v5_252de to i32
  %v27_252de = and i32 %v0_252de, -256
  %v28_252de = or i32 %v25_252de, %v27_252de
  store i32 %v28_252de, i32* %eax.global-to-local, align 4
  %v0_252e0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_252e0 = add i32 %v0_252e0, 1284184129
  %v2_252e0 = inttoptr i32 %v1_252e0 to i32*
  %v3_252e0 = load i32, i32* %v2_252e0, align 4
  store i32 %v3_252e0, i32* %ecx.global-to-local, align 4
  %v2_252e6 = and i8 %v5_252de, ptrtoint (i32* @global_var_20.3279 to i8)
  %v8_252e6 = zext i8 %v2_252e6 to i32
  %v11_252e6 = or i32 %v8_252e6, %v27_252de
  store i32 %v11_252e6, i32* %eax.global-to-local, align 4
  %v1_252ec = add i32 %v3_252e0, 16
  %v2_252ec = inttoptr i32 %v1_252ec to i32*
  %v3_252ec = load i32, i32* %v2_252ec, align 4
  store i32 %v3_252ec, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_252fb = load i32, i32* %edx.global-to-local, align 4
  %v2_252fe = call i32 @unknown_4a300(i32 %v0_252fb, i32 %v3_252ec)
  store i32 %v2_252fe, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  store i32 %v2_252fe, i32* %ebp.global-to-local, align 4
  %v2_25309 = add i32 %arg1, 16
  %v3_25309 = inttoptr i32 %v2_25309 to i32*
  store i32 %v2_252fe, i32* %v3_25309, align 4
  %v0_25312.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_25312105 = add i32 %v0_25312.pre, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_25312106 = inttoptr i32 %v1_25312105 to i32*
  %v3_25312107 = load i32, i32* %v2_25312106, align 4
  store i32 %v3_25312107, i32* %edx.global-to-local, align 4
  %v1_25315108 = icmp eq i32 %v3_25312107, 0
  %v1_25317109 = icmp eq i1 %v1_25315108, false
  br i1 %v1_25317109, label %dec_label_pc_25310, label %dec_label_pc_25319

dec_label_pc_25310:                               ; preds = %dec_label_pc_252d3, %dec_label_pc_25310
  %v3_25312110 = phi i32 [ %v3_25312, %dec_label_pc_25310 ], [ %v3_25312107, %dec_label_pc_252d3 ]
  store i32 %v3_25312110, i32* %ebp.global-to-local, align 4
  %v1_25312 = add i32 %v3_25312110, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_25312 = inttoptr i32 %v1_25312 to i32*
  %v3_25312 = load i32, i32* %v2_25312, align 4
  store i32 %v3_25312, i32* %edx.global-to-local, align 4
  %v1_25315 = icmp eq i32 %v3_25312, 0
  %v1_25317 = icmp eq i1 %v1_25315, false
  br i1 %v1_25317, label %dec_label_pc_25310, label %dec_label_pc_25319

dec_label_pc_25319:                               ; preds = %dec_label_pc_25310, %dec_label_pc_252d3
  %v0_2531d.lcssa = phi i32 [ %v0_25312.pre, %dec_label_pc_252d3 ], [ %v3_25312110, %dec_label_pc_25310 ]
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v2_2531d = add i32 %arg1, 20
  %v3_2531d = inttoptr i32 %v2_2531d to i32*
  store i32 %v0_2531d.lcssa, i32* %v3_2531d, align 4
  %v4_2531d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_2531d

; uselistorder directives
  uselistorder i32 %v3_25312, { 1, 2, 0 }
  uselistorder i8 %v3_252d8, { 1, 0 }
  uselistorder i8 %v2_252d6, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2 }
  uselistorder i8 ptrtoint (i8* @global_var_89.3286 to i8), { 3, 0, 1, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_25310, { 1, 0 }
}

define i32 @function_25320(i32 %arg1) local_unnamed_addr {
dec_label_pc_25320:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_2532a.pre = load i32, i32* @eax, align 4
  %v1_2532a5 = add i32 %v0_2532a.pre, 12
  %v2_2532a6 = inttoptr i32 %v1_2532a5 to i32*
  %v3_2532a7 = load i32, i32* %v2_2532a6, align 4
  store i32 %v3_2532a7, i32* %edx.global-to-local, align 4
  %v1_2532d8 = icmp eq i32 %v3_2532a7, 0
  %v1_2532f9 = icmp eq i1 %v1_2532d8, false
  br i1 %v1_2532f9, label %dec_label_pc_25328, label %dec_label_pc_25331

dec_label_pc_25328:                               ; preds = %dec_label_pc_25320, %dec_label_pc_25328
  %v3_2532a10 = phi i32 [ %v3_2532a, %dec_label_pc_25328 ], [ %v3_2532a7, %dec_label_pc_25320 ]
  %v1_2532a = add i32 %v3_2532a10, 12
  %v2_2532a = inttoptr i32 %v1_2532a to i32*
  %v3_2532a = load i32, i32* %v2_2532a, align 4
  store i32 %v3_2532a, i32* %edx.global-to-local, align 4
  %v1_2532d = icmp eq i32 %v3_2532a, 0
  %v1_2532f = icmp eq i1 %v1_2532d, false
  br i1 %v1_2532f, label %dec_label_pc_25328, label %dec_label_pc_25331

dec_label_pc_25331:                               ; preds = %dec_label_pc_25328, %dec_label_pc_25320
  %v0_25339.lcssa = phi i32 [ %v0_2532a.pre, %dec_label_pc_25320 ], [ %v3_2532a10, %dec_label_pc_25328 ]
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v2_25339 = add i32 %tmp4, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_25339 = inttoptr i32 %v2_25339 to i32*
  store i32 %v0_25339.lcssa, i32* %v3_25339, align 4
  %v0_2533c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2533c = add i32 %v0_2533c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_2533c = inttoptr i32 %v1_2533c to i32*
  %v3_2533c = load i32, i32* %v2_2533c, align 4
  %v1_2533f = load i32, i32* %edx.global-to-local, align 4
  %v2_2533f = add i32 %v1_2533f, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_2533f = inttoptr i32 %v2_2533f to i32*
  store i32 %v3_2533c, i32* %v3_2533f, align 4
  %v1_2534d = add i32 %arg1, 12
  store i32 %v1_2534d, i32* %edx.global-to-local, align 4
  ret i32 %tmp4

; uselistorder directives
  uselistorder i32 %v3_2532a, { 1, 2, 0 }
  uselistorder label %dec_label_pc_25328, { 1, 0 }
}

define i32 @function_25360() local_unnamed_addr {
dec_label_pc_25360:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v4_25360 = load i32, i32* @ebp, align 4
  %v15_25360 = icmp eq i32 %tmp4, %v4_25360
  br i1 %v15_25360, label %bb, label %dec_label_pc_2536a

bb:                                               ; preds = %dec_label_pc_25360
  %v1_25364 = call i32 @function_2549f()
  store i32 %v1_25364, i32* @eax, align 4
  %v1_2536e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2536a

dec_label_pc_2536a:                               ; preds = %bb, %dec_label_pc_25360
  %v1_2536e = phi i32 [ %v1_2536e.pre, %bb ], [ %v4_25360, %dec_label_pc_25360 ]
  %v4_2536a = load i32, i32* @edi, align 4
  %v15_2536a = icmp eq i32 %tmp3, %v4_2536a
  %v0_2536e = load i32, i32* @esi, align 4
  %v2_2536e = add i32 %v1_2536e, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_2536e = inttoptr i32 %v2_2536e to i32*
  store i32 %v0_2536e, i32* %v3_2536e, align 4
  br i1 %v15_2536a, label %dec_label_pc_2537a, label %dec_label_pc_25377

dec_label_pc_25377:                               ; preds = %dec_label_pc_2536a
  %v0_25377 = load i32, i32* @edi, align 4
  %v1_25377 = add i32 %v0_25377, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_25377 = inttoptr i32 %v1_25377 to i32*
  %v3_25377 = load i32, i32* %v2_25377, align 4
  store i32 %v3_25377, i32* @ebx, align 4
  br label %dec_label_pc_2537a

dec_label_pc_2537a:                               ; preds = %dec_label_pc_25377, %dec_label_pc_2536a
  %v3_2537a = load i32, i32* @eax, align 4
  ret i32 %v3_2537a

; uselistorder directives
  uselistorder i32 %v4_25360, { 1, 0 }
}

define i32 @function_25390(i32 %arg1) local_unnamed_addr {
dec_label_pc_25390:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_25390 = load i32, i32* @eax, align 4
  %v2_25390 = load i1, i1* @cf, align 1
  %v3_25390 = zext i1 %v2_25390 to i32
  %v4_25390 = add i32 %v0_25390, 21
  %v5_25390 = add i32 %v4_25390, %v3_25390
  %v31_25390 = urem i32 %v5_25390, 256
  %v33_25390 = and i32 %v0_25390, -256
  %v34_25390 = or i32 %v31_25390, %v33_25390
  store i32 %v34_25390, i32* @eax, align 4
  %v1_25392 = add i32 %v34_25390, 2520205
  %v2_25392 = inttoptr i32 %v1_25392 to i32*
  %v3_25392 = load i32, i32* %v2_25392, align 4
  %v4_25392 = load i32, i32* @edx, align 4
  %v5_25392 = or i32 %v4_25392, %v3_25392
  store i32 %v5_25392, i32* %v2_25392, align 4
  %v0_25398.pre = load i32, i32* @ebx, align 4
  %v0_2539a.pre = load i32, i32* @esi, align 4
  %v1_2539c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_25398

dec_label_pc_25398:                               ; preds = %dec_label_pc_25398, %dec_label_pc_25390
  %v0_2539a = phi i32 [ %v2_2539a, %dec_label_pc_25398 ], [ %v0_2539a.pre, %dec_label_pc_25390 ]
  %v0_25398 = phi i32 [ %v2_25398, %dec_label_pc_25398 ], [ %v0_25398.pre, %dec_label_pc_25390 ]
  %v1_25398 = inttoptr i32 %v0_25398 to i32*
  %v2_25398 = load i32, i32* %v1_25398, align 4
  store i32 %v2_25398, i32* @ebx, align 4
  %v1_2539a = inttoptr i32 %v0_2539a to i32*
  %v2_2539a = load i32, i32* %v1_2539a, align 4
  store i32 %v2_2539a, i32* @esi, align 4
  %v12_2539c = icmp eq i32 %v2_25398, %v1_2539c.pre
  %v1_2539e = icmp eq i1 %v12_2539c, false
  br i1 %v1_2539e, label %dec_label_pc_25398, label %dec_label_pc_253a0

dec_label_pc_253a0:                               ; preds = %dec_label_pc_25398
  %v0_253a8 = load i32, i32* @edi, align 4
  %v15_253a8 = icmp eq i32 %v0_253a8, %arg1
  store i32 %v1_2539c.pre, i32* @ebp, align 4
  %v1_253ae = icmp eq i1 %v15_253a8, false
  br i1 %v1_253ae, label %bb, label %dec_label_pc_253b0

bb:                                               ; preds = %dec_label_pc_253a0
  %v2_253ae = call i32 @function_25360()
  store i32 %v2_253ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_253b0

dec_label_pc_253b0:                               ; preds = %bb, %dec_label_pc_253a0
  %v1_253b8 = add i32 %tmp4, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_253b8 = inttoptr i32 %v1_253b8 to i32*
  store i32 0, i32* %v2_253b8, align 4
  %v0_253bf = load i32, i32* %eax.global-to-local, align 4
  %v1_253bf = load i32, i32* %edx.global-to-local, align 4
  %v2_253bf = inttoptr i32 %v1_253bf to i32*
  store i32 %v0_253bf, i32* %v2_253bf, align 4
  %v2_253c1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_253c1

; uselistorder directives
  uselistorder i32 %v2_2539a, { 1, 0 }
  uselistorder i32 %v2_25398, { 0, 2, 1 }
  uselistorder i32 %v1_2539c.pre, { 1, 0 }
  uselistorder i32 %v0_25390, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0 }
}

define i32 @function_253fc() local_unnamed_addr {
dec_label_pc_253fc:
  %eax.global-to-local = alloca i32, align 4
  %v0_253fc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_253fc
}

define i32 @function_25400(i32 %arg1) local_unnamed_addr {
dec_label_pc_25400:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_25403 = load i32, i32* @ebx, align 4
  %v1_25403 = lshr i32 %v0_25403, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_254031 = or i32 %v1_25403, %arg1
  %v11_25403 = urem i32 %v5_254031, 256
  %v13_25403 = shl i32 %v11_25403, ptrtoint (i8** @global_var_8.3277 to i32)
  %v14_25403 = and i32 %v0_25403, -65281
  %v15_25403 = or i32 %v13_25403, %v14_25403
  store i32 %v15_25403, i32* %ebx.global-to-local, align 4
  %v1_25405 = add i32 %arg1, ptrtoint (i8** @global_var_1.3274 to i32)
  %v8_25406 = and i32 %v1_25405, ptrtoint (i8* @global_var_ff.3305 to i32)
  %v12_25406 = and i32 %v1_25405, or (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 -256)
  store i32 %v12_25406, i32* %eax.global-to-local, align 4
  %v1_25408 = inttoptr i32 %v12_25406 to i8*
  %v2_25408 = load i8, i8* %v1_25408, align 1
  %v4_25408 = trunc i32 %v8_25406 to i8
  %v5_25408 = add i8 %v2_25408, %v4_25408
  store i8 %v5_25408, i8* %v1_25408, align 1
  %v0_2540a = load i32, i32* %ebx.global-to-local, align 4
  %v3_2540a = load i32, i32* %eax.global-to-local, align 4
  %v4_2540a = trunc i32 %v3_2540a to i8
  %v5_2540a2 = mul i32 %v3_2540a, 256
  %v1_2540a3 = add i32 %v5_2540a2, %v0_2540a
  %v22_2540a = and i32 %v1_2540a3, 65280
  %v23_2540a = and i32 %v0_2540a, -65281
  %v24_2540a = or i32 %v22_2540a, %v23_2540a
  store i32 %v24_2540a, i32* @ebx, align 4
  %v2_2540c = add i8 %v4_2540a, 36
  %v6_2540c = icmp ugt i8 %v4_2540a, -37
  %v16_2540c = zext i8 %v2_2540c to i32
  %v18_2540c = and i32 %v3_2540a, -256
  %v19_2540c = or i32 %v16_2540c, %v18_2540c
  store i32 %v19_2540c, i32* %eax.global-to-local, align 4
  %v1_2540e = inttoptr i32 %v19_2540c to i8*
  %v2_2540e = load i8, i8* %v1_2540e, align 1
  %v6_2540e = zext i1 %v6_2540c to i8
  %v7_2540e = add i8 %v2_2540e, %v2_2540c
  %v8_2540e = add i8 %v7_2540e, %v6_2540e
  store i8 %v8_2540e, i8* %v1_2540e, align 1
  %v0_25410 = load i32, i32* %eax.global-to-local, align 4
  %v1_25410 = inttoptr i32 %v0_25410 to i8*
  %v2_25410 = load i8, i8* %v1_25410, align 1
  %v4_25410 = trunc i32 %v0_25410 to i8
  %v5_25410 = add i8 %v2_25410, %v4_25410
  store i8 %v5_25410, i8* %v1_25410, align 1
  %v22_25410 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_25410

; uselistorder directives
  uselistorder i8 %v4_2540a, { 1, 0 }
  uselistorder i32 %v3_2540a, { 1, 0, 2 }
  uselistorder i32 %v0_2540a, { 1, 0 }
  uselistorder i32 %v12_25406, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 or (i32 ptrtoint (i8* @global_var_ff.3305 to i32), i32 -256), { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25416(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_25416:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_25416 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25416 = add i32 %v0_25416, 1698440268
  %v2_25416 = inttoptr i32 %v1_25416 to i32*
  %v3_25416 = load i32, i32* %v2_25416, align 4
  %v4_25416 = add i32 %v3_25416, -1
  store i32 %v4_25416, i32* %v2_25416, align 4
  %v0_2541c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2541c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2541c = xor i32 %v1_2541c, %v0_2541c
  %v3_2541c = icmp eq i32 %v2_2541c, 0
  store i32 %v2_2541c, i32* %ecx.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v0_25426 = load i32, i32* @eax, align 4
  %v1_25426 = add i32 %v0_25426, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_25426 = inttoptr i32 %v1_25426 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_25426, align 4
  %v0_2542d = load i32, i32* @eax, align 4
  %v1_2542d = add i32 %v0_2542d, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2542d = inttoptr i32 %v1_2542d to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_2542d, align 4
  %v0_25434 = load i32, i32* @eax, align 4
  %v1_25434 = inttoptr i32 %v0_25434 to i32*
  store i32 ptrtoint (%vtable_39548_type* @global_var_39548.3571 to i32), i32* %v1_25434, align 4
  %v0_2543a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2543a = load i32, i32* @eax, align 4
  %v2_2543a = add i32 %v1_2543a, 12
  %v3_2543a = inttoptr i32 %v2_2543a to i32*
  store i32 %v0_2543a, i32* %v3_2543a, align 4
  %v0_2543d = load i32, i32* @eax, align 4
  %v1_2543d = load i32, i32* %edx.global-to-local, align 4
  %v2_2543d = add i32 %v1_2543d, 12
  %v3_2543d = inttoptr i32 %v2_2543d to i32*
  store i32 %v0_2543d, i32* %v3_2543d, align 4
  %v1_25440 = icmp eq i1 %v3_2541c, false
  br i1 %v1_25440, label %bb, label %dec_label_pc_25416.dec_label_pc_25442_crit_edge

dec_label_pc_25416.dec_label_pc_25442_crit_edge:  ; preds = %dec_label_pc_25416
  %v0_25449.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_25442

bb:                                               ; preds = %dec_label_pc_25416
  %v2_25440 = call i32 @function_2546c()
  br label %dec_label_pc_25442

dec_label_pc_25442:                               ; preds = %dec_label_pc_25416.dec_label_pc_25442_crit_edge, %bb
  %v0_25449 = phi i32 [ %v0_25449.pre, %dec_label_pc_25416.dec_label_pc_25442_crit_edge ], [ %v2_25440, %bb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_25449

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_39548_type* @global_var_39548.3571 to i32), { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_25442, { 1, 0 }
}

define i32 @function_2544b() local_unnamed_addr {
dec_label_pc_2544b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2544b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2544b
}

define i32 @function_25450(i32 %arg1) local_unnamed_addr {
dec_label_pc_25450:
  %v0_25450 = load i32, i32* @eax, align 4
  %v1_25453 = call i32 @unknown_42a80(i32 %v0_25450)
  ret i32 %arg1
}

define i32 @function_2546c() local_unnamed_addr {
dec_label_pc_2546c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25470(i32 %arg1) local_unnamed_addr {
dec_label_pc_25470:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25487() local_unnamed_addr {
dec_label_pc_25487:
  %eax.global-to-local = alloca i32, align 4
  %v0_25487 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25487
}

define i32 @function_25488() local_unnamed_addr {
dec_label_pc_25488:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2549f() local_unnamed_addr {
dec_label_pc_2549f:
  %v3_254b7 = load i32, i32* @eax, align 4
  ret i32 %v3_254b7
}

define i32 @function_254c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_254c3:
  %v1_254cc = call i32 @unknown_42a80(i32 %arg1)
  ret i32 %v1_254cc

; uselistorder directives
  uselistorder i32 (i32)* @unknown_42a80, { 1, 0 }
}

define i32 @function_254e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_254e0:
  %v0_254e2 = call i32 @unknown_46fa0()
  ret i32 %v0_254e2
}

define i32 @function_254ed() local_unnamed_addr {
dec_label_pc_254ed:
  %eax.global-to-local = alloca i32, align 4
  %v0_254ed = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_254ed
}

define i32 @function_254f3() local_unnamed_addr {
dec_label_pc_254f3:
  %v0_254f3 = call i32 @function_25488()
  ret i32 %v0_254f3
}

define i32 @function_254f6() local_unnamed_addr {
dec_label_pc_254f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_254f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_254f6
}

define i32 @_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEEC1ERKS8_RKSA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_25510:
  %stack_var_-56 = alloca i32, align 4
  %v2_2552b = ptrtoint i32* %stack_var_-56 to i32
  ret i32 %v2_2552b
}

define i32 @function_255c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_255c0:
  %v0_255c0 = load i32, i32* @edi, align 4
  %v1_255c0 = load i32, i32* @ebx, align 4
  %v12_255c0 = icmp eq i32 %v0_255c0, %v1_255c0
  %v1_255c2 = icmp eq i1 %v12_255c0, false
  br i1 %v1_255c2, label %dec_label_pc_255ca, label %dec_label_pc_255c4

dec_label_pc_255c4:                               ; preds = %dec_label_pc_255c0
  %v0_255c4 = call i32 @function_255e3()
  ret i32 %v0_255c4

dec_label_pc_255ca:                               ; preds = %dec_label_pc_255c0
  %v1_255cc = add i32 %v0_255c0, 12
  store i32 %v1_255cc, i32* @eax, align 4
  %v1_255d2 = call i32 @function_38f70(i32 %v1_255cc)
  ret i32 %v1_255d2

; uselistorder directives
  uselistorder i32 %v0_255c0, { 1, 0 }
}

define i32 @function_255e3() local_unnamed_addr {
dec_label_pc_255e3:
  %v2_255e3 = load i32, i32* @esi, align 4
  store i32 %v2_255e3, i32* @eax, align 4
  %v1_255e5 = icmp eq i32 %v2_255e3, 0
  br i1 %v1_255e5, label %bb, label %dec_label_pc_255e9

bb:                                               ; preds = %dec_label_pc_255e3
  %v1_255e7 = call i32 @function_25655()
  %v2_255e9.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_255e9

dec_label_pc_255e9:                               ; preds = %bb, %dec_label_pc_255e3
  %v2_255e9 = phi i32 [ %v2_255e9.pre, %bb ], [ %v2_255e3, %dec_label_pc_255e3 ]
  store i32 %v2_255e9, i32* @eax, align 4
  %v1_255eb = icmp eq i32 %v2_255e9, 0
  br i1 %v1_255eb, label %bb5, label %dec_label_pc_255ef

bb5:                                              ; preds = %dec_label_pc_255e9
  %v1_255ed = call i32 @function_25631()
  store i32 %v1_255ed, i32* @eax, align 4
  %v1_255ef.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_255ef

dec_label_pc_255ef:                               ; preds = %bb5, %dec_label_pc_255e9
  %v1_255ef = phi i32 [ %v1_255ef.pre, %bb5 ], [ %v2_255e9, %dec_label_pc_255e9 ]
  %v0_255ef = phi i32 [ %v1_255ed, %bb5 ], [ %v2_255e9, %dec_label_pc_255e9 ]
  %v2_255ef = add i32 %v1_255ef, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_255ef = inttoptr i32 %v2_255ef to i32*
  store i32 %v0_255ef, i32* %v3_255ef, align 4
  %v3_255fd = load i32, i32* @eax, align 4
  ret i32 %v3_255fd

; uselistorder directives
  uselistorder i32 %v2_255e9, { 1, 0, 3, 2 }
}

define i32 @function_25610(i32 %arg1) local_unnamed_addr {
dec_label_pc_25610:
  %v0_25610 = load i1, i1* @zf, align 1
  %v1_25610 = icmp eq i1 %v0_25610, false
  br i1 %v1_25610, label %bb, label %dec_label_pc_25610.dec_label_pc_25612_crit_edge

dec_label_pc_25610.dec_label_pc_25612_crit_edge:  ; preds = %dec_label_pc_25610
  %v0_25619.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_25612

bb:                                               ; preds = %dec_label_pc_25610
  %v2_25610 = call i32 @function_2562c()
  br label %dec_label_pc_25612

dec_label_pc_25612:                               ; preds = %dec_label_pc_25610.dec_label_pc_25612_crit_edge, %bb
  %v0_25619 = phi i32 [ %v2_25610, %bb ], [ %v0_25619.pre, %dec_label_pc_25610.dec_label_pc_25612_crit_edge ]
  ret i32 %v0_25619

; uselistorder directives
  uselistorder i1* @zf, { 6, 3, 4, 0, 1, 5, 2, 7 }
  uselistorder label %dec_label_pc_25612, { 1, 0 }
}

define i32 @function_2561c() local_unnamed_addr {
dec_label_pc_2561c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2562c() local_unnamed_addr {
dec_label_pc_2562c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25631() local_unnamed_addr {
dec_label_pc_25631:
  %v3_25649 = load i32, i32* @eax, align 4
  ret i32 %v3_25649
}

define i32 @function_25655() local_unnamed_addr {
dec_label_pc_25655:
  %v3_2566d = load i32, i32* @eax, align 4
  ret i32 %v3_2566d
}

define i32 @function_2568d() local_unnamed_addr {
dec_label_pc_2568d:
  %ecx.global-to-local = alloca i32, align 4
  %v0_2568d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2568d = add i32 %v0_2568d, 607947206
  %v2_2568d = inttoptr i32 %v1_2568d to i32*
  %v3_2568d = load i32, i32* %v2_2568d, align 4
  %v4_2568d = add i32 %v3_2568d, -1
  store i32 %v4_2568d, i32* %v2_2568d, align 4
  %v0_25698 = call i32 @function_2561c()
  ret i32 %v0_25698
}

define i32 @function_256a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_256a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_256a1() local_unnamed_addr {
dec_label_pc_256a1:
  %v0_256a1 = call i32 @function_2561c()
  ret i32 %v0_256a1

; uselistorder directives
  uselistorder i32 ()* @function_2561c, { 1, 0 }
}

define i32 @_ZN18CClientUIInterfaceC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_256b0:
  store i32 ptrtoint (%vtable_39af8_type* @global_var_39af8.3528 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_39af8_type* @global_var_39af8.3528 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_256f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_256f0:
  %eax.global-to-local = alloca i32, align 4
  %v0_256f0 = load i32, i32* @ecx, align 4
  %v1_256f0 = add i32 %v0_256f0, 1137116275
  %v2_256f0 = inttoptr i32 %v1_256f0 to i8*
  %v3_256f0 = load i8, i8* %v2_256f0, align 1
  %v5_256f0 = trunc i32 %v0_256f0 to i8
  %v6_256f0 = add i8 %v3_256f0, %v5_256f0
  store i8 %v6_256f0, i8* %v2_256f0, align 1
  %v2_256f6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_256f6 = load i32, i32* @eax, align 4
  %v4_256f6 = trunc i32 %v3_256f6 to i8
  %v5_256f6 = or i8 %v4_256f6, %v2_256f6
  %v12_256f6 = inttoptr i32 %v3_256f6 to i8*
  store i8 %v5_256f6, i8* %v12_256f6, align 1
  %v2_256f8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_256f8 = load i32, i32* @eax, align 4
  %v4_256f8 = trunc i32 %v3_256f8 to i8
  %v5_256f8 = add i8 %v4_256f8, %v2_256f8
  %v21_256f8 = inttoptr i32 %v3_256f8 to i8*
  store i8 %v5_256f8, i8* %v21_256f8, align 1
  %v3_256fa = load i32, i32* @eax, align 4
  %v4_256fa = trunc i32 %v3_256fa to i8
  %v2_256fc = add i8 %v4_256fa, 36
  %v6_256fc = icmp ugt i8 %v4_256fa, -37
  %v16_256fc = zext i8 %v2_256fc to i32
  %v18_256fc = and i32 %v3_256fa, -256
  %v19_256fc = or i32 %v16_256fc, %v18_256fc
  store i32 %v19_256fc, i32* %eax.global-to-local, align 4
  %v1_256fe = inttoptr i32 %v19_256fc to i8*
  %v2_256fe = load i8, i8* %v1_256fe, align 1
  %v6_256fe = zext i1 %v6_256fc to i8
  %v7_256fe = add i8 %v2_256fe, %v2_256fc
  %v8_256fe = add i8 %v7_256fe, %v6_256fe
  store i8 %v8_256fe, i8* %v1_256fe, align 1
  %v0_25700 = load i32, i32* %eax.global-to-local, align 4
  %v1_25700 = inttoptr i32 %v0_25700 to i8*
  %v2_25700 = load i8, i8* %v1_25700, align 1
  %v4_25700 = trunc i32 %v0_25700 to i8
  %v5_25700 = add i8 %v2_25700, %v4_25700
  store i8 %v5_25700, i8* %v1_25700, align 1
  %v22_25700 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_25700

; uselistorder directives
  uselistorder i8 %v4_256fa, { 1, 0 }
}

define i32 @function_25730(i32 %arg1) local_unnamed_addr {
dec_label_pc_25730:
  %eax.global-to-local = alloca i32, align 4
  %v0_25730 = load i32, i32* @eax, align 4
  %v1_25730 = trunc i32 %v0_25730 to i8
  %v2_25730 = and i8 %v1_25730, 36
  %v8_25730 = zext i8 %v2_25730 to i32
  %v10_25730 = and i32 %v0_25730, -256
  %v11_25730 = or i32 %v8_25730, %v10_25730
  store i32 %v11_25730, i32* %eax.global-to-local, align 4
  %v1_25732 = inttoptr i32 %v11_25730 to i8*
  %v2_25732 = load i8, i8* %v1_25732, align 4
  %v5_25732 = add i8 %v2_25732, %v2_25730
  store i8 %v5_25732, i8* %v1_25732, align 4
  %v0_25734 = load i32, i32* %eax.global-to-local, align 4
  %v2_25734 = load i32, i32* @ecx, align 4
  %v3_25734 = udiv i32 %v2_25734, 256
  %v5_25734 = add i32 %v3_25734, %v0_25734
  %v20_25734 = and i32 %v5_25734, 255
  %v22_25734 = and i32 %v0_25734, -256
  %v23_25734 = or i32 %v20_25734, %v22_25734
  store i32 %v23_25734, i32* %eax.global-to-local, align 4
  ret i32 %v23_25734

; uselistorder directives
  uselistorder i32 %v0_25734, { 1, 0 }
}

define i32 @function_25790(i32 %arg1) local_unnamed_addr {
dec_label_pc_25790:
  %v0_25790 = load i32, i32* @eax, align 4
  %v4_25790 = mul i32 %v0_25790, 2
  ret i32 %v4_25790
}

define i32 @function_257d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_257d0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_257d0 = load i32, i32* @eax, align 4
  %v1_257d0 = trunc i32 %v0_257d0 to i8
  %v2_257d0 = add i8 %v1_257d0, ptrtoint (i8** @global_var_1.3274 to i8)
  %v16_257d0 = zext i8 %v2_257d0 to i32
  %v18_257d0 = and i32 %v0_257d0, -256
  %v19_257d0 = or i32 %v16_257d0, %v18_257d0
  store i32 %v19_257d0, i32* %eax.global-to-local, align 4
  %v1_257d2 = inttoptr i32 %v19_257d0 to i8*
  %v2_257d2 = load i8, i8* %v1_257d2, align 1
  %v5_257d2 = add i8 %v2_257d2, %v2_257d0
  store i8 %v5_257d2, i8* %v1_257d2, align 1
  %v0_257d4 = load i32, i32* @ebx, align 4
  %v1_257d4 = lshr i32 %v0_257d4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_257d4 = load i32, i32* %eax.global-to-local, align 4
  %v5_257d4 = add i32 %v1_257d4, %v3_257d4
  %v20_257d4 = urem i32 %v5_257d4, 256
  %v22_257d4 = shl i32 %v20_257d4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_257d4 = and i32 %v0_257d4, -65281
  %v24_257d4 = or i32 %v22_257d4, %v23_257d4
  store i32 %v24_257d4, i32* %ebx.global-to-local, align 4
  %v1_257d6 = add i32 %v3_257d4, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_257d6 = trunc i32 %v1_257d6 to i8
  store i32 %v1_257d6, i32* %eax.global-to-local, align 4
  %v2_257d7 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_257d7 = or i8 %v2_257d7, %v11_257d6
  %v11_257d7 = load i32, i32* @ecx, align 4
  %v12_257d7 = inttoptr i32 %v11_257d7 to i8*
  store i8 %v5_257d7, i8* %v12_257d7, align 1
  %v0_257d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_257d9 = inttoptr i32 %v0_257d9 to i8*
  %v2_257d9 = load i8, i8* %v1_257d9, align 1
  %v4_257d9 = trunc i32 %v0_257d9 to i8
  %v5_257d9 = add i8 %v2_257d9, %v4_257d9
  store i8 %v5_257d9, i8* %v1_257d9, align 1
  %v0_257db = load i32, i32* %ebx.global-to-local, align 4
  %v1_257db = udiv i32 %v0_257db, 256
  %v3_257db = load i32, i32* %eax.global-to-local, align 4
  %v5_257db = add i32 %v1_257db, %v3_257db
  %v20_257db = and i32 %v5_257db, 255
  %v22_257db = mul nuw nsw i32 %v20_257db, 256
  %v23_257db = and i32 %v0_257db, -65281
  %v24_257db = or i32 %v22_257db, %v23_257db
  store i32 %v24_257db, i32* %ebx.global-to-local, align 4
  %v1_257dd = inttoptr i32 %v3_257db to i8*
  %v2_257dd = load i8, i8* %v1_257dd, align 1
  %v3_257dd = load i32, i32* @edx, align 4
  %v4_257dd = lshr i32 %v3_257dd, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_257dd = trunc i32 %v4_257dd to i8
  %v6_257dd = add i8 %v5_257dd, %v2_257dd
  store i8 %v6_257dd, i8* %v1_257dd, align 1
  %v0_257e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_257e0 = inttoptr i32 %v0_257e0 to i32*
  %v3_257e0 = load i32, i32* %v2_257e0, align 4
  %v4_257e0 = add i32 %v3_257e0, %v0_257e0
  store i32 %v4_257e0, i32* %eax.global-to-local, align 4
  %v0_257e2 = load i32, i32* @esi, align 4
  %v2_257e2 = add i32 %v4_257e0, 12
  %v3_257e2 = inttoptr i32 %v2_257e2 to i32*
  store i32 %v0_257e2, i32* %v3_257e2, align 4
  %v0_257e5 = load i32, i32* %eax.global-to-local, align 4
  %v1_257e5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_257e5 = add i32 %v1_257e5, ptrtoint (i32* @global_var_20.3279 to i32)
  %v3_257e5 = inttoptr i32 %v2_257e5 to i32*
  store i32 %v0_257e5, i32* %v3_257e5, align 4
  %v0_257e8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_257e8 = add i32 %v0_257e8, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_257e8 = inttoptr i32 %v1_257e8 to i32*
  store i32 ptrtoint (%vtable_39a80_type* @global_var_39a80.3586 to i32), i32* %v2_257e8, align 4
  %v0_257ef = load i32, i32* %ebx.global-to-local, align 4
  %v1_257ef = add i32 %v0_257ef, 36
  %v2_257ef = inttoptr i32 %v1_257ef to i32*
  store i32 ptrtoint (%vtable_39a98_type* @global_var_39a98.3533 to i32), i32* %v2_257ef, align 4
  %v2_257f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_257f6

; uselistorder directives
  uselistorder i32 %v3_257db, { 1, 0 }
  uselistorder i32 %v0_257db, { 1, 0 }
  uselistorder i32 %v3_257d4, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39a98_type* @global_var_39a98.3533 to i32), { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_25810(i32 %arg1) local_unnamed_addr {
dec_label_pc_25810:
  %eax.global-to-local = alloca i32, align 4
  %v0_25810 = load i32, i32* @eax, align 4
  %v0_25814 = load i32, i32* @esi, align 4
  %v2_25817 = call i32 @unknown_49460(i32 %v0_25814, i32 %v0_25810)
  store i32 %v2_25817, i32* %eax.global-to-local, align 4
  %v0_2581c = load i32, i32* @esi, align 4
  %v1_2581c = load i32, i32* @ebx, align 4
  %v2_2581c = add i32 %v1_2581c, 40
  %v3_2581c = inttoptr i32 %v2_2581c to i32*
  store i32 %v0_2581c, i32* %v3_2581c, align 4
  %v0_2581f = load i32, i32* @ebx, align 4
  %v1_2581f = add i32 %v0_2581f, 44
  %v2_2581f = inttoptr i32 %v1_2581f to i32*
  store i32 0, i32* %v2_2581f, align 4
  %v2_25826 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_25826

; uselistorder directives
  uselistorder i32 44, { 9, 2, 4, 3, 5, 1, 6, 7, 8, 0 }
  uselistorder i32 40, { 19, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 12, 13, 14, 15, 2, 17, 18, 16 }
}

define i32 @function_25880(i32 %arg1) local_unnamed_addr {
dec_label_pc_25880:
  %v0_25880 = load i32, i32* @esi, align 4
  %v1_25880 = load i32, i32* @ebx, align 4
  %v2_25880 = add i32 %v1_25880, ptrtoint (i32* @global_var_34.3466 to i32)
  %v3_25880 = inttoptr i32 %v2_25880 to i32*
  store i32 %v0_25880, i32* %v3_25880, align 4
  %v0_25883 = load i32, i32* @ebx, align 4
  %v1_25883 = add i32 %v0_25883, ptrtoint (i32* @global_var_38.3456 to i32)
  %v2_25883 = inttoptr i32 %v1_25883 to i32*
  store i32 0, i32* %v2_25883, align 4
  %v2_2588a = load i32, i32* @eax, align 4
  ret i32 %v2_2588a
}

define i32 @function_258b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_258b0:
  %v0_258b0 = load i32, i32* @ebx, align 4
  %v1_258b0 = add i32 %v0_258b0, ptrtoint (i32* @global_var_30.3470 to i32)
  %v2_258b0 = inttoptr i32 %v1_258b0 to i32*
  store i32 ptrtoint (%vtable_39a50_type* @global_var_39a50.3587 to i32), i32* %v2_258b0, align 4
  %v0_258b7 = load i32, i32* @ebx, align 4
  %v1_258b7 = add i32 %v0_258b7, ptrtoint (i32* @global_var_3c.3471 to i32)
  %v2_258b7 = inttoptr i32 %v1_258b7 to i32*
  store i32 ptrtoint (%vtable_39a38_type* @global_var_39a38.3538 to i32), i32* %v2_258b7, align 4
  %v2_258be = load i32, i32* @eax, align 4
  ret i32 %v2_258be

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_39a38_type* @global_var_39a38.3538 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_25900(i32 %arg1) local_unnamed_addr {
dec_label_pc_25900:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_25900 = load i32, i32* @ebx, align 4
  %v1_25900 = lshr i32 %v0_25900, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_25900 = load i32, i32* @eax, align 4
  %v5_25900 = add i32 %v1_25900, %v3_25900
  %v20_25900 = urem i32 %v5_25900, 256
  %v22_25900 = shl i32 %v20_25900, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_25900 = and i32 %v0_25900, -65281
  %v24_25900 = or i32 %v22_25900, %v23_25900
  store i32 %v24_25900, i32* %ebx.global-to-local, align 4
  %v1_25902 = add i32 %v3_25900, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_25902 = trunc i32 %v1_25902 to i8
  store i32 %v1_25902, i32* %eax.global-to-local, align 4
  %v2_25903 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_25903 = or i8 %v2_25903, %v11_25902
  %v11_25903 = load i32, i32* @ecx, align 4
  %v12_25903 = inttoptr i32 %v11_25903 to i8*
  store i8 %v5_25903, i8* %v12_25903, align 1
  %v0_25905 = load i32, i32* %eax.global-to-local, align 4
  %v1_25905 = inttoptr i32 %v0_25905 to i8*
  %v2_25905 = load i8, i8* %v1_25905, align 1
  %v4_25905 = trunc i32 %v0_25905 to i8
  %v5_25905 = add i8 %v2_25905, %v4_25905
  store i8 %v5_25905, i8* %v1_25905, align 1
  %v0_25907 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25907 = udiv i32 %v0_25907, 256
  %v3_25907 = load i32, i32* %eax.global-to-local, align 4
  %v5_25907 = add i32 %v1_25907, %v3_25907
  %v20_25907 = and i32 %v5_25907, 255
  %v22_25907 = mul nuw nsw i32 %v20_25907, 256
  %v23_25907 = and i32 %v0_25907, -65281
  %v24_25907 = or i32 %v22_25907, %v23_25907
  store i32 %v24_25907, i32* @ebx, align 4
  %v1_25909 = add i32 %v3_25907, -101
  %v2_25909 = inttoptr i32 %v1_25909 to i8*
  %v3_25909 = load i8, i8* %v2_25909, align 1
  %v4_25909 = load i32, i32* @edx, align 4
  %v5_25909 = lshr i32 %v4_25909, ptrtoint (i8** @global_var_8.3277 to i32)
  %v6_25909 = trunc i32 %v5_25909 to i8
  %v7_25909 = add i8 %v6_25909, %v3_25909
  store i8 %v7_25909, i8* %v2_25909, align 1
  %v0_2590c = load i32, i32* %eax.global-to-local, align 4
  %v2_2590c = inttoptr i32 %v0_2590c to i32*
  %v3_2590c = load i32, i32* %v2_2590c, align 4
  %v4_2590c = add i32 %v3_2590c, %v0_2590c
  store i32 %v4_2590c, i32* %eax.global-to-local, align 4
  %v0_2590e = load i32, i32* @esi, align 4
  %v2_2590e = add i32 %v4_2590c, 12
  %v3_2590e = inttoptr i32 %v2_2590e to i32*
  store i32 %v0_2590e, i32* %v3_2590e, align 4
  %v0_25911 = load i32, i32* %eax.global-to-local, align 4
  %v1_25911 = load i32, i32* @ebx, align 4
  %v2_25911 = add i32 %v1_25911, ptrtoint (i32* @global_var_44.3548 to i32)
  %v3_25911 = inttoptr i32 %v2_25911 to i32*
  store i32 %v0_25911, i32* %v3_25911, align 4
  %v0_25914 = load i32, i32* @ebx, align 4
  %v1_25914 = add i32 %v0_25914, ptrtoint (i32* @global_var_3c.3471 to i32)
  %v2_25914 = inttoptr i32 %v1_25914 to i32*
  store i32 ptrtoint (%vtable_39a20_type* @global_var_39a20.3588 to i32), i32* %v2_25914, align 4
  %v0_2591b = load i32, i32* @ebx, align 4
  %v1_2591b = add i32 %v0_2591b, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_2591b = inttoptr i32 %v1_2591b to i32*
  store i32 ptrtoint (%vtable_39a08_type* @global_var_39a08.3542 to i32), i32* %v2_2591b, align 4
  %v2_25922 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_25922

; uselistorder directives
  uselistorder i32 %v3_25907, { 1, 0 }
  uselistorder i32 %v0_25907, { 1, 0 }
  uselistorder i32 %v3_25900, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_39a08_type* @global_var_39a08.3542 to i32), { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_3c.3471, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_3c.3471 to i32), { 1, 2, 0, 3, 4, 5, 6 }
}

define i32 @function_25990(i32 %arg1) local_unnamed_addr {
dec_label_pc_25990:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_259a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_259a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_259a0 = load i32, i32* @eax, align 4
  %v0_259a4 = load i32, i32* @esi, align 4
  %v2_259a7 = call i32 @unknown_4abc0(i32 %v0_259a4, i32 %v0_259a0)
  store i32 %v2_259a7, i32* %eax.global-to-local, align 4
  %v0_259ac = load i32, i32* @esi, align 4
  %v1_259ac = load i32, i32* @ebx, align 4
  %v2_259ac = add i32 %v1_259ac, 88
  %v3_259ac = inttoptr i32 %v2_259ac to i32*
  store i32 %v0_259ac, i32* %v3_259ac, align 4
  %v0_259af = load i32, i32* @ebx, align 4
  %v1_259af = add i32 %v0_259af, 92
  %v2_259af = inttoptr i32 %v1_259af to i32*
  store i32 0, i32* %v2_259af, align 4
  %v2_259b6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_259b6

; uselistorder directives
  uselistorder i32 88, { 1, 0, 2 }
}

define i32 @function_259c1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_259c1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %of.global-to-local = alloca i1, align 1
  %zf.global-to-local = alloca i1, align 1
  %v0_259c1 = load i32, i32* %edi.global-to-local, align 4
  %v1_259c1 = add i32 %v0_259c1, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_259c1, i32* %edi.global-to-local, align 4
  %v0_259c3 = load i32, i32* %eax.global-to-local, align 4
  %v1_259c3 = add i32 %v0_259c3, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_259c3 = trunc i32 %v1_259c3 to i8
  %v2_259c4 = add i8 %v11_259c3, ptrtoint (i8** @global_var_1.3274 to i8)
  %tmp100 = xor i8 %v11_259c3, -128
  %v9_259c4 = and i8 %v2_259c4, %tmp100
  %v10_259c4 = icmp slt i8 %v9_259c4, 0
  store i1 %v10_259c4, i1* %of.global-to-local, align 1
  %v11_259c4 = icmp eq i8 %v2_259c4, 0
  store i1 %v11_259c4, i1* %zf.global-to-local, align 1
  %v16_259c4 = zext i8 %v2_259c4 to i32
  %v18_259c4 = and i32 %v1_259c3, -256
  %v19_259c4 = or i32 %v16_259c4, %v18_259c4
  store i32 %v19_259c4, i32* %eax.global-to-local, align 4
  %v1_259c6 = inttoptr i32 %v19_259c4 to i8*
  %v2_259c6 = load i8, i8* %v1_259c6, align 1
  %v5_259c6 = add i8 %v2_259c6, %v2_259c4
  store i8 %v5_259c6, i8* %v1_259c6, align 1
  %v0_259c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_259c8 = lshr i32 %v0_259c8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_259c8 = load i32, i32* %eax.global-to-local, align 4
  %v5_259c8 = add i32 %v1_259c8, %v3_259c8
  %v20_259c8 = urem i32 %v5_259c8, 256
  %v22_259c8 = shl i32 %v20_259c8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_259c8 = and i32 %v0_259c8, -65281
  %v24_259c8 = or i32 %v22_259c8, %v23_259c8
  store i32 %v24_259c8, i32* %ebx.global-to-local, align 4
  %v1_259ca = add i32 %v3_259c8, ptrtoint (i8** @global_var_1.3274 to i32)
  %v11_259ca = trunc i32 %v1_259ca to i8
  store i32 %v1_259ca, i32* %eax.global-to-local, align 4
  %v2_259cb = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_259cb = or i8 %v2_259cb, %v11_259ca
  store i1 false, i1* %of.global-to-local, align 1
  %v6_259cb = icmp eq i8 %v5_259cb, 0
  store i1 %v6_259cb, i1* %zf.global-to-local, align 1
  %v11_259cb = load i32, i32* %ecx.global-to-local, align 4
  %v12_259cb = inttoptr i32 %v11_259cb to i8*
  store i8 %v5_259cb, i8* %v12_259cb, align 1
  %v0_259cd = load i32, i32* %eax.global-to-local, align 4
  %v1_259cd = inttoptr i32 %v0_259cd to i8*
  %v2_259cd = load i8, i8* %v1_259cd, align 1
  %v4_259cd = trunc i32 %v0_259cd to i8
  %v5_259cd = add i8 %v2_259cd, %v4_259cd
  store i8 %v5_259cd, i8* %v1_259cd, align 1
  %v0_259cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_259cf = udiv i32 %v0_259cf, 256
  %v2_259cf = trunc i32 %v1_259cf to i8
  %v3_259cf = load i32, i32* %eax.global-to-local, align 4
  %v4_259cf = trunc i32 %v3_259cf to i8
  %v5_259cf = add i8 %v2_259cf, %v4_259cf
  %v11_259cf = xor i8 %v5_259cf, %v2_259cf
  %v12_259cf = xor i8 %v5_259cf, %v4_259cf
  %v13_259cf = and i8 %v11_259cf, %v12_259cf
  %v14_259cf = icmp slt i8 %v13_259cf, 0
  store i1 %v14_259cf, i1* %of.global-to-local, align 1
  %v15_259cf = icmp eq i8 %v5_259cf, 0
  store i1 %v15_259cf, i1* %zf.global-to-local, align 1
  %v20_259cf = zext i8 %v5_259cf to i32
  %v22_259cf = mul nuw nsw i32 %v20_259cf, 256
  %v23_259cf = and i32 %v0_259cf, -65281
  %v24_259cf = or i32 %v22_259cf, %v23_259cf
  store i32 %v24_259cf, i32* %ebx.global-to-local, align 4
  %v1_259d1 = add i32 %v3_259cf, -1996487781
  %v2_259d1 = inttoptr i32 %v1_259d1 to i8*
  %v3_259d1 = load i8, i8* %v2_259d1, align 1
  %v4_259d1 = load i32, i32* %edx.global-to-local, align 4
  %v5_259d1 = lshr i32 %v4_259d1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v6_259d1 = trunc i32 %v5_259d1 to i8
  %v7_259d1 = add i8 %v6_259d1, %v3_259d1
  %v13_259d1 = xor i8 %v7_259d1, %v3_259d1
  %v14_259d1 = xor i8 %v7_259d1, %v6_259d1
  %v15_259d1 = and i8 %v13_259d1, %v14_259d1
  %v16_259d1 = icmp slt i8 %v15_259d1, 0
  store i1 %v16_259d1, i1* %of.global-to-local, align 1
  %v17_259d1 = icmp eq i8 %v7_259d1, 0
  store i1 %v17_259d1, i1* %zf.global-to-local, align 1
  store i8 %v7_259d1, i8* %v2_259d1, align 1
  %v0_259d7 = load i1, i1* %of.global-to-local, align 1
  %v0_259e5 = load i32, i32* %eax.global-to-local, align 4
  br i1 %v0_259d7, label %dec_label_pc_259e5, label %dec_label_pc_259d9

dec_label_pc_259d9:                               ; preds = %dec_label_pc_259c1
  %v1_259d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_259d9 = add i32 %v1_259d9, 92
  %v3_259d9 = inttoptr i32 %v2_259d9 to i32*
  store i32 %v0_259e5, i32* %v3_259d9, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  ret i32 %arg1

dec_label_pc_259e5:                               ; preds = %dec_label_pc_259c1
  %v1_259e5 = inttoptr i32 %v0_259e5 to i8*
  %v2_259e5 = load i8, i8* %v1_259e5, align 1
  %v4_259e5 = trunc i32 %v0_259e5 to i8
  %v5_259e5 = add i8 %v2_259e5, %v4_259e5
  %v11_259e5 = xor i8 %v5_259e5, %v2_259e5
  %v12_259e5 = xor i8 %v5_259e5, %v4_259e5
  %v13_259e5 = and i8 %v11_259e5, %v12_259e5
  %v14_259e5 = icmp slt i8 %v13_259e5, 0
  store i1 %v14_259e5, i1* %of.global-to-local, align 1
  %v15_259e5 = icmp eq i8 %v5_259e5, 0
  store i1 %v15_259e5, i1* %zf.global-to-local, align 1
  store i8 %v5_259e5, i8* %v1_259e5, align 1
  %v0_259e7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_259e7 = add i32 %v0_259e7, 84
  %v2_259e7 = inttoptr i32 %v1_259e7 to i32*
  store i32 ptrtoint (%vtable_399c0_type* @global_var_399c0.3589 to i32), i32* %v2_259e7, align 4
  %v0_259ee = load i1, i1* %zf.global-to-local, align 1
  %v1_259ee = icmp eq i1 %v0_259ee, false
  br i1 %v1_259ee, label %dec_label_pc_259f6, label %dec_label_pc_259f0

dec_label_pc_259f0:                               ; preds = %dec_label_pc_259e5
  %v0_259f0 = load i32, i32* @esp, align 4
  %v1_259f0 = add i32 %v0_259f0, 68
  %tmp101 = xor i32 %v0_259f0, -2147483648
  %v8_259f0 = and i32 %v1_259f0, %tmp101
  %v9_259f0 = icmp slt i32 %v8_259f0, 0
  store i1 %v9_259f0, i1* %of.global-to-local, align 1
  %v10_259f0 = icmp eq i32 %v1_259f0, 0
  store i1 %v10_259f0, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v0_259f5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_259f5

dec_label_pc_259f6:                               ; preds = %dec_label_pc_259e5
  %v1_259f5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v1_259f5

; uselistorder directives
  uselistorder i32 %v1_259f0, { 1, 0 }
  uselistorder i8 %v5_259e5, { 2, 3, 0, 1 }
  uselistorder i32 %v0_259e5, { 1, 2, 0 }
  uselistorder i8 %v7_259d1, { 2, 3, 0, 1 }
  uselistorder i8 %v5_259cf, { 2, 3, 0, 1 }
  uselistorder i32 %v0_259cf, { 1, 0 }
  uselistorder i32 %v3_259c8, { 1, 0 }
  uselistorder i8 %v2_259c4, { 0, 2, 3, 1 }
  uselistorder i8 %v11_259c3, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32 92, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25a00(i32 %arg1) local_unnamed_addr {
dec_label_pc_25a00:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25a22() local_unnamed_addr {
dec_label_pc_25a22:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25a34() local_unnamed_addr {
dec_label_pc_25a34:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25a4a() local_unnamed_addr {
dec_label_pc_25a4a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25a55() local_unnamed_addr {
dec_label_pc_25a55:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25a60() local_unnamed_addr {
dec_label_pc_25a60:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25a6b() local_unnamed_addr {
dec_label_pc_25a6b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25a80(i32 %arg1) local_unnamed_addr {
dec_label_pc_25a80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25a82() local_unnamed_addr {
dec_label_pc_25a82:
  %v0_25a82 = call i32 @function_25a22()
  ret i32 %v0_25a82
}

define i32 @function_25a84() local_unnamed_addr {
dec_label_pc_25a84:
  %v0_25a86 = call i32 @function_25a22()
  ret i32 %v0_25a86

; uselistorder directives
  uselistorder i32 ()* @function_25a22, { 1, 0 }
}

define i32 @function_25a90(i32 %arg1) local_unnamed_addr {
dec_label_pc_25a90:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25aad() local_unnamed_addr {
dec_label_pc_25aad:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_25aad = load i32, i32* %ebx.global-to-local, align 4
  %v1_25aad = add i32 %v0_25aad, -954457020
  %v2_25aad = inttoptr i32 %v1_25aad to i32*
  %v3_25aad = load i32, i32* %v2_25aad, align 4
  %v4_25aad = sub i32 %v3_25aad, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_25aad, i32* %v2_25aad, align 4
  %v0_25ab3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25ab3 = add i32 %v0_25ab3, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_25ab3, i32* %ebx.global-to-local, align 4
  %v0_25ab4 = load i32, i32* %eax.global-to-local, align 4
  %v1_25ab4 = sub i32 %v0_25ab4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_25ab4, i32* @eax, align 4
  %v0_25ab5 = load i32, i32* %edx.global-to-local, align 4
  %v1_25ab5 = add i32 %v0_25ab5, -964100093
  %v2_25ab5 = inttoptr i32 %v1_25ab5 to i8*
  %v3_25ab5 = load i8, i8* %v2_25ab5, align 1
  %v5_25ab5 = trunc i32 %v0_25ab5 to i8
  %v6_25ab5 = sub i8 %v3_25ab5, %v5_25ab5
  store i8 %v6_25ab5, i8* %v2_25ab5, align 1
  %v0_25abb = call i32 @function_25a34()
  store i32 %v0_25abb, i32* %eax.global-to-local, align 4
  ret i32 %v0_25abb
}

define i32 @function_25ae5() local_unnamed_addr {
dec_label_pc_25ae5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25af0(i32 %arg1) local_unnamed_addr {
dec_label_pc_25af0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25af9() local_unnamed_addr {
dec_label_pc_25af9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_25af9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25af9 = add i32 %v0_25af9, 1726475248
  %v2_25af9 = inttoptr i32 %v1_25af9 to i32*
  %v3_25af9 = load i32, i32* %v2_25af9, align 4
  %v4_25af9 = add i32 %v3_25af9, -1
  store i32 %v4_25af9, i32* %v2_25af9, align 4
  %v0_25b00 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25b00
}

define i32 @function_25b08() local_unnamed_addr {
dec_label_pc_25b08:
  %ecx.global-to-local = alloca i32, align 4
  %v0_25b08 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25b08 = add i32 %v0_25b08, -1918506000
  %v2_25b08 = inttoptr i32 %v1_25b08 to i32*
  %v3_25b08 = load i32, i32* %v2_25b08, align 4
  %v4_25b08 = sub i32 %v3_25b08, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_25b08, i32* %v2_25b08, align 4
  %v0_25b10 = call i32 @function_25ae5()
  ret i32 %v0_25b10
}

define i32 @function_25b32() local_unnamed_addr {
dec_label_pc_25b32:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_25b32 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25b32 = add i32 %v0_25b32, -954457020
  %v2_25b32 = inttoptr i32 %v1_25b32 to i32*
  %v3_25b32 = load i32, i32* %v2_25b32, align 4
  %v4_25b32 = sub i32 %v3_25b32, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_25b32, i32* %v2_25b32, align 4
  %v0_25b38 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25b38 = add i32 %v0_25b38, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_25b38, i32* %ebx.global-to-local, align 4
  %v2_25b39 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_25b39 = load i32, i32* %ecx.global-to-local, align 4
  %v4_25b39 = lshr i32 %v3_25b39, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_25b39 = trunc i32 %v4_25b39 to i8
  %v6_25b39 = xor i8 %v5_25b39, %v2_25b39
  %v12_25b39 = load i32, i32* %eax.global-to-local, align 4
  %v13_25b39 = inttoptr i32 %v12_25b39 to i8*
  store i8 %v6_25b39, i8* %v13_25b39, align 1
  %v0_25b3b = load i32, i32* %eax.global-to-local, align 4
  %v1_25b3b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_25b3b, i32* %edx.global-to-local, align 4
  %v4_25b3c = add i32 %v1_25b3b, %v0_25b3b
  store i32 %v4_25b3c, i32* @eax, align 4
  %v0_25b40 = call i32 @function_25a4a()
  store i32 %v0_25b40, i32* %eax.global-to-local, align 4
  ret i32 %v0_25b40
}

define i32 @function_25b45() local_unnamed_addr {
dec_label_pc_25b45:
  %eax.global-to-local = alloca i32, align 4
  %v0_25b45 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25b45
}

define i32 @function_25b4e() local_unnamed_addr {
dec_label_pc_25b4e:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp92
}

define i32 @function_25b60(i32 %arg1) local_unnamed_addr {
dec_label_pc_25b60:
  %v0_25b60 = load i32, i32* @eax, align 4
  %v5_25b60 = mul i32 %v0_25b60, 2
  %v20_25b60 = and i32 %v5_25b60, 254
  %v22_25b60 = and i32 %v0_25b60, -256
  %v23_25b60 = or i32 %v20_25b60, %v22_25b60
  ret i32 %v23_25b60

; uselistorder directives
  uselistorder i32 %v0_25b60, { 1, 0 }
}

define i32 @function_25b72() local_unnamed_addr {
dec_label_pc_25b72:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_25b72 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25b72 = add i32 %v0_25b72, -954457020
  %v2_25b72 = inttoptr i32 %v1_25b72 to i32*
  %v3_25b72 = load i32, i32* %v2_25b72, align 4
  %v4_25b72 = sub i32 %v3_25b72, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_25b72, i32* %v2_25b72, align 4
  %v0_25b78 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25b78 = add i32 %v0_25b78, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_25b78, i32* %ebx.global-to-local, align 4
  %v0_25b79 = load i32, i32* %eax.global-to-local, align 4
  %v11_25b79 = and i32 %v0_25b79, -216
  %v1_25b7b = load i32, i32* %edx.global-to-local, align 4
  store i32 %v11_25b79, i32* %edx.global-to-local, align 4
  %v4_25b7c = add i32 %v1_25b7b, %v11_25b79
  store i32 %v4_25b7c, i32* @eax, align 4
  %v0_25b80 = call i32 @function_25a55()
  store i32 %v0_25b80, i32* %eax.global-to-local, align 4
  ret i32 %v0_25b80

; uselistorder directives
  uselistorder i32 %v11_25b79, { 1, 0 }
  uselistorder i32 -216, { 1, 0 }
}

define i32 @function_25b8c() local_unnamed_addr {
dec_label_pc_25b8c:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp92
}

define i32 @function_25b90() local_unnamed_addr {
dec_label_pc_25b90:
  %eax.global-to-local = alloca i32, align 4
  %v0_25b90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25b90
}

define i32 @function_25bb2() local_unnamed_addr {
dec_label_pc_25bb2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_25bb2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25bb2 = add i32 %v0_25bb2, -954457020
  %v2_25bb2 = inttoptr i32 %v1_25bb2 to i32*
  %v3_25bb2 = load i32, i32* %v2_25bb2, align 4
  %v4_25bb2 = sub i32 %v3_25bb2, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_25bb2, i32* %v2_25bb2, align 4
  %v0_25bb8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25bb8 = add i32 %v0_25bb8, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_25bb8, i32* %ebx.global-to-local, align 4
  %v2_25bb9 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_25bb9 = load i32, i32* %ecx.global-to-local, align 4
  %v4_25bb9 = lshr i32 %v3_25bb9, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_25bb9 = trunc i32 %v4_25bb9 to i8
  %v6_25bb9 = load i1, i1* %cf.global-to-local, align 1
  %v7_25bb9 = zext i1 %v6_25bb9 to i8
  %v8_25bb9 = sub i8 %v2_25bb9, %v5_25bb9
  %v9_25bb9 = add i8 %v8_25bb9, %v7_25bb9
  %v37_25bb9 = load i32, i32* %eax.global-to-local, align 4
  %v38_25bb9 = inttoptr i32 %v37_25bb9 to i8*
  store i8 %v9_25bb9, i8* %v38_25bb9, align 1
  %v0_25bbb = load i32, i32* %eax.global-to-local, align 4
  %v1_25bbb = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_25bbb, i32* %edx.global-to-local, align 4
  %v4_25bbc = add i32 %v1_25bbb, %v0_25bbb
  %v9_25bbc = icmp ult i32 %v4_25bbc, %v1_25bbb
  store i1 %v9_25bbc, i1* %cf.global-to-local, align 1
  store i32 %v4_25bbc, i32* @eax, align 4
  %v0_25bc0 = call i32 @function_25a60()
  store i32 %v0_25bc0, i32* %eax.global-to-local, align 4
  ret i32 %v0_25bc0

; uselistorder directives
  uselistorder i32 %v1_25bbb, { 1, 0 }
}

define i32 @function_25bc5() local_unnamed_addr {
dec_label_pc_25bc5:
  %v0_25bc5 = load i32, i32* @ebx, align 4
  %v1_25bc5 = add i32 %v0_25bc5, 12
  %v2_25bc5 = inttoptr i32 %v1_25bc5 to i32*
  store i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), i32* %v2_25bc5, align 4
  %v0_25bce = call i32 @function_25a6b()
  ret i32 %v0_25bce

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_39228_type* @global_var_39228.3332 to i32), { 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_25bf8() local_unnamed_addr {
dec_label_pc_25bf8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25c00(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c00:
  %v0_25c00 = load i32, i32* @eax, align 4
  %v11_25c00 = and i32 %v0_25c00, or (i32 zext (i8 ptrtoint (i32* @global_var_e8.3284 to i8) to i32), i32 -256)
  ret i32 %v11_25c00

; uselistorder directives
  uselistorder i8 ptrtoint (i32* @global_var_e8.3284 to i8), { 3, 4, 5, 6, 2, 7, 1, 0 }
}

define i32 @function_25c06() local_unnamed_addr {
dec_label_pc_25c06:
  %v0_25c06 = call i32 @function_25bf8()
  ret i32 %v0_25c06
}

define i32 @function_25c0f() local_unnamed_addr {
dec_label_pc_25c0f:
  %v0_25c11 = call i32 @function_25bf8()
  ret i32 %v0_25c11

; uselistorder directives
  uselistorder i32 ()* @function_25bf8, { 1, 0 }
}

define i32 @function_25c34(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c34:
  store i32 %arg1, i32* @eax, align 4
  %v0_25c38 = call i32 @function_25bc5()
  ret i32 %v0_25c38
}

define i32 @function_25c41() local_unnamed_addr {
dec_label_pc_25c41:
  %v0_25c43 = call i32 @function_25bc5()
  ret i32 %v0_25c43

; uselistorder directives
  uselistorder i32 ()* @function_25bc5, { 1, 0 }
}

define i32 @function_25c45() local_unnamed_addr {
dec_label_pc_25c45:
  %eax.global-to-local = alloca i32, align 4
  %v0_25c45 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25c45
}

define i32 @function_25c55() local_unnamed_addr {
dec_label_pc_25c55:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp92
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c60:
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %v1_25c90 = icmp eq i32 %tmp15, 0
  %v1_25c92 = add i32 %tmp13, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_25c92, i32* @ecx, align 4
  br i1 %v1_25c90, label %bb, label %dec_label_pc_25ca7

bb:                                               ; preds = %dec_label_pc_25c60
  %v3_25ca1 = call i32 @function_25d30(i32 %v1_25c92)
  br label %dec_label_pc_25ca7

dec_label_pc_25ca7:                               ; preds = %bb, %dec_label_pc_25c60
  %v2_25cab = phi i32 [ %v3_25ca1, %bb ], [ %tmp15, %dec_label_pc_25c60 ]
  ret i32 %v2_25cab
}

define i32 @function_25cd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_25cd0:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_25cd0 = load i32, i32* @esi, align 4
  %v1_25cd0 = sub i32 %v0_25cd0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_25cd0, i32* %esi.global-to-local, align 4
  %v3_25cd1 = load i32, i32* @eax, align 4
  %v1_25cd3 = add i32 %v3_25cd1, ptrtoint (i8** @global_var_1.3274 to i32)
  %v4_25cd4 = add i32 %v3_25cd1, add (i32 ptrtoint (i8** @global_var_1.3274 to i32), i32 zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32))
  %v25_25cd4 = and i32 %v4_25cd4, 255
  %v27_25cd4 = and i32 %v1_25cd3, -256
  %v28_25cd4 = or i32 %v25_25cd4, %v27_25cd4
  store i32 %v28_25cd4, i32* %eax.global-to-local, align 4
  %v0_25cd6 = load i32, i32* @ecx, align 4
  %v2_25cd6 = add i32 %v28_25cd4, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_25cd6 = inttoptr i32 %v2_25cd6 to i32*
  store i32 %v0_25cd6, i32* %v3_25cd6, align 4
  %v0_25cd9 = load i32, i32* %esi.global-to-local, align 4
  %v1_25cd9 = add i32 %v0_25cd9, 12
  %v2_25cd9 = inttoptr i32 %v1_25cd9 to i32*
  %v3_25cd9 = load i32, i32* %v2_25cd9, align 4
  %v1_25cdc = load i32, i32* %eax.global-to-local, align 4
  %v2_25cdc = add i32 %v1_25cdc, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_25cdc = inttoptr i32 %v2_25cdc to i32*
  store i32 %v3_25cd9, i32* %v3_25cdc, align 4
  %v4_25cf2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_25cf2
}

define i32 @function_25cfa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_25cfa:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_25cfa = load i32, i32* %ebx.global-to-local, align 4
  %v1_25cfa = add i32 %v0_25cfa, -2095569852
  %v2_25cfa = inttoptr i32 %v1_25cfa to i32*
  %v3_25cfa = load i32, i32* %v2_25cfa, align 4
  %v4_25cfa = sub i32 %v3_25cfa, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_25cfa, i32* %v2_25cfa, align 4
  %v0_25d00 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25d00 = add i32 %v0_25d00, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_25d00, i32* %ebx.global-to-local, align 4
  %v0_25d01 = load i32, i32* %eax.global-to-local, align 4
  %v2_25d01 = load i1, i1* %cf.global-to-local, align 1
  %v3_25d01 = zext i1 %v2_25d01 to i32
  %v4_25d01 = add i32 %v0_25d01, zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32)
  %v5_25d01 = add i32 %v4_25d01, %v3_25d01
  %v25_25d01 = urem i32 %v5_25d01, 256
  %v27_25d01 = and i32 %v0_25d01, -256
  %v28_25d01 = or i32 %v25_25d01, %v27_25d01
  store i32 %v28_25d01, i32* %eax.global-to-local, align 4
  %v1_25d07 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_25d07 = icmp eq i32 %v1_25d07, %arg1
  %v1_25d0e = load i32, i32* %edi.global-to-local, align 4
  %v2_25d0e = inttoptr i32 %v1_25d0e to i32*
  store i32 %v28_25d01, i32* %v2_25d0e, align 4
  %v0_25d10 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_25d10, i32* @eax, align 4
  %v1_25d12 = icmp eq i1 %v3_25d07, false
  br i1 %v1_25d12, label %bb, label %dec_label_pc_25d14

bb:                                               ; preds = %dec_label_pc_25cfa
  %v2_25d12 = call i32 @function_25d4a()
  store i32 %v2_25d12, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_25d14

dec_label_pc_25d14:                               ; preds = %bb, %dec_label_pc_25cfa
  %v0_25d27 = phi i32 [ %v2_25d12, %bb ], [ %v0_25d10, %dec_label_pc_25cfa ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_25d24 = load i32, i32* @esp, align 4
  %v5_25d24 = icmp ugt i32 %v0_25d24, -77
  store i1 %v5_25d24, i1* %cf.global-to-local, align 1
  ret i32 %v0_25d27

; uselistorder directives
  uselistorder i32 %v0_25d01, { 1, 0 }
}

define i32 @function_25d30(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d30:
  %v0_25d3b = load i32, i32* @esi, align 4
  store i32 %v0_25d3b, i32* @eax, align 4
  %v0_25d3d = call i32 @function_25ed0()
  ret i32 %v0_25d3d
}

define i32 @function_25d4a() local_unnamed_addr {
dec_label_pc_25d4a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d50:
  %ebp.global-to-local = alloca i32, align 4
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @eax, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_25d6f = add i32 %tmp22, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_25d6f = inttoptr i32 %v1_25d6f to i32*
  %v3_25d6f = load i32, i32* %v2_25d6f, align 4
  store i32 %v3_25d6f, i32* @edi, align 4
  %v1_25d76 = icmp eq i32 %v3_25d6f, 0
  br i1 %v1_25d76, label %bb, label %dec_label_pc_25d7e

bb:                                               ; preds = %dec_label_pc_25d50
  %v2_25d78 = call i32 @function_25e8f(i32 %tmp22)
  store i32 %v2_25d78, i32* @eax, align 4
  %v0_25d7e.pre = load i32, i32* @ebx, align 4
  %v0_25d95.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_25d7e

dec_label_pc_25d7e:                               ; preds = %bb, %dec_label_pc_25d50
  %v0_25d95.pre = phi i32 [ %v0_25d95.pre.pre, %bb ], [ %v3_25d6f, %dec_label_pc_25d50 ]
  %v0_25d7e = phi i32 [ %v0_25d7e.pre, %bb ], [ %tmp19, %dec_label_pc_25d50 ]
  %v1_25d7e = inttoptr i32 %v0_25d7e to i32*
  %v2_25d7e = load i32, i32* %v1_25d7e, align 4
  store i32 %v2_25d7e, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_25d95

dec_label_pc_25d88:                               ; preds = %dec_label_pc_25d95
  %v5_25d88 = icmp eq i1 %v2_25d9a, false
  br i1 %v5_25d88, label %dec_label_pc_25da6, label %dec_label_pc_25d8c

dec_label_pc_25d8c:                               ; preds = %dec_label_pc_25d88
  %v1_25d8c = add i32 %v0_25d8c, 8
  %v2_25d8c = inttoptr i32 %v1_25d8c to i32*
  %v3_25d8c = load i32, i32* %v2_25d8c, align 4
  store i32 %v3_25d8c, i32* @eax, align 4
  %v1_25d8f = icmp eq i32 %v3_25d8c, 0
  br i1 %v1_25d8f, label %dec_label_pc_25daf, label %dec_label_pc_25d93

dec_label_pc_25d93:                               ; preds = %dec_label_pc_25da6, %dec_label_pc_25d8c
  %v0_25d98.pre = phi i32 [ %v0_25da1, %dec_label_pc_25d8c ], [ %v0_25d98.pre.pre, %dec_label_pc_25da6 ]
  %v0_25d93 = phi i32 [ %v3_25d8c, %dec_label_pc_25d8c ], [ %v3_25da6, %dec_label_pc_25da6 ]
  %v4_25d9a7 = phi i32 [ %v6_25d9a, %dec_label_pc_25d8c ], [ 0, %dec_label_pc_25da6 ]
  store i32 %v0_25d93, i32* @edi, align 4
  br label %dec_label_pc_25d95

dec_label_pc_25d95:                               ; preds = %dec_label_pc_25d93, %dec_label_pc_25d7e
  %v4_25d9a = phi i32 [ %v4_25d9a7, %dec_label_pc_25d93 ], [ %v2_25d7e, %dec_label_pc_25d7e ]
  %v0_25da1 = phi i32 [ %v0_25d98.pre, %dec_label_pc_25d93 ], [ %v2_25d7e, %dec_label_pc_25d7e ]
  %v0_25d8c = phi i32 [ %v0_25d93, %dec_label_pc_25d93 ], [ %v0_25d95.pre, %dec_label_pc_25d7e ]
  %v1_25d95 = add i32 %v0_25d8c, 16
  %v2_25d95 = inttoptr i32 %v1_25d95 to i32*
  %v3_25d95 = load i32, i32* %v2_25d95, align 4
  store i32 %v3_25d95, i32* @edx, align 4
  %v2_25d98 = sub i32 %v0_25da1, %v3_25d95
  %v8_25d98 = xor i32 %v3_25d95, %v0_25da1
  %v9_25d98 = xor i32 %v2_25d98, %v0_25da1
  %v10_25d98 = and i32 %v9_25d98, %v8_25d98
  %v11_25d98 = icmp slt i32 %v10_25d98, 0
  %v13_25d98 = icmp slt i32 %v2_25d98, 0
  %v2_25d9a = icmp ne i1 %v13_25d98, %v11_25d98
  %v3_25d9a = zext i1 %v2_25d9a to i32
  %v5_25d9a = and i32 %v4_25d9a, -256
  %v6_25d9a = or i32 %v3_25d9a, %v5_25d9a
  store i32 %v6_25d9a, i32* @ecx, align 4
  %v12_25d9d = icmp eq i32 %v0_25da1, %v3_25d95
  %v1_25d9f = icmp eq i1 %v12_25d9d, false
  br i1 %v1_25d9f, label %dec_label_pc_25d88, label %dec_label_pc_25da1

dec_label_pc_25da1:                               ; preds = %dec_label_pc_25d95
  %v10_25da1 = icmp eq i32 %v0_25da1, 1
  br i1 %v10_25da1, label %bb29, label %dec_label_pc_25da6

bb29:                                             ; preds = %dec_label_pc_25da1
  %v1_25da4 = call i32 @function_25e08()
  %v0_25da6.pre = load i32, i32* @edi, align 4
  %v0_25d98.pre.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_25da6

dec_label_pc_25da6:                               ; preds = %dec_label_pc_25d88, %bb29, %dec_label_pc_25da1
  %v0_25d98.pre.pre = phi i32 [ %v0_25da1, %dec_label_pc_25d88 ], [ %v0_25d98.pre.pre.pre, %bb29 ], [ %v0_25da1, %dec_label_pc_25da1 ]
  %v0_25da6 = phi i32 [ %v0_25d8c, %dec_label_pc_25d88 ], [ %v0_25da6.pre, %bb29 ], [ %v0_25d8c, %dec_label_pc_25da1 ]
  %v1_25da6 = add i32 %v0_25da6, 12
  %v2_25da6 = inttoptr i32 %v1_25da6 to i32*
  %v3_25da6 = load i32, i32* %v2_25da6, align 4
  store i32 %v3_25da6, i32* @eax, align 4
  %v1_25dab = icmp eq i32 %v3_25da6, 0
  %v1_25dad = icmp eq i1 %v1_25dab, false
  br i1 %v1_25dad, label %dec_label_pc_25d93, label %dec_label_pc_25daf

dec_label_pc_25daf:                               ; preds = %dec_label_pc_25da6, %dec_label_pc_25d8c
  %v0_25dbf12 = phi i32 [ %v0_25d8c, %dec_label_pc_25d8c ], [ %v0_25da6, %dec_label_pc_25da6 ]
  %v0_25db1 = phi i32 [ %v0_25da1, %dec_label_pc_25d8c ], [ %v0_25d98.pre.pre, %dec_label_pc_25da6 ]
  %v0_25daf = phi i32 [ %v6_25d9a, %dec_label_pc_25d8c ], [ 0, %dec_label_pc_25da6 ]
  store i32 %v0_25db1, i32* @ecx, align 4
  %v4_25db3 = trunc i32 %v0_25daf to i8
  %v5_25db3 = icmp eq i8 %v4_25db3, 0
  br i1 %v5_25db3, label %bb30, label %dec_label_pc_25dbb

bb30:                                             ; preds = %dec_label_pc_25daf
  %v1_25db5 = call i32 @function_25e88()
  %v0_25dbf.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_25dbb

dec_label_pc_25dbb:                               ; preds = %bb30, %dec_label_pc_25daf
  %v3_25dc815 = phi i32 [ %v1_25db5, %bb30 ], [ %v0_25daf, %dec_label_pc_25daf ]
  %v0_25dbf = phi i32 [ %v0_25dbf.pre, %bb30 ], [ %v0_25dbf12, %dec_label_pc_25daf ]
  %v2_25dbf = add i32 %tmp22, 12
  %v3_25dbf = inttoptr i32 %v2_25dbf to i32*
  %v4_25dbf = load i32, i32* %v3_25dbf, align 4
  %v15_25dbf = icmp eq i32 %v0_25dbf, %v4_25dbf
  br i1 %v15_25dbf, label %bb31, label %dec_label_pc_25dc8

bb31:                                             ; preds = %dec_label_pc_25dbb
  %v1_25dc2 = call i32 @function_25e99()
  br label %dec_label_pc_25dc8

dec_label_pc_25dc8:                               ; preds = %bb31, %dec_label_pc_25dbb
  %v3_25dc8 = phi i32 [ %v1_25dc2, %bb31 ], [ %v3_25dc815, %dec_label_pc_25dbb ]
  ret i32 %v3_25dc8

; uselistorder directives
  uselistorder i32 %v3_25da6, { 1, 2, 0 }
  uselistorder i32 %v0_25d98.pre.pre, { 1, 0 }
  uselistorder i32 %v6_25d9a, { 0, 2, 1 }
  uselistorder i1 %v2_25d9a, { 1, 0 }
  uselistorder i32 %v2_25d98, { 1, 0 }
  uselistorder i32 %v0_25d8c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_25da1, { 7, 2, 3, 0, 1, 4, 5, 8, 6 }
  uselistorder i32 %v0_25d93, { 1, 0 }
  uselistorder i32 %v2_25d7e, { 1, 0, 2 }
  uselistorder i32 %tmp22, { 2, 1, 0 }
  uselistorder label %dec_label_pc_25da6, { 1, 2, 0 }
}

define i32 @function_25dd5() local_unnamed_addr {
dec_label_pc_25dd5:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v0_25dd5 = load i32, i32* @ecx, align 4
  %v1_25dd5 = load i32, i32* @edx, align 4
  %v12_25dd5 = icmp eq i32 %v0_25dd5, %v1_25dd5
  br i1 %v12_25dd5, label %bb, label %dec_label_pc_25dd9

bb:                                               ; preds = %dec_label_pc_25dd5
  %v1_25dd7 = call i32 @function_25e30()
  store i32 %v1_25dd7, i32* @eax, align 4
  %v0_25dd9.pre = load i32, i32* @edx, align 4
  %v1_25dd9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_25dd9

dec_label_pc_25dd9:                               ; preds = %bb, %dec_label_pc_25dd5
  %v1_25dd9 = phi i32 [ %v1_25dd9.pre, %bb ], [ %v0_25dd5, %dec_label_pc_25dd5 ]
  %v4_25ddb = phi i32 [ %v0_25dd9.pre, %bb ], [ %v1_25dd5, %dec_label_pc_25dd5 ]
  %v2_25dd9 = sub i32 %v4_25ddb, %v1_25dd9
  %v8_25dd9 = xor i32 %v4_25ddb, %v1_25dd9
  %v9_25dd9 = xor i32 %v2_25dd9, %v4_25ddb
  %v10_25dd9 = and i32 %v9_25dd9, %v8_25dd9
  %v11_25dd9 = icmp slt i32 %v10_25dd9, 0
  %v13_25dd9 = icmp slt i32 %v2_25dd9, 0
  %v2_25ddb = icmp ne i1 %v13_25dd9, %v11_25dd9
  %v5_25dde = icmp eq i1 %v2_25ddb, false
  %v1_25de0 = icmp eq i1 %v5_25dde, false
  br i1 %v1_25de0, label %bb10, label %dec_label_pc_25dd9.dec_label_pc_25de2_crit_edge

dec_label_pc_25dd9.dec_label_pc_25de2_crit_edge:  ; preds = %dec_label_pc_25dd9
  %v0_25de2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_25de2

bb10:                                             ; preds = %dec_label_pc_25dd9
  %v3_25de0 = call i32 @function_25e50(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_25de2

dec_label_pc_25de2:                               ; preds = %dec_label_pc_25dd9.dec_label_pc_25de2_crit_edge, %bb10
  %v0_25de2 = phi i32 [ %v0_25de2.pre, %dec_label_pc_25dd9.dec_label_pc_25de2_crit_edge ], [ %v3_25de0, %bb10 ]
  %v1_25de2 = load i32, i32* @esi, align 4
  %v2_25de2 = inttoptr i32 %v1_25de2 to i32*
  store i32 %v0_25de2, i32* %v2_25de2, align 4
  %v0_25de4 = load i32, i32* @esi, align 4
  %v1_25de4 = add i32 %v0_25de4, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_25de4 = inttoptr i32 %v1_25de4 to i8*
  store i8 0, i8* %v2_25de4, align 1
  %v1_25dec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_25dec = icmp eq i32 %v1_25dec, %tmp9
  %v0_25df3 = load i32, i32* @esi, align 4
  store i32 %v0_25df3, i32* @eax, align 4
  %v1_25df5 = icmp eq i1 %v3_25dec, false
  br i1 %v1_25df5, label %bb11, label %dec_label_pc_25dfb

bb11:                                             ; preds = %dec_label_pc_25de2
  %v2_25df5 = call i32 @function_25ed3()
  br label %dec_label_pc_25dfb

dec_label_pc_25dfb:                               ; preds = %bb11, %dec_label_pc_25de2
  %v0_25e02 = phi i32 [ %v2_25df5, %bb11 ], [ %v0_25df3, %dec_label_pc_25de2 ]
  ret i32 %v0_25e02

; uselistorder directives
  uselistorder i32 %v2_25dd9, { 1, 0 }
  uselistorder i32 %v1_25dd5, { 1, 0 }
  uselistorder i32 %v0_25dd5, { 1, 0 }
  uselistorder label %dec_label_pc_25de2, { 1, 0 }
}

define i32 @function_25e08() local_unnamed_addr {
dec_label_pc_25e08:
  %v0_25e08 = load i32, i32* @edi, align 4
  %v1_25e08 = add i32 %v0_25e08, 20
  %v2_25e08 = inttoptr i32 %v1_25e08 to i8*
  %v3_25e08 = load i8, i8* %v2_25e08, align 1
  %v10_25e08 = icmp eq i8 %v3_25e08, 0
  br i1 %v10_25e08, label %bb, label %dec_label_pc_25e12

bb:                                               ; preds = %dec_label_pc_25e08
  %v1_25e0c = call i32 @function_25eaf()
  store i32 %v1_25e0c, i32* @eax, align 4
  br label %dec_label_pc_25e12

dec_label_pc_25e12:                               ; preds = %bb, %dec_label_pc_25e08
  %v0_25e12 = load i32, i32* @ebx, align 4
  %v1_25e12 = add i32 %v0_25e12, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_25e12 = inttoptr i32 %v1_25e12 to i8*
  %v3_25e12 = load i8, i8* %v2_25e12, align 1
  %v10_25e12 = icmp eq i8 %v3_25e12, 0
  br i1 %v10_25e12, label %bb2, label %dec_label_pc_25e1c

bb2:                                              ; preds = %dec_label_pc_25e12
  %v1_25e16 = call i32 @function_25eaf()
  br label %dec_label_pc_25e1c

dec_label_pc_25e1c:                               ; preds = %bb2, %dec_label_pc_25e12
  %v0_25e1c = load i32, i32* @edi, align 4
  %v1_25e1c = add i32 %v0_25e1c, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_25e1c = inttoptr i32 %v1_25e1c to i32*
  %v3_25e1c = load i32, i32* %v2_25e1c, align 4
  ret i32 %v3_25e1c
}

define i32 @function_25e30() local_unnamed_addr {
dec_label_pc_25e30:
  %v0_25e35 = load i32, i32* @ebx, align 4
  %v1_25e35 = add i32 %v0_25e35, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_25e35 = inttoptr i32 %v1_25e35 to i8*
  %v3_25e35 = load i8, i8* %v2_25e35, align 1
  %v10_25e35 = icmp eq i8 %v3_25e35, 0
  br i1 %v10_25e35, label %bb, label %dec_label_pc_25e30.dec_label_pc_25e3b_crit_edge

dec_label_pc_25e30.dec_label_pc_25e3b_crit_edge:  ; preds = %dec_label_pc_25e30
  %v0_25e3b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_25e3b

bb:                                               ; preds = %dec_label_pc_25e30
  %v1_25e39 = call i32 @function_25eaf()
  store i32 %v1_25e39, i32* @eax, align 4
  br label %dec_label_pc_25e3b

dec_label_pc_25e3b:                               ; preds = %dec_label_pc_25e30.dec_label_pc_25e3b_crit_edge, %bb
  %v0_25e3b = phi i32 [ %v0_25e3b.pre, %dec_label_pc_25e30.dec_label_pc_25e3b_crit_edge ], [ %v1_25e39, %bb ]
  %v1_25e3b = add i32 %v0_25e3b, 20
  %v2_25e3b = inttoptr i32 %v1_25e3b to i8*
  %v3_25e3b = load i8, i8* %v2_25e3b, align 1
  %v10_25e3b = icmp eq i8 %v3_25e3b, 0
  br i1 %v10_25e3b, label %bb3, label %dec_label_pc_25e41

bb3:                                              ; preds = %dec_label_pc_25e3b
  %v1_25e3f = call i32 @function_25eaf()
  br label %dec_label_pc_25e41

dec_label_pc_25e41:                               ; preds = %bb3, %dec_label_pc_25e3b
  %v0_25e4e = phi i32 [ %v1_25e3f, %bb3 ], [ %v0_25e3b, %dec_label_pc_25e3b ]
  %v0_25e41 = load i32, i32* @ebx, align 4
  %v1_25e41 = add i32 %v0_25e41, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_25e41 = inttoptr i32 %v1_25e41 to i32*
  %v3_25e41 = load i32, i32* %v2_25e41, align 4
  %v1_25e44 = add i32 %v0_25e4e, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_25e44 = inttoptr i32 %v1_25e44 to i32*
  %v3_25e44 = load i32, i32* %v2_25e44, align 4
  %v5_25e44 = sub i32 %v3_25e44, %v3_25e41
  %v11_25e44 = xor i32 %v3_25e44, %v3_25e41
  %v12_25e44 = xor i32 %v5_25e44, %v3_25e44
  %v13_25e44 = and i32 %v12_25e44, %v11_25e44
  %v14_25e44 = icmp slt i32 %v13_25e44, 0
  %v16_25e44 = icmp slt i32 %v5_25e44, 0
  %v2_25e47 = icmp ne i1 %v16_25e44, %v14_25e44
  %v3_25e47 = zext i1 %v2_25e47 to i32
  %v5_25e47 = and i32 %v3_25e41, -256
  %v6_25e47 = or i32 %v3_25e47, %v5_25e47
  store i32 %v6_25e47, i32* @edx, align 4
  ret i32 %v0_25e4e

; uselistorder directives
  uselistorder i32 %v5_25e44, { 1, 0 }
  uselistorder i32 %v3_25e41, { 1, 0, 2 }
  uselistorder i32 ()* @function_25eaf, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_25e3b, { 1, 0 }
}

define i32 @function_25e50(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e50:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %v2_25e54 = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_25e54, i32* %eax.global-to-local, align 4
  %v0_25e58 = load i32, i32* @ebx, align 4
  %v0_25e5c = load i32, i32* @edi, align 4
  %v5_25e6f = call i32 @unknown_4b9b0(i32 %v2_25e54, i32 %arg1, i32 0, i32 %v0_25e5c, i32 %v0_25e58)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v0_25e7b = load i32, i32* @esi, align 4
  %v1_25e7b = add i32 %v0_25e7b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_25e7b = inttoptr i32 %v1_25e7b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_25e7b, align 1
  %v0_25e7f = load i32, i32* %eax.global-to-local, align 4
  %v1_25e7f = load i32, i32* @esi, align 4
  %v2_25e7f = inttoptr i32 %v1_25e7f to i32*
  store i32 %v0_25e7f, i32* %v2_25e7f, align 4
  %v0_25e81 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25e81
}

define i32 @function_25e88() local_unnamed_addr {
dec_label_pc_25e88:
  %v0_25e88 = load i32, i32* @edi, align 4
  store i32 %v0_25e88, i32* @eax, align 4
  %v0_25e8a = call i32 @function_25dd5()
  ret i32 %v0_25e8a
}

define i32 @function_25e8f(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e8f:
  %v0_25e8f = load i32, i32* @edx, align 4
  %v1_25e91 = add i32 %v0_25e8f, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_25e91, i32* @edi, align 4
  %v0_25e94 = load i32, i32* @eax, align 4
  ret i32 %v0_25e94
}

define i32 @function_25e99() local_unnamed_addr {
dec_label_pc_25e99:
  %stack_var_44 = alloca i32, align 4
  %v2_25e99 = ptrtoint i32* %stack_var_44 to i32
  ret i32 %v2_25e99
}

define i32 @function_25eaf() local_unnamed_addr {
dec_label_pc_25eaf:
  %v3_25ec7 = load i32, i32* @eax, align 4
  ret i32 %v3_25ec7
}

define i32 @function_25ec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ec0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25ed0() local_unnamed_addr {
dec_label_pc_25ed0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25ed3() local_unnamed_addr {
dec_label_pc_25ed3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_25ee0:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_25ef3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_25f07 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v12_25f0a = icmp eq i32 %v1_25f07, %arg3
  %v4_25f10 = sext i8 %arg4 to i32
  store i32 %v4_25f10, i32* @ebp, align 4
  br i1 %v12_25f0a, label %bb, label %dec_label_pc_25f1a

bb:                                               ; preds = %dec_label_pc_25ee0
  %v2_25f14 = call i32 @function_26020(i32 %v0_25ef3)
  %v0_25f1a.pre = load i32, i32* @ebx, align 4
  %v0_25f23.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_25f1a

dec_label_pc_25f1a:                               ; preds = %bb, %dec_label_pc_25ee0
  %v0_25f23 = phi i32 [ %v0_25f23.pre, %bb ], [ %v4_25f10, %dec_label_pc_25ee0 ]
  %v0_25f1a = phi i32 [ %v0_25f1a.pre, %bb ], [ %arg3, %dec_label_pc_25ee0 ]
  %v4_25f2a = trunc i32 %v0_25f23 to i8
  %v5_25f2a = icmp eq i8 %v4_25f2a, 0
  br i1 %v5_25f2a, label %bb114, label %dec_label_pc_25f32

bb114:                                            ; preds = %dec_label_pc_25f1a
  %v1_25f1a = add i32 %v0_25f1a, 16
  %v2_25f2c = trunc i32 %v1_25f1a to i8
  %v3_25f2c = call i32 @function_25fb0(i8 %v2_25f2c)
  %v1_25f35.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_25f32

dec_label_pc_25f32:                               ; preds = %bb114, %dec_label_pc_25f1a
  %v1_25f35 = phi i32 [ %v1_25f35.pre, %bb114 ], [ %v0_25f1a, %dec_label_pc_25f1a ]
  %v0_25f32 = load i32, i32* @edi, align 4
  %v1_25f32 = add i32 %v0_25f32, 12
  %v2_25f32 = inttoptr i32 %v1_25f32 to i32*
  %v3_25f32 = load i32, i32* %v2_25f32, align 4
  store i32 %v3_25f32, i32* @eax, align 4
  %v12_25f35 = icmp eq i32 %v3_25f32, %v1_25f35
  br i1 %v12_25f35, label %bb115, label %dec_label_pc_25f3d

bb115:                                            ; preds = %dec_label_pc_25f32
  %v1_25f37 = call i32 @function_26098()
  br label %dec_label_pc_25f3d

dec_label_pc_25f3d:                               ; preds = %bb115, %dec_label_pc_25f32
  %v3_25f3d = phi i32 [ %v1_25f37, %bb115 ], [ %v3_25f32, %dec_label_pc_25f32 ]
  ret i32 %v3_25f3d

; uselistorder directives
  uselistorder i32 %v3_25f32, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
}

define i32 @function_25f46() local_unnamed_addr {
dec_label_pc_25f46:
  %v0_25f46 = call i32 @function_408dc189()
  ret i32 %v0_25f46
}

define i32 @function_25f50(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f50:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* @ecx, align 4
  %v0_25f59 = load i32, i32* @eax, align 4
  %v4_25f59 = trunc i32 %v0_25f59 to i8
  %v5_25f59 = icmp eq i8 %v4_25f59, 0
  br i1 %v5_25f59, label %bb, label %dec_label_pc_25f61

bb:                                               ; preds = %dec_label_pc_25f50
  %v2_25f5b = call i32 @function_26027(i32 ptrtoint (i32* @0 to i32))
  %v0_25f61.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_25f61

dec_label_pc_25f61:                               ; preds = %bb, %dec_label_pc_25f50
  %v0_25f61 = phi i32 [ %v0_25f61.pre, %bb ], [ %arg1, %dec_label_pc_25f50 ]
  %v1_25f61 = add i32 %v0_25f61, 12
  %v2_25f61 = inttoptr i32 %v1_25f61 to i32*
  %v3_25f61 = load i32, i32* %v2_25f61, align 4
  %v1_25f68 = icmp eq i32 %v3_25f61, 0
  br i1 %v1_25f68, label %bb18, label %dec_label_pc_25f70

bb18:                                             ; preds = %dec_label_pc_25f61
  %v1_25f6a = call i32 @function_26078()
  br label %dec_label_pc_25f70

dec_label_pc_25f70:                               ; preds = %bb18, %dec_label_pc_25f61
  %v0_25f70 = load i32, i32* @ebx, align 4
  %v0_25f78 = load i32, i32* @edi, align 4
  %v0_25f7c = load i32, i32* @esi, align 4
  %v4_25f7f = call i32 @unknown_4bb40(i32 %v0_25f7c, i32 %v0_25f78, i32 %v0_25f70, i32 %v0_25f70)
  %v1_25f8b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_25f8b = icmp eq i32 %v1_25f8b, %tmp10
  %v0_25f92 = load i32, i32* @esi, align 4
  store i32 %v0_25f92, i32* @eax, align 4
  %v1_25f94 = icmp eq i1 %v3_25f8b, false
  br i1 %v1_25f94, label %bb19, label %dec_label_pc_25f9a

bb19:                                             ; preds = %dec_label_pc_25f70
  %v2_25f94 = call i32 @function_260c8()
  br label %dec_label_pc_25f9a

dec_label_pc_25f9a:                               ; preds = %bb19, %dec_label_pc_25f70
  %v0_25fad = phi i32 [ %v2_25f94, %bb19 ], [ %v0_25f92, %dec_label_pc_25f70 ]
  ret i32 %v0_25fad
}

define i32 @function_25fb0(i8 %arg1) local_unnamed_addr {
dec_label_pc_25fb0:
  %v4_25fb0 = sext i8 %arg1 to i32
  store i32 %v4_25fb0, i32* @eax, align 4
  %v5_25fbb = icmp eq i8 %arg1, 0
  br i1 %v5_25fbb, label %bb, label %dec_label_pc_25fc3

bb:                                               ; preds = %dec_label_pc_25fb0
  %v1_25fbd = call i32 @function_26050()
  br label %dec_label_pc_25fc3

dec_label_pc_25fc3:                               ; preds = %bb, %dec_label_pc_25fb0
  %v0_25fc3 = load i32, i32* @edi, align 4
  %v1_25fc3 = add i32 %v0_25fc3, 16
  %v2_25fc3 = inttoptr i32 %v1_25fc3 to i32*
  %v3_25fc3 = load i32, i32* %v2_25fc3, align 4
  store i32 %v3_25fc3, i32* @eax, align 4
  %v1_25fc6 = load i32, i32* @ebx, align 4
  %v12_25fc6 = icmp eq i32 %v3_25fc3, %v1_25fc6
  br i1 %v12_25fc6, label %bb4, label %dec_label_pc_25fce

bb4:                                              ; preds = %dec_label_pc_25fc3
  %v1_25fc8 = call i32 @function_260be()
  br label %dec_label_pc_25fce

dec_label_pc_25fce:                               ; preds = %bb4, %dec_label_pc_25fc3
  %v3_25fce = phi i32 [ %v1_25fc8, %bb4 ], [ %v3_25fc3, %dec_label_pc_25fc3 ]
  ret i32 %v3_25fce

; uselistorder directives
  uselistorder i32 %v3_25fc3, { 1, 0, 2 }
}

define i32 @function_25fd5() local_unnamed_addr {
dec_label_pc_25fd5:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_25fd5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25fd5 = add i32 %v0_25fd5, 273714625
  %v2_25fd5 = inttoptr i32 %v1_25fd5 to i32*
  %v3_25fd5 = load i32, i32* %v2_25fd5, align 4
  %v4_25fd5 = add i32 %v3_25fd5, -1
  store i32 %v4_25fd5, i32* %v2_25fd5, align 4
  %v0_25fdb = load i32, i32* %ebp.global-to-local, align 4
  %v4_25fea = trunc i32 %v0_25fdb to i8
  %v5_25fea = icmp eq i8 %v4_25fea, 0
  br i1 %v5_25fea, label %bb, label %dec_label_pc_25fee

bb:                                               ; preds = %dec_label_pc_25fd5
  %v0_25fdd = load i32, i32* %ecx.global-to-local, align 4
  %v2_25fec = call i32 @function_26027(i32 %v0_25fdd)
  br label %dec_label_pc_25fee

dec_label_pc_25fee:                               ; preds = %bb, %dec_label_pc_25fd5
  %v0_25fee = load i32, i32* %ebx.global-to-local, align 4
  %v1_25fee = add i32 %v0_25fee, 12
  %v2_25fee = inttoptr i32 %v1_25fee to i32*
  %v3_25fee = load i32, i32* %v2_25fee, align 4
  store i32 %v3_25fee, i32* @eax, align 4
  %v1_25ff5 = icmp eq i32 %v3_25fee, 0
  br i1 %v1_25ff5, label %bb105, label %dec_label_pc_25ffd

bb105:                                            ; preds = %dec_label_pc_25fee
  %v1_25ff7 = call i32 @function_260b8()
  br label %dec_label_pc_25ffd

dec_label_pc_25ffd:                               ; preds = %bb105, %dec_label_pc_25fee
  %v0_25ffd = load i32, i32* %ecx.global-to-local, align 4
  %v0_26005 = load i32, i32* @edi, align 4
  %v0_26009 = load i32, i32* @esi, align 4
  %v4_2600c = call i32 @unknown_4bb40(i32 %v0_26009, i32 %v0_26005, i32 %v0_25ffd, i32 %v0_25ffd)
  ret i32 %v4_2600c
}

define i32 @function_26020(i32 %arg1) local_unnamed_addr {
dec_label_pc_26020:
  %v0_26020 = load i32, i32* @edi, align 4
  %v1_26020 = add i32 %v0_26020, 20
  %v2_26020 = inttoptr i32 %v1_26020 to i32*
  %v3_26020 = load i32, i32* %v2_26020, align 4
  ret i32 %v3_26020
}

define i32 @function_26027(i32 %arg1) local_unnamed_addr {
dec_label_pc_26027:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_40 = alloca i32, align 4
  %v2_26027 = ptrtoint i32* %stack_var_40 to i32
  store i32 %v2_26027, i32* %eax.global-to-local, align 4
  %v0_26032 = load i32, i32* @edi, align 4
  %v2_26036 = call i32 @unknown_4bc30(i32 %v2_26027, i32 %v0_26032)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_26042 = load i32, i32* @esi, align 4
  %v2_26042 = inttoptr i32 %v1_26042 to i32*
  store i32 %arg1, i32* %v2_26042, align 4
  %v0_26044 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26044

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26030(i32 %arg1) local_unnamed_addr {
dec_label_pc_26030:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26050() local_unnamed_addr {
dec_label_pc_26050:
  %v0_26050 = load i32, i32* @ebx, align 4
  %v1_26050 = load i32, i32* @esi, align 4
  %v2_26050 = inttoptr i32 %v1_26050 to i32*
  store i32 %v0_26050, i32* %v2_26050, align 4
  %v0_26052 = load i32, i32* @eax, align 4
  ret i32 %v0_26052
}

define i32 @function_26058() local_unnamed_addr {
dec_label_pc_26058:
  %v0_26058 = load i32, i32* @edi, align 4
  %v1_26058 = add i32 %v0_26058, 16
  %v2_26058 = inttoptr i32 %v1_26058 to i32*
  %v3_26058 = load i32, i32* %v2_26058, align 4
  %v1_2605d = add i32 %v3_26058, 16
  %v4_26065 = trunc i32 %v1_2605d to i8
  %v5_26065 = icmp eq i8 %v4_26065, 0
  br i1 %v5_26065, label %bb, label %dec_label_pc_26069

bb:                                               ; preds = %dec_label_pc_26058
  %v2_26067 = call i32 @function_26027(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_26069

dec_label_pc_26069:                               ; preds = %bb, %dec_label_pc_26058
  %v0_26071 = phi i32 [ %v2_26067, %bb ], [ %v1_2605d, %dec_label_pc_26058 ]
  ret i32 %v0_26071

; uselistorder directives
  uselistorder i32 (i32)* @function_26027, { 2, 1, 0 }
}

define i32 @function_26078() local_unnamed_addr {
dec_label_pc_26078:
  %v0_26078 = load i32, i32* @ecx, align 4
  %v0_26084 = load i32, i32* @edi, align 4
  %v0_26088 = load i32, i32* @esi, align 4
  %v4_2608b = call i32 @unknown_4bb40(i32 %v0_26088, i32 %v0_26084, i32 0, i32 %v0_26078)
  ret i32 %v4_2608b
}

define i32 @function_26098() local_unnamed_addr {
dec_label_pc_26098:
  %v0_2609c = load i32, i32* @eax, align 4
  %v0_260a4 = load i32, i32* @edi, align 4
  %v0_260a8 = load i32, i32* @esi, align 4
  %v4_260ab = call i32 @unknown_4bb40(i32 %v0_260a8, i32 %v0_260a4, i32 %v0_2609c, i32 %v0_2609c)
  ret i32 %v4_260ab

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4bb40, { 2, 1, 3, 0 }
}

define i32 @function_260b8() local_unnamed_addr {
dec_label_pc_260b8:
  %v0_260bc = load i32, i32* @eax, align 4
  ret i32 %v0_260bc
}

define i32 @function_260be() local_unnamed_addr {
dec_label_pc_260be:
  %v0_260c6 = load i32, i32* @eax, align 4
  ret i32 %v0_260c6
}

define i32 @function_260c8() local_unnamed_addr {
dec_label_pc_260c8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEj(i32 %arg1) local_unnamed_addr {
dec_label_pc_260d0:
  %edx.global-to-local = alloca i32, align 4
  %tmp21 = call i8 @__decompiler_undefined_function_2()
  %tmp23 = call i8* @__decompiler_undefined_function_1()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* @ebp, align 4
  %v4_260f2 = ptrtoint i8* %tmp23 to i32
  store i32 %v4_260f2, i32* %edx.global-to-local, align 4
  %v1_260f9 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_260f9 = inttoptr i32 %v1_260f9 to i32*
  %v3_260f9 = load i32, i32* %v2_260f9, align 4
  store i32 %v3_260f9, i32* @eax, align 4
  %v1_26108 = icmp eq i32 %v3_260f9, 0
  br i1 %v1_26108, label %bb, label %dec_label_pc_26114

bb:                                               ; preds = %dec_label_pc_260d0
  %v2_2610e = call i32 @function_266cc(i32 %tmp26)
  br label %dec_label_pc_26114

dec_label_pc_26114:                               ; preds = %bb, %dec_label_pc_260d0
  %v0_26114 = phi i32 [ %v2_2610e, %bb ], [ %v3_260f9, %dec_label_pc_260d0 ]
  %v1_26114 = add i32 %v0_26114, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_26114 = inttoptr i32 %v1_26114 to i32*
  %v3_26114 = load i32, i32* %v2_26114, align 4
  store i32 %v3_26114, i32* @eax, align 4
  %v10_26117 = icmp eq i32 %v3_26114, 1
  %v1_2611a = icmp eq i1 %v10_26117, false
  br i1 %v1_2611a, label %bb35, label %dec_label_pc_26120

bb35:                                             ; preds = %dec_label_pc_26114
  %v3_2611a = sext i8 %tmp21 to i32
  %v4_2611a = call i32 @function_266cc(i32 %v3_2611a)
  br label %dec_label_pc_26120

dec_label_pc_26120:                               ; preds = %bb35, %dec_label_pc_26114
  %v0_26120 = load i32, i32* @ebp, align 4
  %v1_26120 = inttoptr i32 %v0_26120 to i32*
  %v2_26120 = load i32, i32* %v1_26120, align 4
  store i32 %v2_26120, i32* @eax, align 4
  %v0_26123 = load i32, i32* %edx.global-to-local, align 4
  %v1_26123 = inttoptr i32 %v0_26123 to i32*
  %v2_26123 = load i32, i32* %v1_26123, align 4
  store i32 %v2_26123, i32* @ebx, align 4
  %v1_26125 = icmp eq i32 %v2_26120, 0
  br i1 %v1_26125, label %bb36, label %dec_label_pc_2612d

bb36:                                             ; preds = %dec_label_pc_26120
  %v2_26127 = sext i8 %tmp21 to i32
  %v3_26127 = call i32 @function_266bd(i32 %v2_26127)
  br label %dec_label_pc_2612d

dec_label_pc_2612d:                               ; preds = %bb36, %dec_label_pc_26120
  %v0_2612d = phi i32 [ %v3_26127, %bb36 ], [ %v2_26120, %dec_label_pc_26120 ]
  %v1_2612d = inttoptr i32 %v0_2612d to i32*
  %v2_2612d = load i32, i32* %v1_2612d, align 4
  store i32 %v2_2612d, i32* @eax, align 4
  %v1_2612f = icmp eq i32 %v2_2612d, 0
  br i1 %v1_2612f, label %bb37, label %dec_label_pc_26137

bb37:                                             ; preds = %dec_label_pc_2612d
  %v2_26131 = sext i8 %tmp21 to i32
  %v3_26131 = call i32 @function_266c2(i32 %v2_26131)
  br label %dec_label_pc_26137

dec_label_pc_26137:                               ; preds = %bb37, %dec_label_pc_2612d
  %v1_26137 = phi i32 [ %v3_26131, %bb37 ], [ %v2_2612d, %dec_label_pc_2612d ]
  %v0_26137 = load i32, i32* @ebx, align 4
  %v12_26137 = icmp eq i32 %v0_26137, %v1_26137
  br i1 %v12_26137, label %bb38, label %dec_label_pc_2613f

bb38:                                             ; preds = %dec_label_pc_26137
  %v2_26139 = sext i8 %tmp21 to i32
  %v3_26139 = call i32 @function_261d0(i32 %v2_26139)
  br label %dec_label_pc_2613f

dec_label_pc_2613f:                               ; preds = %bb38, %dec_label_pc_26137
  %v4_26139 = phi i32 [ %v3_26139, %bb38 ], [ %v1_26137, %dec_label_pc_26137 ]
  ret i32 %v4_26139

; uselistorder directives
  uselistorder i32 %v1_26137, { 1, 0 }
  uselistorder i8 %tmp21, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_266cc, { 1, 0 }
}

define i32 @function_261d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_261d0:
  %v1_261d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_261d4 = xor i32 %v1_261d4, %arg1
  %v3_261d4 = icmp eq i32 %v2_261d4, 0
  store i32 %v2_261d4, i32* @eax, align 4
  %v0_261db = load i32, i32* @ebx, align 4
  %v1_261db = load i32, i32* @ebp, align 4
  %v2_261db = add i32 %v1_261db, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_261db = inttoptr i32 %v2_261db to i32*
  store i32 %v0_261db, i32* %v3_261db, align 4
  %v1_261de = icmp eq i1 %v3_261d4, false
  br i1 %v1_261de, label %bb, label %dec_label_pc_261d0.dec_label_pc_261e4_crit_edge

dec_label_pc_261d0.dec_label_pc_261e4_crit_edge:  ; preds = %dec_label_pc_261d0
  %v0_261eb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_261e4

bb:                                               ; preds = %dec_label_pc_261d0
  %v2_261de = call i32 @function_266c7()
  br label %dec_label_pc_261e4

dec_label_pc_261e4:                               ; preds = %dec_label_pc_261d0.dec_label_pc_261e4_crit_edge, %bb
  %v0_261eb = phi i32 [ %v0_261eb.pre, %dec_label_pc_261d0.dec_label_pc_261e4_crit_edge ], [ %v2_261de, %bb ]
  ret i32 %v0_261eb

; uselistorder directives
  uselistorder label %dec_label_pc_261e4, { 1, 0 }
}

define i32 @function_26203() local_unnamed_addr {
dec_label_pc_26203:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2620b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2620b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26229() local_unnamed_addr {
dec_label_pc_26229:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26230(i32 %arg1) local_unnamed_addr {
dec_label_pc_26230:
  %v0_26232 = load i32, i32* @eax, align 4
  ret i32 %v0_26232
}

define i32 @function_26238(i32 %arg1) local_unnamed_addr {
dec_label_pc_26238:
  %tmp6 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v0_26238 = load i32, i32* @edi, align 4
  %v1_26238 = add i32 %v0_26238, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_26238 = inttoptr i32 %v1_26238 to i8*
  %v3_26238 = load i8, i8* %v2_26238, align 1
  %v2_2623c = load i32, i32* @esi, align 4
  store i32 %v2_2623c, i32* @eax, align 4
  %v5_26246 = icmp eq i8 %v3_26238, 0
  br i1 %v5_26246, label %bb, label %dec_label_pc_2624a

bb:                                               ; preds = %dec_label_pc_26238
  %v2_26248 = call i32 @function_262c8(i32 %v2_2623c)
  br label %dec_label_pc_2624a

dec_label_pc_2624a:                               ; preds = %bb, %dec_label_pc_26238
  %v2_2624c = load i32, i32* @ebp, align 4
  store i32 %v2_2624c, i32* @eax, align 4
  %v1_2624f = icmp eq i32 %v2_2624c, 0
  br i1 %v1_2624f, label %bb11, label %dec_label_pc_26257

bb11:                                             ; preds = %dec_label_pc_2624a
  %v2_26251 = call i32 @function_266bd(i32 %v2_2623c)
  %v2_26257.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_26257

dec_label_pc_26257:                               ; preds = %bb11, %dec_label_pc_2624a
  %v2_26257 = phi i32 [ %v2_26257.pre, %bb11 ], [ %v2_2624c, %dec_label_pc_2624a ]
  store i32 %v2_26257, i32* @eax, align 4
  %v1_26259 = icmp eq i32 %v2_26257, 0
  br i1 %v1_26259, label %bb12, label %dec_label_pc_26261

bb12:                                             ; preds = %dec_label_pc_26257
  %v2_2625b = call i32 @function_266c2(i32 %v2_2623c)
  br label %dec_label_pc_26261

dec_label_pc_26261:                               ; preds = %bb12, %dec_label_pc_26257
  %v0_26261 = phi i32 [ %v2_2625b, %bb12 ], [ %v2_26257, %dec_label_pc_26257 ]
  %v1_26261 = load i32, i32* @ebx, align 4
  %v12_26261 = icmp eq i32 %v0_26261, %v1_26261
  br i1 %v12_26261, label %bb13, label %dec_label_pc_26269

bb13:                                             ; preds = %dec_label_pc_26261
  %v2_26263 = call i32 @function_261d0(i32 %v2_2623c)
  br label %dec_label_pc_26269

dec_label_pc_26269:                               ; preds = %bb13, %dec_label_pc_26261
  %v0_262885 = phi i32 [ %v2_26263, %bb13 ], [ %v0_26261, %dec_label_pc_26261 ]
  %v5_26269 = add i32 %arg1, ptrtoint (i8** @global_var_1.3274 to i32)
  %tmp15 = icmp ugt i32 %tmp7, %v5_26269
  br i1 %tmp15, label %dec_label_pc_26283, label %dec_label_pc_26278

dec_label_pc_26278:                               ; preds = %dec_label_pc_26269
  %v10_26278 = icmp eq i8 %tmp6, 0
  br i1 %v10_26278, label %bb14, label %dec_label_pc_26283

bb14:                                             ; preds = %dec_label_pc_26278
  %v3_2627d = call i32 @function_261d0(i32 %v5_26269)
  br label %dec_label_pc_26283

dec_label_pc_26283:                               ; preds = %dec_label_pc_26269, %bb14, %dec_label_pc_26278
  %v0_26288 = phi i32 [ %v0_262885, %dec_label_pc_26269 ], [ %v3_2627d, %bb14 ], [ %v0_262885, %dec_label_pc_26278 ]
  ret i32 %v0_26288

; uselistorder directives
  uselistorder i32 %v5_26269, { 1, 0 }
  uselistorder i32 %v0_26261, { 1, 0 }
  uselistorder i32 %v2_26257, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_261d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_26283, { 1, 2, 0 }
}

define i32 @function_2628e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2628e:
  %v3_262a6 = load i32, i32* @eax, align 4
  ret i32 %v3_262a6
}

define i32 @function_26290(i32 %arg1) local_unnamed_addr {
dec_label_pc_26290:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_262b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_262b8:
  %v0_262b8 = load i32, i32* @eax, align 4
  ret i32 %v0_262b8
}

define i32 @function_262c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_262c8:
  %ecx.global-to-local = alloca i32, align 4
  %v0_262c8 = load i32, i32* @ebx, align 4
  %v1_262c8 = add i32 %v0_262c8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_262c8 = inttoptr i32 %v1_262c8 to i32*
  %v3_262c8 = load i32, i32* %v2_262c8, align 4
  %v1_262cb = icmp eq i32 %v3_262c8, 0
  br i1 %v1_262cb, label %bb, label %dec_label_pc_262d7

bb:                                               ; preds = %dec_label_pc_262c8
  %v2_262d1 = call i32 @function_26489(i32 0)
  br label %dec_label_pc_262d7

dec_label_pc_262d7:                               ; preds = %bb, %dec_label_pc_262c8
  %v1_262db = add i32 %v3_262c8, ptrtoint (i32* @global_var_44.3548 to i32)
  %v2_262e2 = load i32, i32* @ebp, align 4
  store i32 %v2_262e2, i32* @eax, align 4
  %v1_262e5 = icmp eq i32 %v2_262e2, 0
  br i1 %v1_262e5, label %bb33, label %dec_label_pc_262ed

bb33:                                             ; preds = %dec_label_pc_262d7
  %v2_262e7 = call i32 @function_266bd(i32 %v1_262db)
  %v2_262ed.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_262ed

dec_label_pc_262ed:                               ; preds = %bb33, %dec_label_pc_262d7
  %v0_26301 = phi i32 [ %v2_262ed.pre, %bb33 ], [ %v2_262e2, %dec_label_pc_262d7 ]
  store i32 %v0_26301, i32* @eax, align 4
  %v1_262ef = icmp eq i32 %v0_26301, 0
  br i1 %v1_262ef, label %bb34, label %dec_label_pc_262fb

bb34:                                             ; preds = %dec_label_pc_262ed
  %v2_262f5 = call i32 @function_266c2(i32 0)
  store i32 %v2_262f5, i32* @eax, align 4
  br label %dec_label_pc_262fb

dec_label_pc_262fb:                               ; preds = %bb34, %dec_label_pc_262ed
  %v0_262ff = load i32, i32* @ebx, align 4
  %v12_262ff = icmp eq i32 %v0_262ff, %v0_26301
  br i1 %v12_262ff, label %bb35, label %dec_label_pc_2630b

bb35:                                             ; preds = %dec_label_pc_262fb
  %v2_26305 = call i32 @function_26726(i32 %v0_26301)
  store i32 %v2_26305, i32* @eax, align 4
  br label %dec_label_pc_2630b

dec_label_pc_2630b:                               ; preds = %bb35, %dec_label_pc_262fb
  store i32 %v0_26301, i32* %ecx.global-to-local, align 4
  %v1_2630f = add i32 %v0_26301, 16
  %v2_2630f = inttoptr i32 %v1_2630f to i32*
  %v3_2630f = load i32, i32* %v2_2630f, align 4
  %v1_26312 = icmp eq i32 %v3_2630f, 0
  br i1 %v1_26312, label %bb36, label %dec_label_pc_2631a

bb36:                                             ; preds = %dec_label_pc_2630b
  %v1_26314 = call i32 @function_266f0()
  %v0_2631e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_2631a

dec_label_pc_2631a:                               ; preds = %bb36, %dec_label_pc_2630b
  %v0_2631e = phi i32 [ %v0_2631e.pre, %bb36 ], [ %v0_26301, %dec_label_pc_2630b ]
  %v1_2631e = add i32 %v0_2631e, 12
  store i32 %v1_2631e, i32* %ecx.global-to-local, align 4
  store i32 %v1_2631e, i32* @edi, align 4
  %v2_26327 = inttoptr i32 %v1_262db to i32*
  %v3_26327 = load i32, i32* %v2_26327, align 4
  store i32 %v3_26327, i32* @edx, align 4
  store i32 %v3_2630f, i32* @eax, align 4
  br label %dec_label_pc_26340.outer

dec_label_pc_26340.outer:                         ; preds = %dec_label_pc_2634c.dec_label_pc_26340.backedge_crit_edge, %dec_label_pc_2631a
  %v4_2635512.ph = phi i32 [ %v0_2634c, %dec_label_pc_2634c.dec_label_pc_26340.backedge_crit_edge ], [ %v1_2631e, %dec_label_pc_2631a ]
  %v1_26330.ph = phi i32 [ %v0_26343.pre.pre, %dec_label_pc_2634c.dec_label_pc_26340.backedge_crit_edge ], [ %v3_26327, %dec_label_pc_2631a ]
  %v0_26339.ph = phi i32 [ %v3_2634e, %dec_label_pc_2634c.dec_label_pc_26340.backedge_crit_edge ], [ %v3_2630f, %dec_label_pc_2631a ]
  br label %dec_label_pc_26340

dec_label_pc_26330:                               ; preds = %dec_label_pc_26340
  %v8_26343 = xor i32 %v3_26340, %v1_26330.ph
  %v2_26330 = sub i32 %v3_26340, %v1_26330.ph
  %v9_26330 = xor i32 %v2_26330, %v3_26340
  %v10_26330 = and i32 %v9_26330, %v8_26343
  %v11_26330 = icmp slt i32 %v10_26330, 0
  %v13_26330 = icmp slt i32 %v2_26330, 0
  %v2_26332 = icmp ne i1 %v13_26330, %v11_26330
  %v3_26332 = zext i1 %v2_26332 to i32
  %v5_26332 = and i32 %v3_26340, -256
  %v6_26332 = or i32 %v3_26332, %v5_26332
  store i32 %v6_26332, i32* @ecx, align 4
  %v5_26335 = icmp eq i1 %v2_26332, false
  br i1 %v5_26335, label %dec_label_pc_2634c.loopexit, label %dec_label_pc_26339

dec_label_pc_26339:                               ; preds = %dec_label_pc_26330
  %v1_26339 = add i32 %v0_26339, 12
  %v2_26339 = inttoptr i32 %v1_26339 to i32*
  %v3_26339 = load i32, i32* %v2_26339, align 4
  store i32 %v3_26339, i32* @eax, align 4
  %v1_2633c = icmp eq i32 %v3_26339, 0
  br i1 %v1_2633c, label %dec_label_pc_26355.loopexit, label %dec_label_pc_26340

dec_label_pc_26340:                               ; preds = %dec_label_pc_26340.outer, %dec_label_pc_26339
  %v0_26339 = phi i32 [ %v3_26339, %dec_label_pc_26339 ], [ %v0_26339.ph, %dec_label_pc_26340.outer ]
  %v1_26340 = add i32 %v0_26339, 16
  %v2_26340 = inttoptr i32 %v1_26340 to i32*
  %v3_26340 = load i32, i32* %v2_26340, align 4
  store i32 %v3_26340, i32* @ecx, align 4
  %v12_26343 = icmp eq i32 %v3_26340, %v1_26330.ph
  %v1_26345 = icmp eq i1 %v12_26343, false
  br i1 %v1_26345, label %dec_label_pc_26330, label %dec_label_pc_26347

dec_label_pc_26347:                               ; preds = %dec_label_pc_26340
  %v10_26347 = icmp eq i32 %v1_26330.ph, 1
  br i1 %v10_26347, label %bb39, label %dec_label_pc_2634c

bb39:                                             ; preds = %dec_label_pc_26347
  %v1_2634a = call i32 @function_26398()
  br label %dec_label_pc_2634c

dec_label_pc_2634c.loopexit:                      ; preds = %dec_label_pc_26330
  br label %dec_label_pc_2634c

dec_label_pc_2634c:                               ; preds = %dec_label_pc_2634c.loopexit, %bb39, %dec_label_pc_26347
  %v0_2634c = phi i32 [ %v1_2634a, %bb39 ], [ %v0_26339, %dec_label_pc_26347 ], [ %v0_26339, %dec_label_pc_2634c.loopexit ]
  store i32 %v0_2634c, i32* @edi, align 4
  %v1_2634e = add i32 %v0_2634c, 8
  %v2_2634e = inttoptr i32 %v1_2634e to i32*
  %v3_2634e = load i32, i32* %v2_2634e, align 4
  store i32 %v3_2634e, i32* @eax, align 4
  %v1_26351 = icmp eq i32 %v3_2634e, 0
  %v1_26353 = icmp eq i1 %v1_26351, false
  br i1 %v1_26353, label %dec_label_pc_2634c.dec_label_pc_26340.backedge_crit_edge, label %dec_label_pc_26355

dec_label_pc_2634c.dec_label_pc_26340.backedge_crit_edge: ; preds = %dec_label_pc_2634c
  %v0_26343.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_26340.outer

dec_label_pc_26355.loopexit:                      ; preds = %dec_label_pc_26339
  br label %dec_label_pc_26355

dec_label_pc_26355:                               ; preds = %dec_label_pc_2634c, %dec_label_pc_26355.loopexit
  %v4_26355 = phi i32 [ %v4_2635512.ph, %dec_label_pc_26355.loopexit ], [ %v0_2634c, %dec_label_pc_2634c ]
  %v15_26355 = icmp eq i32 %v1_2631e, %v4_26355
  br i1 %v15_26355, label %bb40, label %dec_label_pc_2635f

bb40:                                             ; preds = %dec_label_pc_26355
  %v1_26359 = call i32 @function_266f0()
  %v0_2635f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_2635f

dec_label_pc_2635f:                               ; preds = %bb40, %dec_label_pc_26355
  %v0_2635f = phi i32 [ %v0_2635f.pre, %bb40 ], [ %v4_26355, %dec_label_pc_26355 ]
  %v1_2635f = add i32 %v0_2635f, 16
  %v2_2635f = inttoptr i32 %v1_2635f to i32*
  %v3_2635f = load i32, i32* %v2_2635f, align 4
  store i32 %v3_2635f, i32* @eax, align 4
  %v1_26362 = load i32, i32* @edx, align 4
  %v2_26362 = sub i32 %v3_2635f, %v1_26362
  %v8_26362 = xor i32 %v1_26362, %v3_2635f
  %v9_26362 = xor i32 %v2_26362, %v3_2635f
  %v10_26362 = and i32 %v9_26362, %v8_26362
  %v11_26362 = icmp slt i32 %v10_26362, 0
  %v13_26362 = icmp slt i32 %v2_26362, 0
  %v2_26364 = icmp ne i1 %v13_26362, %v11_26362
  %v3_26364 = zext i1 %v2_26364 to i32
  %v4_26364 = load i32, i32* @ecx, align 4
  %v5_26364 = and i32 %v4_26364, -256
  %v6_26364 = or i32 %v3_26364, %v5_26364
  store i32 %v6_26364, i32* @ecx, align 4
  %v12_26367 = icmp eq i32 %v3_2635f, %v1_26362
  br i1 %v12_26367, label %bb41, label %dec_label_pc_2636b

bb41:                                             ; preds = %dec_label_pc_2635f
  %v1_26369 = call i32 @function_263c8()
  store i32 %v1_26369, i32* @eax, align 4
  %v0_2636b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_2636b

dec_label_pc_2636b:                               ; preds = %bb41, %dec_label_pc_2635f
  %v3_2638b17 = phi i32 [ %v1_26369, %bb41 ], [ %v3_2635f, %dec_label_pc_2635f ]
  %v0_2636b = phi i32 [ %v0_2636b.pre, %bb41 ], [ %v6_26364, %dec_label_pc_2635f ]
  %v4_2636b = trunc i32 %v0_2636b to i8
  %v5_2636b = icmp eq i8 %v4_2636b, 0
  br i1 %v5_2636b, label %bb42, label %dec_label_pc_26373

bb42:                                             ; preds = %dec_label_pc_2636b
  %v1_2636d = call i32 @function_265e1()
  br label %dec_label_pc_26373

dec_label_pc_26373:                               ; preds = %bb42, %dec_label_pc_2636b
  %v3_2638b = phi i32 [ %v1_2636d, %bb42 ], [ %v3_2638b17, %dec_label_pc_2636b ]
  ret i32 %v3_2638b

; uselistorder directives
  uselistorder i32 %v2_26362, { 1, 0 }
  uselistorder i32 %v3_2635f, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v4_26355, { 1, 0 }
  uselistorder i32 %v3_2634e, { 1, 2, 0 }
  uselistorder i32 %v0_2634c, { 0, 3, 2, 1 }
  uselistorder i32 %v3_26340, { 0, 5, 1, 4, 2, 3 }
  uselistorder i32 %v0_26339, { 0, 1, 3, 2 }
  uselistorder i32 %v2_26330, { 1, 0 }
  uselistorder i32 %v0_26301, { 1, 5, 6, 2, 0, 4, 3 }
  uselistorder i32 ()* @function_266f0, { 1, 0 }
  uselistorder i32 (i32)* @function_266c2, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_266bd, { 1, 0, 2 }
  uselistorder label %dec_label_pc_26355, { 1, 0 }
  uselistorder label %dec_label_pc_26340, { 1, 0 }
}

define i32 @function_26398() local_unnamed_addr {
dec_label_pc_26398:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_2639c = add i32 %tmp, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2639c = inttoptr i32 %v1_2639c to i8*
  %v3_2639c = load i8, i8* %v2_2639c, align 1
  %v10_2639c = icmp eq i8 %v3_2639c, 0
  br i1 %v10_2639c, label %bb, label %dec_label_pc_26398.dec_label_pc_263a6_crit_edge

dec_label_pc_26398.dec_label_pc_263a6_crit_edge:  ; preds = %dec_label_pc_26398
  %v0_263a6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_263a6

bb:                                               ; preds = %dec_label_pc_26398
  %v1_263a0 = call i32 @function_26699()
  store i32 %v1_263a0, i32* @eax, align 4
  br label %dec_label_pc_263a6

dec_label_pc_263a6:                               ; preds = %dec_label_pc_26398.dec_label_pc_263a6_crit_edge, %bb
  %v0_263a6 = phi i32 [ %v0_263a6.pre, %dec_label_pc_26398.dec_label_pc_263a6_crit_edge ], [ %v1_263a0, %bb ]
  %v1_263a6 = add i32 %v0_263a6, 20
  %v2_263a6 = inttoptr i32 %v1_263a6 to i8*
  %v3_263a6 = load i8, i8* %v2_263a6, align 1
  %v10_263a6 = icmp eq i8 %v3_263a6, 0
  br i1 %v10_263a6, label %bb3, label %dec_label_pc_263b0

bb3:                                              ; preds = %dec_label_pc_263a6
  %v1_263aa = call i32 @function_26699()
  br label %dec_label_pc_263b0

dec_label_pc_263b0:                               ; preds = %bb3, %dec_label_pc_263a6
  %v0_263bd = phi i32 [ %v1_263aa, %bb3 ], [ %v0_263a6, %dec_label_pc_263a6 ]
  %v1_263b4 = add i32 %tmp, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_263b4 = inttoptr i32 %v1_263b4 to i32*
  %v3_263b4 = load i32, i32* %v2_263b4, align 4
  %v1_263b7 = add i32 %v0_263bd, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_263b7 = inttoptr i32 %v1_263b7 to i32*
  %v3_263b7 = load i32, i32* %v2_263b7, align 4
  %v5_263b7 = sub i32 %v3_263b7, %v3_263b4
  %v11_263b7 = xor i32 %v3_263b7, %v3_263b4
  %v12_263b7 = xor i32 %v5_263b7, %v3_263b7
  %v13_263b7 = and i32 %v12_263b7, %v11_263b7
  %v14_263b7 = icmp slt i32 %v13_263b7, 0
  %v16_263b7 = icmp slt i32 %v5_263b7, 0
  %v2_263ba = icmp ne i1 %v16_263b7, %v14_263b7
  %v3_263ba = zext i1 %v2_263ba to i32
  %v5_263ba = and i32 %v3_263b4, -256
  %v6_263ba = or i32 %v3_263ba, %v5_263ba
  store i32 %v6_263ba, i32* @ecx, align 4
  ret i32 %v0_263bd

; uselistorder directives
  uselistorder i32 %v5_263b7, { 1, 0 }
  uselistorder i32 %v3_263b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_263a6, { 1, 0 }
}

define i32 @function_263c8() local_unnamed_addr {
dec_label_pc_263c8:
  %v0_263c8 = load i32, i32* @edx, align 4
  %v10_263c8 = icmp eq i32 %v0_263c8, 1
  br i1 %v10_263c8, label %bb, label %dec_label_pc_263c8.dec_label_pc_263d1_crit_edge

dec_label_pc_263c8.dec_label_pc_263d1_crit_edge:  ; preds = %dec_label_pc_263c8
  %v0_263d1.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_263d1

bb:                                               ; preds = %dec_label_pc_263c8
  %v1_263cb = call i32 @function_264b8()
  store i32 %v1_263cb, i32* @eax, align 4
  br label %dec_label_pc_263d1

dec_label_pc_263d1:                               ; preds = %dec_label_pc_263c8.dec_label_pc_263d1_crit_edge, %bb
  %v0_263d1 = phi i32 [ %v0_263d1.pre, %dec_label_pc_263c8.dec_label_pc_263d1_crit_edge ], [ %v1_263cb, %bb ]
  %v10_263d1 = icmp eq i32 %v0_263d1, 1
  br i1 %v10_263d1, label %bb7, label %dec_label_pc_263d6

bb7:                                              ; preds = %dec_label_pc_263d1
  %v1_263d4 = call i32 @function_26423()
  br label %dec_label_pc_263d6

dec_label_pc_263d6:                               ; preds = %bb7, %dec_label_pc_263d1
  %v3_263dd4 = phi i32 [ %v1_263d4, %bb7 ], [ %v0_263d1, %dec_label_pc_263d1 ]
  %v0_263d6 = load i32, i32* @ebx, align 4
  %v1_263d6 = load i32, i32* @edi, align 4
  %v2_263d6 = add i32 %v1_263d6, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_263d6 = inttoptr i32 %v2_263d6 to i32*
  %v4_263d6 = load i32, i32* %v3_263d6, align 4
  %v15_263d6 = icmp eq i32 %v0_263d6, %v4_263d6
  br i1 %v15_263d6, label %bb8, label %dec_label_pc_263db

bb8:                                              ; preds = %dec_label_pc_263d6
  %v1_263d9 = call i32 @function_26452()
  br label %dec_label_pc_263db

dec_label_pc_263db:                               ; preds = %bb8, %dec_label_pc_263d6
  %v3_263dd = phi i32 [ %v1_263d9, %bb8 ], [ %v3_263dd4, %dec_label_pc_263d6 ]
  ret i32 %v3_263dd

; uselistorder directives
  uselistorder i32 %v0_263d1, { 1, 0 }
  uselistorder label %dec_label_pc_263d1, { 1, 0 }
}

define i32 @function_263fa() local_unnamed_addr {
dec_label_pc_263fa:
  %eax.global-to-local = alloca i32, align 4
  %v0_263fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_263fa
}

define i32 @function_263ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_263ff:
  %edx.global-to-local = alloca i32, align 4
  %v0_263ff = load i32, i32* %edx.global-to-local, align 4
  %v2_263ff = icmp slt i32 %v0_263ff, 0
  br i1 %v2_263ff, label %bb, label %dec_label_pc_26407

bb:                                               ; preds = %dec_label_pc_263ff
  %v1_26401 = call i32 @function_265f1()
  br label %dec_label_pc_26407

dec_label_pc_26407:                               ; preds = %bb, %dec_label_pc_263ff
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_2640b = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2640b = inttoptr i32 %v1_2640b to i32*
  %v3_2640b = load i32, i32* %v2_2640b, align 4
  store i32 %v3_2640b, i32* @eax, align 4
  %v1_2640e = icmp eq i32 %v3_2640b, 0
  br i1 %v1_2640e, label %bb99, label %dec_label_pc_26416

bb99:                                             ; preds = %dec_label_pc_26407
  %v1_26410 = call i32 @function_26602()
  store i32 %v1_26410, i32* @eax, align 4
  br label %dec_label_pc_26416

dec_label_pc_26416:                               ; preds = %bb99, %dec_label_pc_26407
  %v0_26416 = phi i32 [ %v1_26410, %bb99 ], [ %v3_2640b, %dec_label_pc_26407 ]
  %v1_26416 = inttoptr i32 %v0_26416 to i32*
  %v2_26416 = load i32, i32* %v1_26416, align 4
  store i32 %v2_26416, i32* %edx.global-to-local, align 4
  %v1_2641e = call i32 @function_2620b(i32 %v0_26416)
  ret i32 %v1_2641e

; uselistorder directives
  uselistorder i32 %v0_26416, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26423() local_unnamed_addr {
dec_label_pc_26423:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_26423 = load i32, i32* @edi, align 4
  %v1_26423 = add i32 %v0_26423, 20
  %v2_26423 = inttoptr i32 %v1_26423 to i8*
  %v3_26423 = load i8, i8* %v2_26423, align 1
  %v10_26423 = icmp eq i8 %v3_26423, 0
  br i1 %v10_26423, label %bb, label %dec_label_pc_2642d

bb:                                               ; preds = %dec_label_pc_26423
  %v1_26427 = call i32 @function_26699()
  br label %dec_label_pc_2642d

dec_label_pc_2642d:                               ; preds = %bb, %dec_label_pc_26423
  %v1_26431 = add i32 %tmp, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_26431 = inttoptr i32 %v1_26431 to i8*
  %v3_26431 = load i8, i8* %v2_26431, align 1
  %v10_26431 = icmp eq i8 %v3_26431, 0
  br i1 %v10_26431, label %bb1, label %dec_label_pc_2643b

bb1:                                              ; preds = %dec_label_pc_2642d
  %v1_26435 = call i32 @function_26699()
  br label %dec_label_pc_2643b

dec_label_pc_2643b:                               ; preds = %bb1, %dec_label_pc_2642d
  %v0_2643f = load i32, i32* @edi, align 4
  %v1_2643f = add i32 %v0_2643f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_2643f = inttoptr i32 %v1_2643f to i32*
  %v3_2643f = load i32, i32* %v2_2643f, align 4
  %v1_26442 = add i32 %tmp, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_26442 = inttoptr i32 %v1_26442 to i32*
  %v3_26442 = load i32, i32* %v2_26442, align 4
  %v5_26442 = sub i32 %v3_26442, %v3_2643f
  %v11_26442 = xor i32 %v3_26442, %v3_2643f
  %v12_26442 = xor i32 %v5_26442, %v3_26442
  %v13_26442 = and i32 %v12_26442, %v11_26442
  %v14_26442 = icmp slt i32 %v13_26442, 0
  %v16_26442 = icmp slt i32 %v5_26442, 0
  %v2_26445 = icmp ne i1 %v16_26442, %v14_26442
  %v3_26445 = zext i1 %v2_26445 to i32
  %v5_26445 = and i32 %v3_2643f, -256
  %v6_26445 = or i32 %v3_26445, %v5_26445
  ret i32 %v6_26445

; uselistorder directives
  uselistorder i32 %v5_26442, { 1, 0 }
  uselistorder i32 %v3_2643f, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_26452() local_unnamed_addr {
dec_label_pc_26452:
  %v2_26456 = load i32, i32* @ebx, align 4
  store i32 %v2_26456, i32* @ecx, align 4
  %v0_26460 = load i32, i32* @esi, align 4
  store i32 %v0_26460, i32* @eax, align 4
  br label %dec_label_pc_2647a

dec_label_pc_26468:                               ; preds = %dec_label_pc_2647a
  %v16_2647a = icmp slt i32 %v5_2647a, 0
  %v12_2647a = xor i32 %v5_2647a, %v0_2647a
  %v11_2647a = xor i32 %v4_2647a, %v0_2647a
  %v13_2647a = and i32 %v12_2647a, %v11_2647a
  %v14_2647a = icmp slt i32 %v13_2647a, 0
  %v2_26468 = icmp ne i1 %v16_2647a, %v14_2647a
  %v3_26468 = zext i1 %v2_26468 to i32
  %v4_26468 = load i32, i32* @ecx, align 4
  %v5_26468 = and i32 %v4_26468, -256
  %v6_26468 = or i32 %v5_26468, %v3_26468
  store i32 %v6_26468, i32* @ecx, align 4
  %v5_2646b = icmp eq i1 %v2_26468, false
  br i1 %v5_2646b, label %dec_label_pc_26484, label %dec_label_pc_2646f

dec_label_pc_2646f:                               ; preds = %dec_label_pc_26468
  %v1_26473 = add i32 %v0_26473, 8
  br label %dec_label_pc_26476

dec_label_pc_26476:                               ; preds = %dec_label_pc_2646f, %dec_label_pc_26484
  %storemerge.in.in = phi i32 [ %v1_26473, %dec_label_pc_2646f ], [ %v1_26484, %dec_label_pc_26484 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @eax, align 4
  %v1_26476 = icmp eq i32 %storemerge, 0
  br i1 %v1_26476, label %bb, label %dec_label_pc_2647a

bb:                                               ; preds = %dec_label_pc_26476
  %v1_26478 = call i32 @function_264e8()
  store i32 %v1_26478, i32* @eax, align 4
  br label %dec_label_pc_2647a

dec_label_pc_2647a:                               ; preds = %bb, %dec_label_pc_26476, %dec_label_pc_26452
  %v0_26473 = phi i32 [ %v0_26460, %dec_label_pc_26452 ], [ %storemerge, %dec_label_pc_26476 ], [ %v1_26478, %bb ]
  %v0_2647a = load i32, i32* @edx, align 4
  %v2_2647a = add i32 %v0_26473, 16
  %v3_2647a = inttoptr i32 %v2_2647a to i32*
  %v4_2647a = load i32, i32* %v3_2647a, align 4
  %v5_2647a = sub i32 %v0_2647a, %v4_2647a
  %v15_2647a = icmp eq i32 %v5_2647a, 0
  %v1_2647d = icmp eq i1 %v15_2647a, false
  br i1 %v1_2647d, label %dec_label_pc_26468, label %dec_label_pc_2647f

dec_label_pc_2647f:                               ; preds = %dec_label_pc_2647a
  %v10_2647f = icmp eq i32 %v0_2647a, 1
  br i1 %v10_2647f, label %bb8, label %dec_label_pc_26484

bb8:                                              ; preds = %dec_label_pc_2647f
  %v1_26482 = call i32 @function_26490()
  br label %dec_label_pc_26484

dec_label_pc_26484:                               ; preds = %dec_label_pc_26468, %bb8, %dec_label_pc_2647f
  %v0_26484 = phi i32 [ %v0_26473, %dec_label_pc_26468 ], [ %v1_26482, %bb8 ], [ %v0_26473, %dec_label_pc_2647f ]
  %v1_26484 = add i32 %v0_26484, 12
  br label %dec_label_pc_26476

; uselistorder directives
  uselistorder i32 %v5_2647a, { 2, 1, 0 }
  uselistorder i32 %v4_2647a, { 1, 0 }
  uselistorder i32 %v0_2647a, { 0, 3, 1, 2 }
  uselistorder i32 %v0_26473, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_26484, { 1, 2, 0 }
  uselistorder label %dec_label_pc_26476, { 1, 0 }
}

define i32 @function_26489(i32 %arg1) local_unnamed_addr {
dec_label_pc_26489:
  %v0_26489 = call i32 @function_375da()
  ret i32 %v0_26489
}

define i32 @function_26490() local_unnamed_addr {
dec_label_pc_26490:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_26490 = load i32, i32* @eax, align 4
  %v1_26490 = add i32 %v0_26490, 20
  %v2_26490 = inttoptr i32 %v1_26490 to i8*
  %v3_26490 = load i8, i8* %v2_26490, align 1
  %v10_26490 = icmp eq i8 %v3_26490, 0
  br i1 %v10_26490, label %bb, label %dec_label_pc_2649a

bb:                                               ; preds = %dec_label_pc_26490
  %v1_26494 = call i32 @function_26699()
  store i32 %v1_26494, i32* @eax, align 4
  br label %dec_label_pc_2649a

dec_label_pc_2649a:                               ; preds = %bb, %dec_label_pc_26490
  %v0_264ac2 = phi i32 [ %v1_26494, %bb ], [ %v0_26490, %dec_label_pc_26490 ]
  %v1_2649e = add i32 %tmp, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2649e = inttoptr i32 %v1_2649e to i8*
  %v3_2649e = load i8, i8* %v2_2649e, align 1
  %v10_2649e = icmp eq i8 %v3_2649e, 0
  br i1 %v10_2649e, label %bb3, label %dec_label_pc_264a8

bb3:                                              ; preds = %dec_label_pc_2649a
  %v1_264a2 = call i32 @function_26699()
  br label %dec_label_pc_264a8

dec_label_pc_264a8:                               ; preds = %bb3, %dec_label_pc_2649a
  %v0_264b5 = phi i32 [ %v1_264a2, %bb3 ], [ %v0_264ac2, %dec_label_pc_2649a ]
  %v1_264ac = add i32 %v0_264b5, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_264ac = inttoptr i32 %v1_264ac to i32*
  %v3_264ac = load i32, i32* %v2_264ac, align 4
  %v1_264af = add i32 %tmp, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_264af = inttoptr i32 %v1_264af to i32*
  %v3_264af = load i32, i32* %v2_264af, align 4
  %v5_264af = sub i32 %v3_264af, %v3_264ac
  %v11_264af = xor i32 %v3_264af, %v3_264ac
  %v12_264af = xor i32 %v5_264af, %v3_264af
  %v13_264af = and i32 %v12_264af, %v11_264af
  %v14_264af = icmp slt i32 %v13_264af, 0
  %v16_264af = icmp slt i32 %v5_264af, 0
  %v2_264b2 = icmp ne i1 %v16_264af, %v14_264af
  %v3_264b2 = zext i1 %v2_264b2 to i32
  %v5_264b2 = and i32 %v3_264ac, -256
  %v6_264b2 = or i32 %v3_264b2, %v5_264b2
  store i32 %v6_264b2, i32* @ecx, align 4
  ret i32 %v0_264b5

; uselistorder directives
  uselistorder i32 %v5_264af, { 1, 0 }
  uselistorder i32 %v3_264ac, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_264b8() local_unnamed_addr {
dec_label_pc_264b8:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_264bc = add i32 %tmp, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_264bc = inttoptr i32 %v1_264bc to i8*
  %v3_264bc = load i8, i8* %v2_264bc, align 1
  %v10_264bc = icmp eq i8 %v3_264bc, 0
  br i1 %v10_264bc, label %bb, label %dec_label_pc_264c6

bb:                                               ; preds = %dec_label_pc_264b8
  %v1_264c0 = call i32 @function_26699()
  store i32 %v1_264c0, i32* @eax, align 4
  br label %dec_label_pc_264c6

dec_label_pc_264c6:                               ; preds = %bb, %dec_label_pc_264b8
  %v0_264c6 = load i32, i32* @edi, align 4
  %v1_264c6 = add i32 %v0_264c6, 20
  %v2_264c6 = inttoptr i32 %v1_264c6 to i8*
  %v3_264c6 = load i8, i8* %v2_264c6, align 1
  %v10_264c6 = icmp eq i8 %v3_264c6, 0
  br i1 %v10_264c6, label %bb3, label %dec_label_pc_264c6.dec_label_pc_264d0_crit_edge

dec_label_pc_264c6.dec_label_pc_264d0_crit_edge:  ; preds = %dec_label_pc_264c6
  %v0_264dd.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_264d0

bb3:                                              ; preds = %dec_label_pc_264c6
  %v1_264ca = call i32 @function_26699()
  %v0_264d7.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_264d0

dec_label_pc_264d0:                               ; preds = %dec_label_pc_264c6.dec_label_pc_264d0_crit_edge, %bb3
  %v0_264dd = phi i32 [ %v1_264ca, %bb3 ], [ %v0_264dd.pre, %dec_label_pc_264c6.dec_label_pc_264d0_crit_edge ]
  %v0_264d7 = phi i32 [ %v0_264d7.pre, %bb3 ], [ %v0_264c6, %dec_label_pc_264c6.dec_label_pc_264d0_crit_edge ]
  %v1_264d4 = add i32 %tmp, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_264d4 = inttoptr i32 %v1_264d4 to i32*
  %v3_264d4 = load i32, i32* %v2_264d4, align 4
  %v1_264d7 = add i32 %v0_264d7, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_264d7 = inttoptr i32 %v1_264d7 to i32*
  %v3_264d7 = load i32, i32* %v2_264d7, align 4
  %v5_264d7 = sub i32 %v3_264d7, %v3_264d4
  %v11_264d7 = xor i32 %v3_264d7, %v3_264d4
  %v12_264d7 = xor i32 %v5_264d7, %v3_264d7
  %v13_264d7 = and i32 %v12_264d7, %v11_264d7
  %v14_264d7 = icmp slt i32 %v13_264d7, 0
  %v16_264d7 = icmp slt i32 %v5_264d7, 0
  %v2_264da = icmp ne i1 %v16_264d7, %v14_264d7
  %v3_264da = zext i1 %v2_264da to i32
  %v5_264da = and i32 %v3_264d4, -256
  %v6_264da = or i32 %v3_264da, %v5_264da
  store i32 %v6_264da, i32* @ecx, align 4
  ret i32 %v0_264dd

; uselistorder directives
  uselistorder i32 %v5_264d7, { 1, 0 }
  uselistorder i32 %v3_264d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_264d0, { 1, 0 }
}

define i32 @function_264e8() local_unnamed_addr {
dec_label_pc_264e8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_60 = alloca i32, align 4
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_76 = alloca i32, align 4
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %v15_264ec = icmp eq i32 %tmp35, %tmp36
  br i1 %v15_264ec, label %dec_label_pc_26501, label %dec_label_pc_264f6

dec_label_pc_264f6:                               ; preds = %dec_label_pc_264e8
  %v1_264fa = add i32 %tmp35, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_264fa = inttoptr i32 %v1_264fa to i32*
  %v3_264fa = load i32, i32* %v2_264fa, align 4
  br label %dec_label_pc_26501

dec_label_pc_26501:                               ; preds = %dec_label_pc_264f6, %dec_label_pc_264e8
  %stack_var_48.0 = phi i32 [ %tmp33, %dec_label_pc_264e8 ], [ %v3_264fa, %dec_label_pc_264f6 ]
  store i32 %stack_var_48.0, i32* @eax, align 4
  %v15_26505 = icmp eq i32 %tmp32, %stack_var_48.0
  br i1 %v15_26505, label %bb, label %dec_label_pc_26513

bb:                                               ; preds = %dec_label_pc_26501
  %v1_2650d = call i32 @function_2666e()
  store i32 %v1_2650d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26513

dec_label_pc_26513:                               ; preds = %bb, %dec_label_pc_26501
  %v0_26530.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_26530

dec_label_pc_26520:                               ; preds = %dec_label_pc_26530
  %v8_26533 = xor i32 %v0_26533, %v3_26530
  %v2_26520 = sub i32 %v3_26530, %v0_26533
  %v9_26520 = xor i32 %v2_26520, %v3_26530
  %v10_26520 = and i32 %v9_26520, %v8_26533
  %v11_26520 = icmp slt i32 %v10_26520, 0
  %v13_26520 = icmp slt i32 %v2_26520, 0
  %v2_26522 = icmp ne i1 %v13_26520, %v11_26520
  %v3_26522 = zext i1 %v2_26522 to i32
  %v5_26522 = and i32 %v3_26530, -256
  %v6_26522 = or i32 %v3_26522, %v5_26522
  br label %dec_label_pc_26525

dec_label_pc_26525:                               ; preds = %dec_label_pc_2655c, %dec_label_pc_26520
  %v0_26529 = phi i32 [ %v0_26530, %dec_label_pc_26520 ], [ %v0_2655f, %dec_label_pc_2655c ]
  %v0_265487 = phi i32 [ %v0_26548, %dec_label_pc_26520 ], [ %v0_2655c, %dec_label_pc_2655c ]
  %storemerge3 = phi i32 [ %v6_26522, %dec_label_pc_26520 ], [ %v6_26562, %dec_label_pc_2655c ]
  store i32 %storemerge3, i32* @eax, align 4
  %v4_26525 = trunc i32 %storemerge3 to i8
  %v5_26525 = icmp eq i8 %v4_26525, 0
  br i1 %v5_26525, label %dec_label_pc_2653c, label %dec_label_pc_26529

dec_label_pc_26529:                               ; preds = %dec_label_pc_26525
  %v1_26529 = add i32 %v0_26529, 12
  br label %dec_label_pc_2652c

dec_label_pc_2652c:                               ; preds = %dec_label_pc_26529, %dec_label_pc_2653c
  %v4_2657716 = phi i32 [ %storemerge3, %dec_label_pc_26529 ], [ %v4_2657717, %dec_label_pc_2653c ]
  %v0_265485 = phi i32 [ %v0_265487, %dec_label_pc_26529 ], [ %v0_265486, %dec_label_pc_2653c ]
  %storemerge.in.in = phi i32 [ %v1_26529, %dec_label_pc_26529 ], [ %v1_2653e, %dec_label_pc_2653c ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @esi, align 4
  %v1_2652c = icmp eq i32 %storemerge, 0
  br i1 %v1_2652c, label %dec_label_pc_26568, label %dec_label_pc_26530

dec_label_pc_26530:                               ; preds = %dec_label_pc_2652c, %dec_label_pc_26513
  %v0_26548 = phi i32 [ %v0_265485, %dec_label_pc_2652c ], [ %tmp31, %dec_label_pc_26513 ]
  %v0_26530 = phi i32 [ %storemerge, %dec_label_pc_2652c ], [ %v0_26530.pre, %dec_label_pc_26513 ]
  %v1_26530 = add i32 %v0_26530, 16
  %v2_26530 = inttoptr i32 %v1_26530 to i32*
  %v3_26530 = load i32, i32* %v2_26530, align 4
  store i32 %v3_26530, i32* @eax, align 4
  %v0_26533 = load i32, i32* @edx, align 4
  %v12_26533 = icmp eq i32 %v3_26530, %v0_26533
  %v1_26535 = icmp eq i1 %v12_26533, false
  br i1 %v1_26535, label %dec_label_pc_26520, label %dec_label_pc_26537

dec_label_pc_26537:                               ; preds = %dec_label_pc_26530
  %v10_26537 = icmp eq i32 %v0_26533, 1
  br i1 %v10_26537, label %dec_label_pc_26548, label %dec_label_pc_2653c

dec_label_pc_2653c:                               ; preds = %dec_label_pc_26525, %dec_label_pc_26537
  %v4_2657717 = phi i32 [ %storemerge3, %dec_label_pc_26525 ], [ %v3_26530, %dec_label_pc_26537 ]
  %v0_2653c = phi i32 [ %v0_26529, %dec_label_pc_26525 ], [ %v0_26530, %dec_label_pc_26537 ]
  %v0_265486 = phi i32 [ %v0_265487, %dec_label_pc_26525 ], [ %v0_26548, %dec_label_pc_26537 ]
  store i32 %v0_2653c, i32* @ecx, align 4
  %v1_2653e = add i32 %v0_2653c, 8
  br label %dec_label_pc_2652c

dec_label_pc_26548:                               ; preds = %dec_label_pc_26537
  %v1_26548 = add i32 %v0_26548, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_26548 = inttoptr i32 %v1_26548 to i8*
  %v3_26548 = load i8, i8* %v2_26548, align 1
  %v10_26548 = icmp eq i8 %v3_26548, 0
  br i1 %v10_26548, label %bb38, label %dec_label_pc_26552

bb38:                                             ; preds = %dec_label_pc_26548
  %v1_2654c = call i32 @function_26699()
  store i32 %v1_2654c, i32* @eax, align 4
  %v0_26552.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_26552

dec_label_pc_26552:                               ; preds = %bb38, %dec_label_pc_26548
  %v0_26552 = phi i32 [ %v0_26552.pre, %bb38 ], [ %v0_26530, %dec_label_pc_26548 ]
  %v1_26552 = add i32 %v0_26552, 20
  %v2_26552 = inttoptr i32 %v1_26552 to i8*
  %v3_26552 = load i8, i8* %v2_26552, align 1
  %v10_26552 = icmp eq i8 %v3_26552, 0
  br i1 %v10_26552, label %bb39, label %dec_label_pc_2655c

bb39:                                             ; preds = %dec_label_pc_26552
  %v1_26556 = call i32 @function_26699()
  store i32 %v1_26556, i32* %eax.global-to-local, align 4
  %v0_2655f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_2655c

dec_label_pc_2655c:                               ; preds = %bb39, %dec_label_pc_26552
  %v0_2655f = phi i32 [ %v0_2655f.pre, %bb39 ], [ %v0_26552, %dec_label_pc_26552 ]
  %v0_2655c = load i32, i32* %edi.global-to-local, align 4
  %v1_2655c = add i32 %v0_2655c, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2655c = inttoptr i32 %v1_2655c to i32*
  %v3_2655c = load i32, i32* %v2_2655c, align 4
  store i32 %v3_2655c, i32* %eax.global-to-local, align 4
  %v1_2655f = add i32 %v0_2655f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_2655f = inttoptr i32 %v1_2655f to i32*
  %v3_2655f = load i32, i32* %v2_2655f, align 4
  %v5_2655f = sub i32 %v3_2655f, %v3_2655c
  %v11_2655f = xor i32 %v3_2655f, %v3_2655c
  %v12_2655f = xor i32 %v5_2655f, %v3_2655f
  %v13_2655f = and i32 %v12_2655f, %v11_2655f
  %v14_2655f = icmp slt i32 %v13_2655f, 0
  %v16_2655f = icmp slt i32 %v5_2655f, 0
  %v2_26562 = icmp ne i1 %v16_2655f, %v14_2655f
  %v3_26562 = zext i1 %v2_26562 to i32
  %v5_26562 = and i32 %v3_2655c, -256
  %v6_26562 = or i32 %v3_26562, %v5_26562
  br label %dec_label_pc_26525

dec_label_pc_26568:                               ; preds = %dec_label_pc_2652c
  %v0_26568 = load i32, i32* @ecx, align 4
  %v15_26568 = icmp eq i32 %v0_26568, %tmp36
  br i1 %v15_26568, label %dec_label_pc_26582, label %dec_label_pc_2656e

dec_label_pc_2656e:                               ; preds = %dec_label_pc_26568
  %v0_2656e = load i32, i32* @edx, align 4
  %v2_2656e = add i32 %v0_26568, 16
  %v3_2656e = inttoptr i32 %v2_2656e to i32*
  %v4_2656e = load i32, i32* %v3_2656e, align 4
  %v5_2656e = sub i32 %v0_2656e, %v4_2656e
  %v11_2656e = xor i32 %v4_2656e, %v0_2656e
  %v12_2656e = xor i32 %v5_2656e, %v0_2656e
  %v13_2656e = and i32 %v12_2656e, %v11_2656e
  %v14_2656e = icmp slt i32 %v13_2656e, 0
  %v15_2656e = icmp eq i32 %v5_2656e, 0
  %v16_2656e = icmp slt i32 %v5_2656e, 0
  br i1 %v15_2656e, label %bb40, label %dec_label_pc_26577

bb40:                                             ; preds = %dec_label_pc_2656e
  %v1_26571 = call i32 @function_26643()
  store i32 %v1_26571, i32* %eax.global-to-local, align 4
  %v0_26577.pre = load i1, i1* @sf, align 1
  %v1_26577.pre = load i1, i1* @of, align 1
  br label %dec_label_pc_26577

dec_label_pc_26577:                               ; preds = %bb40, %dec_label_pc_2656e
  %v4_26577 = phi i32 [ %v1_26571, %bb40 ], [ %v4_2657716, %dec_label_pc_2656e ]
  %v1_26577 = phi i1 [ %v1_26577.pre, %bb40 ], [ %v14_2656e, %dec_label_pc_2656e ]
  %v0_26577 = phi i1 [ %v0_26577.pre, %bb40 ], [ %v16_2656e, %dec_label_pc_2656e ]
  %v2_26577 = icmp ne i1 %v0_26577, %v1_26577
  %v3_26577 = zext i1 %v2_26577 to i32
  %v5_26577 = and i32 %v4_26577, -256
  %v6_26577 = or i32 %v3_26577, %v5_26577
  store i32 %v6_26577, i32* %eax.global-to-local, align 4
  %v5_2657a = icmp eq i1 %v2_26577, false
  br i1 %v5_2657a, label %dec_label_pc_26577.dec_label_pc_265d5_crit_edge, label %dec_label_pc_26582

dec_label_pc_26577.dec_label_pc_265d5_crit_edge:  ; preds = %dec_label_pc_26577
  %v1_265d9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_265d5

dec_label_pc_26582:                               ; preds = %dec_label_pc_26577, %dec_label_pc_26568
  %v0_26586 = load i32, i32* @edx, align 4
  store i32 %v0_26586, i32* %stack_var_76, align 4
  %v1_2658f = add i32 %tmp30, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_2658f = inttoptr i32 %v1_2658f to i8*
  %v3_2658f = load i8, i8* %v2_2658f, align 1
  %v10_2658f = icmp eq i8 %v3_2658f, 0
  br i1 %v10_2658f, label %dec_label_pc_265a1, label %dec_label_pc_26595

dec_label_pc_26595:                               ; preds = %dec_label_pc_26582
  %v1_26595 = add i32 %tmp30, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_26595 = inttoptr i32 %v1_26595 to i32*
  %v3_26595 = load i32, i32* %v2_26595, align 4
  store i32 %v3_26595, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_265a1

dec_label_pc_265a1:                               ; preds = %dec_label_pc_26595, %dec_label_pc_26582
  %v2_265a5 = ptrtoint i32* %stack_var_76 to i32
  %v0_265ad = load i32, i32* @ecx, align 4
  %v1_265b9 = add i32 %tmp26, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_265c0 = ptrtoint i32* %stack_var_60 to i32
  store i32 %v2_265c0, i32* %eax.global-to-local, align 4
  %v5_265c7 = call i32 @unknown_4bfb0(i32 %v2_265c0, i32 %v1_265b9, i32 %v0_265ad, i32 %v2_265a5)
  store i32 %v5_265c7, i32* %eax.global-to-local, align 4
  %v0_265cc = load i32, i32* %ebx.global-to-local, align 4
  %v1_265cc = inttoptr i32 %v0_265cc to i32*
  %v2_265cc = load i32, i32* %v1_265cc, align 4
  store i32 %v2_265cc, i32* @esi, align 4
  br label %dec_label_pc_265d5

dec_label_pc_265d5:                               ; preds = %dec_label_pc_26577.dec_label_pc_265d5_crit_edge, %dec_label_pc_265a1
  %v1_265d9 = phi i32 [ %v1_265d9.pre, %dec_label_pc_26577.dec_label_pc_265d5_crit_edge ], [ %tmp32, %dec_label_pc_265a1 ]
  %v2_265d9 = add i32 %v1_265d9, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_265d9 = inttoptr i32 %v2_265d9 to i32*
  %v0_265dc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_265dc

; uselistorder directives
  uselistorder i32 %v5_2656e, { 1, 2, 0 }
  uselistorder i32 %v0_26568, { 1, 0 }
  uselistorder i32 %v5_2655f, { 1, 0 }
  uselistorder i32 %v3_2655c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_2655c, { 1, 0 }
  uselistorder i32 %v0_2655f, { 1, 0 }
  uselistorder i32 %v0_2653c, { 1, 0 }
  uselistorder i32 %v3_26530, { 3, 0, 6, 1, 5, 2, 4 }
  uselistorder i32 %v0_26530, { 2, 0, 3, 1 }
  uselistorder i32 %storemerge3, { 1, 0, 2, 3 }
  uselistorder i32 %v0_265487, { 1, 0 }
  uselistorder i32 %v2_26520, { 1, 0 }
  uselistorder i32 %tmp35, { 1, 0 }
  uselistorder i32 %tmp32, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 3, 4, 5, 7, 0, 8, 2, 1 }
  uselistorder label %dec_label_pc_265d5, { 1, 0 }
  uselistorder label %dec_label_pc_2653c, { 1, 0 }
  uselistorder label %dec_label_pc_2652c, { 1, 0 }
}

define i32 @function_265e1() local_unnamed_addr {
dec_label_pc_265e1:
  %v0_265e1 = load i32, i32* @edx, align 4
  %v1_265e1 = load i32, i32* @eax, align 4
  %v2_265e1 = sub i32 %v0_265e1, %v1_265e1
  %v8_265e1 = xor i32 %v1_265e1, %v0_265e1
  %v9_265e1 = xor i32 %v2_265e1, %v0_265e1
  %v10_265e1 = and i32 %v9_265e1, %v8_265e1
  %v11_265e1 = icmp slt i32 %v10_265e1, 0
  %v13_265e1 = icmp slt i32 %v2_265e1, 0
  %v2_265e9 = icmp ne i1 %v13_265e1, %v11_265e1
  %v3_265e9 = zext i1 %v2_265e9 to i32
  %v5_265e9 = and i32 %v1_265e1, -256
  %v6_265e9 = or i32 %v3_265e9, %v5_265e9
  ret i32 %v6_265e9

; uselistorder directives
  uselistorder i32 %v2_265e1, { 1, 0 }
  uselistorder i32 %v1_265e1, { 1, 0, 2 }
}

define i32 @function_265f1() local_unnamed_addr {
dec_label_pc_265f1:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_265f5 = add i32 %tmp1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_265f5 = inttoptr i32 %v1_265f5 to i32*
  %v3_265f5 = load i32, i32* %v2_265f5, align 4
  %v1_265f8 = inttoptr i32 %v3_265f5 to i32*
  %v2_265f8 = load i32, i32* %v1_265f8, align 4
  ret i32 %v2_265f8
}

define i32 @function_26600(i32 %arg1) local_unnamed_addr {
dec_label_pc_26600:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26602() local_unnamed_addr {
dec_label_pc_26602:
  %v3_2661a = load i32, i32* @eax, align 4
  ret i32 %v3_2661a
}

define i32 @function_26625() local_unnamed_addr {
dec_label_pc_26625:
  %eax.global-to-local = alloca i32, align 4
  %v0_26625 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26625
}

define i32 @function_26628(i32 %arg1) local_unnamed_addr {
dec_label_pc_26628:
  %edi.global-to-local = alloca i32, align 4
  %v1_2662c = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2662c = inttoptr i32 %v1_2662c to i32*
  %v3_2662c = load i32, i32* %v2_2662c, align 4
  %v1_2662f = add i32 %v3_2662c, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2662f = inttoptr i32 %v1_2662f to i32*
  %v3_2662f = load i32, i32* %v2_2662f, align 4
  store i32 %v3_2662f, i32* @eax, align 4
  %v1_26632 = icmp eq i32 %v3_2662f, 0
  %v1_26634 = icmp eq i1 %v1_26632, false
  br i1 %v1_26634, label %bb, label %dec_label_pc_2663a

bb:                                               ; preds = %dec_label_pc_26628
  %v2_26634 = call i32 @function_26203()
  store i32 %v2_26634, i32* @eax, align 4
  br label %dec_label_pc_2663a

dec_label_pc_2663a:                               ; preds = %bb, %dec_label_pc_26628
  %v0_2663a = load i32, i32* %edi.global-to-local, align 4
  %v1_2663a = add i32 %v0_2663a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2663a = inttoptr i32 %v1_2663a to i8*
  store i8 0, i8* %v2_2663a, align 1
  %v0_2663e = call i32 @function_26229()
  ret i32 %v0_2663e
}

define i32 @function_26643() local_unnamed_addr {
dec_label_pc_26643:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_2664c = load i32, i32* @ecx, align 4
  %v1_2664c = add i32 %v0_2664c, 20
  %v2_2664c = inttoptr i32 %v1_2664c to i8*
  %v3_2664c = load i8, i8* %v2_2664c, align 1
  %v10_2664c = icmp eq i8 %v3_2664c, 0
  br i1 %v10_2664c, label %bb, label %dec_label_pc_26652

bb:                                               ; preds = %dec_label_pc_26643
  %v1_26650 = call i32 @function_26699()
  store i32 %v1_26650, i32* @eax, align 4
  br label %dec_label_pc_26652

dec_label_pc_26652:                               ; preds = %bb, %dec_label_pc_26643
  %v1_26656 = add i32 %tmp, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_26656 = inttoptr i32 %v1_26656 to i8*
  %v3_26656 = load i8, i8* %v2_26656, align 1
  %v10_26656 = icmp eq i8 %v3_26656, 0
  br i1 %v10_26656, label %bb3, label %dec_label_pc_2665c

bb3:                                              ; preds = %dec_label_pc_26652
  %v1_2665a = call i32 @function_26699()
  br label %dec_label_pc_2665c

dec_label_pc_2665c:                               ; preds = %bb3, %dec_label_pc_26652
  %v0_26660 = load i32, i32* @ecx, align 4
  %v1_26660 = add i32 %v0_26660, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_26660 = inttoptr i32 %v1_26660 to i32*
  %v3_26660 = load i32, i32* %v2_26660, align 4
  %v1_26663 = add i32 %tmp, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_26663 = inttoptr i32 %v1_26663 to i32*
  %v3_26663 = load i32, i32* %v2_26663, align 4
  %v5_26663 = sub i32 %v3_26663, %v3_26660
  %v11_26663 = xor i32 %v3_26663, %v3_26660
  %v12_26663 = xor i32 %v5_26663, %v3_26663
  %v13_26663 = and i32 %v12_26663, %v11_26663
  %v14_26663 = icmp slt i32 %v13_26663, 0
  store i1 %v14_26663, i1* @of, align 1
  %v16_26663 = icmp slt i32 %v5_26663, 0
  store i1 %v16_26663, i1* @sf, align 1
  %v2_26666 = icmp ne i1 %v16_26663, %v14_26663
  %v3_26666 = zext i1 %v2_26666 to i32
  %v5_26666 = and i32 %tmp, -256
  %v6_26666 = or i32 %v3_26666, %v5_26666
  ret i32 %v6_26666

; uselistorder directives
  uselistorder i32 %v5_26663, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 ()* @function_26699, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_2666e() local_unnamed_addr {
dec_label_pc_2666e:
  %v3_26672 = load i32, i32* @eax, align 4
  ret i32 %v3_26672
}

define i32 @function_2668b() local_unnamed_addr {
dec_label_pc_2668b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2668b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2668b = add i32 %v0_2668b, -2095831948
  %v2_2668b = inttoptr i32 %v1_2668b to i32*
  %v3_2668b = load i32, i32* %v2_2668b, align 4
  %v4_2668b = sub i32 %v3_2668b, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2668b, i32* %v2_2668b, align 4
  %v0_26691 = load i32, i32* %edx.global-to-local, align 4
  %v1_26691 = trunc i32 %v0_26691 to i16
  %v4_26691 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_26691, i8 %v4_26691)
  %v0_26692 = load i32, i32* %eax.global-to-local, align 4
  %v1_26692 = trunc i32 %v0_26692 to i8
  %v2_26692 = load i1, i1* %cf.global-to-local, align 1
  %v3_26692 = zext i1 %v2_26692 to i32
  %v4_26692 = sub i32 %v0_26692, zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32)
  %v5_26692 = add i32 %v4_26692, %v3_26692
  %v17_26692 = icmp eq i8 %v1_26692, 0
  %v18_26692 = or i1 %v2_26692, %v17_26692
  store i1 %v18_26692, i1* %cf.global-to-local, align 1
  %v31_26692 = and i32 %v5_26692, 255
  %v33_26692 = and i32 %v0_26692, -256
  %v34_26692 = or i32 %v31_26692, %v33_26692
  store i32 %v34_26692, i32* %eax.global-to-local, align 4
  ret i32 %v34_26692

; uselistorder directives
  uselistorder i1 %v2_26692, { 1, 0 }
  uselistorder i32 %v0_26692, { 1, 0, 2 }
}

define i32 @function_26699() local_unnamed_addr {
dec_label_pc_26699:
  %v3_266b1 = load i32, i32* @eax, align 4
  ret i32 %v3_266b1
}

define i32 @function_266bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_266bd:
  %v0_266bd = call i32 @function_374a2()
  ret i32 %v0_266bd
}

define i32 @function_266c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_266c2:
  %v0_266c2 = call i32 @function_3753e()
  ret i32 %v0_266c2
}

define i32 @function_266c7() local_unnamed_addr {
dec_label_pc_266c7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_266cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_266cc:
  %v3_266e4 = load i32, i32* @eax, align 4
  ret i32 %v3_266e4
}

define i32 @function_266f0() local_unnamed_addr {
dec_label_pc_266f0:
  %v3_26708 = load i32, i32* @eax, align 4
  ret i32 %v3_26708
}

define i32 @function_26715() local_unnamed_addr {
dec_label_pc_26715:
  %eax.global-to-local = alloca i32, align 4
  %v0_26715 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26715
}

define i32 @function_26726(i32 %arg1) local_unnamed_addr {
dec_label_pc_26726:
  %v3_2673e = load i32, i32* @eax, align 4
  ret i32 %v3_2673e
}

define i32 @_ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_267a0:
  %v1_267c3 = add i32 %arg1, 12
  ret i32 %v1_267c3
}

define i32 @function_267ee() local_unnamed_addr {
dec_label_pc_267ee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_267f9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_267f9:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_267f9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_267f9 = add i32 %v0_267f9, 1698440276
  %v2_267f9 = inttoptr i32 %v1_267f9 to i32*
  %v3_267f9 = load i32, i32* %v2_267f9, align 4
  %v4_267f9 = add i32 %v3_267f9, -1
  store i32 %v4_267f9, i32* %v2_267f9, align 4
  %v0_267ff = load i32, i32* %edx.global-to-local, align 4
  %v1_267ff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_267ff = xor i32 %v1_267ff, %v0_267ff
  %v3_267ff = icmp eq i32 %v2_267ff, 0
  store i32 %v2_267ff, i32* %edx.global-to-local, align 4
  %v1_26805 = icmp eq i1 %v3_267ff, false
  br i1 %v1_26805, label %bb, label %dec_label_pc_267f9.dec_label_pc_2680b_crit_edge

dec_label_pc_267f9.dec_label_pc_2680b_crit_edge:  ; preds = %dec_label_pc_267f9
  %v0_2681e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2680b

bb:                                               ; preds = %dec_label_pc_267f9
  %v2_26805 = call i32 @function_26945()
  br label %dec_label_pc_2680b

dec_label_pc_2680b:                               ; preds = %dec_label_pc_267f9.dec_label_pc_2680b_crit_edge, %bb
  %v0_2681e = phi i32 [ %v0_2681e.pre, %dec_label_pc_267f9.dec_label_pc_2680b_crit_edge ], [ %v2_26805, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_2681e

; uselistorder directives
  uselistorder label %dec_label_pc_2680b, { 1, 0 }
}

define i32 @function_268c8() local_unnamed_addr {
dec_label_pc_268c8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_56 = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %v0_268c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_268c8 = add i32 %v0_268c8, -953408428
  %v2_268c8 = inttoptr i32 %v1_268c8 to i32*
  %v3_268c8 = load i32, i32* %v2_268c8, align 4
  %v4_268c8 = sub i32 %v3_268c8, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_268c8, i32* %v2_268c8, align 4
  %v2_268ce = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_268ce = load i32, i32* %ecx.global-to-local, align 4
  %v4_268ce = trunc i32 %v3_268ce to i8
  %v5_268ce = add i8 %v4_268ce, %v2_268ce
  %v20_268ce = load i32, i32* %eax.global-to-local, align 4
  %v21_268ce = inttoptr i32 %v20_268ce to i8*
  store i8 %v5_268ce, i8* %v21_268ce, align 1
  %v0_268d0 = load i32, i32* %eax.global-to-local, align 4
  %v1_268d0 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_268d0, i32* %edx.global-to-local, align 4
  %v4_268d1 = add i32 %v1_268d0, %v0_268d0
  store i32 %v4_268d1, i32* %eax.global-to-local, align 4
  %v1_268d3 = add i32 %v4_268d1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_268d3 = inttoptr i32 %v1_268d3 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_268d3, align 4
  %v0_268da = load i32, i32* %ebp.global-to-local, align 4
  %v1_268da = load i32, i32* %eax.global-to-local, align 4
  %v2_268da = add i32 %v1_268da, 12
  %v3_268da = inttoptr i32 %v2_268da to i32*
  store i32 %v0_268da, i32* %v3_268da, align 4
  %v2_268dd = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_268dd, i32* %ecx.global-to-local, align 4
  %v0_268df = load i32, i32* %eax.global-to-local, align 4
  %v1_268df = add i32 %v0_268df, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_268df = inttoptr i32 %v1_268df to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_268df, align 4
  %v0_268e6 = load i32, i32* %edx.global-to-local, align 4
  %v1_268e6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_268e6 = inttoptr i32 %v1_268e6 to i32*
  store i32 %v0_268e6, i32* %v2_268e6, align 4
  %v0_268e8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_268e8 = add i32 %v0_268e8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_268e8 = inttoptr i32 %v1_268e8 to i32*
  %v3_268e8 = load i32, i32* %v2_268e8, align 4
  store i32 %v3_268e8, i32* %edx.global-to-local, align 4
  %v0_268eb = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_268eb, i32* %v2_268e8, align 4
  %v2_268ee = ptrtoint i32* %stack_var_48 to i32
  store i32 %v2_268ee, i32* @eax, align 4
  %v0_268f9 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_268f9, i32* %stack_var_48, align 4
  %v1_268fd = call i32 @function_3a200(i32 %v2_268ee)
  %v2_26902 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_26902, i32* @eax, align 4
  %v1_26904 = icmp eq i32 %v2_26902, 0
  br i1 %v1_26904, label %dec_label_pc_2693e, label %dec_label_pc_2690e

dec_label_pc_2690e:                               ; preds = %dec_label_pc_268c8
  store i32 %v2_26902, i32* %stack_var_56, align 4
  %v2_26927 = ptrtoint i32* %stack_var_56 to i32
  store i32 %v2_26927, i32* %eax.global-to-local, align 4
  %v4_2692f = call i32 @unknown_4c870(i32 %v2_26902, i32 0, i32 %v2_26927, i32 0)
  store i32 %v4_2692f, i32* @eax, align 4
  %v0_26934 = call i32 @function_267ee()
  store i32 %v0_26934, i32* %eax.global-to-local, align 4
  ret i32 %v0_26934

dec_label_pc_2693e:                               ; preds = %dec_label_pc_268c8
  %v0_26940 = call i32 @function_37b72()
  store i32 %v0_26940, i32* %eax.global-to-local, align 4
  ret i32 %v0_26940

; uselistorder directives
  uselistorder i32 %v2_26902, { 1, 0, 2, 3 }
}

define i32 @function_26945() local_unnamed_addr {
dec_label_pc_26945:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26984() local_unnamed_addr {
dec_label_pc_26984:
  %eax.global-to-local = alloca i32, align 4
  %v0_26984 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26984
}

define i32 @function_26991() local_unnamed_addr {
dec_label_pc_26991:
  %v3_26991 = load i32, i32* @eax, align 4
  ret i32 %v3_26991
}

define i32 @function_26999() local_unnamed_addr {
dec_label_pc_26999:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_269ac() local_unnamed_addr {
dec_label_pc_269ac:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_269ac = load i32, i32* %ecx.global-to-local, align 4
  %v1_269ac = add i32 %v0_269ac, -1981223997
  %v2_269ac = inttoptr i32 %v1_269ac to i32*
  %v3_269ac = load i32, i32* %v2_269ac, align 4
  %v4_269ac = sub i32 %v3_269ac, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_269ac, i32* %v2_269ac, align 4
  %v0_269b2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_269b2
}

define i32 @function_269b3() local_unnamed_addr {
dec_label_pc_269b3:
  %v0_269b3 = call i32 @function_26991()
  ret i32 %v0_269b3
}

define i32 @function_269cf() local_unnamed_addr {
dec_label_pc_269cf:
  %eax.global-to-local = alloca i32, align 4
  %v0_269cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_269cf
}

define i32 @function_269d5() local_unnamed_addr {
dec_label_pc_269d5:
  %v0_269d5 = call i32 @function_26999()
  ret i32 %v0_269d5
}

define i32 @function_269d8() local_unnamed_addr {
dec_label_pc_269d8:
  %eax.global-to-local = alloca i32, align 4
  %v0_269d8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_269d8
}

define i32 @function_269dd() local_unnamed_addr {
dec_label_pc_269dd:
  %eax.global-to-local = alloca i32, align 4
  %v0_269dd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_269dd
}

define i32 @function_269e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_269e0:
  %v0_269e0 = call i32 @function_26991()
  ret i32 %v0_269e0
}

define i32 @_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEEclES4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_269f0:
  %v1_26a3b = add i32 %arg2, 12
  ret i32 %v1_26a3b
}

define i32 @function_26a73(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26a73:
  %v0_26a73 = load i32, i32* @eax, align 4
  %v1_26a73 = add i32 %v0_26a73, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_26a73 = inttoptr i32 %v1_26a73 to i32*
  %v3_26a73 = load i32, i32* %v2_26a73, align 4
  %v4_26a73 = add i32 %v3_26a73, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_26a73, i32* %v2_26a73, align 4
  ret i32 %arg2
}

define i32 @function_26a7f() local_unnamed_addr {
dec_label_pc_26a7f:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_108 = alloca i32, align 4
  %v2_26a8f = ptrtoint i32* %stack_var_108 to i32
  store i32 %v2_26a8f, i32* @eax, align 4
  %v1_26a9e = call i32 @function_3a450(i32 %v2_26a8f)
  ret i32 %tmp
}

define i32 @function_26aae(i32* %arg1) local_unnamed_addr {
dec_label_pc_26aae:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_128 = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %stack_var_64 = alloca i32, align 4
  %stack_var_132 = alloca i8, align 1
  %tmp124 = ptrtoint i32* %arg1 to i32
  %v0_26aae = load i32, i32* %ebp.global-to-local, align 4
  %v1_26aae = add i32 %v0_26aae, 9184388
  %v2_26aae = inttoptr i32 %v1_26aae to i32*
  %v3_26aae = load i32, i32* %v2_26aae, align 4
  %v4_26aae = add i32 %v3_26aae, -1
  store i32 %v4_26aae, i32* %v2_26aae, align 4
  %v2_26ab4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_26ab4 = load i32, i32* %eax.global-to-local, align 4
  %v4_26ab4 = trunc i32 %v3_26ab4 to i8
  %v5_26ab4 = add i8 %v4_26ab4, %v2_26ab4
  %v21_26ab4 = inttoptr i32 %v3_26ab4 to i8*
  store i8 %v5_26ab4, i8* %v21_26ab4, align 1
  %v0_26ab6 = load i32, i32* %eax.global-to-local, align 4
  store i32 %tmp124, i32* @eax, align 4
  store i8 0, i8* %stack_var_132, align 1
  %v1_26aee = icmp eq i32* %arg1, null
  br i1 %v1_26aee, label %bb, label %dec_label_pc_26b0c

bb:                                               ; preds = %dec_label_pc_26aae
  %v2_26b06 = call i32 @function_26fc2(i32 %v0_26ab6)
  store i32 %v2_26b06, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26b0c

dec_label_pc_26b0c:                               ; preds = %bb, %dec_label_pc_26aae
  %v0_26b0c = phi i32 [ %v2_26b06, %bb ], [ %tmp124, %dec_label_pc_26aae ]
  %v1_26b0c = inttoptr i32 %v0_26b0c to i32*
  %v2_26b0c = load i32, i32* %v1_26b0c, align 4
  store i32 %v2_26b0c, i32* @eax, align 4
  %v1_26b0e = icmp eq i32 %v2_26b0c, 0
  br i1 %v1_26b0e, label %bb129, label %dec_label_pc_26b1a

bb129:                                            ; preds = %dec_label_pc_26b0c
  %v2_26b14 = call i32 @function_27030(i32 0)
  store i32 %v2_26b14, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26b1a

dec_label_pc_26b1a:                               ; preds = %bb129, %dec_label_pc_26b0c
  %v2_26b1e = ptrtoint i8* %stack_var_132 to i32
  store i32 %v2_26b1e, i32* %ecx.global-to-local, align 4
  %v2_26b25 = ptrtoint i32* %stack_var_64 to i32
  store i32 %v2_26b25, i32* %eax.global-to-local, align 4
  store i32 %v2_26b0c, i32* %stack_var_64, align 4
  %v1_26b3c = call i32 @unknown_45f00(i32 %v2_26b25)
  store i32 %tmp124, i32* @eax, align 4
  br i1 %v1_26aee, label %bb130, label %dec_label_pc_26b4d

bb130:                                            ; preds = %dec_label_pc_26b1a
  %v2_26b47 = call i32 @function_26fc2(i32 %v2_26b0c)
  store i32 %v2_26b47, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26b4d

dec_label_pc_26b4d:                               ; preds = %bb130, %dec_label_pc_26b1a
  %v0_26b4d = phi i32 [ %v2_26b47, %bb130 ], [ %tmp124, %dec_label_pc_26b1a ]
  %v1_26b4d = inttoptr i32 %v0_26b4d to i32*
  %v2_26b4d = load i32, i32* %v1_26b4d, align 4
  store i32 %v2_26b4d, i32* @eax, align 4
  %v1_26b4f = icmp eq i32 %v2_26b4d, 0
  br i1 %v1_26b4f, label %bb131, label %dec_label_pc_26b57

bb131:                                            ; preds = %dec_label_pc_26b4d
  %v2_26b51 = call i32 @function_27030(i32 %v2_26b0c)
  store i32 %v2_26b51, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26b57

dec_label_pc_26b57:                               ; preds = %bb131, %dec_label_pc_26b4d
  %v0_26b57 = phi i32 [ %v2_26b51, %bb131 ], [ %v2_26b4d, %dec_label_pc_26b4d ]
  %v1_26b57 = inttoptr i32 %v0_26b57 to i32*
  %v2_26b57 = load i32, i32* %v1_26b57, align 4
  %v2_26b61 = ptrtoint i32* %stack_var_48 to i32
  store i32 %v2_26b61, i32* %eax.global-to-local, align 4
  store i32 %v2_26b57, i32* %stack_var_48, align 4
  %v1_26b77 = call i32 @unknown_45f00(i32 %v2_26b61)
  store i32 %tmp124, i32* @eax, align 4
  br i1 %v1_26aee, label %bb132, label %dec_label_pc_26b88

bb132:                                            ; preds = %dec_label_pc_26b57
  %v2_26b82 = call i32 @function_26fc2(i32 %v2_26b1e)
  store i32 %v2_26b82, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26b88

dec_label_pc_26b88:                               ; preds = %bb132, %dec_label_pc_26b57
  %v0_26b88 = phi i32 [ %v2_26b82, %bb132 ], [ %tmp124, %dec_label_pc_26b57 ]
  %v1_26b88 = add i32 %v0_26b88, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_26b88 = inttoptr i32 %v1_26b88 to i32*
  %v3_26b88 = load i32, i32* %v2_26b88, align 4
  store i32 %v3_26b88, i32* @eax, align 4
  %v1_26b8b = icmp eq i32 %v3_26b88, 0
  br i1 %v1_26b8b, label %bb133, label %dec_label_pc_26b93

bb133:                                            ; preds = %dec_label_pc_26b88
  %v1_26b8d = call i32 @function_27005()
  store i32 %v1_26b8d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26b93

dec_label_pc_26b93:                               ; preds = %bb133, %dec_label_pc_26b88
  %v0_26b97 = load i32, i32* @esi, align 4
  %v3_26b9a = load i32, i32* %stack_var_48, align 4
  store i32 %v3_26b9a, i32* @eax, align 4
  %v2_26b9e = ptrtoint i32* %stack_var_128 to i32
  store i32 %v2_26b9e, i32* %ebp.global-to-local, align 4
  %v3_26ba5 = load i32, i32* %stack_var_64, align 4
  store i32 %v3_26ba5, i32* %ecx.global-to-local, align 4
  %v1_26ba9 = inttoptr i32 %v0_26b97 to i8*
  store i8 0, i8* %v1_26ba9, align 1
  %v0_26bb8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_26bc8 = call i32 @function_26c12(i32 %v0_26bb8)
  store i32 %v1_26bc8, i32* %eax.global-to-local, align 4
  ret i32 %v1_26bc8

; uselistorder directives
  uselistorder i32 %v2_26b0c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v1_26aee, { 1, 2, 0 }
  uselistorder i32 %tmp124, { 0, 5, 1, 4, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 6, 0, 5, 7, 2, 4, 8, 1, 3, 9, 10 }
  uselistorder i32 (i32)* @unknown_45f00, { 1, 0 }
  uselistorder i32 (i32)* @function_27030, { 1, 0 }
  uselistorder i32 (i32)* @function_26fc2, { 2, 1, 0 }
}

define i32 @function_26bd0() local_unnamed_addr {
dec_label_pc_26bd0:
  %v0_26bd0 = load i32, i32* @edx, align 4
  %v1_26bd0 = add i32 %v0_26bd0, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_26bd0, i32* @edx, align 4
  %v2_26bd3 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_26bd3 = icmp eq i8 %v2_26bd3, 0
  %v1_26bd6 = icmp eq i1 %v9_26bd3, false
  br i1 %v1_26bd6, label %bb, label %dec_label_pc_26bd0.dec_label_pc_26bdc_crit_edge

dec_label_pc_26bd0.dec_label_pc_26bdc_crit_edge:  ; preds = %dec_label_pc_26bd0
  %v3_26be0.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_26bdc

bb:                                               ; preds = %dec_label_pc_26bd0
  %v2_26bd6 = call i32 @function_26cb0()
  br label %dec_label_pc_26bdc

dec_label_pc_26bdc:                               ; preds = %dec_label_pc_26bd0.dec_label_pc_26bdc_crit_edge, %bb
  %v3_26be0 = phi i32 [ %v3_26be0.pre, %dec_label_pc_26bd0.dec_label_pc_26bdc_crit_edge ], [ %v2_26bd6, %bb ]
  ret i32 %v3_26be0

; uselistorder directives
  uselistorder label %dec_label_pc_26bdc, { 1, 0 }
}

define i32 @function_26beb() local_unnamed_addr {
dec_label_pc_26beb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26c0e() local_unnamed_addr {
dec_label_pc_26c0e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26c12(i32 %arg1) local_unnamed_addr {
dec_label_pc_26c12:
  %tmp10 = call i8* @__decompiler_undefined_function_1()
  %tmp17 = call i8* @__decompiler_undefined_function_1()
  %v4_26c12 = load i32, i32* @eax, align 4
  %v15_26c12 = icmp eq i32 %v4_26c12, %arg1
  br i1 %v15_26c12, label %bb, label %dec_label_pc_26c1c

bb:                                               ; preds = %dec_label_pc_26c12
  %v1_26c16 = call i32 @function_26cf8()
  store i32 %v1_26c16, i32* @eax, align 4
  br label %dec_label_pc_26c1c

dec_label_pc_26c1c:                               ; preds = %bb, %dec_label_pc_26c12
  %v0_26c255 = phi i32 [ %v1_26c16, %bb ], [ %v4_26c12, %dec_label_pc_26c12 ]
  %v4_26c1c = ptrtoint i8* %tmp17 to i32
  store i32 %v4_26c1c, i32* @edx, align 4
  %v2_26c20 = load i8, i8* %tmp17, align 1
  %v9_26c20 = icmp eq i8 %v2_26c20, 0
  %v1_26c23 = icmp eq i1 %v9_26c20, false
  br i1 %v1_26c23, label %bb20, label %dec_label_pc_26c25

bb20:                                             ; preds = %dec_label_pc_26c1c
  %v2_26c23 = call i32 @function_26bd0()
  %v0_26c28.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_26c25

dec_label_pc_26c25:                               ; preds = %bb20, %dec_label_pc_26c1c
  %v0_26c28 = phi i32 [ %v0_26c28.pre, %bb20 ], [ %v4_26c1c, %dec_label_pc_26c1c ]
  %v0_26c25 = phi i32 [ %v2_26c23, %bb20 ], [ %v0_26c255, %dec_label_pc_26c1c ]
  %v1_26c25 = add i32 %v0_26c25, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_26c25 = inttoptr i32 %v1_26c25 to i32*
  %v3_26c25 = load i32, i32* %v2_26c25, align 4
  store i32 %v3_26c25, i32* @eax, align 4
  %v1_26c28 = add i32 %v0_26c28, 140
  %v2_26c28 = inttoptr i32 %v1_26c28 to i32*
  %v3_26c28 = load i32, i32* %v2_26c28, align 4
  %v1_26c2e = icmp eq i32 %v3_26c25, 0
  %v1_26c30 = inttoptr i32 %v3_26c28 to i32*
  %v2_26c30 = load i32, i32* %v1_26c30, align 4
  store i32 %v2_26c30, i32* @ecx, align 4
  br i1 %v1_26c2e, label %bb21, label %dec_label_pc_26c38

bb21:                                             ; preds = %dec_label_pc_26c25
  %v1_26c32 = call i32 @function_26ea5()
  br label %dec_label_pc_26c38

dec_label_pc_26c38:                               ; preds = %bb21, %dec_label_pc_26c25
  %v0_26c38 = phi i32 [ %v1_26c32, %bb21 ], [ %v3_26c25, %dec_label_pc_26c25 ]
  %v1_26c38 = add i32 %v0_26c38, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_26c38 = inttoptr i32 %v1_26c38 to i32*
  %v3_26c38 = load i32, i32* %v2_26c38, align 4
  store i32 %v3_26c38, i32* @edx, align 4
  %v1_26c3b = icmp eq i32 %v3_26c38, 0
  br i1 %v1_26c3b, label %bb22, label %dec_label_pc_26c43

bb22:                                             ; preds = %dec_label_pc_26c38
  %v1_26c3d = call i32 @function_26eaa()
  br label %dec_label_pc_26c43

dec_label_pc_26c43:                               ; preds = %bb22, %dec_label_pc_26c38
  %v0_26c43 = phi i32 [ %v1_26c3d, %bb22 ], [ %v0_26c38, %dec_label_pc_26c38 ]
  %v1_26c43 = add i32 %v0_26c43, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_26c43, i32* @eax, align 4
  %v0_26c49 = load i32, i32* @ecx, align 4
  %v4_26c5a = ptrtoint i8* %tmp10 to i32
  store i32 %v4_26c5a, i32* @ebx, align 4
  %v2_26c5e = load i8, i8* %tmp10, align 1
  %v9_26c5e = icmp eq i8 %v2_26c5e, 0
  %v1_26c61 = icmp eq i1 %v9_26c5e, false
  br i1 %v1_26c61, label %bb24, label %dec_label_pc_26c63

bb24:                                             ; preds = %dec_label_pc_26c43
  %v4_26c61 = call i32 @function_26ce0(i32 %v1_26c43, i32 %v0_26c49)
  %v0_26c63.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_26c63

dec_label_pc_26c63:                               ; preds = %bb24, %dec_label_pc_26c43
  %v0_26c63 = phi i32 [ %v0_26c63.pre, %bb24 ], [ %v4_26c5a, %dec_label_pc_26c43 ]
  %v1_26c63 = add i32 %v0_26c63, ptrtoint (i16** @global_var_4.3276 to i32)
  ret i32 %v1_26c63

; uselistorder directives
  uselistorder i32 %v4_26c12, { 1, 0 }
  uselistorder i8* %tmp17, { 1, 0 }
  uselistorder i8* %tmp10, { 1, 0 }
}

define i32 @function_26c75() local_unnamed_addr {
dec_label_pc_26c75:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26ca0(i32 %arg1) local_unnamed_addr {
dec_label_pc_26ca0:
  %v2_26ca0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_26ca0 = load i32, i32* @eax, align 4
  %v4_26ca0 = trunc i32 %v3_26ca0 to i8
  %v5_26ca0 = add i8 %v4_26ca0, %v2_26ca0
  %v21_26ca0 = inttoptr i32 %v3_26ca0 to i8*
  store i8 %v5_26ca0, i8* %v21_26ca0, align 1
  %v3_26ca2 = load i32, i32* @eax, align 4
  ret i32 %v3_26ca2
}

define i32 @function_26cad() local_unnamed_addr {
dec_label_pc_26cad:
  %eax.global-to-local = alloca i32, align 4
  %v0_26cad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26cad
}

define i32 @function_26cb0() local_unnamed_addr {
dec_label_pc_26cb0:
  %v3_26cb4 = load i32, i32* @eax, align 4
  ret i32 %v3_26cb4
}

define i32 @function_26cbc() local_unnamed_addr {
dec_label_pc_26cbc:
  %v0_26cbc = call i32 @function_26beb()
  ret i32 %v0_26cbc
}

define i32 @function_26cd2() local_unnamed_addr {
dec_label_pc_26cd2:
  %eax.global-to-local = alloca i32, align 4
  %v0_26cd4 = load i32, i32* %eax.global-to-local, align 4
  %v4_26cd4 = mul i32 %v0_26cd4, 2
  store i32 %v4_26cd4, i32* @eax, align 4
  %v0_26cd6 = call i32 @function_26c0e()
  store i32 %v0_26cd6, i32* %eax.global-to-local, align 4
  ret i32 %v0_26cd6
}

define i32 @function_26ce0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26ce0:
  %v0_26ce0 = load i32, i32* @ebx, align 4
  %v1_26ce0 = add i32 %v0_26ce0, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_26ce0, i32* @ebx, align 4
  %v4_26ce7 = load i32, i32* @eax, align 4
  ret i32 %v4_26ce7
}

define i32 @function_26cef() local_unnamed_addr {
dec_label_pc_26cef:
  %v0_26cef = call i32 @function_26c75()
  ret i32 %v0_26cef
}

define i32 @function_26cf8() local_unnamed_addr {
dec_label_pc_26cf8:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = icmp ugt i32 %tmp12, %tmp13
  br i1 %tmp22, label %bb, label %dec_label_pc_26d0c

bb:                                               ; preds = %dec_label_pc_26cf8
  %v4_26d06 = call i32 @function_26da1()
  br label %dec_label_pc_26d0c

dec_label_pc_26d0c:                               ; preds = %dec_label_pc_26cf8, %bb
  %v1_26d13 = icmp eq i32 %tmp11, 0
  br i1 %v1_26d13, label %bb14, label %dec_label_pc_26d17

bb14:                                             ; preds = %dec_label_pc_26d0c
  %v1_26d15 = call i32 @function_26d51()
  store i32 %v1_26d15, i32* @eax, align 4
  br label %dec_label_pc_26d17

dec_label_pc_26d17:                               ; preds = %bb14, %dec_label_pc_26d0c
  %v0_26d272 = phi i32 [ %v1_26d15, %bb14 ], [ %tmp11, %dec_label_pc_26d0c ]
  %tmp23 = icmp ult i32 %tmp10, 10
  br i1 %tmp23, label %bb16, label %dec_label_pc_26d27

bb16:                                             ; preds = %dec_label_pc_26d17
  %v3_26d21 = call i32 @function_26e89()
  store i32 %v3_26d21, i32* @eax, align 4
  br label %dec_label_pc_26d27

dec_label_pc_26d27:                               ; preds = %bb16, %dec_label_pc_26d17
  %v0_26d27 = phi i32 [ %v3_26d21, %bb16 ], [ %v0_26d272, %dec_label_pc_26d17 ]
  %v15_26d27 = icmp eq i32 %v0_26d27, %tmp9
  br i1 %v15_26d27, label %bb17, label %dec_label_pc_26d31

bb17:                                             ; preds = %dec_label_pc_26d27
  %v1_26d2b = call i32 @function_26e80()
  store i32 %v1_26d2b, i32* @eax, align 4
  br label %dec_label_pc_26d31

dec_label_pc_26d31:                               ; preds = %bb17, %dec_label_pc_26d27
  %v3_26d496 = phi i32 [ %v1_26d2b, %bb17 ], [ %v0_26d27, %dec_label_pc_26d27 ]
  %v0_26d38 = load i32, i32* @edx, align 4
  %v7_26d38 = icmp ult i32 %v0_26d38, %tmp8
  br i1 %v7_26d38, label %bb18, label %dec_label_pc_26d40

bb18:                                             ; preds = %dec_label_pc_26d31
  %v1_26d3a = call i32 @function_26e89()
  store i32 %v1_26d3a, i32* @eax, align 4
  br label %dec_label_pc_26d40

dec_label_pc_26d40:                               ; preds = %bb18, %dec_label_pc_26d31
  %v3_26d495 = phi i32 [ %v1_26d3a, %bb18 ], [ %v3_26d496, %dec_label_pc_26d31 ]
  %v1_26d40 = icmp eq i32 %tmp8, 0
  %v1_26d42 = icmp eq i1 %v1_26d40, false
  br i1 %v1_26d42, label %bb19, label %dec_label_pc_26d44

bb19:                                             ; preds = %dec_label_pc_26d40
  %v2_26d42 = call i32 @function_26dba()
  br label %dec_label_pc_26d44

dec_label_pc_26d44:                               ; preds = %bb19, %dec_label_pc_26d40
  %v3_26d494 = phi i32 [ %v2_26d42, %bb19 ], [ %v3_26d495, %dec_label_pc_26d40 ]
  %v0_26d44 = load i32, i32* @edx, align 4
  %tmp24 = icmp ult i32 %v0_26d44, 11
  br i1 %tmp24, label %bb21, label %dec_label_pc_26d49

bb21:                                             ; preds = %dec_label_pc_26d44
  %v3_26d47 = call i32 @function_26d51()
  br label %dec_label_pc_26d49

dec_label_pc_26d49:                               ; preds = %bb21, %dec_label_pc_26d44
  %v3_26d49 = phi i32 [ %v3_26d47, %bb21 ], [ %v3_26d494, %dec_label_pc_26d44 ]
  ret i32 %v3_26d49

; uselistorder directives
  uselistorder i32 %v0_26d27, { 1, 0 }
  uselistorder i32 ()* @function_26e89, { 1, 0 }
  uselistorder i32 ()* @function_26d51, { 1, 0 }
  uselistorder label %dec_label_pc_26d0c, { 1, 0 }
}

define i32 @function_26d51() local_unnamed_addr {
dec_label_pc_26d51:
  %stack_var_136 = alloca i32, align 4
  %tmp2 = call i8 @__decompiler_undefined_function_2()
  %v10_26d51 = icmp eq i8 %tmp2, 0
  br i1 %v10_26d51, label %bb, label %dec_label_pc_26d5b

bb:                                               ; preds = %dec_label_pc_26d51
  %v1_26d59 = call i32 @function_26d72()
  br label %dec_label_pc_26d5b

dec_label_pc_26d5b:                               ; preds = %bb, %dec_label_pc_26d51
  %v2_26d5b = ptrtoint i32* %stack_var_136 to i32
  ret i32 %v2_26d5b
}

define i32 @function_26d72() local_unnamed_addr {
dec_label_pc_26d72:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_100 = alloca i32, align 4
  %v2_26d72 = ptrtoint i32* %stack_var_100 to i32
  store i32 %v2_26d72, i32* @eax, align 4
  %v1_26d79 = call i32 @function_3a450(i32 %v2_26d72)
  %v0_26d7e = load i32, i32* @esi, align 4
  store i32 %v0_26d7e, i32* @eax, align 4
  %v1_26d87 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26d87 = icmp eq i32 %v1_26d87, %tmp10
  %v1_26d8e = icmp eq i1 %v3_26d87, false
  br i1 %v1_26d8e, label %bb, label %dec_label_pc_26d94

bb:                                               ; preds = %dec_label_pc_26d72
  %v2_26d8e = call i32 @function_27035()
  br label %dec_label_pc_26d94

dec_label_pc_26d94:                               ; preds = %bb, %dec_label_pc_26d72
  %v0_26d9e = phi i32 [ %v2_26d8e, %bb ], [ %v0_26d7e, %dec_label_pc_26d72 ]
  ret i32 %v0_26d9e
}

define i32 @function_26da1() local_unnamed_addr {
dec_label_pc_26da1:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v2_26db0 = call i32 @unknown_4d190(i32 %tmp2, i32 %tmp3)
  ret i32 %v2_26db0
}

define i32 @function_26dba() local_unnamed_addr {
dec_label_pc_26dba:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_26dba = load i32, i32* @ecx, align 4
  %v2_26dba = mul i32 %v0_26dba, 2
  %v3_26dba = add i32 %v0_26dba, -3
  %v4_26dba = add i32 %v3_26dba, %v2_26dba
  %v0_26dbe = load i32, i32* @eax, align 4
  %v2_26dbe = mul i32 %v4_26dba, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_26dbe = add i32 %v2_26dbe, %v0_26dbe
  store i32 %v3_26dbe, i32* %ebx.global-to-local, align 4
  %tmp4 = mul i32 %v0_26dba, -12
  %v2_26dc9 = add i32 %v3_26dbe, %tmp4
  store i32 %v2_26dc9, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_26dd8

dec_label_pc_26dd8:                               ; preds = %dec_label_pc_26dd8, %dec_label_pc_26dba
  %v0_26dd8 = phi i32 [ %v1_26de0, %dec_label_pc_26dd8 ], [ %v3_26dbe, %dec_label_pc_26dba ]
  %v1_26ddb = call i32 @function_3d0e0(i32 %v0_26dd8)
  store i32 %v1_26ddb, i32* @eax, align 4
  %v0_26de0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_26de0 = add i32 %v0_26de0, -12
  store i32 %v1_26de0, i32* %ebx.global-to-local, align 4
  %v0_26de3 = load i32, i32* %edi.global-to-local, align 4
  %v7_26de3 = icmp ult i32 %v0_26de3, %v1_26de0
  br i1 %v7_26de3, label %dec_label_pc_26dd8, label %dec_label_pc_26de7

dec_label_pc_26de7:                               ; preds = %dec_label_pc_26dd8
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_26de0, { 1, 2, 0 }
  uselistorder i32 %v3_26dbe, { 1, 0, 2 }
  uselistorder i32 %v0_26dba, { 0, 2, 1 }
}

define i32 @function_26e3a(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e3a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26e50() local_unnamed_addr {
dec_label_pc_26e50:
  %eax.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_26e50 = load i32, i32* @eax, align 4
  %v1_26e50 = trunc i32 %v0_26e50 to i8
  %v2_26e50 = and i8 %v1_26e50, ptrtoint (i16** @global_var_4.3276 to i8)
  %v8_26e50 = zext i8 %v2_26e50 to i32
  %v10_26e50 = and i32 %v0_26e50, -256
  %v11_26e50 = or i32 %v8_26e50, %v10_26e50
  store i32 %v11_26e50, i32* %eax.global-to-local, align 4
  %v1_26e52 = inttoptr i32 %v11_26e50 to i8*
  %v2_26e52 = load i8, i8* %v1_26e52, align 4
  %v5_26e52 = add i8 %v2_26e52, %v2_26e50
  store i8 %v5_26e52, i8* %v1_26e52, align 4
  %v0_26e54 = load i32, i32* %eax.global-to-local, align 4
  %v1_26e54 = inttoptr i32 %v0_26e54 to i8*
  %v2_26e54 = load i8, i8* %v1_26e54, align 1
  %v4_26e54 = trunc i32 %v0_26e54 to i8
  %v5_26e54 = add i8 %v2_26e54, %v4_26e54
  store i8 %v5_26e54, i8* %v1_26e54, align 1
  %v0_26e56 = load i32, i32* @ecx, align 4
  %v1_26e59 = call i32 @unknown_4cac0(i32 %v0_26e56)
  store i32 %v1_26e59, i32* %eax.global-to-local, align 4
  %v1_26e62 = add i32 %tmp3, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_26e62 = inttoptr i32 %v1_26e62 to i32*
  %v3_26e62 = load i32, i32* %v2_26e62, align 4
  store i32 %v3_26e62, i32* @eax, align 4
  %v1_26e67 = icmp eq i32 %v3_26e62, 0
  %v1_26e71 = icmp eq i1 %v1_26e67, false
  br i1 %v1_26e71, label %bb, label %dec_label_pc_26e77

bb:                                               ; preds = %dec_label_pc_26e50
  %v1_26e65 = inttoptr i32 %tmp3 to i32*
  %v2_26e65 = load i32, i32* %v1_26e65, align 4
  %v4_26e71 = call i32 @function_26a73(i32 %v2_26e65, i32 %v3_26e62)
  store i32 %v4_26e71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26e77

dec_label_pc_26e77:                               ; preds = %bb, %dec_label_pc_26e50
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_26e79 = call i32 @function_26a7f()
  store i32 %v0_26e79, i32* %eax.global-to-local, align 4
  ret i32 %v0_26e79

; uselistorder directives
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 5, 2, 3, 4 }
}

define i32 @function_26e80() local_unnamed_addr {
dec_label_pc_26e80:
  %v0_26e83 = load i32, i32* @eax, align 4
  ret i32 %v0_26e83
}

define i32 @function_26e89() local_unnamed_addr {
dec_label_pc_26e89:
  %v0_26e89 = call i32 @function_3826e()
  %v0_26e98 = call i32 @function_26a7f()
  ret i32 %v0_26e98

; uselistorder directives
  uselistorder i32 ()* @function_26a7f, { 1, 0 }
}

define i32 @function_26e9d() local_unnamed_addr {
dec_label_pc_26e9d:
  %v0_26e9f = load i32, i32* @eax, align 4
  %v1_26ea3 = call i32 @function_26e3a(i32 %v0_26e9f)
  ret i32 %v1_26ea3
}

define i32 @function_26ea5() local_unnamed_addr {
dec_label_pc_26ea5:
  %v0_26ea5 = call i32 @function_37efa()
  ret i32 %v0_26ea5
}

define i32 @function_26eaa() local_unnamed_addr {
dec_label_pc_26eaa:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_100 = alloca i32, align 4
  %stack_var_132 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_112 = alloca i32, align 4
  %v2_26eaa = ptrtoint i32* %stack_var_112 to i32
  %v1_26eb1 = call i32 @unknown_3b2f0(i32 %v2_26eaa)
  store i32 %v1_26eb1, i32* @eax, align 4
  %v1_26eb9 = call i32 @function_3d940(i32 %v2_26eaa)
  store i32 %v1_26eb9, i32* @eax, align 4
  %v0_26ec2 = load i32, i32* @edx, align 4
  %v1_26ec9 = call i32 @function_34ea0(i32 %v2_26eaa)
  store i32 %v1_26eb9, i32* @eax, align 4
  store i32 %v0_26ec2, i32* %edx.global-to-local, align 4
  %v10_26ed6 = icmp eq i32 %v0_26ec2, 1
  br i1 %v10_26ed6, label %bb, label %dec_label_pc_26edb

bb:                                               ; preds = %dec_label_pc_26eaa
  %v1_26ed9 = call i32 @function_26f45()
  store i32 %v1_26ed9, i32* @eax, align 4
  %v0_26edb.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_26edb

dec_label_pc_26edb:                               ; preds = %bb, %dec_label_pc_26eaa
  %v0_26edb = phi i32 [ %v0_26edb.pre, %bb ], [ %v0_26ec2, %dec_label_pc_26eaa ]
  %v10_26edb = icmp eq i32 %v0_26edb, 1
  br i1 %v10_26edb, label %bb16, label %dec_label_pc_26ee0

bb16:                                             ; preds = %dec_label_pc_26edb
  %v1_26ede = call i32 @function_26f31()
  store i32 %v1_26ede, i32* @eax, align 4
  br label %dec_label_pc_26ee0

dec_label_pc_26ee0:                               ; preds = %bb16, %dec_label_pc_26edb
  %v0_26ee2 = load i32, i32* @esi, align 4
  %v1_26ee5 = call i32 @function_3d670(i32 %v0_26ee2)
  %tmp17 = icmp ugt i32 %tmp8, %tmp9
  br i1 %tmp17, label %dec_label_pc_26efa, label %dec_label_pc_26f0e

dec_label_pc_26efa:                               ; preds = %dec_label_pc_26ee0
  %v2_26f09 = call i32 @unknown_4d190(i32 %tmp6, i32 %tmp7)
  br label %dec_label_pc_26f0e

dec_label_pc_26f0e:                               ; preds = %dec_label_pc_26ee0, %dec_label_pc_26efa
  %v2_26f0e = ptrtoint i32* %stack_var_132 to i32
  store i32 %v2_26f0e, i32* @ecx, align 4
  %v1_26f18 = call i32 @unknown_3e150(i32 %v2_26f0e)
  %v2_26f1d = ptrtoint i32* %stack_var_100 to i32
  store i32 %v2_26f1d, i32* @eax, align 4
  %v1_26f24 = call i32 @function_3a450(i32 %v2_26f1d)
  ret i32 %v1_26f24

; uselistorder directives
  uselistorder i32 %v0_26ec2, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_3a450, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_4d190, { 1, 0 }
  uselistorder label %dec_label_pc_26f0e, { 1, 0 }
}

define i32 @function_26f31() local_unnamed_addr {
dec_label_pc_26f31:
  %v3_26f31 = load i32, i32* @eax, align 4
  ret i32 %v3_26f31
}

define i32 @function_26f3d() local_unnamed_addr {
dec_label_pc_26f3d:
  %eax.global-to-local = alloca i32, align 4
  %v0_26f3d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26f3d
}

define i32 @function_26f40() local_unnamed_addr {
dec_label_pc_26f40:
  %v0_26f40 = call i32 @function_26beb()
  ret i32 %v0_26f40

; uselistorder directives
  uselistorder i32 ()* @function_26beb, { 1, 0 }
}

define i32 @function_26f45() local_unnamed_addr {
dec_label_pc_26f45:
  %v3_26f45 = load i32, i32* @eax, align 4
  ret i32 %v3_26f45
}

define i32 @function_26f74() local_unnamed_addr {
dec_label_pc_26f74:
  %ecx.global-to-local = alloca i32, align 4
  %v0_26f74 = load i32, i32* %ecx.global-to-local, align 4
  %v1_26f74 = add i32 %v0_26f74, 612666819
  %v2_26f74 = inttoptr i32 %v1_26f74 to i32*
  %v3_26f74 = load i32, i32* %v2_26f74, align 4
  %v4_26f74 = add i32 %v3_26f74, -1
  store i32 %v4_26f74, i32* %v2_26f74, align 4
  %v3_26f7a = load i32, i32* @eax, align 4
  %v4_26f7a = trunc i32 %v3_26f7a to i8
  %v5_26f7c = mul i8 %v4_26f7a, 2
  %v21_26f7c = inttoptr i32 %v3_26f7a to i8*
  store i8 %v5_26f7c, i8* %v21_26f7c, align 1
  %v0_26f7e = load i32, i32* @eax, align 4
  %v1_26f81 = call i32 @function_3d670(i32 %v0_26f7e)
  ret i32 %v1_26f81

; uselistorder directives
  uselistorder i32 (i32)* @function_3d670, { 1, 0 }
  uselistorder i8 2, { 1, 2, 3, 4, 0 }
}

define i32 @function_26fa0(i32 %arg1) local_unnamed_addr {
dec_label_pc_26fa0:
  %v3_26fa0 = load i32, i32* @eax, align 4
  ret i32 %v3_26fa0
}

define i32 @function_26fad() local_unnamed_addr {
dec_label_pc_26fad:
  %eax.global-to-local = alloca i32, align 4
  %v0_26fad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26fad
}

define i32 @function_26fb7(i32 %arg1) local_unnamed_addr {
dec_label_pc_26fb7:
  %ebx.global-to-local = alloca i32, align 4
  %v0_26fb7 = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_26fb7
}

define i32 @function_26fc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_26fc2:
  %stack_var_120 = alloca i32, align 4
  %v0_26fc2 = call i32 @function_37dc2()
  %v2_26fc9 = ptrtoint i32* %stack_var_120 to i32
  %v1_26fd0 = call i32 @unknown_3ff30(i32 %v2_26fc9)
  ret i32 %v1_26fd0
}

define i32 @function_26fda() local_unnamed_addr {
dec_label_pc_26fda:
  %eax.global-to-local = alloca i32, align 4
  %v0_26fda = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26fda
}

define i32 @function_26fe0() local_unnamed_addr {
dec_label_pc_26fe0:
  %eax.global-to-local = alloca i32, align 4
  %v0_26fe0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26fe0
}

define i32 @function_26fed(i32 %arg1) local_unnamed_addr {
dec_label_pc_26fed:
  %ebx.global-to-local = alloca i32, align 4
  %v0_26fed = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_26fed
}

define i32 @function_26ff8() local_unnamed_addr {
dec_label_pc_26ff8:
  %eax.global-to-local = alloca i32, align 4
  %v0_26ff8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26ff8
}

define i32 @function_27000() local_unnamed_addr {
dec_label_pc_27000:
  %eax.global-to-local = alloca i32, align 4
  %v0_27000 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27000
}

define i32 @function_27005() local_unnamed_addr {
dec_label_pc_27005:
  %v3_2701d = load i32, i32* @eax, align 4
  ret i32 %v3_2701d
}

define i32 @function_27029() local_unnamed_addr {
dec_label_pc_27029:
  %eax.global-to-local = alloca i32, align 4
  %v0_27029 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27029
}

define i32 @function_27030(i32 %arg1) local_unnamed_addr {
dec_label_pc_27030:
  %v0_27030 = call i32 @function_37e5e()
  ret i32 %v0_27030
}

define i32 @function_27035() local_unnamed_addr {
dec_label_pc_27035:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2703a() local_unnamed_addr {
dec_label_pc_2703a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2703a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2703a
}

define i32 @_Z1_PKc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27040:
  %tmp2 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_27070 = ptrtoint i32* %stack_var_-24 to i32
  %v4_2707f = call i32 @unknown_4da30(i32 %v2_27070, i32 1600480114, i32 %arg2)
  %v10_27087 = icmp eq i8 %tmp2, 0
  br i1 %v10_27087, label %bb, label %dec_label_pc_2708e

bb:                                               ; preds = %dec_label_pc_27040
  %v1_2708c = call i32 @function_270e0()
  br label %dec_label_pc_2708e

dec_label_pc_2708e:                               ; preds = %bb, %dec_label_pc_27040
  ret i32 %v2_27070
}

define i32 @function_270a7() local_unnamed_addr {
dec_label_pc_270a7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_270b9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_270b9:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_270b9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_270b9 = add i32 %v0_270b9, 1696343124
  %v2_270b9 = inttoptr i32 %v1_270b9 to i32*
  %v3_270b9 = load i32, i32* %v2_270b9, align 4
  %v4_270b9 = add i32 %v3_270b9, -1
  store i32 %v4_270b9, i32* %v2_270b9, align 4
  %v0_270bf = load i32, i32* %edx.global-to-local, align 4
  %v1_270bf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_270bf = xor i32 %v1_270bf, %v0_270bf
  %v3_270bf = icmp eq i32 %v2_270bf, 0
  store i32 %v2_270bf, i32* %edx.global-to-local, align 4
  %v0_270c5 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_270c5, i32* @eax, align 4
  %v1_270c7 = icmp eq i1 %v3_270bf, false
  br i1 %v1_270c7, label %bb, label %dec_label_pc_270c9

bb:                                               ; preds = %dec_label_pc_270b9
  %v2_270c7 = call i32 @function_270f6()
  br label %dec_label_pc_270c9

dec_label_pc_270c9:                               ; preds = %bb, %dec_label_pc_270b9
  %v0_270d8 = phi i32 [ %v2_270c7, %bb ], [ %v0_270c5, %dec_label_pc_270b9 ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_270d8
}

define i32 @function_270e0() local_unnamed_addr {
dec_label_pc_270e0:
  %stack_var_19 = alloca i32, align 4
  %v2_270e0 = ptrtoint i32* %stack_var_19 to i32
  ret i32 %v2_270e0
}

define i32 @function_270f4() local_unnamed_addr {
dec_label_pc_270f4:
  %v0_270f4 = call i32 @function_270a7()
  ret i32 %v0_270f4
}

define i32 @function_270f6() local_unnamed_addr {
dec_label_pc_270f6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_270fb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_270fb:
  %v3_27113 = load i32, i32* @eax, align 4
  ret i32 %v3_27113
}

define i32 @function_27120() local_unnamed_addr {
dec_label_pc_27120:
  %eax.global-to-local = alloca i32, align 4
  %v0_27120 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27120
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_27140:
  store i32 %arg5, i32* @esi, align 4
  %v1_27170 = icmp eq i32 %arg3, 0
  %v1_27172 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_27172, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_27170, label %bb, label %dec_label_pc_27187

bb:                                               ; preds = %dec_label_pc_27140
  %v3_27181 = call i32 @function_27210(i32 %v1_27172)
  br label %dec_label_pc_27187

dec_label_pc_27187:                               ; preds = %bb, %dec_label_pc_27140
  %v2_2718b = phi i32 [ %v3_27181, %bb ], [ %arg3, %dec_label_pc_27140 ]
  ret i32 %v2_2718b
}

define i32 @function_271da(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_271da:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_271da = load i32, i32* %ebx.global-to-local, align 4
  %v1_271da = add i32 %v0_271da, -2095569852
  %v2_271da = inttoptr i32 %v1_271da to i32*
  %v3_271da = load i32, i32* %v2_271da, align 4
  %v4_271da = sub i32 %v3_271da, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_271da, i32* %v2_271da, align 4
  %v0_271e0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_271e0 = add i32 %v0_271e0, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_271e0, i32* %ebx.global-to-local, align 4
  %v0_271e1 = load i32, i32* %eax.global-to-local, align 4
  %v2_271e1 = load i1, i1* %cf.global-to-local, align 1
  %v3_271e1 = zext i1 %v2_271e1 to i32
  %v4_271e1 = add i32 %v0_271e1, zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32)
  %v5_271e1 = add i32 %v4_271e1, %v3_271e1
  %v25_271e1 = urem i32 %v5_271e1, 256
  %v27_271e1 = and i32 %v0_271e1, -256
  %v28_271e1 = or i32 %v25_271e1, %v27_271e1
  store i32 %v28_271e1, i32* %eax.global-to-local, align 4
  %v1_271e7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_271e7 = icmp eq i32 %v1_271e7, %arg1
  %v1_271ee = load i32, i32* %edi.global-to-local, align 4
  %v2_271ee = inttoptr i32 %v1_271ee to i32*
  store i32 %v28_271e1, i32* %v2_271ee, align 4
  %v0_271f0 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_271f0, i32* @eax, align 4
  %v1_271f2 = icmp eq i1 %v3_271e7, false
  br i1 %v1_271f2, label %bb, label %dec_label_pc_271f4

bb:                                               ; preds = %dec_label_pc_271da
  %v2_271f2 = call i32 @function_2722a()
  store i32 %v2_271f2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_271f4

dec_label_pc_271f4:                               ; preds = %bb, %dec_label_pc_271da
  %v0_27207 = phi i32 [ %v2_271f2, %bb ], [ %v0_271f0, %dec_label_pc_271da ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_27204 = load i32, i32* @esp, align 4
  %v5_27204 = icmp ugt i32 %v0_27204, -77
  store i1 %v5_27204, i1* %cf.global-to-local, align 1
  ret i32 %v0_27207

; uselistorder directives
  uselistorder i32 %v0_271e1, { 1, 0 }
}

define i32 @function_27210(i32 %arg1) local_unnamed_addr {
dec_label_pc_27210:
  %v0_2721b = load i32, i32* @esi, align 4
  store i32 %v0_2721b, i32* @eax, align 4
  %v0_2721d = call i32 @function_273b0()
  ret i32 %v0_2721d
}

define i32 @function_2722a() local_unnamed_addr {
dec_label_pc_2722a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_27230:
  %ebp.global-to-local = alloca i32, align 4
  %tmp116 = ptrtoint i32* %arg3 to i32
  store i32 %arg2, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %tmp116, i32* @ebx, align 4
  %v1_2724f = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2724f = inttoptr i32 %v1_2724f to i32*
  %v3_2724f = load i32, i32* %v2_2724f, align 4
  store i32 %v3_2724f, i32* @edi, align 4
  %v1_27256 = icmp eq i32 %v3_2724f, 0
  br i1 %v1_27256, label %bb, label %dec_label_pc_2725e

bb:                                               ; preds = %dec_label_pc_27230
  %v2_27258 = call i32 @function_2736f(i32 %arg2)
  store i32 %v2_27258, i32* @eax, align 4
  %v0_2725e.pre = load i32, i32* @ebx, align 4
  %v0_27275.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_2725e

dec_label_pc_2725e:                               ; preds = %bb, %dec_label_pc_27230
  %v0_27275.pre = phi i32 [ %v0_27275.pre.pre, %bb ], [ %v3_2724f, %dec_label_pc_27230 ]
  %v0_2725e = phi i32 [ %v0_2725e.pre, %bb ], [ %tmp116, %dec_label_pc_27230 ]
  %v1_2725e = inttoptr i32 %v0_2725e to i32*
  %v2_2725e = load i32, i32* %v1_2725e, align 4
  store i32 %v2_2725e, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_27275

dec_label_pc_27268:                               ; preds = %dec_label_pc_27275
  %v5_27268 = icmp eq i1 %v2_2727a, false
  br i1 %v5_27268, label %dec_label_pc_27286, label %dec_label_pc_2726c

dec_label_pc_2726c:                               ; preds = %dec_label_pc_27268
  %v1_2726c = add i32 %v0_2726c, 8
  %v2_2726c = inttoptr i32 %v1_2726c to i32*
  %v3_2726c = load i32, i32* %v2_2726c, align 4
  store i32 %v3_2726c, i32* @eax, align 4
  %v1_2726f = icmp eq i32 %v3_2726c, 0
  br i1 %v1_2726f, label %dec_label_pc_2728f, label %dec_label_pc_27273

dec_label_pc_27273:                               ; preds = %dec_label_pc_27286, %dec_label_pc_2726c
  %v0_27278.pre = phi i32 [ %v0_27281, %dec_label_pc_2726c ], [ %v0_27278.pre.pre, %dec_label_pc_27286 ]
  %v0_27273 = phi i32 [ %v3_2726c, %dec_label_pc_2726c ], [ %v3_27286, %dec_label_pc_27286 ]
  %v4_2727a7 = phi i32 [ %v6_2727a, %dec_label_pc_2726c ], [ 0, %dec_label_pc_27286 ]
  store i32 %v0_27273, i32* @edi, align 4
  br label %dec_label_pc_27275

dec_label_pc_27275:                               ; preds = %dec_label_pc_27273, %dec_label_pc_2725e
  %v4_2727a = phi i32 [ %v4_2727a7, %dec_label_pc_27273 ], [ %v2_2725e, %dec_label_pc_2725e ]
  %v0_27281 = phi i32 [ %v0_27278.pre, %dec_label_pc_27273 ], [ %v2_2725e, %dec_label_pc_2725e ]
  %v0_2726c = phi i32 [ %v0_27273, %dec_label_pc_27273 ], [ %v0_27275.pre, %dec_label_pc_2725e ]
  %v1_27275 = add i32 %v0_2726c, 16
  %v2_27275 = inttoptr i32 %v1_27275 to i32*
  %v3_27275 = load i32, i32* %v2_27275, align 4
  store i32 %v3_27275, i32* @edx, align 4
  %v2_27278 = sub i32 %v0_27281, %v3_27275
  %v8_27278 = xor i32 %v3_27275, %v0_27281
  %v9_27278 = xor i32 %v2_27278, %v0_27281
  %v10_27278 = and i32 %v9_27278, %v8_27278
  %v11_27278 = icmp slt i32 %v10_27278, 0
  %v13_27278 = icmp slt i32 %v2_27278, 0
  %v2_2727a = icmp ne i1 %v13_27278, %v11_27278
  %v3_2727a = zext i1 %v2_2727a to i32
  %v5_2727a = and i32 %v4_2727a, -256
  %v6_2727a = or i32 %v3_2727a, %v5_2727a
  store i32 %v6_2727a, i32* @ecx, align 4
  %v12_2727d = icmp eq i32 %v0_27281, %v3_27275
  %v1_2727f = icmp eq i1 %v12_2727d, false
  br i1 %v1_2727f, label %dec_label_pc_27268, label %dec_label_pc_27281

dec_label_pc_27281:                               ; preds = %dec_label_pc_27275
  %v10_27281 = icmp eq i32 %v0_27281, 1
  br i1 %v10_27281, label %bb126, label %dec_label_pc_27286

bb126:                                            ; preds = %dec_label_pc_27281
  %v1_27284 = call i32 @function_272e8()
  %v0_27286.pre = load i32, i32* @edi, align 4
  %v0_27278.pre.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_27286

dec_label_pc_27286:                               ; preds = %dec_label_pc_27268, %bb126, %dec_label_pc_27281
  %v0_27278.pre.pre = phi i32 [ %v0_27281, %dec_label_pc_27268 ], [ %v0_27278.pre.pre.pre, %bb126 ], [ %v0_27281, %dec_label_pc_27281 ]
  %v0_27286 = phi i32 [ %v0_2726c, %dec_label_pc_27268 ], [ %v0_27286.pre, %bb126 ], [ %v0_2726c, %dec_label_pc_27281 ]
  %v1_27286 = add i32 %v0_27286, 12
  %v2_27286 = inttoptr i32 %v1_27286 to i32*
  %v3_27286 = load i32, i32* %v2_27286, align 4
  store i32 %v3_27286, i32* @eax, align 4
  %v1_2728b = icmp eq i32 %v3_27286, 0
  %v1_2728d = icmp eq i1 %v1_2728b, false
  br i1 %v1_2728d, label %dec_label_pc_27273, label %dec_label_pc_2728f

dec_label_pc_2728f:                               ; preds = %dec_label_pc_27286, %dec_label_pc_2726c
  %v0_2729f12 = phi i32 [ %v0_2726c, %dec_label_pc_2726c ], [ %v0_27286, %dec_label_pc_27286 ]
  %v0_27291 = phi i32 [ %v0_27281, %dec_label_pc_2726c ], [ %v0_27278.pre.pre, %dec_label_pc_27286 ]
  %v0_2728f = phi i32 [ %v6_2727a, %dec_label_pc_2726c ], [ 0, %dec_label_pc_27286 ]
  store i32 %v0_27291, i32* @ecx, align 4
  %v4_27293 = trunc i32 %v0_2728f to i8
  %v5_27293 = icmp eq i8 %v4_27293, 0
  br i1 %v5_27293, label %bb127, label %dec_label_pc_2729b

bb127:                                            ; preds = %dec_label_pc_2728f
  %v1_27295 = call i32 @function_27368()
  %v0_2729f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_2729b

dec_label_pc_2729b:                               ; preds = %bb127, %dec_label_pc_2728f
  %v3_272a815 = phi i32 [ %v1_27295, %bb127 ], [ %v0_2728f, %dec_label_pc_2728f ]
  %v0_2729f = phi i32 [ %v0_2729f.pre, %bb127 ], [ %v0_2729f12, %dec_label_pc_2728f ]
  %v2_2729f = add i32 %arg2, 12
  %v3_2729f = inttoptr i32 %v2_2729f to i32*
  %v4_2729f = load i32, i32* %v3_2729f, align 4
  %v15_2729f = icmp eq i32 %v0_2729f, %v4_2729f
  br i1 %v15_2729f, label %bb128, label %dec_label_pc_272a8

bb128:                                            ; preds = %dec_label_pc_2729b
  %v1_272a2 = call i32 @function_27379()
  br label %dec_label_pc_272a8

dec_label_pc_272a8:                               ; preds = %bb128, %dec_label_pc_2729b
  %v3_272a8 = phi i32 [ %v1_272a2, %bb128 ], [ %v3_272a815, %dec_label_pc_2729b ]
  ret i32 %v3_272a8

; uselistorder directives
  uselistorder i32 %v3_27286, { 1, 2, 0 }
  uselistorder i32 %v0_27278.pre.pre, { 1, 0 }
  uselistorder i32 %v6_2727a, { 0, 2, 1 }
  uselistorder i1 %v2_2727a, { 1, 0 }
  uselistorder i32 %v2_27278, { 1, 0 }
  uselistorder i32 %v0_2726c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_27281, { 7, 2, 3, 0, 1, 4, 5, 8, 6 }
  uselistorder i32 %v0_27273, { 1, 0 }
  uselistorder i32 %v2_2725e, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_27286, { 1, 2, 0 }
}

define i32 @function_272b5() local_unnamed_addr {
dec_label_pc_272b5:
  %v0_272b5 = load i32, i32* @ecx, align 4
  %v1_272b5 = load i32, i32* @edx, align 4
  %v12_272b5 = icmp eq i32 %v0_272b5, %v1_272b5
  br i1 %v12_272b5, label %bb, label %dec_label_pc_272b9

bb:                                               ; preds = %dec_label_pc_272b5
  %v1_272b7 = call i32 @function_27310()
  store i32 %v1_272b7, i32* @eax, align 4
  %v0_272b9.pre = load i32, i32* @edx, align 4
  %v1_272b9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_272b9

dec_label_pc_272b9:                               ; preds = %bb, %dec_label_pc_272b5
  %v1_272b9 = phi i32 [ %v1_272b9.pre, %bb ], [ %v0_272b5, %dec_label_pc_272b5 ]
  %v4_272bb = phi i32 [ %v0_272b9.pre, %bb ], [ %v1_272b5, %dec_label_pc_272b5 ]
  %v2_272b9 = sub i32 %v4_272bb, %v1_272b9
  %v8_272b9 = xor i32 %v4_272bb, %v1_272b9
  %v9_272b9 = xor i32 %v2_272b9, %v4_272bb
  %v10_272b9 = and i32 %v9_272b9, %v8_272b9
  %v11_272b9 = icmp slt i32 %v10_272b9, 0
  %v13_272b9 = icmp slt i32 %v2_272b9, 0
  %v2_272bb = icmp ne i1 %v13_272b9, %v11_272b9
  %v5_272be = icmp eq i1 %v2_272bb, false
  %v1_272c0 = icmp eq i1 %v5_272be, false
  br i1 %v1_272c0, label %bb4, label %dec_label_pc_272b9.dec_label_pc_272c2_crit_edge

dec_label_pc_272b9.dec_label_pc_272c2_crit_edge:  ; preds = %dec_label_pc_272b9
  %v0_272c2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_272c2

bb4:                                              ; preds = %dec_label_pc_272b9
  %v2_272c0 = call i32 @function_27330()
  store i32 %v2_272c0, i32* @eax, align 4
  br label %dec_label_pc_272c2

dec_label_pc_272c2:                               ; preds = %dec_label_pc_272b9.dec_label_pc_272c2_crit_edge, %bb4
  %v0_272c2 = phi i32 [ %v0_272c2.pre, %dec_label_pc_272b9.dec_label_pc_272c2_crit_edge ], [ %v2_272c0, %bb4 ]
  %v1_272c2 = load i32, i32* @esi, align 4
  %v2_272c2 = inttoptr i32 %v1_272c2 to i32*
  store i32 %v0_272c2, i32* %v2_272c2, align 4
  %v0_272c4 = load i32, i32* @esi, align 4
  %v1_272c4 = add i32 %v0_272c4, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_272c4 = inttoptr i32 %v1_272c4 to i8*
  store i8 0, i8* %v2_272c4, align 1
  %v3_272c4 = load i32, i32* @eax, align 4
  ret i32 %v3_272c4

; uselistorder directives
  uselistorder i32 %v2_272b9, { 1, 0 }
  uselistorder i32 %v1_272b5, { 1, 0 }
  uselistorder i32 %v0_272b5, { 1, 0 }
  uselistorder label %dec_label_pc_272c2, { 1, 0 }
}

define i32 @function_272c8() local_unnamed_addr {
dec_label_pc_272c8:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_272cc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_272cc = icmp eq i32 %v1_272cc, %tmp10
  %v0_272d3 = load i32, i32* @esi, align 4
  store i32 %v0_272d3, i32* @eax, align 4
  %v1_272d5 = icmp eq i1 %v3_272cc, false
  br i1 %v1_272d5, label %bb, label %dec_label_pc_272db

bb:                                               ; preds = %dec_label_pc_272c8
  %v2_272d5 = call i32 @function_273b3()
  br label %dec_label_pc_272db

dec_label_pc_272db:                               ; preds = %bb, %dec_label_pc_272c8
  %v0_272e2 = phi i32 [ %v2_272d5, %bb ], [ %v0_272d3, %dec_label_pc_272c8 ]
  ret i32 %v0_272e2
}

define i32 @function_272e8() local_unnamed_addr {
dec_label_pc_272e8:
  %v0_272e8 = load i32, i32* @edi, align 4
  %v1_272e8 = add i32 %v0_272e8, 20
  %v2_272e8 = inttoptr i32 %v1_272e8 to i8*
  %v3_272e8 = load i8, i8* %v2_272e8, align 1
  %v10_272e8 = icmp eq i8 %v3_272e8, 0
  br i1 %v10_272e8, label %bb, label %dec_label_pc_272f2

bb:                                               ; preds = %dec_label_pc_272e8
  %v1_272ec = call i32 @function_2738f()
  store i32 %v1_272ec, i32* @eax, align 4
  br label %dec_label_pc_272f2

dec_label_pc_272f2:                               ; preds = %bb, %dec_label_pc_272e8
  %v0_272f2 = load i32, i32* @ebx, align 4
  %v1_272f2 = add i32 %v0_272f2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_272f2 = inttoptr i32 %v1_272f2 to i8*
  %v3_272f2 = load i8, i8* %v2_272f2, align 1
  %v10_272f2 = icmp eq i8 %v3_272f2, 0
  br i1 %v10_272f2, label %bb2, label %dec_label_pc_272fc

bb2:                                              ; preds = %dec_label_pc_272f2
  %v1_272f6 = call i32 @function_2738f()
  br label %dec_label_pc_272fc

dec_label_pc_272fc:                               ; preds = %bb2, %dec_label_pc_272f2
  %v0_272fc = load i32, i32* @edi, align 4
  %v1_272fc = add i32 %v0_272fc, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_272fc = inttoptr i32 %v1_272fc to i32*
  %v3_272fc = load i32, i32* %v2_272fc, align 4
  ret i32 %v3_272fc
}

define i32 @function_27310() local_unnamed_addr {
dec_label_pc_27310:
  %v0_27315 = load i32, i32* @ebx, align 4
  %v1_27315 = add i32 %v0_27315, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_27315 = inttoptr i32 %v1_27315 to i8*
  %v3_27315 = load i8, i8* %v2_27315, align 1
  %v10_27315 = icmp eq i8 %v3_27315, 0
  br i1 %v10_27315, label %bb, label %dec_label_pc_27310.dec_label_pc_2731b_crit_edge

dec_label_pc_27310.dec_label_pc_2731b_crit_edge:  ; preds = %dec_label_pc_27310
  %v0_2731b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2731b

bb:                                               ; preds = %dec_label_pc_27310
  %v1_27319 = call i32 @function_2738f()
  store i32 %v1_27319, i32* @eax, align 4
  br label %dec_label_pc_2731b

dec_label_pc_2731b:                               ; preds = %dec_label_pc_27310.dec_label_pc_2731b_crit_edge, %bb
  %v0_2731b = phi i32 [ %v0_2731b.pre, %dec_label_pc_27310.dec_label_pc_2731b_crit_edge ], [ %v1_27319, %bb ]
  %v1_2731b = add i32 %v0_2731b, 20
  %v2_2731b = inttoptr i32 %v1_2731b to i8*
  %v3_2731b = load i8, i8* %v2_2731b, align 1
  %v10_2731b = icmp eq i8 %v3_2731b, 0
  br i1 %v10_2731b, label %bb3, label %dec_label_pc_27321

bb3:                                              ; preds = %dec_label_pc_2731b
  %v1_2731f = call i32 @function_2738f()
  br label %dec_label_pc_27321

dec_label_pc_27321:                               ; preds = %bb3, %dec_label_pc_2731b
  %v0_2732e = phi i32 [ %v1_2731f, %bb3 ], [ %v0_2731b, %dec_label_pc_2731b ]
  %v0_27321 = load i32, i32* @ebx, align 4
  %v1_27321 = add i32 %v0_27321, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_27321 = inttoptr i32 %v1_27321 to i32*
  %v3_27321 = load i32, i32* %v2_27321, align 4
  %v1_27324 = add i32 %v0_2732e, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_27324 = inttoptr i32 %v1_27324 to i32*
  %v3_27324 = load i32, i32* %v2_27324, align 4
  %v5_27324 = sub i32 %v3_27324, %v3_27321
  %v11_27324 = xor i32 %v3_27324, %v3_27321
  %v12_27324 = xor i32 %v5_27324, %v3_27324
  %v13_27324 = and i32 %v12_27324, %v11_27324
  %v14_27324 = icmp slt i32 %v13_27324, 0
  %v16_27324 = icmp slt i32 %v5_27324, 0
  %v2_27327 = icmp ne i1 %v16_27324, %v14_27324
  %v3_27327 = zext i1 %v2_27327 to i32
  %v5_27327 = and i32 %v3_27321, -256
  %v6_27327 = or i32 %v3_27327, %v5_27327
  store i32 %v6_27327, i32* @edx, align 4
  ret i32 %v0_2732e

; uselistorder directives
  uselistorder i32 %v5_27324, { 1, 0 }
  uselistorder i32 %v3_27321, { 1, 0, 2 }
  uselistorder i32 ()* @function_2738f, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2731b, { 1, 0 }
}

define i32 @function_27330() local_unnamed_addr {
dec_label_pc_27330:
  %stack_var_44 = alloca i32, align 4
  %v2_27334 = ptrtoint i32* %stack_var_44 to i32
  ret i32 %v2_27334
}

define i32 @function_27350(i32 %arg1) local_unnamed_addr {
dec_label_pc_27350:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v0_2735b = load i32, i32* @esi, align 4
  %v1_2735b = add i32 %v0_2735b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2735b = inttoptr i32 %v1_2735b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_2735b, align 1
  %v0_2735f = load i32, i32* %eax.global-to-local, align 4
  %v1_2735f = load i32, i32* @esi, align 4
  %v2_2735f = inttoptr i32 %v1_2735f to i32*
  store i32 %v0_2735f, i32* %v2_2735f, align 4
  %v0_27361 = call i32 @function_272c8()
  store i32 %v0_27361, i32* %eax.global-to-local, align 4
  ret i32 %v0_27361
}

define i32 @function_27368() local_unnamed_addr {
dec_label_pc_27368:
  %v0_27368 = load i32, i32* @edi, align 4
  store i32 %v0_27368, i32* @eax, align 4
  %v0_2736a = call i32 @function_272b5()
  ret i32 %v0_2736a
}

define i32 @function_2736f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2736f:
  %v0_2736f = load i32, i32* @edx, align 4
  %v1_27371 = add i32 %v0_2736f, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_27371, i32* @edi, align 4
  %v0_27374 = load i32, i32* @eax, align 4
  ret i32 %v0_27374
}

define i32 @function_27379() local_unnamed_addr {
dec_label_pc_27379:
  %stack_var_44 = alloca i32, align 4
  %v2_27379 = ptrtoint i32* %stack_var_44 to i32
  ret i32 %v2_27379
}

define i32 @function_2738f() local_unnamed_addr {
dec_label_pc_2738f:
  %v3_273a7 = load i32, i32* @eax, align 4
  ret i32 %v3_273a7
}

define i32 @function_273b0() local_unnamed_addr {
dec_label_pc_273b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_273b3() local_unnamed_addr {
dec_label_pc_273b3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot3IbRKSsSE_jNS1_8functionIFbSE_SE_jEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_273c0:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_273d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_273e7 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v12_273ea = icmp eq i32 %v1_273e7, %arg3
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v12_273ea, label %bb, label %dec_label_pc_273fa

bb:                                               ; preds = %dec_label_pc_273c0
  %v2_273f4 = call i32 @function_27500(i32 %v0_273d3)
  %v0_273fa.pre = load i32, i32* @ebx, align 4
  %v0_27403.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_273fa

dec_label_pc_273fa:                               ; preds = %bb, %dec_label_pc_273c0
  %v0_27403 = phi i32 [ %v0_27403.pre, %bb ], [ %arg4, %dec_label_pc_273c0 ]
  %v0_273fa = phi i32 [ %v0_273fa.pre, %bb ], [ %arg3, %dec_label_pc_273c0 ]
  %v1_273fa = add i32 %v0_273fa, 16
  store i32 %v0_27403, i32* @eax, align 4
  %v1_27405 = trunc i32 %v1_273fa to i8
  %v2_27405 = call i32 @function_27630(i8 %v1_27405)
  %v4_2740a = trunc i32 %v2_27405 to i8
  %v5_2740a = icmp eq i8 %v4_2740a, 0
  br i1 %v5_2740a, label %bb112, label %dec_label_pc_27412

bb112:                                            ; preds = %dec_label_pc_273fa
  %v1_2740c = call i32 @function_27490()
  br label %dec_label_pc_27412

dec_label_pc_27412:                               ; preds = %bb112, %dec_label_pc_273fa
  %v0_27412 = load i32, i32* @edi, align 4
  %v1_27412 = add i32 %v0_27412, 12
  %v2_27412 = inttoptr i32 %v1_27412 to i32*
  %v3_27412 = load i32, i32* %v2_27412, align 4
  store i32 %v3_27412, i32* @eax, align 4
  %v1_27415 = load i32, i32* @ebx, align 4
  %v12_27415 = icmp eq i32 %v3_27412, %v1_27415
  br i1 %v12_27415, label %bb113, label %dec_label_pc_2741d

bb113:                                            ; preds = %dec_label_pc_27412
  %v1_27417 = call i32 @function_27578()
  br label %dec_label_pc_2741d

dec_label_pc_2741d:                               ; preds = %bb113, %dec_label_pc_27412
  %v3_2741d = phi i32 [ %v1_27417, %bb113 ], [ %v3_27412, %dec_label_pc_27412 ]
  ret i32 %v3_2741d

; uselistorder directives
  uselistorder i32 %v3_27412, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
}

define i32 @function_27426() local_unnamed_addr {
dec_label_pc_27426:
  %v0_27426 = call i32 @function_408dc189()
  ret i32 %v0_27426
}

define i32 @function_27440(i32 %arg1) local_unnamed_addr {
dec_label_pc_27440:
  %v0_27440 = load i32, i32* @ebx, align 4
  %v1_27440 = add i32 %v0_27440, 1820920897
  %v2_27440 = inttoptr i32 %v1_27440 to i8*
  %v3_27440 = load i8, i8* %v2_27440, align 1
  %v4_27440 = load i32, i32* @ecx, align 4
  %v5_27440 = trunc i32 %v4_27440 to i8
  %v6_27440 = add i8 %v5_27440, %v3_27440
  store i8 %v6_27440, i8* %v2_27440, align 1
  %v0_27446 = load i32, i32* @eax, align 4
  %v11_27446 = and i32 %v0_27446, -240
  %v1_27448 = icmp eq i32 %v11_27446, 0
  br i1 %v1_27448, label %bb, label %dec_label_pc_27450

bb:                                               ; preds = %dec_label_pc_27440
  %v1_2744a = call i32 @function_27558()
  br label %dec_label_pc_27450

dec_label_pc_27450:                               ; preds = %bb, %dec_label_pc_27440
  %v0_27450 = load i32, i32* @ebx, align 4
  %v0_27458 = load i32, i32* @edi, align 4
  %v0_2745c = load i32, i32* @esi, align 4
  %v4_2745f = call i32 @unknown_4e500(i32 %v0_2745c, i32 %v0_27458, i32 %v0_27450, i32 %v0_27450)
  %v1_2746b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2746b = icmp eq i32 %v1_2746b, %arg1
  %v0_27472 = load i32, i32* @esi, align 4
  store i32 %v0_27472, i32* @eax, align 4
  %v1_27474 = icmp eq i1 %v3_2746b, false
  br i1 %v1_27474, label %bb14, label %dec_label_pc_2747a

bb14:                                             ; preds = %dec_label_pc_27450
  %v2_27474 = call i32 @function_275a8()
  br label %dec_label_pc_2747a

dec_label_pc_2747a:                               ; preds = %bb14, %dec_label_pc_27450
  %v0_2748d = phi i32 [ %v2_27474, %bb14 ], [ %v0_27472, %dec_label_pc_27450 ]
  ret i32 %v0_2748d
}

define i32 @function_27490() local_unnamed_addr {
dec_label_pc_27490:
  %v2_27496 = call i32 @function_27630(i8 ptrtoint (i32* @0 to i8))
  store i32 %v2_27496, i32* @eax, align 4
  %v4_2749b = trunc i32 %v2_27496 to i8
  %v5_2749b = icmp eq i8 %v4_2749b, 0
  br i1 %v5_2749b, label %bb, label %dec_label_pc_274a3

bb:                                               ; preds = %dec_label_pc_27490
  %v1_2749d = call i32 @function_27530()
  br label %dec_label_pc_274a3

dec_label_pc_274a3:                               ; preds = %bb, %dec_label_pc_27490
  %v0_274a3 = load i32, i32* @edi, align 4
  %v1_274a3 = add i32 %v0_274a3, 16
  %v2_274a3 = inttoptr i32 %v1_274a3 to i32*
  %v3_274a3 = load i32, i32* %v2_274a3, align 4
  store i32 %v3_274a3, i32* @eax, align 4
  %v1_274a6 = load i32, i32* @ebx, align 4
  %v12_274a6 = icmp eq i32 %v3_274a3, %v1_274a6
  br i1 %v12_274a6, label %bb4, label %dec_label_pc_274ae

bb4:                                              ; preds = %dec_label_pc_274a3
  %v1_274a8 = call i32 @function_2759e()
  br label %dec_label_pc_274ae

dec_label_pc_274ae:                               ; preds = %bb4, %dec_label_pc_274a3
  %v3_274ae = phi i32 [ %v1_274a8, %bb4 ], [ %v3_274a3, %dec_label_pc_274a3 ]
  ret i32 %v3_274ae

; uselistorder directives
  uselistorder i32 %v3_274a3, { 1, 0, 2 }
}

define i32 @function_274b5() local_unnamed_addr {
dec_label_pc_274b5:
  %ecx.global-to-local = alloca i32, align 4
  %v0_274b5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_274b5 = add i32 %v0_274b5, 273714625
  %v2_274b5 = inttoptr i32 %v1_274b5 to i32*
  %v3_274b5 = load i32, i32* %v2_274b5, align 4
  %v4_274b5 = add i32 %v3_274b5, -1
  store i32 %v4_274b5, i32* %v2_274b5, align 4
  %v0_274bb = load i32, i32* @ebp, align 4
  store i32 %v0_274bb, i32* @eax, align 4
  %v0_274bd = load i32, i32* %ecx.global-to-local, align 4
  %v1_274c1 = trunc i32 %v0_274bd to i8
  %v2_274c1 = call i32 @function_27630(i8 %v1_274c1)
  store i32 %v0_274bd, i32* %ecx.global-to-local, align 4
  %v0_274ce = load i32, i32* @ebx, align 4
  %v1_274ce = add i32 %v0_274ce, 12
  %v2_274ce = inttoptr i32 %v1_274ce to i32*
  %v3_274ce = load i32, i32* %v2_274ce, align 4
  store i32 %v3_274ce, i32* @eax, align 4
  %v1_274d5 = icmp eq i32 %v3_274ce, 0
  br i1 %v1_274d5, label %bb, label %dec_label_pc_274dd

bb:                                               ; preds = %dec_label_pc_274b5
  %v1_274d7 = call i32 @function_27598()
  %v0_274dd.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_274dd

dec_label_pc_274dd:                               ; preds = %bb, %dec_label_pc_274b5
  %v0_274dd = phi i32 [ %v0_274dd.pre, %bb ], [ %v0_274bd, %dec_label_pc_274b5 ]
  %v0_274e5 = load i32, i32* @edi, align 4
  %v0_274e9 = load i32, i32* @esi, align 4
  %v4_274ec = call i32 @unknown_4e500(i32 %v0_274e9, i32 %v0_274e5, i32 %v0_274dd, i32 %v0_274dd)
  ret i32 %v4_274ec

; uselistorder directives
  uselistorder i32 %v0_274dd, { 1, 0 }
}

define i32 @function_27500(i32 %arg1) local_unnamed_addr {
dec_label_pc_27500:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_40 = alloca i32, align 4
  %v0_27500 = load i32, i32* @edi, align 4
  %v1_27500 = add i32 %v0_27500, 20
  %v2_27500 = inttoptr i32 %v1_27500 to i32*
  %v3_27500 = load i32, i32* %v2_27500, align 4
  store i32 %v3_27500, i32* %eax.global-to-local, align 4
  %v1_27503 = icmp eq i32 %v3_27500, 0
  %v1_27505 = icmp eq i1 %v1_27503, false
  br i1 %v1_27505, label %bb, label %dec_label_pc_27507

bb:                                               ; preds = %dec_label_pc_27500
  %v2_27505 = call i32 @function_27538()
  store i32 %v2_27505, i32* %eax.global-to-local, align 4
  %v0_27512.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_27507

dec_label_pc_27507:                               ; preds = %bb, %dec_label_pc_27500
  %v0_27512 = phi i32 [ %v0_27512.pre, %bb ], [ %v0_27500, %dec_label_pc_27500 ]
  %v2_27507 = ptrtoint i32* %stack_var_40 to i32
  store i32 %v2_27507, i32* %eax.global-to-local, align 4
  %v2_27516 = call i32 @unknown_4e5f0(i32 %v2_27507, i32 %v0_27512)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_27522 = load i32, i32* @esi, align 4
  %v2_27522 = inttoptr i32 %v1_27522 to i32*
  store i32 %arg1, i32* %v2_27522, align 4
  %v0_27524 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27524

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_27530() local_unnamed_addr {
dec_label_pc_27530:
  %v0_27530 = load i32, i32* @ebx, align 4
  %v1_27530 = load i32, i32* @esi, align 4
  %v2_27530 = inttoptr i32 %v1_27530 to i32*
  store i32 %v0_27530, i32* %v2_27530, align 4
  %v0_27532 = load i32, i32* @eax, align 4
  ret i32 %v0_27532
}

define i32 @function_27538() local_unnamed_addr {
dec_label_pc_27538:
  %v0_27538 = load i32, i32* @edi, align 4
  %v1_27538 = add i32 %v0_27538, 16
  %v2_27538 = inttoptr i32 %v1_27538 to i32*
  %v3_27538 = load i32, i32* %v2_27538, align 4
  store i32 %v3_27538, i32* @ebx, align 4
  %v1_2753d = add i32 %v3_27538, 16
  store i32 %v1_2753d, i32* @eax, align 4
  %v2_27540 = call i32 @function_27630(i8 ptrtoint (i32* @0 to i8))
  ret i32 %v2_27540

; uselistorder directives
  uselistorder i32 (i8)* @function_27630, { 1, 0, 2, 3 }
}

define i32 @function_27550(i32 %arg1) local_unnamed_addr {
dec_label_pc_27550:
  %eax.global-to-local = alloca i32, align 4
  %v0_27550 = load i32, i32* @eax, align 4
  %v11_27550 = or i32 %v0_27550, 235
  store i32 %v11_27550, i32* %eax.global-to-local, align 4
  %v1_27552 = add i32 %v11_27550, 2520205
  %v2_27552 = inttoptr i32 %v1_27552 to i32*
  %v3_27552 = load i32, i32* %v2_27552, align 4
  %v4_27552 = load i32, i32* @edx, align 4
  %v5_27552 = or i32 %v4_27552, %v3_27552
  store i32 %v5_27552, i32* %v2_27552, align 4
  %v15_27552 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_27552

; uselistorder directives
  uselistorder i32 %v11_27550, { 1, 0 }
}

define i32 @function_27558() local_unnamed_addr {
dec_label_pc_27558:
  %v0_27558 = load i32, i32* @ecx, align 4
  %v0_27564 = load i32, i32* @edi, align 4
  %v0_27568 = load i32, i32* @esi, align 4
  %v4_2756b = call i32 @unknown_4e500(i32 %v0_27568, i32 %v0_27564, i32 0, i32 %v0_27558)
  ret i32 %v4_2756b
}

define i32 @function_27578() local_unnamed_addr {
dec_label_pc_27578:
  %v0_2757c = load i32, i32* @eax, align 4
  %v0_27584 = load i32, i32* @edi, align 4
  %v0_27588 = load i32, i32* @esi, align 4
  %v4_2758b = call i32 @unknown_4e500(i32 %v0_27588, i32 %v0_27584, i32 %v0_2757c, i32 %v0_2757c)
  ret i32 %v4_2758b

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4e500, { 2, 1, 3, 0 }
}

define i32 @function_27598() local_unnamed_addr {
dec_label_pc_27598:
  %v0_2759c = load i32, i32* @eax, align 4
  ret i32 %v0_2759c
}

define i32 @function_2759e() local_unnamed_addr {
dec_label_pc_2759e:
  %v0_275a6 = load i32, i32* @eax, align 4
  ret i32 %v0_275a6
}

define i32 @function_275a8() local_unnamed_addr {
dec_label_pc_275a8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEEj(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_275b0:
  %edx.global-to-local = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %tmp113, i32* @ebp, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_275d9 = add i32 %tmp113, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_275d9 = inttoptr i32 %v1_275d9 to i32*
  %v3_275d9 = load i32, i32* %v2_275d9, align 4
  store i32 %v3_275d9, i32* @eax, align 4
  %v1_275e8 = icmp eq i32 %v3_275d9, 0
  br i1 %v1_275e8, label %bb, label %dec_label_pc_275f4

bb:                                               ; preds = %dec_label_pc_275b0
  %v2_275ee = call i32 @function_27bac(i32 %arg4)
  br label %dec_label_pc_275f4

dec_label_pc_275f4:                               ; preds = %bb, %dec_label_pc_275b0
  %v0_275f4 = phi i32 [ %v2_275ee, %bb ], [ %v3_275d9, %dec_label_pc_275b0 ]
  %v1_275f4 = add i32 %v0_275f4, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_275f4 = inttoptr i32 %v1_275f4 to i32*
  %v3_275f4 = load i32, i32* %v2_275f4, align 4
  store i32 %v3_275f4, i32* @eax, align 4
  %v10_275f7 = icmp eq i32 %v3_275f4, 1
  %v1_275fa = icmp eq i1 %v10_275f7, false
  br i1 %v1_275fa, label %bb120, label %dec_label_pc_27600

bb120:                                            ; preds = %dec_label_pc_275f4
  %sext2 = mul i32 %arg2, 16777216
  %v3_275fa = sdiv i32 %sext2, 16777216
  %v4_275fa = call i32 @function_27bac(i32 %v3_275fa)
  br label %dec_label_pc_27600

dec_label_pc_27600:                               ; preds = %bb120, %dec_label_pc_275f4
  %v0_27600 = load i32, i32* @ebp, align 4
  %v1_27600 = inttoptr i32 %v0_27600 to i32*
  %v2_27600 = load i32, i32* %v1_27600, align 4
  store i32 %v2_27600, i32* @eax, align 4
  %v0_27603 = load i32, i32* %edx.global-to-local, align 4
  %v1_27603 = inttoptr i32 %v0_27603 to i32*
  %v2_27603 = load i32, i32* %v1_27603, align 4
  store i32 %v2_27603, i32* @ebx, align 4
  %v1_27605 = icmp eq i32 %v2_27600, 0
  br i1 %v1_27605, label %bb121, label %dec_label_pc_2760d

bb121:                                            ; preds = %dec_label_pc_27600
  %sext1 = mul i32 %arg2, 16777216
  %v2_27607 = sdiv i32 %sext1, 16777216
  %v3_27607 = call i32 @function_27b9d(i32 %v2_27607)
  %v0_27617.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_2760d

dec_label_pc_2760d:                               ; preds = %bb121, %dec_label_pc_27600
  %v0_27617 = phi i32 [ %v0_27617.pre, %bb121 ], [ %v2_27603, %dec_label_pc_27600 ]
  %v0_2760d = phi i32 [ %v3_27607, %bb121 ], [ %v2_27600, %dec_label_pc_27600 ]
  %v1_2760d = inttoptr i32 %v0_2760d to i32*
  %v2_2760d = load i32, i32* %v1_2760d, align 4
  %v12_27617 = icmp eq i32 %v0_27617, %v2_2760d
  br i1 %v12_27617, label %bb122, label %dec_label_pc_2761f

bb122:                                            ; preds = %dec_label_pc_2760d
  %sext = mul i32 %arg2, 16777216
  %v2_27619 = sdiv i32 %sext, 16777216
  %v3_27619 = call i32 @function_276b0(i32 %v2_27619)
  br label %dec_label_pc_2761f

dec_label_pc_2761f:                               ; preds = %bb122, %dec_label_pc_2760d
  ret i32 %arg4

; uselistorder directives
  uselistorder i32 (i32)* @function_27bac, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @function_27630(i8 %arg1) local_unnamed_addr {
dec_label_pc_27630:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_1 = alloca i8*, align 4
  %v2_27632 = load i32, i32* @eax, align 4
  %v4_27632 = mul i32 %v2_27632, 2
  %v21_27632 = inttoptr i32 %v2_27632 to i32*
  store i32 %v4_27632, i32* %v21_27632, align 4
  %v0_27634 = load i32, i32* @ebx, align 4
  %v1_27634 = lshr i32 %v0_27634, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_27634 = load i32, i32* @eax, align 4
  %v4_27634 = trunc i32 %v3_27634 to i8
  %v5_27634 = add i32 %v1_27634, %v3_27634
  %v20_27634 = urem i32 %v5_27634, 256
  %v22_27634 = shl i32 %v20_27634, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_27634 = and i32 %v0_27634, -65281
  %v24_27634 = or i32 %v22_27634, %v23_27634
  store i32 %v24_27634, i32* @ebx, align 4
  %v2_27637 = and i8 %v4_27634, ptrtoint (i32* @global_var_18.3278 to i8)
  %v8_27637 = zext i8 %v2_27637 to i32
  %v10_27637 = and i32 %v3_27634, -256
  %v11_27637 = or i32 %v8_27637, %v10_27637
  store i32 %v11_27637, i32* %eax.global-to-local, align 4
  %v1_27639 = inttoptr i32 %v11_27637 to i8*
  %v2_27639 = load i8, i8* %v1_27639, align 4
  %v5_27639 = add i8 %v2_27639, %v2_27637
  store i8 %v5_27639, i8* %v1_27639, align 4
  %v0_2763b = load i32, i32* %eax.global-to-local, align 4
  %v1_2763b = inttoptr i32 %v0_2763b to i8*
  %v2_2763b = load i8, i8* %v1_2763b, align 1
  %v4_2763b = trunc i32 %v0_2763b to i8
  %v5_2763b = add i8 %v2_2763b, %v4_2763b
  store i8 %v5_2763b, i8* %v1_2763b, align 1
  %v2_2763d = load i32, i32* @esi, align 4
  store i32 %v2_2763d, i32* @eax, align 4
  %v3_2763f = inttoptr i32 %v2_2763d to i8*
  store i8* %v3_2763f, i8** %stack_var_1, align 4
  %v0_27645 = load i32, i32* @ebx, align 4
  %v1_27645 = add i32 %v0_27645, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_27645 = inttoptr i32 %v1_27645 to i32*
  %v3_27645 = load i32, i32* %v2_27645, align 4
  store i32 %v3_27645, i32* @edi, align 4
  %v10_27648 = icmp eq i8 %arg1, 0
  br i1 %v10_27648, label %bb, label %dec_label_pc_27653

bb:                                               ; preds = %dec_label_pc_27630
  %v3_2764d = call i32 @function_27710(i32 %v2_2763d)
  store i32 %v3_2764d, i32* @eax, align 4
  br label %dec_label_pc_27653

dec_label_pc_27653:                               ; preds = %bb, %dec_label_pc_27630
  %v1_27653 = icmp eq i32 %v3_27645, 0
  br i1 %v1_27653, label %bb15, label %dec_label_pc_2765b

bb15:                                             ; preds = %dec_label_pc_27653
  %v1_27655 = load i8*, i8** %stack_var_1, align 4
  %v2_27655 = ptrtoint i8* %v1_27655 to i32
  %v3_27655 = call i32 @function_27969(i32 %v2_27655)
  store i32 %v3_27655, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2765b

dec_label_pc_2765b:                               ; preds = %bb15, %dec_label_pc_27653
  %v1_2765b = add i32 %v3_27645, 16
  store i32 %v1_2765b, i32* %eax.global-to-local, align 4
  %v2_27662 = inttoptr i32 %v1_2765b to i32*
  %v3_27662 = load i32, i32* %v2_27662, align 4
  store i32 %v3_27662, i32* %eax.global-to-local, align 4
  %v2_27665 = add i32 %v3_27645, 20
  %v3_27665 = inttoptr i32 %v2_27665 to i32*
  %v4_27665 = load i32, i32* %v3_27665, align 4
  %v15_27665 = icmp eq i32 %v3_27662, %v4_27665
  br i1 %v15_27665, label %bb16, label %dec_label_pc_2766e

bb16:                                             ; preds = %dec_label_pc_2765b
  %v2_27668 = call i32 @function_27718(i32 %v1_2765b)
  store i32 %v2_27668, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2766e

dec_label_pc_2766e:                               ; preds = %bb16, %dec_label_pc_2765b
  %v0_2766e = phi i32 [ %v2_27668, %bb16 ], [ %v3_27662, %dec_label_pc_2765b ]
  %v1_27676 = inttoptr i32 %v0_2766e to i32*
  %v2_27676 = load i32, i32* %v1_27676, align 4
  %v2_2767a = ashr i32 %v2_27676, 31
  %v2_2767d = xor i32 %v2_2767a, %v2_27676
  store i32 %v2_2767d, i32* @eax, align 4
  %tmp19 = icmp ult i32 %v2_2767d, 20
  br i1 %tmp19, label %bb18, label %dec_label_pc_27688

bb18:                                             ; preds = %dec_label_pc_2766e
  %v4_27682 = call i32 @function_27798(i32 %v0_2766e)
  store i32 %v4_27682, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27688

dec_label_pc_27688:                               ; preds = %bb18, %dec_label_pc_2766e
  %v3_276a0 = phi i32 [ %v4_27682, %bb18 ], [ %v2_2767d, %dec_label_pc_2766e ]
  ret i32 %v3_276a0

; uselistorder directives
  uselistorder i32 %v2_2767d, { 1, 0, 2 }
  uselistorder i32 %v0_2766e, { 1, 0 }
  uselistorder i32 %v3_27662, { 1, 0, 2 }
  uselistorder i32 %v3_27634, { 1, 0, 2 }
  uselistorder i32 %v2_27632, { 1, 0 }
  uselistorder i8** %stack_var_1, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
}

define i32 @function_276b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_276b0:
  %v1_276b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_276b4 = xor i32 %v1_276b4, %arg1
  %v3_276b4 = icmp eq i32 %v2_276b4, 0
  store i32 %v2_276b4, i32* @eax, align 4
  %v0_276bb = load i32, i32* @ebx, align 4
  %v1_276bb = load i32, i32* @ebp, align 4
  %v2_276bb = add i32 %v1_276bb, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_276bb = inttoptr i32 %v2_276bb to i32*
  store i32 %v0_276bb, i32* %v3_276bb, align 4
  %v1_276be = icmp eq i1 %v3_276b4, false
  br i1 %v1_276be, label %bb, label %dec_label_pc_276b0.dec_label_pc_276c4_crit_edge

dec_label_pc_276b0.dec_label_pc_276c4_crit_edge:  ; preds = %dec_label_pc_276b0
  %v0_276cb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_276c4

bb:                                               ; preds = %dec_label_pc_276b0
  %v2_276be = call i32 @function_27ba7()
  br label %dec_label_pc_276c4

dec_label_pc_276c4:                               ; preds = %dec_label_pc_276b0.dec_label_pc_276c4_crit_edge, %bb
  %v0_276cb = phi i32 [ %v0_276cb.pre, %dec_label_pc_276b0.dec_label_pc_276c4_crit_edge ], [ %v2_276be, %bb ]
  ret i32 %v0_276cb

; uselistorder directives
  uselistorder label %dec_label_pc_276c4, { 1, 0 }
}

define i32 @function_276eb() local_unnamed_addr {
dec_label_pc_276eb:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_276eb = load i32, i32* @eax, align 4
  %v4_276eb = trunc i32 %v0_276eb to i8
  %v5_276eb = icmp eq i8 %v4_276eb, 0
  %v1_276ed = icmp eq i1 %v5_276eb, false
  br i1 %v1_276ed, label %bb, label %dec_label_pc_276f3

bb:                                               ; preds = %dec_label_pc_276eb
  %v2_276ed = call i32 @function_27b1a()
  br label %dec_label_pc_276f3

dec_label_pc_276f3:                               ; preds = %bb, %dec_label_pc_276eb
  %v4_276f7 = add i32 %tmp, 12
  store i32 %v4_276f7, i32* @edx, align 4
  %v2_27700 = add i32 %tmp2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_27700 = inttoptr i32 %v2_27700 to i32*
  %v4_27700 = load i32, i32* %v3_27700, align 4
  %v5_27700 = sub i32 %v4_276f7, %v4_27700
  %v11_27700 = xor i32 %v4_27700, %v4_276f7
  %v12_27700 = xor i32 %v5_27700, %v4_276f7
  %v13_27700 = and i32 %v12_27700, %v11_27700
  %v14_27700 = icmp slt i32 %v13_27700, 0
  store i1 %v14_27700, i1* @of, align 1
  %v0_27709 = load i32, i32* @ebx, align 4
  %v1_27709 = add i32 %v0_27709, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_27709 = inttoptr i32 %v1_27709 to i32*
  %v3_27709 = load i32, i32* %v2_27709, align 4
  store i32 %v3_27709, i32* @edi, align 4
  ret i32 %tmp2
}

define i32 @function_27709() local_unnamed_addr {
dec_label_pc_27709:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27710(i32 %arg1) local_unnamed_addr {
dec_label_pc_27710:
  %v0_27712 = load i32, i32* @eax, align 4
  ret i32 %v0_27712
}

define i32 @function_27718(i32 %arg1) local_unnamed_addr {
dec_label_pc_27718:
  %tmp13 = call i8 @__decompiler_undefined_function_2()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %v0_27718 = load i32, i32* @edi, align 4
  %v1_27718 = add i32 %v0_27718, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_27718 = inttoptr i32 %v1_27718 to i8*
  %v3_27718 = load i8, i8* %v2_27718, align 1
  %v4_27718 = zext i8 %v3_27718 to i32
  store i32 %v4_27718, i32* @edi, align 4
  %v2_2771c = load i32, i32* @esi, align 4
  store i32 %v2_2771c, i32* @eax, align 4
  %v5_27726 = icmp eq i8 %v3_27718, 0
  br i1 %v5_27726, label %bb, label %dec_label_pc_2772a

bb:                                               ; preds = %dec_label_pc_27718
  %v3_27728 = call i32 @function_277a8(i32 %v2_2771c)
  br label %dec_label_pc_2772a

dec_label_pc_2772a:                               ; preds = %bb, %dec_label_pc_27718
  %v2_2772c = load i32, i32* @ebp, align 4
  store i32 %v2_2772c, i32* @eax, align 4
  %v1_2772f = icmp eq i32 %v2_2772c, 0
  br i1 %v1_2772f, label %bb19, label %dec_label_pc_27737

bb19:                                             ; preds = %dec_label_pc_2772a
  %v3_27731 = call i32 @function_27b9d(i32 %v2_2771c)
  %v2_27737.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_27737

dec_label_pc_27737:                               ; preds = %bb19, %dec_label_pc_2772a
  %v2_27737 = phi i32 [ %v2_27737.pre, %bb19 ], [ %v2_2772c, %dec_label_pc_2772a ]
  %v1_27741 = load i32, i32* @ebx, align 4
  %v12_27741 = icmp eq i32 %v2_27737, %v1_27741
  br i1 %v12_27741, label %bb20, label %dec_label_pc_27749

bb20:                                             ; preds = %dec_label_pc_27737
  %v3_27743 = call i32 @function_276b0(i32 %v2_2771c)
  br label %dec_label_pc_27749

dec_label_pc_27749:                               ; preds = %bb20, %dec_label_pc_27737
  %v3_277867 = phi i32 [ %v3_27743, %bb20 ], [ %v2_27737, %dec_label_pc_27737 ]
  %v5_27749 = add i32 %arg1, ptrtoint (i8** @global_var_1.3274 to i32)
  %tmp22 = icmp ugt i32 %tmp14, %v5_27749
  br i1 %tmp22, label %dec_label_pc_27763, label %dec_label_pc_27758

dec_label_pc_27758:                               ; preds = %dec_label_pc_27749
  %v10_27758 = icmp eq i8 %tmp13, 0
  br i1 %v10_27758, label %bb21, label %dec_label_pc_27763

bb21:                                             ; preds = %dec_label_pc_27758
  %v3_2775d = call i32 @function_276b0(i32 %v5_27749)
  br label %dec_label_pc_27763

dec_label_pc_27763:                               ; preds = %dec_label_pc_27749, %bb21, %dec_label_pc_27758
  %v3_27786 = phi i32 [ %v3_277867, %dec_label_pc_27749 ], [ %v3_2775d, %bb21 ], [ %v3_277867, %dec_label_pc_27758 ]
  %v0_27763 = load i32, i32* @ebx, align 4
  %v1_27763 = add i32 %v0_27763, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_27763 = inttoptr i32 %v1_27763 to i32*
  %v3_27763 = load i32, i32* %v2_27763, align 4
  store i32 %v3_27763, i32* @esi, align 4
  ret i32 %v3_27786

; uselistorder directives
  uselistorder i32 %v5_27749, { 1, 0 }
  uselistorder i32 %v2_27737, { 1, 0 }
  uselistorder i32 %v2_2771c, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @function_276b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_27763, { 1, 2, 0 }
}

define i32 @function_27798(i32 %arg1) local_unnamed_addr {
dec_label_pc_27798:
  %v0_27798 = load i32, i32* @eax, align 4
  ret i32 %v0_27798
}

define i32 @function_277a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_277a8:
  %ecx.global-to-local = alloca i32, align 4
  %v0_277a8 = load i32, i32* @ebx, align 4
  %v1_277a8 = add i32 %v0_277a8, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_277a8 = inttoptr i32 %v1_277a8 to i32*
  %v3_277a8 = load i32, i32* %v2_277a8, align 4
  %v1_277ab = icmp eq i32 %v3_277a8, 0
  br i1 %v1_277ab, label %bb, label %dec_label_pc_277b7

bb:                                               ; preds = %dec_label_pc_277a8
  %v2_277b1 = call i32 @function_27969(i32 0)
  br label %dec_label_pc_277b7

dec_label_pc_277b7:                               ; preds = %bb, %dec_label_pc_277a8
  %v1_277bb = add i32 %v3_277a8, ptrtoint (i32* @global_var_44.3548 to i32)
  %v2_277c2 = load i32, i32* @ebp, align 4
  store i32 %v2_277c2, i32* @eax, align 4
  %v1_277c5 = icmp eq i32 %v2_277c2, 0
  br i1 %v1_277c5, label %bb33, label %dec_label_pc_277cd

bb33:                                             ; preds = %dec_label_pc_277b7
  %v2_277c7 = call i32 @function_27b9d(i32 %v1_277bb)
  %v2_277cd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_277cd

dec_label_pc_277cd:                               ; preds = %bb33, %dec_label_pc_277b7
  %v2_277cd = phi i32 [ %v2_277cd.pre, %bb33 ], [ %v2_277c2, %dec_label_pc_277b7 ]
  store i32 %v2_277cd, i32* @eax, align 4
  %v0_277df = load i32, i32* @ebx, align 4
  %v12_277df = icmp eq i32 %v0_277df, %v2_277cd
  br i1 %v12_277df, label %bb34, label %dec_label_pc_277eb

bb34:                                             ; preds = %dec_label_pc_277cd
  %v2_277e5 = call i32 @function_27c06(i32 %v2_277cd)
  store i32 %v2_277e5, i32* @eax, align 4
  br label %dec_label_pc_277eb

dec_label_pc_277eb:                               ; preds = %bb34, %dec_label_pc_277cd
  store i32 %v2_277cd, i32* %ecx.global-to-local, align 4
  %v1_277ef = add i32 %v2_277cd, 16
  %v2_277ef = inttoptr i32 %v1_277ef to i32*
  %v3_277ef = load i32, i32* %v2_277ef, align 4
  %v1_277f2 = icmp eq i32 %v3_277ef, 0
  br i1 %v1_277f2, label %bb35, label %dec_label_pc_277fa

bb35:                                             ; preds = %dec_label_pc_277eb
  %v1_277f4 = call i32 @function_27bd0()
  %v0_277fe.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_277fa

dec_label_pc_277fa:                               ; preds = %bb35, %dec_label_pc_277eb
  %v0_277fe = phi i32 [ %v0_277fe.pre, %bb35 ], [ %v2_277cd, %dec_label_pc_277eb ]
  %v1_277fe = add i32 %v0_277fe, 12
  store i32 %v1_277fe, i32* %ecx.global-to-local, align 4
  store i32 %v1_277fe, i32* @edi, align 4
  %v2_27807 = inttoptr i32 %v1_277bb to i32*
  %v3_27807 = load i32, i32* %v2_27807, align 4
  store i32 %v3_27807, i32* @edx, align 4
  store i32 %v3_277ef, i32* @eax, align 4
  br label %dec_label_pc_27820.outer

dec_label_pc_27820.outer:                         ; preds = %dec_label_pc_2782c.dec_label_pc_27820.backedge_crit_edge, %dec_label_pc_277fa
  %v4_2783512.ph = phi i32 [ %v0_2782c, %dec_label_pc_2782c.dec_label_pc_27820.backedge_crit_edge ], [ %v1_277fe, %dec_label_pc_277fa ]
  %v1_27810.ph = phi i32 [ %v0_27823.pre.pre, %dec_label_pc_2782c.dec_label_pc_27820.backedge_crit_edge ], [ %v3_27807, %dec_label_pc_277fa ]
  %v0_27819.ph = phi i32 [ %v3_2782e, %dec_label_pc_2782c.dec_label_pc_27820.backedge_crit_edge ], [ %v3_277ef, %dec_label_pc_277fa ]
  br label %dec_label_pc_27820

dec_label_pc_27810:                               ; preds = %dec_label_pc_27820
  %v8_27823 = xor i32 %v3_27820, %v1_27810.ph
  %v2_27810 = sub i32 %v3_27820, %v1_27810.ph
  %v9_27810 = xor i32 %v2_27810, %v3_27820
  %v10_27810 = and i32 %v9_27810, %v8_27823
  %v11_27810 = icmp slt i32 %v10_27810, 0
  %v13_27810 = icmp slt i32 %v2_27810, 0
  %v2_27812 = icmp ne i1 %v13_27810, %v11_27810
  %v3_27812 = zext i1 %v2_27812 to i32
  %v5_27812 = and i32 %v3_27820, -256
  %v6_27812 = or i32 %v3_27812, %v5_27812
  store i32 %v6_27812, i32* @ecx, align 4
  %v5_27815 = icmp eq i1 %v2_27812, false
  br i1 %v5_27815, label %dec_label_pc_2782c.loopexit, label %dec_label_pc_27819

dec_label_pc_27819:                               ; preds = %dec_label_pc_27810
  %v1_27819 = add i32 %v0_27819, 12
  %v2_27819 = inttoptr i32 %v1_27819 to i32*
  %v3_27819 = load i32, i32* %v2_27819, align 4
  store i32 %v3_27819, i32* @eax, align 4
  %v1_2781c = icmp eq i32 %v3_27819, 0
  br i1 %v1_2781c, label %dec_label_pc_27835.loopexit, label %dec_label_pc_27820

dec_label_pc_27820:                               ; preds = %dec_label_pc_27820.outer, %dec_label_pc_27819
  %v0_27819 = phi i32 [ %v3_27819, %dec_label_pc_27819 ], [ %v0_27819.ph, %dec_label_pc_27820.outer ]
  %v1_27820 = add i32 %v0_27819, 16
  %v2_27820 = inttoptr i32 %v1_27820 to i32*
  %v3_27820 = load i32, i32* %v2_27820, align 4
  store i32 %v3_27820, i32* @ecx, align 4
  %v12_27823 = icmp eq i32 %v3_27820, %v1_27810.ph
  %v1_27825 = icmp eq i1 %v12_27823, false
  br i1 %v1_27825, label %dec_label_pc_27810, label %dec_label_pc_27827

dec_label_pc_27827:                               ; preds = %dec_label_pc_27820
  %v10_27827 = icmp eq i32 %v1_27810.ph, 1
  br i1 %v10_27827, label %bb38, label %dec_label_pc_2782c

bb38:                                             ; preds = %dec_label_pc_27827
  %v1_2782a = call i32 @function_27878()
  br label %dec_label_pc_2782c

dec_label_pc_2782c.loopexit:                      ; preds = %dec_label_pc_27810
  br label %dec_label_pc_2782c

dec_label_pc_2782c:                               ; preds = %dec_label_pc_2782c.loopexit, %bb38, %dec_label_pc_27827
  %v0_2782c = phi i32 [ %v1_2782a, %bb38 ], [ %v0_27819, %dec_label_pc_27827 ], [ %v0_27819, %dec_label_pc_2782c.loopexit ]
  store i32 %v0_2782c, i32* @edi, align 4
  %v1_2782e = add i32 %v0_2782c, 8
  %v2_2782e = inttoptr i32 %v1_2782e to i32*
  %v3_2782e = load i32, i32* %v2_2782e, align 4
  store i32 %v3_2782e, i32* @eax, align 4
  %v1_27831 = icmp eq i32 %v3_2782e, 0
  %v1_27833 = icmp eq i1 %v1_27831, false
  br i1 %v1_27833, label %dec_label_pc_2782c.dec_label_pc_27820.backedge_crit_edge, label %dec_label_pc_27835

dec_label_pc_2782c.dec_label_pc_27820.backedge_crit_edge: ; preds = %dec_label_pc_2782c
  %v0_27823.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_27820.outer

dec_label_pc_27835.loopexit:                      ; preds = %dec_label_pc_27819
  br label %dec_label_pc_27835

dec_label_pc_27835:                               ; preds = %dec_label_pc_2782c, %dec_label_pc_27835.loopexit
  %v4_27835 = phi i32 [ %v4_2783512.ph, %dec_label_pc_27835.loopexit ], [ %v0_2782c, %dec_label_pc_2782c ]
  %v15_27835 = icmp eq i32 %v1_277fe, %v4_27835
  br i1 %v15_27835, label %bb39, label %dec_label_pc_2783f

bb39:                                             ; preds = %dec_label_pc_27835
  %v1_27839 = call i32 @function_27bd0()
  %v0_2783f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_2783f

dec_label_pc_2783f:                               ; preds = %bb39, %dec_label_pc_27835
  %v0_2783f = phi i32 [ %v0_2783f.pre, %bb39 ], [ %v4_27835, %dec_label_pc_27835 ]
  %v1_2783f = add i32 %v0_2783f, 16
  %v2_2783f = inttoptr i32 %v1_2783f to i32*
  %v3_2783f = load i32, i32* %v2_2783f, align 4
  store i32 %v3_2783f, i32* @eax, align 4
  %v1_27842 = load i32, i32* @edx, align 4
  %v2_27842 = sub i32 %v3_2783f, %v1_27842
  %v8_27842 = xor i32 %v1_27842, %v3_2783f
  %v9_27842 = xor i32 %v2_27842, %v3_2783f
  %v10_27842 = and i32 %v9_27842, %v8_27842
  %v11_27842 = icmp slt i32 %v10_27842, 0
  %v13_27842 = icmp slt i32 %v2_27842, 0
  %v2_27844 = icmp ne i1 %v13_27842, %v11_27842
  %v3_27844 = zext i1 %v2_27844 to i32
  %v4_27844 = load i32, i32* @ecx, align 4
  %v5_27844 = and i32 %v4_27844, -256
  %v6_27844 = or i32 %v3_27844, %v5_27844
  store i32 %v6_27844, i32* @ecx, align 4
  %v12_27847 = icmp eq i32 %v3_2783f, %v1_27842
  br i1 %v12_27847, label %bb40, label %dec_label_pc_2784b

bb40:                                             ; preds = %dec_label_pc_2783f
  %v1_27849 = call i32 @function_278a8()
  store i32 %v1_27849, i32* @eax, align 4
  %v0_2784b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_2784b

dec_label_pc_2784b:                               ; preds = %bb40, %dec_label_pc_2783f
  %v3_2786b17 = phi i32 [ %v1_27849, %bb40 ], [ %v3_2783f, %dec_label_pc_2783f ]
  %v0_2784b = phi i32 [ %v0_2784b.pre, %bb40 ], [ %v6_27844, %dec_label_pc_2783f ]
  %v4_2784b = trunc i32 %v0_2784b to i8
  %v5_2784b = icmp eq i8 %v4_2784b, 0
  br i1 %v5_2784b, label %bb41, label %dec_label_pc_27853

bb41:                                             ; preds = %dec_label_pc_2784b
  %v1_2784d = call i32 @function_27ac1()
  br label %dec_label_pc_27853

dec_label_pc_27853:                               ; preds = %bb41, %dec_label_pc_2784b
  %v3_2786b = phi i32 [ %v1_2784d, %bb41 ], [ %v3_2786b17, %dec_label_pc_2784b ]
  ret i32 %v3_2786b

; uselistorder directives
  uselistorder i32 %v2_27842, { 1, 0 }
  uselistorder i32 %v3_2783f, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v4_27835, { 1, 0 }
  uselistorder i32 %v3_2782e, { 1, 2, 0 }
  uselistorder i32 %v0_2782c, { 0, 3, 2, 1 }
  uselistorder i32 %v3_27820, { 0, 5, 1, 4, 2, 3 }
  uselistorder i32 %v0_27819, { 0, 1, 3, 2 }
  uselistorder i32 %v2_27810, { 1, 0 }
  uselistorder i32 %v2_277cd, { 1, 4, 5, 3, 0, 2 }
  uselistorder i32 ()* @function_27bd0, { 1, 0 }
  uselistorder i32 (i32)* @function_27b9d, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_27969, { 1, 0 }
  uselistorder label %dec_label_pc_27835, { 1, 0 }
  uselistorder label %dec_label_pc_27820, { 1, 0 }
}

define i32 @function_27878() local_unnamed_addr {
dec_label_pc_27878:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_2787c = add i32 %tmp, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2787c = inttoptr i32 %v1_2787c to i8*
  %v3_2787c = load i8, i8* %v2_2787c, align 1
  %v10_2787c = icmp eq i8 %v3_2787c, 0
  br i1 %v10_2787c, label %bb, label %dec_label_pc_27878.dec_label_pc_27886_crit_edge

dec_label_pc_27878.dec_label_pc_27886_crit_edge:  ; preds = %dec_label_pc_27878
  %v0_27886.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27886

bb:                                               ; preds = %dec_label_pc_27878
  %v1_27880 = call i32 @function_27b79()
  store i32 %v1_27880, i32* @eax, align 4
  br label %dec_label_pc_27886

dec_label_pc_27886:                               ; preds = %dec_label_pc_27878.dec_label_pc_27886_crit_edge, %bb
  %v0_27886 = phi i32 [ %v0_27886.pre, %dec_label_pc_27878.dec_label_pc_27886_crit_edge ], [ %v1_27880, %bb ]
  %v1_27886 = add i32 %v0_27886, 20
  %v2_27886 = inttoptr i32 %v1_27886 to i8*
  %v3_27886 = load i8, i8* %v2_27886, align 1
  %v10_27886 = icmp eq i8 %v3_27886, 0
  br i1 %v10_27886, label %bb3, label %dec_label_pc_27890

bb3:                                              ; preds = %dec_label_pc_27886
  %v1_2788a = call i32 @function_27b79()
  br label %dec_label_pc_27890

dec_label_pc_27890:                               ; preds = %bb3, %dec_label_pc_27886
  %v0_2789d = phi i32 [ %v1_2788a, %bb3 ], [ %v0_27886, %dec_label_pc_27886 ]
  %v1_27894 = add i32 %tmp, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_27894 = inttoptr i32 %v1_27894 to i32*
  %v3_27894 = load i32, i32* %v2_27894, align 4
  %v1_27897 = add i32 %v0_2789d, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_27897 = inttoptr i32 %v1_27897 to i32*
  %v3_27897 = load i32, i32* %v2_27897, align 4
  %v5_27897 = sub i32 %v3_27897, %v3_27894
  %v11_27897 = xor i32 %v3_27897, %v3_27894
  %v12_27897 = xor i32 %v5_27897, %v3_27897
  %v13_27897 = and i32 %v12_27897, %v11_27897
  %v14_27897 = icmp slt i32 %v13_27897, 0
  %v16_27897 = icmp slt i32 %v5_27897, 0
  %v2_2789a = icmp ne i1 %v16_27897, %v14_27897
  %v3_2789a = zext i1 %v2_2789a to i32
  %v5_2789a = and i32 %v3_27894, -256
  %v6_2789a = or i32 %v3_2789a, %v5_2789a
  store i32 %v6_2789a, i32* @ecx, align 4
  ret i32 %v0_2789d

; uselistorder directives
  uselistorder i32 %v5_27897, { 1, 0 }
  uselistorder i32 %v3_27894, { 1, 0, 2 }
  uselistorder label %dec_label_pc_27886, { 1, 0 }
}

define i32 @function_278a8() local_unnamed_addr {
dec_label_pc_278a8:
  %v0_278a8 = load i32, i32* @edx, align 4
  %v10_278a8 = icmp eq i32 %v0_278a8, 1
  br i1 %v10_278a8, label %bb, label %dec_label_pc_278a8.dec_label_pc_278b1_crit_edge

dec_label_pc_278a8.dec_label_pc_278b1_crit_edge:  ; preds = %dec_label_pc_278a8
  %v0_278b1.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_278b1

bb:                                               ; preds = %dec_label_pc_278a8
  %v1_278ab = call i32 @function_27998()
  store i32 %v1_278ab, i32* @eax, align 4
  br label %dec_label_pc_278b1

dec_label_pc_278b1:                               ; preds = %dec_label_pc_278a8.dec_label_pc_278b1_crit_edge, %bb
  %v0_278b1 = phi i32 [ %v0_278b1.pre, %dec_label_pc_278a8.dec_label_pc_278b1_crit_edge ], [ %v1_278ab, %bb ]
  %v10_278b1 = icmp eq i32 %v0_278b1, 1
  br i1 %v10_278b1, label %bb6, label %dec_label_pc_278b6

bb6:                                              ; preds = %dec_label_pc_278b1
  %v1_278b4 = call i32 @function_27903()
  br label %dec_label_pc_278b6

dec_label_pc_278b6:                               ; preds = %bb6, %dec_label_pc_278b1
  %v3_278bb4 = phi i32 [ %v1_278b4, %bb6 ], [ %v0_278b1, %dec_label_pc_278b1 ]
  %v0_278b6 = load i32, i32* @ebx, align 4
  %v1_278b6 = load i32, i32* @edi, align 4
  %v2_278b6 = add i32 %v1_278b6, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_278b6 = inttoptr i32 %v2_278b6 to i32*
  %v4_278b6 = load i32, i32* %v3_278b6, align 4
  %v15_278b6 = icmp eq i32 %v0_278b6, %v4_278b6
  br i1 %v15_278b6, label %bb7, label %dec_label_pc_278bb

bb7:                                              ; preds = %dec_label_pc_278b6
  %v1_278b9 = call i32 @function_27932()
  br label %dec_label_pc_278bb

dec_label_pc_278bb:                               ; preds = %bb7, %dec_label_pc_278b6
  %v3_278bb = phi i32 [ %v1_278b9, %bb7 ], [ %v3_278bb4, %dec_label_pc_278b6 ]
  ret i32 %v3_278bb

; uselistorder directives
  uselistorder i32 %v0_278b1, { 1, 0 }
  uselistorder label %dec_label_pc_278b1, { 1, 0 }
}

define i32 @function_278bd() local_unnamed_addr {
dec_label_pc_278bd:
  %v3_278bd = load i32, i32* @eax, align 4
  ret i32 %v3_278bd
}

define i32 @function_278da() local_unnamed_addr {
dec_label_pc_278da:
  %eax.global-to-local = alloca i32, align 4
  %v0_278da = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_278da
}

define i32 @function_278e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_278e0:
  %edx.global-to-local = alloca i32, align 4
  %v2_278e0 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_278e0 = load i32, i32* @ecx, align 4
  %v4_278e0 = trunc i32 %v3_278e0 to i8
  %v5_278e0 = urem i8 %v4_278e0, 32
  %v6_278e0 = icmp eq i8 %v5_278e0, 0
  br i1 %v6_278e0, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_278e0
  %v7_278e0 = lshr i8 %v2_278e0, %v5_278e0
  %v8_278e0 = sub nsw i8 8, %v5_278e0
  %v9_278e0 = shl i8 %v2_278e0, %v8_278e0
  %v10_278e0 = or i8 %v9_278e0, %v7_278e0
  %v11_278e0 = load i32, i32* @edi, align 4
  %v12_278e0 = inttoptr i32 %v11_278e0 to i8*
  store i8 %v10_278e0, i8* %v12_278e0, align 1
  %v0_278e2.pre = load i32, i32* @ecx, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_278e0, %bb
  %v0_278e2 = phi i32 [ %v3_278e0, %dec_label_pc_278e0 ], [ %v0_278e2.pre, %bb ]
  %v1_278e2 = lshr i32 %v0_278e2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_278e2 = and i32 %v1_278e2, ptrtoint (i8* @global_var_ff.3305 to i32)
  %v3_278e2 = load i32, i32* @edx, align 4
  %v4_278e2 = and i32 %v3_278e2, -256
  %v5_278e2 = or i32 %v4_278e2, %v2_278e2
  store i32 %v5_278e2, i32* %edx.global-to-local, align 4
  %v2_278e4 = load i32, i32* @eax, align 4
  %v4_278e4 = mul i32 %v2_278e4, 2
  %v21_278e4 = inttoptr i32 %v2_278e4 to i32*
  store i32 %v4_278e4, i32* %v21_278e4, align 4
  %v0_278e6 = load i32, i32* @ebx, align 4
  %v1_278e6 = add i32 %v0_278e6, -1961614252
  %v2_278e6 = inttoptr i32 %v1_278e6 to i8*
  %v3_278e6 = load i8, i8* %v2_278e6, align 1
  %v4_278e6 = load i32, i32* @ecx, align 4
  %v5_278e6 = trunc i32 %v4_278e6 to i8
  %v6_278e6 = add i8 %v5_278e6, %v3_278e6
  store i8 %v6_278e6, i8* %v2_278e6, align 1
  %v0_278ec = load i32, i32* %edx.global-to-local, align 4
  %v1_278ec = add i32 %v0_278ec, 1
  store i32 %v1_278ec, i32* %edx.global-to-local, align 4
  %v0_278ed = load i32, i32* @eax, align 4
  %v2_278ed = add i32 %v0_278ed, zext (i8 ptrtoint (i8* @global_var_85.3361 to i8) to i32)
  %v16_278ed = urem i32 %v2_278ed, 256
  %v18_278ed = and i32 %v0_278ed, -256
  %v19_278ed = or i32 %v16_278ed, %v18_278ed
  store i32 %v19_278ed, i32* @eax, align 4
  %v2_278ef = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_278ef = lshr i8 %v2_278ef, ptrtoint (i16** @global_var_4.3276 to i8)
  %v4_278ef = mul i8 %v2_278ef, 16
  %v5_278ef = or i8 %v3_278ef, %v4_278ef
  %v6_278ef = load i32, i32* @edi, align 4
  %v7_278ef = inttoptr i32 %v6_278ef to i8*
  store i8 %v5_278ef, i8* %v7_278ef, align 1
  %v0_278f3 = load i32, i32* @eax, align 4
  %v1_278f3 = inttoptr i32 %v0_278f3 to i32*
  %v2_278f3 = load i32, i32* %v1_278f3, align 4
  %v4_278f3 = add i32 %v2_278f3, %v0_278f3
  store i32 %v4_278f3, i32* %v1_278f3, align 4
  %v0_278f5 = load i32, i32* @ebx, align 4
  %v1_278f5 = add i32 %v0_278f5, 604277008
  %v2_278f5 = inttoptr i32 %v1_278f5 to i8*
  %v3_278f5 = load i8, i8* %v2_278f5, align 1
  %v4_278f5 = load i32, i32* @ecx, align 4
  %v5_278f5 = trunc i32 %v4_278f5 to i8
  %v6_278f5 = add i8 %v5_278f5, %v3_278f5
  store i8 %v6_278f5, i8* %v2_278f5, align 1
  %v0_278fe = call i32 @function_276eb()
  ret i32 %v0_278fe

; uselistorder directives
  uselistorder i32 %v0_278ed, { 1, 0 }
  uselistorder i32 %v2_278e4, { 1, 0 }
  uselistorder i8 %v5_278e0, { 2, 1, 0 }
  uselistorder i8 ptrtoint (i16** @global_var_4.3276 to i8), { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* @global_var_ff.3305, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_ff.3305 to i32), { 12, 11, 10, 9, 8, 7, 6, 1, 5, 2, 4, 3, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_27903() local_unnamed_addr {
dec_label_pc_27903:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_27903 = load i32, i32* @edi, align 4
  %v1_27903 = add i32 %v0_27903, 20
  %v2_27903 = inttoptr i32 %v1_27903 to i8*
  %v3_27903 = load i8, i8* %v2_27903, align 1
  %v10_27903 = icmp eq i8 %v3_27903, 0
  br i1 %v10_27903, label %bb, label %dec_label_pc_2790d

bb:                                               ; preds = %dec_label_pc_27903
  %v1_27907 = call i32 @function_27b79()
  br label %dec_label_pc_2790d

dec_label_pc_2790d:                               ; preds = %bb, %dec_label_pc_27903
  %v1_27911 = add i32 %tmp, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_27911 = inttoptr i32 %v1_27911 to i8*
  %v3_27911 = load i8, i8* %v2_27911, align 1
  %v10_27911 = icmp eq i8 %v3_27911, 0
  br i1 %v10_27911, label %bb1, label %dec_label_pc_2791b

bb1:                                              ; preds = %dec_label_pc_2790d
  %v1_27915 = call i32 @function_27b79()
  br label %dec_label_pc_2791b

dec_label_pc_2791b:                               ; preds = %bb1, %dec_label_pc_2790d
  %v0_2791f = load i32, i32* @edi, align 4
  %v1_2791f = add i32 %v0_2791f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_2791f = inttoptr i32 %v1_2791f to i32*
  %v3_2791f = load i32, i32* %v2_2791f, align 4
  %v1_27922 = add i32 %tmp, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_27922 = inttoptr i32 %v1_27922 to i32*
  %v3_27922 = load i32, i32* %v2_27922, align 4
  %v5_27922 = sub i32 %v3_27922, %v3_2791f
  %v11_27922 = xor i32 %v3_27922, %v3_2791f
  %v12_27922 = xor i32 %v5_27922, %v3_27922
  %v13_27922 = and i32 %v12_27922, %v11_27922
  %v14_27922 = icmp slt i32 %v13_27922, 0
  %v16_27922 = icmp slt i32 %v5_27922, 0
  %v2_27925 = icmp ne i1 %v16_27922, %v14_27922
  %v3_27925 = zext i1 %v2_27925 to i32
  %v5_27925 = and i32 %v3_2791f, -256
  %v6_27925 = or i32 %v3_27925, %v5_27925
  ret i32 %v6_27925

; uselistorder directives
  uselistorder i32 %v5_27922, { 1, 0 }
  uselistorder i32 %v3_2791f, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_27932() local_unnamed_addr {
dec_label_pc_27932:
  %v2_27936 = load i32, i32* @ebx, align 4
  store i32 %v2_27936, i32* @ecx, align 4
  %v0_27940 = load i32, i32* @esi, align 4
  store i32 %v0_27940, i32* @eax, align 4
  br label %dec_label_pc_2795a

dec_label_pc_27948:                               ; preds = %dec_label_pc_2795a
  %v16_2795a = icmp slt i32 %v5_2795a, 0
  %v12_2795a = xor i32 %v5_2795a, %v0_2795a
  %v11_2795a = xor i32 %v4_2795a, %v0_2795a
  %v13_2795a = and i32 %v12_2795a, %v11_2795a
  %v14_2795a = icmp slt i32 %v13_2795a, 0
  %v2_27948 = icmp ne i1 %v16_2795a, %v14_2795a
  %v3_27948 = zext i1 %v2_27948 to i32
  %v4_27948 = load i32, i32* @ecx, align 4
  %v5_27948 = and i32 %v4_27948, -256
  %v6_27948 = or i32 %v5_27948, %v3_27948
  store i32 %v6_27948, i32* @ecx, align 4
  %v5_2794b = icmp eq i1 %v2_27948, false
  br i1 %v5_2794b, label %dec_label_pc_27964, label %dec_label_pc_2794f

dec_label_pc_2794f:                               ; preds = %dec_label_pc_27948
  %v1_27953 = add i32 %v0_27953, 8
  br label %dec_label_pc_27956

dec_label_pc_27956:                               ; preds = %dec_label_pc_2794f, %dec_label_pc_27964
  %storemerge.in.in = phi i32 [ %v1_27953, %dec_label_pc_2794f ], [ %v1_27964, %dec_label_pc_27964 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @eax, align 4
  %v1_27956 = icmp eq i32 %storemerge, 0
  br i1 %v1_27956, label %bb, label %dec_label_pc_2795a

bb:                                               ; preds = %dec_label_pc_27956
  %v1_27958 = call i32 @function_279c8()
  store i32 %v1_27958, i32* @eax, align 4
  br label %dec_label_pc_2795a

dec_label_pc_2795a:                               ; preds = %bb, %dec_label_pc_27956, %dec_label_pc_27932
  %v0_27953 = phi i32 [ %v0_27940, %dec_label_pc_27932 ], [ %storemerge, %dec_label_pc_27956 ], [ %v1_27958, %bb ]
  %v0_2795a = load i32, i32* @edx, align 4
  %v2_2795a = add i32 %v0_27953, 16
  %v3_2795a = inttoptr i32 %v2_2795a to i32*
  %v4_2795a = load i32, i32* %v3_2795a, align 4
  %v5_2795a = sub i32 %v0_2795a, %v4_2795a
  %v15_2795a = icmp eq i32 %v5_2795a, 0
  %v1_2795d = icmp eq i1 %v15_2795a, false
  br i1 %v1_2795d, label %dec_label_pc_27948, label %dec_label_pc_2795f

dec_label_pc_2795f:                               ; preds = %dec_label_pc_2795a
  %v10_2795f = icmp eq i32 %v0_2795a, 1
  br i1 %v10_2795f, label %bb8, label %dec_label_pc_27964

bb8:                                              ; preds = %dec_label_pc_2795f
  %v1_27962 = call i32 @function_27970()
  br label %dec_label_pc_27964

dec_label_pc_27964:                               ; preds = %dec_label_pc_27948, %bb8, %dec_label_pc_2795f
  %v0_27964 = phi i32 [ %v0_27953, %dec_label_pc_27948 ], [ %v1_27962, %bb8 ], [ %v0_27953, %dec_label_pc_2795f ]
  %v1_27964 = add i32 %v0_27964, 12
  br label %dec_label_pc_27956

; uselistorder directives
  uselistorder i32 %v5_2795a, { 2, 1, 0 }
  uselistorder i32 %v4_2795a, { 1, 0 }
  uselistorder i32 %v0_2795a, { 0, 3, 1, 2 }
  uselistorder i32 %v0_27953, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_27964, { 1, 2, 0 }
  uselistorder label %dec_label_pc_27956, { 1, 0 }
}

define i32 @function_27969(i32 %arg1) local_unnamed_addr {
dec_label_pc_27969:
  %v0_27969 = call i32 @function_38a52()
  ret i32 %v0_27969
}

define i32 @function_27970() local_unnamed_addr {
dec_label_pc_27970:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_27970 = load i32, i32* @eax, align 4
  %v1_27970 = add i32 %v0_27970, 20
  %v2_27970 = inttoptr i32 %v1_27970 to i8*
  %v3_27970 = load i8, i8* %v2_27970, align 1
  %v10_27970 = icmp eq i8 %v3_27970, 0
  br i1 %v10_27970, label %bb, label %dec_label_pc_2797a

bb:                                               ; preds = %dec_label_pc_27970
  %v1_27974 = call i32 @function_27b79()
  store i32 %v1_27974, i32* @eax, align 4
  br label %dec_label_pc_2797a

dec_label_pc_2797a:                               ; preds = %bb, %dec_label_pc_27970
  %v0_2798c2 = phi i32 [ %v1_27974, %bb ], [ %v0_27970, %dec_label_pc_27970 ]
  %v1_2797e = add i32 %tmp, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2797e = inttoptr i32 %v1_2797e to i8*
  %v3_2797e = load i8, i8* %v2_2797e, align 1
  %v10_2797e = icmp eq i8 %v3_2797e, 0
  br i1 %v10_2797e, label %bb3, label %dec_label_pc_27988

bb3:                                              ; preds = %dec_label_pc_2797a
  %v1_27982 = call i32 @function_27b79()
  br label %dec_label_pc_27988

dec_label_pc_27988:                               ; preds = %bb3, %dec_label_pc_2797a
  %v0_27995 = phi i32 [ %v1_27982, %bb3 ], [ %v0_2798c2, %dec_label_pc_2797a ]
  %v1_2798c = add i32 %v0_27995, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_2798c = inttoptr i32 %v1_2798c to i32*
  %v3_2798c = load i32, i32* %v2_2798c, align 4
  %v1_2798f = add i32 %tmp, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2798f = inttoptr i32 %v1_2798f to i32*
  %v3_2798f = load i32, i32* %v2_2798f, align 4
  %v5_2798f = sub i32 %v3_2798f, %v3_2798c
  %v11_2798f = xor i32 %v3_2798f, %v3_2798c
  %v12_2798f = xor i32 %v5_2798f, %v3_2798f
  %v13_2798f = and i32 %v12_2798f, %v11_2798f
  %v14_2798f = icmp slt i32 %v13_2798f, 0
  %v16_2798f = icmp slt i32 %v5_2798f, 0
  %v2_27992 = icmp ne i1 %v16_2798f, %v14_2798f
  %v3_27992 = zext i1 %v2_27992 to i32
  %v5_27992 = and i32 %v3_2798c, -256
  %v6_27992 = or i32 %v3_27992, %v5_27992
  store i32 %v6_27992, i32* @ecx, align 4
  ret i32 %v0_27995

; uselistorder directives
  uselistorder i32 %v5_2798f, { 1, 0 }
  uselistorder i32 %v3_2798c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_27998() local_unnamed_addr {
dec_label_pc_27998:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_2799c = add i32 %tmp, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_2799c = inttoptr i32 %v1_2799c to i8*
  %v3_2799c = load i8, i8* %v2_2799c, align 1
  %v10_2799c = icmp eq i8 %v3_2799c, 0
  br i1 %v10_2799c, label %bb, label %dec_label_pc_279a6

bb:                                               ; preds = %dec_label_pc_27998
  %v1_279a0 = call i32 @function_27b79()
  store i32 %v1_279a0, i32* @eax, align 4
  br label %dec_label_pc_279a6

dec_label_pc_279a6:                               ; preds = %bb, %dec_label_pc_27998
  %v0_279a6 = load i32, i32* @edi, align 4
  %v1_279a6 = add i32 %v0_279a6, 20
  %v2_279a6 = inttoptr i32 %v1_279a6 to i8*
  %v3_279a6 = load i8, i8* %v2_279a6, align 1
  %v10_279a6 = icmp eq i8 %v3_279a6, 0
  br i1 %v10_279a6, label %bb3, label %dec_label_pc_279a6.dec_label_pc_279b0_crit_edge

dec_label_pc_279a6.dec_label_pc_279b0_crit_edge:  ; preds = %dec_label_pc_279a6
  %v0_279bd.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_279b0

bb3:                                              ; preds = %dec_label_pc_279a6
  %v1_279aa = call i32 @function_27b79()
  %v0_279b7.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_279b0

dec_label_pc_279b0:                               ; preds = %dec_label_pc_279a6.dec_label_pc_279b0_crit_edge, %bb3
  %v0_279bd = phi i32 [ %v1_279aa, %bb3 ], [ %v0_279bd.pre, %dec_label_pc_279a6.dec_label_pc_279b0_crit_edge ]
  %v0_279b7 = phi i32 [ %v0_279b7.pre, %bb3 ], [ %v0_279a6, %dec_label_pc_279a6.dec_label_pc_279b0_crit_edge ]
  %v1_279b4 = add i32 %tmp, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_279b4 = inttoptr i32 %v1_279b4 to i32*
  %v3_279b4 = load i32, i32* %v2_279b4, align 4
  %v1_279b7 = add i32 %v0_279b7, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_279b7 = inttoptr i32 %v1_279b7 to i32*
  %v3_279b7 = load i32, i32* %v2_279b7, align 4
  %v5_279b7 = sub i32 %v3_279b7, %v3_279b4
  %v11_279b7 = xor i32 %v3_279b7, %v3_279b4
  %v12_279b7 = xor i32 %v5_279b7, %v3_279b7
  %v13_279b7 = and i32 %v12_279b7, %v11_279b7
  %v14_279b7 = icmp slt i32 %v13_279b7, 0
  %v16_279b7 = icmp slt i32 %v5_279b7, 0
  %v2_279ba = icmp ne i1 %v16_279b7, %v14_279b7
  %v3_279ba = zext i1 %v2_279ba to i32
  %v5_279ba = and i32 %v3_279b4, -256
  %v6_279ba = or i32 %v3_279ba, %v5_279ba
  store i32 %v6_279ba, i32* @ecx, align 4
  ret i32 %v0_279bd

; uselistorder directives
  uselistorder i32 %v5_279b7, { 1, 0 }
  uselistorder i32 %v3_279b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_279b0, { 1, 0 }
}

define i32 @function_279c8() local_unnamed_addr {
dec_label_pc_279c8:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v15_279cc = icmp eq i32 %tmp3, %tmp4
  br i1 %v15_279cc, label %dec_label_pc_279e1, label %dec_label_pc_279d6

dec_label_pc_279d6:                               ; preds = %dec_label_pc_279c8
  %v1_279da = add i32 %tmp3, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_279da = inttoptr i32 %v1_279da to i32*
  %v3_279da = load i32, i32* %v2_279da, align 4
  br label %dec_label_pc_279e1

dec_label_pc_279e1:                               ; preds = %dec_label_pc_279d6, %dec_label_pc_279c8
  %stack_var_48.0 = phi i32 [ %tmp1, %dec_label_pc_279c8 ], [ %v3_279da, %dec_label_pc_279d6 ]
  ret i32 %stack_var_48.0

; uselistorder directives
  uselistorder i32 %tmp3, { 1, 0 }
}

define i32 @function_279f0(i16 %arg1) local_unnamed_addr {
dec_label_pc_279f0:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-2 = alloca i32, align 4
  %stack_var_62 = alloca i32, align 4
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_78 = alloca i32, align 4
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %v2_279f0 = load i32, i32* @eax, align 4
  %v4_279f0 = mul i32 %v2_279f0, 2
  %v21_279f0 = inttoptr i32 %v2_279f0 to i32*
  store i32 %v4_279f0, i32* %v21_279f0, align 4
  %v0_279f2 = load i32, i32* @ebx, align 4
  %v1_279f2 = add i32 %v0_279f2, -350215044
  %v2_279f2 = inttoptr i32 %v1_279f2 to i8*
  %v3_279f2 = load i8, i8* %v2_279f2, align 1
  %v4_279f2 = load i32, i32* @ecx, align 4
  %v5_279f2 = trunc i32 %v4_279f2 to i8
  %v6_279f2 = add i8 %v5_279f2, %v3_279f2
  store i8 %v6_279f2, i8* %v2_279f2, align 1
  %v0_27a00.pre = load i32, i32* @eax, align 4
  %v1_27a00.pre = load i32, i32* @edx, align 4
  %v0_27a1c.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_27a00

dec_label_pc_27a00:                               ; preds = %dec_label_pc_27a10, %dec_label_pc_279f0
  %v0_27a1c.pre.pre = phi i32 [ %v0_27a1c.pre.pre.pre, %dec_label_pc_279f0 ], [ %storemerge, %dec_label_pc_27a10 ]
  %v1_27a00 = phi i32 [ %v1_27a00.pre, %dec_label_pc_279f0 ], [ %v0_27a13, %dec_label_pc_27a10 ]
  %v4_27a02 = phi i32 [ %v0_27a00.pre, %dec_label_pc_279f0 ], [ %v3_27a10, %dec_label_pc_27a10 ]
  %v2_27a00 = sub i32 %v4_27a02, %v1_27a00
  %v8_27a00 = xor i32 %v4_27a02, %v1_27a00
  %v9_27a00 = xor i32 %v2_27a00, %v4_27a02
  %v10_27a00 = and i32 %v9_27a00, %v8_27a00
  %v11_27a00 = icmp slt i32 %v10_27a00, 0
  %v13_27a00 = icmp slt i32 %v2_27a00, 0
  %v2_27a02 = icmp ne i1 %v13_27a00, %v11_27a00
  %v3_27a02 = zext i1 %v2_27a02 to i32
  %v5_27a02 = and i32 %v4_27a02, -256
  %v6_27a02 = or i32 %v3_27a02, %v5_27a02
  br label %dec_label_pc_27a05

dec_label_pc_27a05:                               ; preds = %dec_label_pc_27a3c, %dec_label_pc_27a00
  %v0_27a1c.pre = phi i32 [ %v0_27a3f, %dec_label_pc_27a3c ], [ %v0_27a1c.pre.pre, %dec_label_pc_27a00 ]
  %storemerge2 = phi i32 [ %v6_27a42, %dec_label_pc_27a3c ], [ %v6_27a02, %dec_label_pc_27a00 ]
  store i32 %storemerge2, i32* @eax, align 4
  %v4_27a05 = trunc i32 %storemerge2 to i8
  %v5_27a05 = icmp eq i8 %v4_27a05, 0
  br i1 %v5_27a05, label %dec_label_pc_27a1c, label %dec_label_pc_27a09

dec_label_pc_27a09:                               ; preds = %dec_label_pc_27a05
  %v1_27a09 = add i32 %v0_27a1c.pre, 12
  br label %dec_label_pc_27a0c

dec_label_pc_27a0c:                               ; preds = %dec_label_pc_27a1c, %dec_label_pc_27a09
  %v4_27a5711 = phi i32 [ %v4_27a5712, %dec_label_pc_27a1c ], [ %storemerge2, %dec_label_pc_27a09 ]
  %storemerge.in.in = phi i32 [ %v1_27a1e, %dec_label_pc_27a1c ], [ %v1_27a09, %dec_label_pc_27a09 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %esi.global-to-local, align 4
  %v1_27a0c = icmp eq i32 %storemerge, 0
  br i1 %v1_27a0c, label %dec_label_pc_27a48, label %dec_label_pc_27a10

dec_label_pc_27a10:                               ; preds = %dec_label_pc_27a0c
  %v1_27a10 = add i32 %storemerge, 16
  %v2_27a10 = inttoptr i32 %v1_27a10 to i32*
  %v3_27a10 = load i32, i32* %v2_27a10, align 4
  store i32 %v3_27a10, i32* @eax, align 4
  %v0_27a13 = load i32, i32* @edx, align 4
  %v12_27a13 = icmp eq i32 %v0_27a13, %v3_27a10
  %v1_27a15 = icmp eq i1 %v12_27a13, false
  br i1 %v1_27a15, label %dec_label_pc_27a00, label %dec_label_pc_27a17

dec_label_pc_27a17:                               ; preds = %dec_label_pc_27a10
  %v10_27a17 = icmp eq i32 %v0_27a13, 1
  br i1 %v10_27a17, label %dec_label_pc_27a28, label %dec_label_pc_27a1c

dec_label_pc_27a1c:                               ; preds = %dec_label_pc_27a05, %dec_label_pc_27a17
  %v4_27a5712 = phi i32 [ %v3_27a10, %dec_label_pc_27a17 ], [ %storemerge2, %dec_label_pc_27a05 ]
  %v0_27a1c = phi i32 [ %storemerge, %dec_label_pc_27a17 ], [ %v0_27a1c.pre, %dec_label_pc_27a05 ]
  store i32 %v0_27a1c, i32* @ecx, align 4
  %v1_27a1e = add i32 %v0_27a1c, 8
  br label %dec_label_pc_27a0c

dec_label_pc_27a28:                               ; preds = %dec_label_pc_27a17
  %v0_27a28 = load i32, i32* @edi, align 4
  %v1_27a28 = add i32 %v0_27a28, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_27a28 = inttoptr i32 %v1_27a28 to i8*
  %v3_27a28 = load i8, i8* %v2_27a28, align 1
  %v10_27a28 = icmp eq i8 %v3_27a28, 0
  br i1 %v10_27a28, label %bb, label %dec_label_pc_27a32

bb:                                               ; preds = %dec_label_pc_27a28
  %v1_27a2c = call i32 @function_27b79()
  store i32 %v1_27a2c, i32* @eax, align 4
  %v0_27a32.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_27a32

dec_label_pc_27a32:                               ; preds = %bb, %dec_label_pc_27a28
  %v0_27a32 = phi i32 [ %v0_27a32.pre, %bb ], [ %storemerge, %dec_label_pc_27a28 ]
  %v1_27a32 = add i32 %v0_27a32, 20
  %v2_27a32 = inttoptr i32 %v1_27a32 to i8*
  %v3_27a32 = load i8, i8* %v2_27a32, align 1
  %v10_27a32 = icmp eq i8 %v3_27a32, 0
  br i1 %v10_27a32, label %bb31, label %dec_label_pc_27a3c

bb31:                                             ; preds = %dec_label_pc_27a32
  %v1_27a36 = call i32 @function_27b79()
  %v0_27a3f.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_27a3c

dec_label_pc_27a3c:                               ; preds = %bb31, %dec_label_pc_27a32
  %v0_27a3f = phi i32 [ %v0_27a3f.pre, %bb31 ], [ %v0_27a32, %dec_label_pc_27a32 ]
  %v0_27a3c = load i32, i32* @edi, align 4
  %v1_27a3c = add i32 %v0_27a3c, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_27a3c = inttoptr i32 %v1_27a3c to i32*
  %v3_27a3c = load i32, i32* %v2_27a3c, align 4
  %v1_27a3f = add i32 %v0_27a3f, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_27a3f = inttoptr i32 %v1_27a3f to i32*
  %v3_27a3f = load i32, i32* %v2_27a3f, align 4
  %v5_27a3f = sub i32 %v3_27a3f, %v3_27a3c
  %v11_27a3f = xor i32 %v3_27a3f, %v3_27a3c
  %v12_27a3f = xor i32 %v5_27a3f, %v3_27a3f
  %v13_27a3f = and i32 %v12_27a3f, %v11_27a3f
  %v14_27a3f = icmp slt i32 %v13_27a3f, 0
  %v16_27a3f = icmp slt i32 %v5_27a3f, 0
  %v2_27a42 = icmp ne i1 %v16_27a3f, %v14_27a3f
  %v3_27a42 = zext i1 %v2_27a42 to i32
  %v5_27a42 = and i32 %v3_27a3c, -256
  %v6_27a42 = or i32 %v3_27a42, %v5_27a42
  br label %dec_label_pc_27a05

dec_label_pc_27a48:                               ; preds = %dec_label_pc_27a0c
  %v0_27a48 = load i32, i32* @ecx, align 4
  %v15_27a48 = icmp eq i32 %v0_27a48, %tmp27
  br i1 %v15_27a48, label %dec_label_pc_27a62, label %dec_label_pc_27a4e

dec_label_pc_27a4e:                               ; preds = %dec_label_pc_27a48
  %v0_27a4e = load i32, i32* @edx, align 4
  %v2_27a4e = add i32 %v0_27a48, 16
  %v3_27a4e = inttoptr i32 %v2_27a4e to i32*
  %v4_27a4e = load i32, i32* %v3_27a4e, align 4
  %v5_27a4e = sub i32 %v0_27a4e, %v4_27a4e
  %v11_27a4e = xor i32 %v4_27a4e, %v0_27a4e
  %v12_27a4e = xor i32 %v5_27a4e, %v0_27a4e
  %v13_27a4e = and i32 %v12_27a4e, %v11_27a4e
  %v14_27a4e = icmp slt i32 %v13_27a4e, 0
  %v15_27a4e = icmp eq i32 %v5_27a4e, 0
  %v16_27a4e = icmp slt i32 %v5_27a4e, 0
  br i1 %v15_27a4e, label %bb32, label %dec_label_pc_27a57

bb32:                                             ; preds = %dec_label_pc_27a4e
  %v1_27a51 = call i32 @function_27b23()
  %v0_27a57.pre = load i1, i1* @sf, align 1
  %v1_27a57.pre = load i1, i1* @of, align 1
  br label %dec_label_pc_27a57

dec_label_pc_27a57:                               ; preds = %bb32, %dec_label_pc_27a4e
  %v4_27a57 = phi i32 [ %v1_27a51, %bb32 ], [ %v4_27a5711, %dec_label_pc_27a4e ]
  %v1_27a57 = phi i1 [ %v1_27a57.pre, %bb32 ], [ %v14_27a4e, %dec_label_pc_27a4e ]
  %v0_27a57 = phi i1 [ %v0_27a57.pre, %bb32 ], [ %v16_27a4e, %dec_label_pc_27a4e ]
  %v2_27a57 = icmp ne i1 %v0_27a57, %v1_27a57
  %v3_27a57 = zext i1 %v2_27a57 to i32
  %v5_27a57 = and i32 %v4_27a57, -256
  %v6_27a57 = or i32 %v3_27a57, %v5_27a57
  store i32 %v6_27a57, i32* @eax, align 4
  %v5_27a5a = icmp eq i1 %v2_27a57, false
  br i1 %v5_27a5a, label %dec_label_pc_27a57.dec_label_pc_27ab5_crit_edge, label %dec_label_pc_27a62

dec_label_pc_27a57.dec_label_pc_27ab5_crit_edge:  ; preds = %dec_label_pc_27a57
  %v0_27ab5.pre = load i32, i32* @esp, align 4
  %v1_27ab9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_27ab5

dec_label_pc_27a62:                               ; preds = %dec_label_pc_27a57, %dec_label_pc_27a48
  %v0_27a66 = load i32, i32* @edx, align 4
  store i32 %v0_27a66, i32* %stack_var_78, align 4
  %v1_27a6f = add i32 %tmp25, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_27a6f = inttoptr i32 %v1_27a6f to i8*
  %v3_27a6f = load i8, i8* %v2_27a6f, align 1
  %v10_27a6f = icmp eq i8 %v3_27a6f, 0
  br i1 %v10_27a6f, label %dec_label_pc_27a81, label %dec_label_pc_27a75

dec_label_pc_27a75:                               ; preds = %dec_label_pc_27a62
  br label %dec_label_pc_27a81

dec_label_pc_27a81:                               ; preds = %dec_label_pc_27a75, %dec_label_pc_27a62
  %v2_27a85 = ptrtoint i32* %stack_var_78 to i32
  store i32 %v2_27a85, i32* %esi.global-to-local, align 4
  %v0_27a8d = load i32, i32* @ecx, align 4
  %v1_27a99 = add i32 %tmp21, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_27aa0 = ptrtoint i32* %stack_var_62 to i32
  %v5_27aa7 = call i32 @unknown_4e970(i32 %v2_27aa0, i32 %v1_27a99, i32 %v0_27a8d, i32 %v2_27a85)
  store i32 %v5_27aa7, i32* @eax, align 4
  %v2_27aac = load i32, i32* @ebx, align 4
  store i32 %v2_27aac, i32* @esi, align 4
  %v16_27aae = ptrtoint i32* %stack_var_-2 to i32
  br label %dec_label_pc_27ab5

dec_label_pc_27ab5:                               ; preds = %dec_label_pc_27a57.dec_label_pc_27ab5_crit_edge, %dec_label_pc_27a81
  %v1_27ab9 = phi i32 [ %v1_27ab9.pre, %dec_label_pc_27a57.dec_label_pc_27ab5_crit_edge ], [ %tmp26, %dec_label_pc_27a81 ]
  %v0_27ab5 = phi i32 [ %v0_27ab5.pre, %dec_label_pc_27a57.dec_label_pc_27ab5_crit_edge ], [ %v16_27aae, %dec_label_pc_27a81 ]
  %v1_27ab5 = add i32 %v0_27ab5, ptrtoint (i32* @global_var_38.3456 to i32)
  %v2_27ab5 = inttoptr i32 %v1_27ab5 to i32*
  %v3_27ab5 = load i32, i32* %v2_27ab5, align 4
  store i32 %v3_27ab5, i32* @edx, align 4
  %v2_27ab9 = add i32 %v1_27ab9, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_27ab9 = inttoptr i32 %v2_27ab9 to i32*
  store i32 %v3_27ab5, i32* %v3_27ab9, align 4
  %v0_27abc = call i32 @function_278bd()
  ret i32 %v0_27abc

; uselistorder directives
  uselistorder i32 %v5_27a4e, { 1, 2, 0 }
  uselistorder i32 %v0_27a48, { 1, 0 }
  uselistorder i32 %v5_27a3f, { 1, 0 }
  uselistorder i32 %v3_27a3c, { 1, 0, 2 }
  uselistorder i32 %v0_27a3f, { 1, 0 }
  uselistorder i32 %v0_27a1c, { 1, 0 }
  uselistorder i32 %v3_27a10, { 2, 0, 3, 1 }
  uselistorder i32 %storemerge, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_27a1c.pre, { 1, 0 }
  uselistorder i32 %v2_27a00, { 1, 0 }
  uselistorder i32 %v4_27a02, { 2, 0, 1, 3 }
  uselistorder i32 %v2_279f0, { 1, 0 }
  uselistorder label %dec_label_pc_27ab5, { 1, 0 }
  uselistorder label %dec_label_pc_27a1c, { 1, 0 }
}

define i32 @function_27ac0(i32 %arg1) local_unnamed_addr {
dec_label_pc_27ac0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27ac1() local_unnamed_addr {
dec_label_pc_27ac1:
  %v0_27ac1 = load i32, i32* @edx, align 4
  %v1_27ac1 = load i32, i32* @eax, align 4
  %v2_27ac1 = sub i32 %v0_27ac1, %v1_27ac1
  %v8_27ac1 = xor i32 %v1_27ac1, %v0_27ac1
  %v9_27ac1 = xor i32 %v2_27ac1, %v0_27ac1
  %v10_27ac1 = and i32 %v9_27ac1, %v8_27ac1
  %v11_27ac1 = icmp slt i32 %v10_27ac1, 0
  %v13_27ac1 = icmp slt i32 %v2_27ac1, 0
  %v2_27ac9 = icmp ne i1 %v13_27ac1, %v11_27ac1
  %v3_27ac9 = zext i1 %v2_27ac9 to i32
  %v5_27ac9 = and i32 %v1_27ac1, -256
  %v6_27ac9 = or i32 %v3_27ac9, %v5_27ac9
  ret i32 %v6_27ac9

; uselistorder directives
  uselistorder i32 %v2_27ac1, { 1, 0 }
  uselistorder i32 %v1_27ac1, { 1, 0, 2 }
}

define i32 @function_27b05() local_unnamed_addr {
dec_label_pc_27b05:
  %eax.global-to-local = alloca i32, align 4
  %v0_27b05 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27b05
}

define i32 @function_27b10(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b10:
  %eax.global-to-local = alloca i32, align 4
  %v0_27b10 = load i32, i32* @eax, align 4
  %v1_27b10 = add i32 %v0_27b10, ptrtoint (i8** @global_var_1.3274 to i32)
  %v2_27b11 = add i32 %v0_27b10, add (i32 ptrtoint (i8** @global_var_1.3274 to i32), i32 zext (i8 ptrtoint (i8* @global_var_85.3361 to i8) to i32))
  %v16_27b11 = and i32 %v2_27b11, 255
  %v18_27b11 = and i32 %v1_27b10, -256
  %v19_27b11 = or i32 %v16_27b11, %v18_27b11
  store i32 %v19_27b11, i32* %eax.global-to-local, align 4
  %v2_27b13 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_27b13 = lshr i8 %v2_27b13, ptrtoint (i32* @global_var_5.3604 to i8)
  %v4_27b13 = mul i8 %v2_27b13, 8
  %v5_27b13 = or i8 %v3_27b13, %v4_27b13
  %v6_27b13 = load i32, i32* @edi, align 4
  %v7_27b13 = inttoptr i32 %v6_27b13 to i8*
  store i8 %v5_27b13, i8* %v7_27b13, align 1
  %v0_27b17 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27b17

; uselistorder directives
  uselistorder i8 8, { 0, 2, 1 }
}

define i32 @function_27b1a() local_unnamed_addr {
dec_label_pc_27b1a:
  %v0_27b1a = load i32, i32* @edi, align 4
  %v1_27b1a = add i32 %v0_27b1a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_27b1a = inttoptr i32 %v1_27b1a to i8*
  store i8 0, i8* %v2_27b1a, align 1
  %v0_27b1e = call i32 @function_27709()
  ret i32 %v0_27b1e
}

define i32 @function_27b23() local_unnamed_addr {
dec_label_pc_27b23:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_27b2c = load i32, i32* @ecx, align 4
  %v1_27b2c = add i32 %v0_27b2c, 20
  %v2_27b2c = inttoptr i32 %v1_27b2c to i8*
  %v3_27b2c = load i8, i8* %v2_27b2c, align 1
  %v10_27b2c = icmp eq i8 %v3_27b2c, 0
  br i1 %v10_27b2c, label %bb, label %dec_label_pc_27b32

bb:                                               ; preds = %dec_label_pc_27b23
  %v1_27b30 = call i32 @function_27b79()
  store i32 %v1_27b30, i32* @eax, align 4
  br label %dec_label_pc_27b32

dec_label_pc_27b32:                               ; preds = %bb, %dec_label_pc_27b23
  %v1_27b36 = add i32 %tmp, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_27b36 = inttoptr i32 %v1_27b36 to i8*
  %v3_27b36 = load i8, i8* %v2_27b36, align 1
  %v10_27b36 = icmp eq i8 %v3_27b36, 0
  br i1 %v10_27b36, label %bb3, label %dec_label_pc_27b3c

bb3:                                              ; preds = %dec_label_pc_27b32
  %v1_27b3a = call i32 @function_27b79()
  br label %dec_label_pc_27b3c

dec_label_pc_27b3c:                               ; preds = %bb3, %dec_label_pc_27b32
  %v0_27b40 = load i32, i32* @ecx, align 4
  %v1_27b40 = add i32 %v0_27b40, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_27b40 = inttoptr i32 %v1_27b40 to i32*
  %v3_27b40 = load i32, i32* %v2_27b40, align 4
  %v1_27b43 = add i32 %tmp, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_27b43 = inttoptr i32 %v1_27b43 to i32*
  %v3_27b43 = load i32, i32* %v2_27b43, align 4
  %v5_27b43 = sub i32 %v3_27b43, %v3_27b40
  %v11_27b43 = xor i32 %v3_27b43, %v3_27b40
  %v12_27b43 = xor i32 %v5_27b43, %v3_27b43
  %v13_27b43 = and i32 %v12_27b43, %v11_27b43
  %v14_27b43 = icmp slt i32 %v13_27b43, 0
  store i1 %v14_27b43, i1* @of, align 1
  %v16_27b43 = icmp slt i32 %v5_27b43, 0
  store i1 %v16_27b43, i1* @sf, align 1
  %v2_27b46 = icmp ne i1 %v16_27b43, %v14_27b43
  %v3_27b46 = zext i1 %v2_27b46 to i32
  %v5_27b46 = and i32 %tmp, -256
  %v6_27b46 = or i32 %v3_27b46, %v5_27b46
  ret i32 %v6_27b46

; uselistorder directives
  uselistorder i32 %v5_27b43, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 ()* @function_27b79, { 3, 2, 1, 0, 11, 10, 9, 8, 7, 6, 5, 4 }
}

define i32 @function_27b6b() local_unnamed_addr {
dec_label_pc_27b6b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_27b6b = load i32, i32* %ebx.global-to-local, align 4
  %v1_27b6b = add i32 %v0_27b6b, -2095831948
  %v2_27b6b = inttoptr i32 %v1_27b6b to i32*
  %v3_27b6b = load i32, i32* %v2_27b6b, align 4
  %v4_27b6b = sub i32 %v3_27b6b, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_27b6b, i32* %v2_27b6b, align 4
  %v0_27b71 = load i32, i32* %edx.global-to-local, align 4
  %v1_27b71 = trunc i32 %v0_27b71 to i16
  %v4_27b71 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_27b71, i8 %v4_27b71)
  %v0_27b72 = load i32, i32* %eax.global-to-local, align 4
  %v1_27b72 = trunc i32 %v0_27b72 to i8
  %v2_27b72 = load i1, i1* %cf.global-to-local, align 1
  %v3_27b72 = zext i1 %v2_27b72 to i32
  %v4_27b72 = sub i32 %v0_27b72, zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32)
  %v5_27b72 = add i32 %v4_27b72, %v3_27b72
  %v17_27b72 = icmp eq i8 %v1_27b72, 0
  %v18_27b72 = or i1 %v2_27b72, %v17_27b72
  store i1 %v18_27b72, i1* %cf.global-to-local, align 1
  %v31_27b72 = and i32 %v5_27b72, 255
  %v33_27b72 = and i32 %v0_27b72, -256
  %v34_27b72 = or i32 %v31_27b72, %v33_27b72
  store i32 %v34_27b72, i32* %eax.global-to-local, align 4
  ret i32 %v34_27b72

; uselistorder directives
  uselistorder i1 %v2_27b72, { 1, 0 }
  uselistorder i32 %v0_27b72, { 1, 0, 2 }
}

define i32 @function_27b79() local_unnamed_addr {
dec_label_pc_27b79:
  %v3_27b91 = load i32, i32* @eax, align 4
  ret i32 %v3_27b91
}

define i32 @function_27b9d(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b9d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27ba0(i32 %arg1) local_unnamed_addr {
dec_label_pc_27ba0:
  %v2_27ba0 = load i32, i32* @eax, align 4
  %v4_27ba0 = mul i32 %v2_27ba0, 2
  %v21_27ba0 = inttoptr i32 %v2_27ba0 to i32*
  store i32 %v4_27ba0, i32* %v21_27ba0, align 4
  %v0_27ba2 = call i32 @function_38aee()
  ret i32 %v0_27ba2

; uselistorder directives
  uselistorder i32 %v2_27ba0, { 1, 0 }
}

define i32 @function_27ba7() local_unnamed_addr {
dec_label_pc_27ba7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27bac(i32 %arg1) local_unnamed_addr {
dec_label_pc_27bac:
  %v3_27bc4 = load i32, i32* @eax, align 4
  ret i32 %v3_27bc4
}

define i32 @function_27bd0() local_unnamed_addr {
dec_label_pc_27bd0:
  %v3_27be8 = load i32, i32* @eax, align 4
  ret i32 %v3_27be8
}

define i32 @function_27bf5() local_unnamed_addr {
dec_label_pc_27bf5:
  %eax.global-to-local = alloca i32, align 4
  %v0_27bf5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27bf5
}

define i32 @function_27c06(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c06:
  %v3_27c1e = load i32, i32* @eax, align 4
  ret i32 %v3_27c1e
}

define i32 @function_27c30(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IbS4_S4_jSB_EESH_EEEEEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c80:
  %eax.global-to-local = alloca i32, align 4
  %v4_27c87 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_27c87
}

define i32 @function_27c90(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c90:
  %v0_27c90 = load i32, i32* @ecx, align 4
  %v1_27c90 = add i32 %v0_27c90, 826025028
  %v2_27c90 = inttoptr i32 %v1_27c90 to i8*
  %v3_27c90 = load i8, i8* %v2_27c90, align 1
  %v5_27c90 = trunc i32 %v0_27c90 to i8
  %v6_27c90 = add i8 %v3_27c90, %v5_27c90
  store i8 %v6_27c90, i8* %v2_27c90, align 1
  %v7_27c96 = load i32, i32* @ecx, align 4
  %v8_27c96 = add i32 %v7_27c96, -1991236492
  %v9_27c96 = inttoptr i32 %v8_27c96 to i8*
  store i8 -1, i8* %v9_27c96, align 1
  %v0_27ca3 = load i32, i32* @ebx, align 4
  %v1_27ca3 = add i32 %v0_27ca3, 12
  ret i32 %v1_27ca3
}

define i32 @function_27cc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_27cc0:
  %v2_27cc0 = load i32, i32* @esi, align 4
  store i32 %v2_27cc0, i32* @eax, align 4
  %v1_27cc2 = icmp eq i32 %v2_27cc0, 0
  br i1 %v1_27cc2, label %bb, label %dec_label_pc_27cca

bb:                                               ; preds = %dec_label_pc_27cc0
  %v1_27cc4 = call i32 @function_27e19()
  br label %dec_label_pc_27cca

dec_label_pc_27cca:                               ; preds = %bb, %dec_label_pc_27cc0
  %v1_27cca = phi i32 [ %v1_27cc4, %bb ], [ %v2_27cc0, %dec_label_pc_27cc0 ]
  %v0_27cca = load i32, i32* @edi, align 4
  %v12_27cca = icmp eq i32 %v0_27cca, %v1_27cca
  br i1 %v12_27cca, label %bb3, label %dec_label_pc_27cce

bb3:                                              ; preds = %dec_label_pc_27cca
  %v1_27ccc = call i32 @function_27d00()
  br label %dec_label_pc_27cce

dec_label_pc_27cce:                               ; preds = %bb3, %dec_label_pc_27cca
  ret i32 %arg1
}

define i32 @function_27cd9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27cd9:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_27cd9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_27cd9 = add i32 %v0_27cd9, 1698440276
  %v2_27cd9 = inttoptr i32 %v1_27cd9 to i32*
  %v3_27cd9 = load i32, i32* %v2_27cd9, align 4
  %v4_27cd9 = add i32 %v3_27cd9, -1
  store i32 %v4_27cd9, i32* %v2_27cd9, align 4
  %v0_27cdf = load i32, i32* %edx.global-to-local, align 4
  %v1_27cdf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27cdf = xor i32 %v1_27cdf, %v0_27cdf
  %v3_27cdf = icmp eq i32 %v2_27cdf, 0
  store i32 %v2_27cdf, i32* %edx.global-to-local, align 4
  %v1_27ce5 = icmp eq i1 %v3_27cdf, false
  br i1 %v1_27ce5, label %bb, label %dec_label_pc_27cd9.dec_label_pc_27ceb_crit_edge

dec_label_pc_27cd9.dec_label_pc_27ceb_crit_edge:  ; preds = %dec_label_pc_27cd9
  %v0_27cfe.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27ceb

bb:                                               ; preds = %dec_label_pc_27cd9
  %v2_27ce5 = call i32 @function_27e25()
  br label %dec_label_pc_27ceb

dec_label_pc_27ceb:                               ; preds = %dec_label_pc_27cd9.dec_label_pc_27ceb_crit_edge, %bb
  %v0_27cfe = phi i32 [ %v0_27cfe.pre, %dec_label_pc_27cd9.dec_label_pc_27ceb_crit_edge ], [ %v2_27ce5, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_27cfe

; uselistorder directives
  uselistorder label %dec_label_pc_27ceb, { 1, 0 }
}

define i32 @function_27d00() local_unnamed_addr {
dec_label_pc_27d00:
  %v0_27d00 = load i32, i32* @ebx, align 4
  %v1_27d00 = add i32 %v0_27d00, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_27d00 = inttoptr i32 %v1_27d00 to i32*
  %v3_27d00 = load i32, i32* %v2_27d00, align 4
  %v1_27d03 = icmp eq i32 %v3_27d00, 0
  br i1 %v1_27d03, label %dec_label_pc_27d13, label %dec_label_pc_27d07

dec_label_pc_27d07:                               ; preds = %dec_label_pc_27d00
  %v1_27d07 = add i32 %v3_27d00, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_27d07 = inttoptr i32 %v1_27d07 to i32*
  %v3_27d07 = load i32, i32* %v2_27d07, align 4
  store i32 %v3_27d07, i32* @eax, align 4
  %v10_27d0a = icmp eq i32 %v3_27d07, 1
  br i1 %v10_27d0a, label %bb, label %dec_label_pc_27d13

bb:                                               ; preds = %dec_label_pc_27d07
  %v1_27d0d = call i32 @function_27dea()
  br label %dec_label_pc_27d13

dec_label_pc_27d13:                               ; preds = %bb, %dec_label_pc_27d07, %dec_label_pc_27d00
  %v2_27d13 = phi i32 [ %v1_27d0d, %bb ], [ %v3_27d07, %dec_label_pc_27d07 ], [ 0, %dec_label_pc_27d00 ]
  ret i32 %v2_27d13

; uselistorder directives
  uselistorder i32 %v3_27d07, { 1, 0, 2 }
}

define i32 @function_27d50(i32 %arg1) local_unnamed_addr {
dec_label_pc_27d50:
  %v2_27d50 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_27d50 = load i32, i32* @eax, align 4
  %v4_27d50 = trunc i32 %v3_27d50 to i8
  %v5_27d50 = add i8 %v4_27d50, %v2_27d50
  %v21_27d50 = inttoptr i32 %v3_27d50 to i8*
  store i8 %v5_27d50, i8* %v21_27d50, align 1
  %v22_27d50 = load i32, i32* @eax, align 4
  ret i32 %v22_27d50
}

define i32 @function_27de0(i32 %arg1) local_unnamed_addr {
dec_label_pc_27de0:
  %v2_27de0 = load i32, i32* @eax, align 4
  %v4_27de0 = mul i32 %v2_27de0, 2
  %v21_27de0 = inttoptr i32 %v2_27de0 to i32*
  store i32 %v4_27de0, i32* %v21_27de0, align 4
  %v2_27de2 = load i32, i32* @ebx, align 4
  ret i32 %v2_27de2

; uselistorder directives
  uselistorder i32 %v2_27de0, { 1, 0 }
}

define i32 @function_27dea() local_unnamed_addr {
dec_label_pc_27dea:
  %stack_var_56 = alloca i32, align 4
  %v0_27dea = load i32, i32* @edi, align 4
  %v1_27dea = icmp eq i32 %v0_27dea, 0
  br i1 %v1_27dea, label %bb, label %dec_label_pc_27dee

bb:                                               ; preds = %dec_label_pc_27dea
  %v1_27dec = call i32 @function_27e19()
  %v2_27dee.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_27dee

dec_label_pc_27dee:                               ; preds = %bb, %dec_label_pc_27dea
  %v2_27dee = phi i32 [ %v2_27dee.pre, %bb ], [ %v0_27dea, %dec_label_pc_27dea ]
  %v0_27e00 = load i32, i32* @ebx, align 4
  store i32 %v2_27dee, i32* %stack_var_56, align 4
  %v2_27e07 = ptrtoint i32* %stack_var_56 to i32
  %v4_27e0f = call i32 @unknown_4f230(i32 %v0_27e00, i32 0, i32 %v2_27e07, i32 0)
  ret i32 %v4_27e0f

; uselistorder directives
  uselistorder i32 ()* @function_27e19, { 1, 0 }
}

define i32 @function_27e19() local_unnamed_addr {
dec_label_pc_27e19:
  %v0_27e19 = call i32 @function_391be()
  %v0_27e20 = call i32 @unknown_39086()
  ret i32 %v0_27e20
}

define i32 @function_27e25() local_unnamed_addr {
dec_label_pc_27e25:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27e64() local_unnamed_addr {
dec_label_pc_27e64:
  %eax.global-to-local = alloca i32, align 4
  %v0_27e64 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27e64
}

define i32 @function_27e70(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27e71() local_unnamed_addr {
dec_label_pc_27e71:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27e79() local_unnamed_addr {
dec_label_pc_27e79:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27e8c() local_unnamed_addr {
dec_label_pc_27e8c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27e8c = load i32, i32* %ecx.global-to-local, align 4
  %v1_27e8c = add i32 %v0_27e8c, -1981223997
  %v2_27e8c = inttoptr i32 %v1_27e8c to i32*
  %v3_27e8c = load i32, i32* %v2_27e8c, align 4
  %v4_27e8c = sub i32 %v3_27e8c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_27e8c, i32* %v2_27e8c, align 4
  %v0_27e92 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27e92
}

define i32 @function_27e93() local_unnamed_addr {
dec_label_pc_27e93:
  %v0_27e93 = call i32 @function_27e71()
  ret i32 %v0_27e93
}

define i32 @function_27ea0(i32 %arg1) local_unnamed_addr {
dec_label_pc_27ea0:
  %v0_27ea4 = call i32 @unknown_49690()
  ret i32 %v0_27ea4
}

define i32 @function_27eaf() local_unnamed_addr {
dec_label_pc_27eaf:
  %eax.global-to-local = alloca i32, align 4
  %v0_27eaf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27eaf
}

define i32 @function_27eb5() local_unnamed_addr {
dec_label_pc_27eb5:
  %v0_27eb5 = call i32 @function_27e79()
  ret i32 %v0_27eb5
}

define i32 @function_27eb8() local_unnamed_addr {
dec_label_pc_27eb8:
  %eax.global-to-local = alloca i32, align 4
  %v0_27eb8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27eb8
}

define i32 @function_27ebd() local_unnamed_addr {
dec_label_pc_27ebd:
  %eax.global-to-local = alloca i32, align 4
  %v0_27ebd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27ebd
}

define i32 @function_27ec0() local_unnamed_addr {
dec_label_pc_27ec0:
  %v0_27ec0 = call i32 @function_27e71()
  ret i32 %v0_27ec0

; uselistorder directives
  uselistorder i32 ()* @function_27e71, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal3_implIbRKSsS4_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS4_S4_jEEENS9_IFbRKNS0_10connectionES4_S4_jEEENS0_5mutexEEclES4_S4_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27ed0:
  ret i32 %arg1
}

define i32 @function_27f00(i32 %arg1) local_unnamed_addr {
dec_label_pc_27f00:
  %eax.global-to-local = alloca i32, align 4
  %v0_27f01 = load i32, i32* @eax, align 4
  %v1_27f01 = trunc i32 %v0_27f01 to i8
  %v2_27f01 = and i8 %v1_27f01, 120
  %v8_27f01 = zext i8 %v2_27f01 to i32
  %v10_27f01 = and i32 %v0_27f01, -256
  %v11_27f01 = or i32 %v8_27f01, %v10_27f01
  store i32 %v11_27f01, i32* %eax.global-to-local, align 4
  %v1_27f03 = inttoptr i32 %v11_27f01 to i8*
  %v2_27f03 = load i8, i8* %v1_27f03, align 8
  %v5_27f03 = add i8 %v2_27f03, %v2_27f01
  store i8 %v5_27f03, i8* %v1_27f03, align 8
  %v0_27f05 = load i32, i32* %eax.global-to-local, align 4
  %v1_27f05 = inttoptr i32 %v0_27f05 to i8*
  %v2_27f05 = load i8, i8* %v1_27f05, align 1
  %v4_27f05 = trunc i32 %v0_27f05 to i8
  %v5_27f05 = add i8 %v2_27f05, %v4_27f05
  store i8 %v5_27f05, i8* %v1_27f05, align 1
  %v0_27f07 = load i32, i32* %eax.global-to-local, align 4
  %v1_27f22 = add i32 %v0_27f07, 12
  store i32 %v1_27f22, i32* %eax.global-to-local, align 4
  ret i32 %v1_27f22
}

define i32 @function_27f10() local_unnamed_addr {
dec_label_pc_27f10:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27f40(i32* %arg1) local_unnamed_addr {
dec_label_pc_27f40:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_132 = alloca i32, align 4
  %v0_27f40 = load i32, i32* @eax, align 4
  %v4_27f40 = mul i32 %v0_27f40, 2
  store i32 %v4_27f40, i32* %eax.global-to-local, align 4
  %v0_27f42 = load i32, i32* @ebx, align 4
  %v1_27f42 = add i32 %v0_27f42, -92076976
  %v2_27f42 = inttoptr i32 %v1_27f42 to i8*
  %v3_27f42 = load i8, i8* %v2_27f42, align 1
  %v4_27f42 = load i32, i32* @ecx, align 4
  %v5_27f42 = trunc i32 %v4_27f42 to i8
  %v6_27f42 = add i8 %v5_27f42, %v3_27f42
  store i8 %v6_27f42, i8* %v2_27f42, align 1
  %v2_27f48 = load i32, i32* @edi, align 4
  %v3_27f48 = load i32, i32* @ecx, align 4
  %v4_27f48 = add i32 %v3_27f48, %v2_27f48
  %v21_27f48 = inttoptr i32 %v2_27f48 to i32*
  store i32 %v4_27f48, i32* %v21_27f48, align 4
  %v0_27f4d = load i32, i32* %eax.global-to-local, align 4
  %v1_27f4d = inttoptr i32 %v0_27f4d to i8*
  %v2_27f4d = load i8, i8* %v1_27f4d, align 1
  %v4_27f4d = trunc i32 %v0_27f4d to i8
  %v5_27f4d = add i8 %v2_27f4d, %v4_27f4d
  store i8 %v5_27f4d, i8* %v1_27f4d, align 1
  %v0_27f53 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_27f53, i32* %stack_var_132, align 4
  %v1_27f63 = add i32 %v0_27f53, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_27f63 = inttoptr i32 %v1_27f63 to i32*
  %v3_27f63 = load i32, i32* %v2_27f63, align 4
  %v4_27f63 = add i32 %v3_27f63, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_27f63, i32* %v2_27f63, align 4
  %v2_27f85 = ptrtoint i32* %stack_var_132 to i32
  store i32 %v2_27f85, i32* @eax, align 4
  %v1_27f9d = call i32 @function_3b930(i32 %v2_27f85)
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v2_27f48, { 1, 0 }
}

define i32 @function_27fb0(i32* %arg1) local_unnamed_addr {
dec_label_pc_27fb0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_104 = alloca i32, align 4
  %stack_var_72 = alloca i32, align 4
  %stack_var_88 = alloca i32, align 4
  %stack_var_160 = alloca i8, align 1
  %tmp149 = ptrtoint i32* %arg1 to i32
  %v0_27fb0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27fb0 = add i32 %v0_27fb0, 10757252
  %v2_27fb0 = inttoptr i32 %v1_27fb0 to i32*
  %v3_27fb0 = load i32, i32* %v2_27fb0, align 4
  %v4_27fb0 = add i32 %v3_27fb0, -1
  store i32 %v4_27fb0, i32* %v2_27fb0, align 4
  %v2_27fb6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_27fb6 = load i32, i32* %eax.global-to-local, align 4
  %v4_27fb6 = trunc i32 %v3_27fb6 to i8
  %v5_27fb6 = add i8 %v4_27fb6, %v2_27fb6
  %v21_27fb6 = inttoptr i32 %v3_27fb6 to i8*
  store i8 %v5_27fb6, i8* %v21_27fb6, align 1
  %v0_27fb8 = load i32, i32* %eax.global-to-local, align 4
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  store i8 0, i8* %stack_var_160, align 1
  %v1_27ff0 = icmp eq i32* %arg1, null
  br i1 %v1_27ff0, label %bb, label %dec_label_pc_2801c

bb:                                               ; preds = %dec_label_pc_27fb0
  %v2_28016 = call i32 @function_2851b(i32 %v0_27fb8)
  store i32 %v2_28016, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2801c

dec_label_pc_2801c:                               ; preds = %bb, %dec_label_pc_27fb0
  %v0_2801c = phi i32 [ %v2_28016, %bb ], [ %tmp149, %dec_label_pc_27fb0 ]
  %v1_2801c = inttoptr i32 %v0_2801c to i32*
  %v2_2801c = load i32, i32* %v1_2801c, align 4
  store i32 %v2_2801c, i32* %eax.global-to-local, align 4
  %v1_2801e = icmp eq i32 %v2_2801c, 0
  br i1 %v1_2801e, label %bb154, label %dec_label_pc_2802a

bb154:                                            ; preds = %dec_label_pc_2801c
  %v2_28024 = call i32 @function_28516(i32 0)
  store i32 %v2_28024, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2802a

dec_label_pc_2802a:                               ; preds = %bb154, %dec_label_pc_2801c
  store i32 %v2_2801c, i32* %edx.global-to-local, align 4
  %v2_2802e = ptrtoint i8* %stack_var_160 to i32
  store i32 %v2_2802e, i32* %ecx.global-to-local, align 4
  %v2_28035 = ptrtoint i32* %stack_var_88 to i32
  store i32 %v2_28035, i32* %eax.global-to-local, align 4
  store i32 %v2_2801c, i32* %stack_var_88, align 4
  %v1_2804c = call i32 @unknown_46a40(i32 %v2_28035)
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  br i1 %v1_27ff0, label %bb155, label %dec_label_pc_2805d

bb155:                                            ; preds = %dec_label_pc_2802a
  %v2_28057 = call i32 @function_2851b(i32 %v2_2801c)
  store i32 %v2_28057, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2805d

dec_label_pc_2805d:                               ; preds = %bb155, %dec_label_pc_2802a
  %v0_2805d = phi i32 [ %v2_28057, %bb155 ], [ %tmp149, %dec_label_pc_2802a ]
  %v1_2805d = inttoptr i32 %v0_2805d to i32*
  %v2_2805d = load i32, i32* %v1_2805d, align 4
  store i32 %v2_2805d, i32* %eax.global-to-local, align 4
  %v1_2805f = icmp eq i32 %v2_2805d, 0
  br i1 %v1_2805f, label %bb156, label %dec_label_pc_28067

bb156:                                            ; preds = %dec_label_pc_2805d
  %v2_28061 = call i32 @function_28516(i32 %v2_2801c)
  store i32 %v2_28061, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28067

dec_label_pc_28067:                               ; preds = %bb156, %dec_label_pc_2805d
  %v0_280c5 = phi i32 [ %v2_28061, %bb156 ], [ %v2_2805d, %dec_label_pc_2805d ]
  %v1_28067 = inttoptr i32 %v0_280c5 to i32*
  %v2_28067 = load i32, i32* %v1_28067, align 4
  %v2_28071 = ptrtoint i32* %stack_var_72 to i32
  store i32 %v2_28071, i32* %eax.global-to-local, align 4
  store i32 %v2_28067, i32* %stack_var_72, align 4
  store i32 %v2_2802e, i32* %edx.global-to-local, align 4
  %v1_28087 = call i32 @unknown_46a40(i32 %v2_28071)
  store i32 %tmp149, i32* %eax.global-to-local, align 4
  br i1 %v1_27ff0, label %bb157, label %dec_label_pc_28098

bb157:                                            ; preds = %dec_label_pc_28067
  %v2_28092 = call i32 @function_2851b(i32 %v2_2802e)
  store i32 %v2_28092, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28098

dec_label_pc_28098:                               ; preds = %bb157, %dec_label_pc_28067
  %v0_28098 = phi i32 [ %v2_28092, %bb157 ], [ %tmp149, %dec_label_pc_28067 ]
  %v1_28098 = add i32 %v0_28098, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_28098 = inttoptr i32 %v1_28098 to i32*
  %v3_28098 = load i32, i32* %v2_28098, align 4
  store i32 %v3_28098, i32* @eax, align 4
  %v1_2809b = icmp eq i32 %v3_28098, 0
  br i1 %v1_2809b, label %bb158, label %dec_label_pc_280a3

bb158:                                            ; preds = %dec_label_pc_28098
  %v1_2809d = call i32 @function_284ed()
  store i32 %v1_2809d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_280a3

dec_label_pc_280a3:                               ; preds = %bb158, %dec_label_pc_28098
  %v3_280a7 = load i32, i32* %stack_var_72, align 4
  store i32 %v3_280a7, i32* %eax.global-to-local, align 4
  %v3_280ab = load i32, i32* %stack_var_88, align 4
  store i32 %v3_280ab, i32* %ebp.global-to-local, align 4
  store i32 %v2_2802e, i32* %edx.global-to-local, align 4
  store i32 %v0_280c5, i32* %ecx.global-to-local, align 4
  store i32 %v3_280a7, i32* %stack_var_104, align 4
  %v12_280bf = icmp eq i32 %v3_280a7, %v3_280ab
  br i1 %v12_280bf, label %bb159, label %dec_label_pc_280cf

bb159:                                            ; preds = %dec_label_pc_280a3
  %v6_280c9 = call i32 @function_2852f(i32 %v3_280a7, i32 %v0_280c5, i32 %v2_2802e, i32 %v0_280c5)
  store i32 %v6_280c9, i32* %eax.global-to-local, align 4
  %v0_28102.pre.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_280cf

dec_label_pc_280cf:                               ; preds = %bb159, %dec_label_pc_280a3
  %v0_28102.pre = phi i32 [ %v0_28102.pre.pre, %bb159 ], [ %v2_2802e, %dec_label_pc_280a3 ]
  %v0_2811e9 = phi i32 [ %v6_280c9, %bb159 ], [ %v3_280a7, %dec_label_pc_280a3 ]
  store i32 0, i32* @ebx, align 4
  %v2_280d1 = ptrtoint i32* %stack_var_104 to i32
  %v3_28188 = add i32 %v2_2802e, ptrtoint (i8** @global_var_1.3274 to i32)
  %v4_28188 = inttoptr i32 %v3_28188 to i8*
  br label %dec_label_pc_28102

dec_label_pc_280dc:                               ; preds = %dec_label_pc_28109, %dec_label_pc_2810d
  %v1_280dc = inttoptr i32 %v0_280dc to i32*
  %v2_280dc = load i32, i32* %v1_280dc, align 4
  store i32 %v2_280dc, i32* %eax.global-to-local, align 4
  store i32 %v2_280dc, i32* %stack_var_104, align 4
  %v1_280e5 = call i32 @unknown_46a40(i32 %v2_280d1)
  store i32 %v1_280e5, i32* %eax.global-to-local, align 4
  store i32 %v2_2802e, i32* %edx.global-to-local, align 4
  %v2_280ee = load i8, i8* %stack_var_160, align 1
  %v9_280ee = icmp eq i8 %v2_280ee, 0
  br i1 %v9_280ee, label %dec_label_pc_280f6, label %dec_label_pc_280f3

dec_label_pc_280f3:                               ; preds = %dec_label_pc_280dc
  store i8 0, i8* %stack_var_160, align 1
  br label %dec_label_pc_280f6

dec_label_pc_280f6:                               ; preds = %dec_label_pc_280f3, %dec_label_pc_280dc
  %v3_280f6 = load i32, i32* %stack_var_104, align 4
  store i32 %v3_280f6, i32* %eax.global-to-local, align 4
  %v0_280fa = load i32, i32* %ebp.global-to-local, align 4
  %v12_280fa = icmp eq i32 %v0_280fa, %v3_280f6
  br i1 %v12_280fa, label %dec_label_pc_28190, label %dec_label_pc_28102

dec_label_pc_28102:                               ; preds = %dec_label_pc_280f6, %dec_label_pc_280cf
  %v0_28102 = phi i32 [ %v2_2802e, %dec_label_pc_280f6 ], [ %v0_28102.pre, %dec_label_pc_280cf ]
  %v0_2811e = phi i32 [ %v3_280f6, %dec_label_pc_280f6 ], [ %v0_2811e9, %dec_label_pc_280cf ]
  %v1_28102 = inttoptr i32 %v0_28102 to i8*
  %v2_28102 = load i8, i8* %v1_28102, align 1
  %v9_28102 = icmp eq i8 %v2_28102, 0
  store i32 %v0_28102, i32* %ecx.global-to-local, align 4
  br i1 %v9_28102, label %dec_label_pc_28118, label %dec_label_pc_28109

dec_label_pc_28109:                               ; preds = %dec_label_pc_2817e, %dec_label_pc_28102
  %v0_280dc = phi i32 [ %v3_2817e, %dec_label_pc_2817e ], [ %v0_2811e, %dec_label_pc_28102 ]
  %v0_280d8 = phi i32 [ %v0_280d8.pre, %dec_label_pc_2817e ], [ %v0_28102, %dec_label_pc_28102 ]
  %v0_28109 = load i32, i32* @ebx, align 4
  %v4_28109 = trunc i32 %v0_28109 to i8
  %v5_28109 = icmp eq i8 %v4_28109, 0
  %v1_2810b = icmp eq i1 %v5_28109, false
  %v1_280d8 = add i32 %v0_280d8, ptrtoint (i8** @global_var_1.3274 to i32)
  %v2_280d8 = inttoptr i32 %v1_280d8 to i8*
  %v3_280d8 = load i8, i8* %v2_280d8, align 1
  %v4_280d8 = zext i8 %v3_280d8 to i32
  store i32 %v4_280d8, i32* @edi, align 4
  br i1 %v1_2810b, label %dec_label_pc_280dc, label %dec_label_pc_2810d

dec_label_pc_2810d:                               ; preds = %dec_label_pc_28109
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* @ebx, align 4
  br label %dec_label_pc_280dc

dec_label_pc_28118:                               ; preds = %dec_label_pc_28102
  %v1_28118 = add i32 %v0_28102, 144
  %v2_28118 = inttoptr i32 %v1_28118 to i32*
  %v3_28118 = load i32, i32* %v2_28118, align 4
  store i32 %v3_28118, i32* %ecx.global-to-local, align 4
  %v1_2811e = add i32 %v0_2811e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2811e = inttoptr i32 %v1_2811e to i32*
  %v3_2811e = load i32, i32* %v2_2811e, align 4
  store i32 %v3_2811e, i32* @eax, align 4
  %v1_28121 = inttoptr i32 %v3_28118 to i32*
  %v2_28121 = load i32, i32* %v1_28121, align 4
  store i32 %v2_28121, i32* %ecx.global-to-local, align 4
  %v1_28123 = icmp eq i32 %v3_2811e, 0
  %v1_28129 = add i32 %v0_28102, 140
  %v2_28129 = inttoptr i32 %v1_28129 to i32*
  %v3_28129 = load i32, i32* %v2_28129, align 4
  store i32 %v3_28129, i32* %ecx.global-to-local, align 4
  %v1_2812f = add i32 %v0_28102, ptrtoint (i32* @global_var_88.3507 to i32)
  %v2_2812f = inttoptr i32 %v1_2812f to i32*
  %v3_2812f = load i32, i32* %v2_2812f, align 4
  store i32 %v3_2812f, i32* %edx.global-to-local, align 4
  br i1 %v1_28123, label %bb160, label %dec_label_pc_28143

bb160:                                            ; preds = %dec_label_pc_28118
  %v2_2813d = call i32 @function_28418(i32 %v2_28121)
  store i32 %v2_2813d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28143

dec_label_pc_28143:                               ; preds = %bb160, %dec_label_pc_28118
  %v0_28143 = phi i32 [ %v2_2813d, %bb160 ], [ %v3_2811e, %dec_label_pc_28118 ]
  %v1_28143 = add i32 %v0_28143, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_28143 = inttoptr i32 %v1_28143 to i32*
  %v3_28143 = load i32, i32* %v2_28143, align 4
  store i32 %v3_28143, i32* %edx.global-to-local, align 4
  %v1_28146 = icmp eq i32 %v3_28143, 0
  br i1 %v1_28146, label %bb161, label %dec_label_pc_2814e

bb161:                                            ; preds = %dec_label_pc_28143
  %v1_28148 = call i32 @function_28386()
  store i32 %v1_28148, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2814e

dec_label_pc_2814e:                               ; preds = %bb161, %dec_label_pc_28143
  %v0_28152 = phi i32 [ %v1_28148, %bb161 ], [ %v0_28143, %dec_label_pc_28143 ]
  %v1_28152 = add i32 %v0_28152, ptrtoint (i32* @global_var_20.3279 to i32)
  %v11_28152 = trunc i32 %v1_28152 to i8
  store i32 %v1_28152, i32* %eax.global-to-local, align 4
  %v1_28155 = and i32 %v3_28143, -2
  store i32 %v1_28155, i32* %edx.global-to-local, align 4
  store i32 %v2_2802e, i32* %ecx.global-to-local, align 4
  %v2_28176 = load i8, i8* %stack_var_160, align 1
  %v9_28176 = icmp eq i8 %v2_28176, 0
  store i8 %v11_28152, i8* %v4_28188, align 1
  br i1 %v9_28176, label %dec_label_pc_28188, label %dec_label_pc_2817e

dec_label_pc_2817e:                               ; preds = %dec_label_pc_2814e, %dec_label_pc_28188
  %v3_2817e = load i32, i32* %stack_var_104, align 4
  store i32 %v3_2817e, i32* %eax.global-to-local, align 4
  %v0_280d8.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_28109

dec_label_pc_28188:                               ; preds = %dec_label_pc_2814e
  %v0_2818b = load i32, i32* %ecx.global-to-local, align 4
  %v1_2818b = inttoptr i32 %v0_2818b to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v1_2818b, align 1
  br label %dec_label_pc_2817e

dec_label_pc_28190:                               ; preds = %dec_label_pc_280f6
  %v0_28190 = load i32, i32* @ebx, align 4
  %v4_28190 = trunc i32 %v0_28190 to i8
  %v5_28190 = icmp eq i8 %v4_28190, 0
  br i1 %v5_28190, label %bb162, label %dec_label_pc_28198

bb162:                                            ; preds = %dec_label_pc_28190
  %v1_28192 = call i32 @function_28358()
  store i32 %v1_28192, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28198

dec_label_pc_28198:                               ; preds = %bb162, %dec_label_pc_28190
  store i32 %v0_27fb8, i32* @eax, align 4
  %v1_281c0 = icmp eq i32 %v0_27fb8, 0
  br i1 %v1_281c0, label %bb163, label %dec_label_pc_281c4

bb163:                                            ; preds = %dec_label_pc_28198
  %v1_281c2 = call i32 @function_281fe()
  store i32 %v1_281c2, i32* @eax, align 4
  br label %dec_label_pc_281c4

dec_label_pc_281c4:                               ; preds = %bb163, %dec_label_pc_28198
  %v0_281d4 = phi i32 [ %v1_281c2, %bb163 ], [ %v0_27fb8, %dec_label_pc_28198 ]
  store i32 10, i32* @edx, align 4
  %v15_281d4 = icmp eq i32 %v0_281d4, %v0_27fb8
  br i1 %v15_281d4, label %bb164, label %dec_label_pc_281ed

bb164:                                            ; preds = %dec_label_pc_281c4
  %v1_281d8 = call i32 @function_28345()
  store i32 %v1_281d8, i32* %eax.global-to-local, align 4
  %v0_281e5.pre = load i32, i32* @edx, align 4
  %phitmp = icmp ult i32 %v0_281e5.pre, 11
  br label %dec_label_pc_281ed

dec_label_pc_281ed:                               ; preds = %dec_label_pc_281c4, %bb164
  %v0_281f619 = phi i32 [ %v1_281d8, %bb164 ], [ %v0_281d4, %dec_label_pc_281c4 ]
  %v0_281e5 = phi i1 [ %phitmp, %bb164 ], [ true, %dec_label_pc_281c4 ]
  store i32 0, i32* %ecx.global-to-local, align 4
  br i1 %v0_281e5, label %bb166, label %dec_label_pc_281f6

bb166:                                            ; preds = %dec_label_pc_281ed
  %v3_281f4 = call i32 @function_281fe()
  store i32 %v3_281f4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_281f6

dec_label_pc_281f6:                               ; preds = %bb166, %dec_label_pc_281ed
  %v0_281f6 = phi i32 [ %v3_281f4, %bb166 ], [ %v0_281f619, %dec_label_pc_281ed ]
  ret i32 %v0_281f6

; uselistorder directives
  uselistorder i32 %v0_281d4, { 1, 0 }
  uselistorder i32 %v3_2817e, { 1, 0 }
  uselistorder i32 %v0_2811e, { 1, 0 }
  uselistorder i32 %v0_28102, { 3, 4, 2, 5, 1, 0 }
  uselistorder i32 %v3_280f6, { 1, 0, 2 }
  uselistorder i32 %v3_280a7, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_280c5, { 0, 3, 2, 1 }
  uselistorder i32 %v2_2802e, { 4, 1, 3, 2, 0, 5, 6, 7, 8, 9 }
  uselistorder i32 %v2_2801c, { 2, 1, 0, 3, 4, 5 }
  uselistorder i1 %v1_27ff0, { 1, 2, 0 }
  uselistorder i32 %v0_27fb8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %tmp149, { 0, 5, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_160, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 12, 13, 3, 4, 14, 15, 16, 5, 17, 6, 11, 18, 19, 8, 20, 10, 21, 22, 7, 23, 9, 24, 25, 26 }
  uselistorder i32 ()* @function_281fe, { 1, 0 }
  uselistorder i32 (i32)* @unknown_46a40, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_28516, { 1, 0 }
  uselistorder i32 (i32)* @function_2851b, { 2, 1, 0 }
  uselistorder label %dec_label_pc_281ed, { 1, 0 }
  uselistorder label %dec_label_pc_2817e, { 1, 0 }
  uselistorder label %dec_label_pc_280dc, { 1, 0 }
}

define i32 @function_281fe() local_unnamed_addr {
dec_label_pc_281fe:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_124 = alloca i32, align 4
  %v2_28210 = ptrtoint i32* %stack_var_124 to i32
  store i32 %v2_28210, i32* @eax, align 4
  %v1_28217 = call i32 @function_3b930(i32 %v2_28210)
  %v0_2821c = load i32, i32* @edi, align 4
  store i32 %v0_2821c, i32* @eax, align 4
  %v1_28225 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28225 = icmp eq i32 %v1_28225, %tmp10
  %v1_2822c = icmp eq i1 %v3_28225, false
  br i1 %v1_2822c, label %bb, label %dec_label_pc_28232

bb:                                               ; preds = %dec_label_pc_281fe
  %v2_2822c = call i32 @function_28525()
  br label %dec_label_pc_28232

dec_label_pc_28232:                               ; preds = %bb, %dec_label_pc_281fe
  %v0_2823c = phi i32 [ %v2_2822c, %bb ], [ %v0_2821c, %dec_label_pc_281fe ]
  ret i32 %v0_2823c
}

define i32 @function_28240() local_unnamed_addr {
dec_label_pc_28240:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v2_2824f = call i32 @unknown_4fb50(i32 %tmp2, i32 %tmp3)
  ret i32 %v2_2824f
}

define i32 @function_28259() local_unnamed_addr {
dec_label_pc_28259:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_28259 = load i32, i32* @ecx, align 4
  %v2_28259 = mul i32 %v0_28259, 2
  %v3_28259 = add i32 %v0_28259, -3
  %v4_28259 = add i32 %v3_28259, %v2_28259
  %v0_2825d = load i32, i32* @eax, align 4
  %v2_2825d = mul i32 %v4_28259, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_2825d = add i32 %v2_2825d, %v0_2825d
  store i32 %v3_2825d, i32* %ebx.global-to-local, align 4
  %tmp4 = mul i32 %v0_28259, -12
  %v2_28268 = add i32 %v3_2825d, %tmp4
  store i32 %v2_28268, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_28278

dec_label_pc_28278:                               ; preds = %dec_label_pc_28278, %dec_label_pc_28259
  %v0_28278 = phi i32 [ %v1_28280, %dec_label_pc_28278 ], [ %v3_2825d, %dec_label_pc_28259 ]
  %v1_2827b = call i32 @unknown_3e5c0(i32 %v0_28278)
  %v0_28280 = load i32, i32* %ebx.global-to-local, align 4
  %v1_28280 = add i32 %v0_28280, -12
  store i32 %v1_28280, i32* %ebx.global-to-local, align 4
  %v0_28283 = load i32, i32* %esi.global-to-local, align 4
  %v7_28283 = icmp ult i32 %v0_28283, %v1_28280
  br i1 %v7_28283, label %dec_label_pc_28278, label %dec_label_pc_28287

dec_label_pc_28287:                               ; preds = %dec_label_pc_28278
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_28280, { 1, 2, 0 }
  uselistorder i32 %v3_2825d, { 1, 0, 2 }
  uselistorder i32 %v0_28259, { 0, 2, 1 }
}

define i32 @function_282e4(i32* %arg1) local_unnamed_addr {
dec_label_pc_282e4:
  %stack_var_148 = alloca i32, align 4
  %tmp10 = ptrtoint i32* %arg1 to i32
  %v2_282e8 = ptrtoint i32* %stack_var_148 to i32
  %v5_28306 = call i32 @unknown_4f480(i32 %tmp10, i32 0, i32 %v2_282e8, i32 ptrtoint (i8** @global_var_1.3274 to i32))
  ret i32 0
}

define i32 @function_28338(i32* %arg1) local_unnamed_addr {
dec_label_pc_28338:
  ret i32 0
}

define i32 @function_28345() local_unnamed_addr {
dec_label_pc_28345:
  %v0_2834e = load i32, i32* @eax, align 4
  ret i32 %v0_2834e
}

define i32 @function_28350() local_unnamed_addr {
dec_label_pc_28350:
  %v0_28350 = call i32 @function_3974e()
  ret i32 %v0_28350
}

define i32 @function_28358() local_unnamed_addr {
dec_label_pc_28358:
  %stack_var_156 = alloca i32, align 4
  %v2_28358 = ptrtoint i32* %stack_var_156 to i32
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %stack_var_156, align 4
  %v1_2836d = call i32 @unknown_49150(i32 %v2_28358)
  %v1_28378 = inttoptr i32 %v1_2836d to i32*
  %v2_28378 = load i32, i32* %v1_28378, align 4
  %v1_28381 = inttoptr i32 %v2_28378 to i32*
  %v2_28381 = call i32 @function_282e4(i32* %v1_28381)
  ret i32 %v2_28381
}

define i32 @function_28386() local_unnamed_addr {
dec_label_pc_283cd:
  %stack_var_136 = alloca i32, align 4
  %v2_28386 = ptrtoint i32* %stack_var_136 to i32
  store i32 %v2_28386, i32* @eax, align 4
  %v1_28390 = call i32 @function_3c7d0(i32 %v2_28386)
  %v1_2839f = call i32 @unknown_3ee20(i32 %v2_28386)
  store i32 %v1_2839f, i32* @eax, align 4
  %v1_283b6 = call i32 @function_36380(i32 %v2_28386)
  store i32 %v1_2839f, i32* @ebx, align 4
  ret i32 %v1_2839f

; uselistorder directives
  uselistorder i32 %v1_2839f, { 1, 0, 2 }
}

define i32 @function_283e0() local_unnamed_addr {
dec_label_pc_283e0:
  %stack_var_125 = alloca i32, align 4
  %stack_var_161 = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v0_283e1 = load i32, i32* @eax, align 4
  %v11_283e1 = and i32 %v0_283e1, or (i32 zext (i8 ptrtoint (i32* @global_var_38.3456 to i8) to i32), i32 -256)
  %v2_283ee = call i32 @unknown_4fb50(i32 %tmp3, i32 %v11_283e1)
  %v2_283f3 = ptrtoint i32* %stack_var_161 to i32
  %v1_283fd = call i32 @unknown_3fd70(i32 %v2_283f3)
  %v2_28402 = ptrtoint i32* %stack_var_125 to i32
  store i32 %v2_28402, i32* @eax, align 4
  %v1_28409 = call i32 @function_3b930(i32 %v2_28402)
  ret i32 %v1_28409

; uselistorder directives
  uselistorder i32 (i32)* @function_3b930, { 1, 2, 0 }
}

define i32 @function_28415() local_unnamed_addr {
dec_label_pc_28415:
  %eax.global-to-local = alloca i32, align 4
  %v0_28415 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28415
}

define i32 @function_28418(i32 %arg1) local_unnamed_addr {
dec_label_pc_28418:
  %v0_28418 = call i32 @function_39372()
  store i32 %v0_28418, i32* @eax, align 4
  %v0_2841f = load i32, i32* @ebx, align 4
  store i32 %v0_28418, i32* @ebx, align 4
  %v1_28424 = call i32 @function_38f70(i32 %v0_2841f)
  ret i32 %v1_28424

; uselistorder directives
  uselistorder i32 (i32)* @function_38f70, { 1, 0 }
}

define i32 @function_2842b() local_unnamed_addr {
dec_label_pc_2842b:
  %v3_2842b = load i32, i32* @eax, align 4
  ret i32 %v3_2842b
}

define i32 @function_28438(i32 %arg1) local_unnamed_addr {
dec_label_pc_28438:
  ret i32 %arg1
}

define i32 @function_28441() local_unnamed_addr {
dec_label_pc_28441:
  %v3_28441 = load i32, i32* @eax, align 4
  ret i32 %v3_28441
}

define i32 @function_28479() local_unnamed_addr {
dec_label_pc_28479:
  %eax.global-to-local = alloca i32, align 4
  %v0_28479 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28479
}

define i32 @function_284a4() local_unnamed_addr {
dec_label_pc_284a4:
  %stack_var_144 = alloca i32, align 4
  %v2_284a6 = ptrtoint i32* %stack_var_144 to i32
  %v1_284b0 = call i32 @unknown_41410(i32 %v2_284a6)
  ret i32 %v1_284b0
}

define i32 @function_284ba(i8 %arg1) local_unnamed_addr {
dec_label_pc_284ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_284cc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_284cc
}

define i32 @function_284df() local_unnamed_addr {
dec_label_pc_284df:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_284df = load i32, i32* %ebx.global-to-local, align 4
  %v1_284df = add i32 %v0_284df, -1960565692
  %v2_284df = inttoptr i32 %v1_284df to i32*
  %v3_284df = load i32, i32* %v2_284df, align 4
  %v4_284df = sub i32 %v3_284df, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_284df, i32* %v2_284df, align 4
  %v0_284e6 = load i32, i32* %eax.global-to-local, align 4
  %v11_284e6 = and i32 %v0_284e6, or (i32 zext (i8 ptrtoint (i32* @global_var_20.3279 to i8) to i32), i32 -256)
  store i32 %v11_284e6, i32* %eax.global-to-local, align 4
  ret i32 %v11_284e6

; uselistorder directives
  uselistorder i32 %v11_284e6, { 1, 0 }
}

define i32 @function_284ed() local_unnamed_addr {
dec_label_pc_284ed:
  %v3_28505 = load i32, i32* @eax, align 4
  ret i32 %v3_28505
}

define i32 @function_28511() local_unnamed_addr {
dec_label_pc_28511:
  %eax.global-to-local = alloca i32, align 4
  %v0_28511 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28511
}

define i32 @function_28516(i32 %arg1) local_unnamed_addr {
dec_label_pc_28516:
  %v0_28516 = call i32 @unknown_3940e()
  ret i32 %v0_28516
}

define i32 @function_2851b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2851b:
  %v0_28520 = call i32 @unknown_392d6()
  ret i32 %v0_28520
}

define i32 @function_28525() local_unnamed_addr {
dec_label_pc_28525:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2852a() local_unnamed_addr {
dec_label_pc_2852a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2852a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2852a
}

define i32 @function_2852f(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2852f:
  %stack_var_152 = alloca i32, align 4
  %v2_2852f = ptrtoint i32* %stack_var_152 to i32
  store i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), i32* %stack_var_152, align 4
  %v1_28544 = call i32 @unknown_49150(i32 %v2_2852f)
  ret i32 %v1_28544

; uselistorder directives
  uselistorder i32 (i32)* @unknown_49150, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_393e0_type* @global_var_393e0.3337 to i32), { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN5boost8signals27signal3IbRKSsS3_jNS0_10last_valueIbEEiSt4lessIiENS_8functionIFbS3_S3_jEEENS8_IFbRKNS0_10connectionES3_S3_jEEENS0_5mutexEEclES3_S3_j(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28550:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_28553 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v0_28563 = load i32, i32* %ebx.global-to-local, align 4
  %v0_2856b = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v1_28577 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28577 = inttoptr i32 %v1_28577 to i32*
  %v3_28577 = load i32, i32* %v2_28577, align 4
  store i32 %v3_28577, i32* @eax, align 4
  %v1_2857a = icmp eq i32 %v3_28577, 0
  br i1 %v1_2857a, label %bb, label %dec_label_pc_2857e

bb:                                               ; preds = %dec_label_pc_28550
  %v4_2857c = call i32 @function_285ab(i32 %v0_28553, i32 %v0_28563, i32 %v0_2856b)
  store i32 %v4_2857c, i32* @eax, align 4
  br label %dec_label_pc_2857e

dec_label_pc_2857e:                               ; preds = %bb, %dec_label_pc_28550
  %v4_2859b2 = phi i32 [ %v4_2857c, %bb ], [ %v3_28577, %dec_label_pc_28550 ]
  store i32 0, i32* %esi.global-to-local, align 4
  br i1 false, label %bb106, label %dec_label_pc_2858b

bb106:                                            ; preds = %dec_label_pc_2857e
  br label %dec_label_pc_2858b

dec_label_pc_2858b:                               ; preds = %bb106, %dec_label_pc_2857e
  store i32 %v0_2856b, i32* %esi.global-to-local, align 4
  store i32 %v0_28563, i32* %ebx.global-to-local, align 4
  ret i32 %v4_2859b2
}

define i32 @function_285a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_285a0:
  %v0_285a1 = load i32, i32* @eax, align 4
  %v11_285a1 = and i32 %v0_285a1, or (i32 zext (i8 ptrtoint (i32* @global_var_30.3470 to i8) to i32), i32 -256)
  store i32 %v11_285a1, i32* @eax, align 4
  %v0_285a6 = call i32 @function_50420()
  ret i32 %v0_285a6

; uselistorder directives
  uselistorder i32 or (i32 zext (i8 ptrtoint (i32* @global_var_30.3470 to i8) to i32), i32 -256), { 3, 0, 1, 2 }
}

define i32 @function_285ab(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_285ab:
  %v3_285c3 = load i32, i32* @eax, align 4
  ret i32 %v3_285c3
}

define i32 @function_285cf() local_unnamed_addr {
dec_label_pc_285cf:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_285e0:
  store i32 %arg5, i32* @esi, align 4
  %v1_28610 = icmp eq i32 %arg3, 0
  %v1_28612 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_28612, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_28610, label %bb, label %dec_label_pc_28627

bb:                                               ; preds = %dec_label_pc_285e0
  %v3_28621 = call i32 @function_286b0(i32 %v1_28612)
  br label %dec_label_pc_28627

dec_label_pc_28627:                               ; preds = %bb, %dec_label_pc_285e0
  %v2_2862b = phi i32 [ %v3_28621, %bb ], [ %arg3, %dec_label_pc_285e0 ]
  ret i32 %v2_2862b
}

define i32 @function_2867a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2867a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_2867a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2867a = add i32 %v0_2867a, -2095569852
  %v2_2867a = inttoptr i32 %v1_2867a to i32*
  %v3_2867a = load i32, i32* %v2_2867a, align 4
  %v4_2867a = sub i32 %v3_2867a, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2867a, i32* %v2_2867a, align 4
  %v0_28680 = load i32, i32* %ebx.global-to-local, align 4
  %v1_28680 = add i32 %v0_28680, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_28680, i32* %ebx.global-to-local, align 4
  %v0_28681 = load i32, i32* %eax.global-to-local, align 4
  %v2_28681 = load i1, i1* %cf.global-to-local, align 1
  %v3_28681 = zext i1 %v2_28681 to i32
  %v4_28681 = add i32 %v0_28681, zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32)
  %v5_28681 = add i32 %v4_28681, %v3_28681
  %v25_28681 = urem i32 %v5_28681, 256
  %v27_28681 = and i32 %v0_28681, -256
  %v28_28681 = or i32 %v25_28681, %v27_28681
  store i32 %v28_28681, i32* %eax.global-to-local, align 4
  %v1_28687 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_28687 = icmp eq i32 %v1_28687, %arg1
  %v1_2868e = load i32, i32* %edi.global-to-local, align 4
  %v2_2868e = inttoptr i32 %v1_2868e to i32*
  store i32 %v28_28681, i32* %v2_2868e, align 4
  %v0_28690 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_28690, i32* @eax, align 4
  %v1_28692 = icmp eq i1 %v3_28687, false
  br i1 %v1_28692, label %bb, label %dec_label_pc_28694

bb:                                               ; preds = %dec_label_pc_2867a
  %v2_28692 = call i32 @function_286ca()
  store i32 %v2_28692, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28694

dec_label_pc_28694:                               ; preds = %bb, %dec_label_pc_2867a
  %v0_286a7 = phi i32 [ %v2_28692, %bb ], [ %v0_28690, %dec_label_pc_2867a ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_286a4 = load i32, i32* @esp, align 4
  %v5_286a4 = icmp ugt i32 %v0_286a4, -77
  store i1 %v5_286a4, i1* %cf.global-to-local, align 1
  ret i32 %v0_286a7

; uselistorder directives
  uselistorder i32 %v0_28681, { 1, 0 }
  uselistorder i32* @esp, { 8, 0, 9, 10, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 3, 35, 36, 37, 38, 4, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 5, 60, 61, 62, 63, 64, 6, 65, 66, 7, 56, 57, 58, 59 }
}

define i32 @function_286b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_286b0:
  %v0_286bb = load i32, i32* @esi, align 4
  ret i32 %v0_286bb
}

define i32 @function_286c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_286c0:
  %v2_286c0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_286c0 = load i32, i32* @eax, align 4
  %v4_286c0 = trunc i32 %v3_286c0 to i8
  %v5_286c0 = add i8 %v4_286c0, %v2_286c0
  %v21_286c0 = inttoptr i32 %v3_286c0 to i8*
  store i8 %v5_286c0, i8* %v21_286c0, align 1
  %v0_286c2 = load i32, i32* @eax, align 4
  ret i32 %v0_286c2
}

define i32 @function_286ca() local_unnamed_addr {
dec_label_pc_286ca:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_286d0:
  %ebp.global-to-local = alloca i32, align 4
  %tmp116 = ptrtoint i32* %arg3 to i32
  store i32 %arg2, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %tmp116, i32* @ebx, align 4
  %v1_286ef = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_286ef = inttoptr i32 %v1_286ef to i32*
  %v3_286ef = load i32, i32* %v2_286ef, align 4
  store i32 %v3_286ef, i32* @edi, align 4
  %v1_286f6 = icmp eq i32 %v3_286ef, 0
  br i1 %v1_286f6, label %bb, label %dec_label_pc_286fe

bb:                                               ; preds = %dec_label_pc_286d0
  %v2_286f8 = call i32 @function_2880f(i32 %arg2)
  store i32 %v2_286f8, i32* @eax, align 4
  %v0_286fe.pre = load i32, i32* @ebx, align 4
  %v0_28715.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_286fe

dec_label_pc_286fe:                               ; preds = %bb, %dec_label_pc_286d0
  %v0_28715.pre = phi i32 [ %v0_28715.pre.pre, %bb ], [ %v3_286ef, %dec_label_pc_286d0 ]
  %v0_286fe = phi i32 [ %v0_286fe.pre, %bb ], [ %tmp116, %dec_label_pc_286d0 ]
  %v1_286fe = inttoptr i32 %v0_286fe to i32*
  %v2_286fe = load i32, i32* %v1_286fe, align 4
  store i32 %v2_286fe, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_28715

dec_label_pc_28708:                               ; preds = %dec_label_pc_28715
  %v5_28708 = icmp eq i1 %v2_2871a, false
  br i1 %v5_28708, label %dec_label_pc_28726, label %dec_label_pc_2870c

dec_label_pc_2870c:                               ; preds = %dec_label_pc_28708
  %v1_2870c = add i32 %v0_2870c, 8
  %v2_2870c = inttoptr i32 %v1_2870c to i32*
  %v3_2870c = load i32, i32* %v2_2870c, align 4
  store i32 %v3_2870c, i32* @eax, align 4
  %v1_2870f = icmp eq i32 %v3_2870c, 0
  br i1 %v1_2870f, label %dec_label_pc_2872f, label %dec_label_pc_28713

dec_label_pc_28713:                               ; preds = %dec_label_pc_28726, %dec_label_pc_2870c
  %v0_28718.pre = phi i32 [ %v0_28721, %dec_label_pc_2870c ], [ %v0_28718.pre.pre, %dec_label_pc_28726 ]
  %v0_28713 = phi i32 [ %v3_2870c, %dec_label_pc_2870c ], [ %v3_28726, %dec_label_pc_28726 ]
  %v4_2871a7 = phi i32 [ %v6_2871a, %dec_label_pc_2870c ], [ 0, %dec_label_pc_28726 ]
  store i32 %v0_28713, i32* @edi, align 4
  br label %dec_label_pc_28715

dec_label_pc_28715:                               ; preds = %dec_label_pc_28713, %dec_label_pc_286fe
  %v4_2871a = phi i32 [ %v4_2871a7, %dec_label_pc_28713 ], [ %v2_286fe, %dec_label_pc_286fe ]
  %v0_28721 = phi i32 [ %v0_28718.pre, %dec_label_pc_28713 ], [ %v2_286fe, %dec_label_pc_286fe ]
  %v0_2870c = phi i32 [ %v0_28713, %dec_label_pc_28713 ], [ %v0_28715.pre, %dec_label_pc_286fe ]
  %v1_28715 = add i32 %v0_2870c, 16
  %v2_28715 = inttoptr i32 %v1_28715 to i32*
  %v3_28715 = load i32, i32* %v2_28715, align 4
  store i32 %v3_28715, i32* @edx, align 4
  %v2_28718 = sub i32 %v0_28721, %v3_28715
  %v8_28718 = xor i32 %v3_28715, %v0_28721
  %v9_28718 = xor i32 %v2_28718, %v0_28721
  %v10_28718 = and i32 %v9_28718, %v8_28718
  %v11_28718 = icmp slt i32 %v10_28718, 0
  %v13_28718 = icmp slt i32 %v2_28718, 0
  %v2_2871a = icmp ne i1 %v13_28718, %v11_28718
  %v3_2871a = zext i1 %v2_2871a to i32
  %v5_2871a = and i32 %v4_2871a, -256
  %v6_2871a = or i32 %v3_2871a, %v5_2871a
  store i32 %v6_2871a, i32* @ecx, align 4
  %v12_2871d = icmp eq i32 %v0_28721, %v3_28715
  %v1_2871f = icmp eq i1 %v12_2871d, false
  br i1 %v1_2871f, label %dec_label_pc_28708, label %dec_label_pc_28721

dec_label_pc_28721:                               ; preds = %dec_label_pc_28715
  %v10_28721 = icmp eq i32 %v0_28721, 1
  br i1 %v10_28721, label %bb126, label %dec_label_pc_28726

bb126:                                            ; preds = %dec_label_pc_28721
  %v1_28724 = call i32 @function_28788()
  %v0_28726.pre = load i32, i32* @edi, align 4
  %v0_28718.pre.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_28726

dec_label_pc_28726:                               ; preds = %dec_label_pc_28708, %bb126, %dec_label_pc_28721
  %v0_28718.pre.pre = phi i32 [ %v0_28721, %dec_label_pc_28708 ], [ %v0_28718.pre.pre.pre, %bb126 ], [ %v0_28721, %dec_label_pc_28721 ]
  %v0_28726 = phi i32 [ %v0_2870c, %dec_label_pc_28708 ], [ %v0_28726.pre, %bb126 ], [ %v0_2870c, %dec_label_pc_28721 ]
  %v1_28726 = add i32 %v0_28726, 12
  %v2_28726 = inttoptr i32 %v1_28726 to i32*
  %v3_28726 = load i32, i32* %v2_28726, align 4
  store i32 %v3_28726, i32* @eax, align 4
  %v1_2872b = icmp eq i32 %v3_28726, 0
  %v1_2872d = icmp eq i1 %v1_2872b, false
  br i1 %v1_2872d, label %dec_label_pc_28713, label %dec_label_pc_2872f

dec_label_pc_2872f:                               ; preds = %dec_label_pc_28726, %dec_label_pc_2870c
  %v0_2873f12 = phi i32 [ %v0_2870c, %dec_label_pc_2870c ], [ %v0_28726, %dec_label_pc_28726 ]
  %v0_28731 = phi i32 [ %v0_28721, %dec_label_pc_2870c ], [ %v0_28718.pre.pre, %dec_label_pc_28726 ]
  %v0_2872f = phi i32 [ %v6_2871a, %dec_label_pc_2870c ], [ 0, %dec_label_pc_28726 ]
  store i32 %v0_28731, i32* @ecx, align 4
  %v4_28733 = trunc i32 %v0_2872f to i8
  %v5_28733 = icmp eq i8 %v4_28733, 0
  br i1 %v5_28733, label %bb127, label %dec_label_pc_2873b

bb127:                                            ; preds = %dec_label_pc_2872f
  %v1_28735 = call i32 @function_28808()
  %v0_2873f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_2873b

dec_label_pc_2873b:                               ; preds = %bb127, %dec_label_pc_2872f
  %v3_2874815 = phi i32 [ %v1_28735, %bb127 ], [ %v0_2872f, %dec_label_pc_2872f ]
  %v0_2873f = phi i32 [ %v0_2873f.pre, %bb127 ], [ %v0_2873f12, %dec_label_pc_2872f ]
  %v2_2873f = add i32 %arg2, 12
  %v3_2873f = inttoptr i32 %v2_2873f to i32*
  %v4_2873f = load i32, i32* %v3_2873f, align 4
  %v15_2873f = icmp eq i32 %v0_2873f, %v4_2873f
  br i1 %v15_2873f, label %bb128, label %dec_label_pc_28748

bb128:                                            ; preds = %dec_label_pc_2873b
  %v1_28742 = call i32 @function_28819()
  br label %dec_label_pc_28748

dec_label_pc_28748:                               ; preds = %bb128, %dec_label_pc_2873b
  %v3_28748 = phi i32 [ %v1_28742, %bb128 ], [ %v3_2874815, %dec_label_pc_2873b ]
  ret i32 %v3_28748

; uselistorder directives
  uselistorder i32 %v3_28726, { 1, 2, 0 }
  uselistorder i32 %v0_28718.pre.pre, { 1, 0 }
  uselistorder i32 %v6_2871a, { 0, 2, 1 }
  uselistorder i1 %v2_2871a, { 1, 0 }
  uselistorder i32 %v2_28718, { 1, 0 }
  uselistorder i32 %v0_2870c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_28721, { 7, 2, 3, 0, 1, 4, 5, 8, 6 }
  uselistorder i32 %v0_28713, { 1, 0 }
  uselistorder i32 %v2_286fe, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_28726, { 1, 2, 0 }
}

define i32 @function_28755() local_unnamed_addr {
dec_label_pc_28755:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v0_28755 = load i32, i32* @ecx, align 4
  %v1_28755 = load i32, i32* @edx, align 4
  %v12_28755 = icmp eq i32 %v0_28755, %v1_28755
  br i1 %v12_28755, label %bb, label %dec_label_pc_28759

bb:                                               ; preds = %dec_label_pc_28755
  %v1_28757 = call i32 @function_287b0()
  store i32 %v1_28757, i32* @eax, align 4
  %v0_28759.pre = load i32, i32* @edx, align 4
  %v1_28759.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_28759

dec_label_pc_28759:                               ; preds = %bb, %dec_label_pc_28755
  %v1_28759 = phi i32 [ %v1_28759.pre, %bb ], [ %v0_28755, %dec_label_pc_28755 ]
  %v4_2875b = phi i32 [ %v0_28759.pre, %bb ], [ %v1_28755, %dec_label_pc_28755 ]
  %v2_28759 = sub i32 %v4_2875b, %v1_28759
  %v8_28759 = xor i32 %v4_2875b, %v1_28759
  %v9_28759 = xor i32 %v2_28759, %v4_2875b
  %v10_28759 = and i32 %v9_28759, %v8_28759
  %v11_28759 = icmp slt i32 %v10_28759, 0
  %v13_28759 = icmp slt i32 %v2_28759, 0
  %v2_2875b = icmp ne i1 %v13_28759, %v11_28759
  %v5_2875e = icmp eq i1 %v2_2875b, false
  %v1_28760 = icmp eq i1 %v5_2875e, false
  br i1 %v1_28760, label %bb10, label %dec_label_pc_28759.dec_label_pc_28762_crit_edge

dec_label_pc_28759.dec_label_pc_28762_crit_edge:  ; preds = %dec_label_pc_28759
  %v0_28762.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_28762

bb10:                                             ; preds = %dec_label_pc_28759
  %v2_28760 = call i32 @function_287d0()
  br label %dec_label_pc_28762

dec_label_pc_28762:                               ; preds = %dec_label_pc_28759.dec_label_pc_28762_crit_edge, %bb10
  %v0_28762 = phi i32 [ %v0_28762.pre, %dec_label_pc_28759.dec_label_pc_28762_crit_edge ], [ %v2_28760, %bb10 ]
  %v1_28762 = load i32, i32* @esi, align 4
  %v2_28762 = inttoptr i32 %v1_28762 to i32*
  store i32 %v0_28762, i32* %v2_28762, align 4
  %v0_28764 = load i32, i32* @esi, align 4
  %v1_28764 = add i32 %v0_28764, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28764 = inttoptr i32 %v1_28764 to i8*
  store i8 0, i8* %v2_28764, align 1
  %v1_2876c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2876c = icmp eq i32 %v1_2876c, %tmp9
  %v0_28773 = load i32, i32* @esi, align 4
  store i32 %v0_28773, i32* @eax, align 4
  %v1_28775 = icmp eq i1 %v3_2876c, false
  br i1 %v1_28775, label %bb11, label %dec_label_pc_2877b

bb11:                                             ; preds = %dec_label_pc_28762
  %v2_28775 = call i32 @function_28853()
  br label %dec_label_pc_2877b

dec_label_pc_2877b:                               ; preds = %bb11, %dec_label_pc_28762
  %v0_28782 = phi i32 [ %v2_28775, %bb11 ], [ %v0_28773, %dec_label_pc_28762 ]
  ret i32 %v0_28782

; uselistorder directives
  uselistorder i32 %v2_28759, { 1, 0 }
  uselistorder i32 %v1_28755, { 1, 0 }
  uselistorder i32 %v0_28755, { 1, 0 }
  uselistorder label %dec_label_pc_28762, { 1, 0 }
}

define i32 @function_28788() local_unnamed_addr {
dec_label_pc_28788:
  %v0_28788 = load i32, i32* @edi, align 4
  %v1_28788 = add i32 %v0_28788, 20
  %v2_28788 = inttoptr i32 %v1_28788 to i8*
  %v3_28788 = load i8, i8* %v2_28788, align 1
  %v10_28788 = icmp eq i8 %v3_28788, 0
  br i1 %v10_28788, label %bb, label %dec_label_pc_28792

bb:                                               ; preds = %dec_label_pc_28788
  %v1_2878c = call i32 @function_2882f()
  store i32 %v1_2878c, i32* @eax, align 4
  br label %dec_label_pc_28792

dec_label_pc_28792:                               ; preds = %bb, %dec_label_pc_28788
  %v0_28792 = load i32, i32* @ebx, align 4
  %v1_28792 = add i32 %v0_28792, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28792 = inttoptr i32 %v1_28792 to i8*
  %v3_28792 = load i8, i8* %v2_28792, align 1
  %v10_28792 = icmp eq i8 %v3_28792, 0
  br i1 %v10_28792, label %bb2, label %dec_label_pc_2879c

bb2:                                              ; preds = %dec_label_pc_28792
  %v1_28796 = call i32 @function_2882f()
  br label %dec_label_pc_2879c

dec_label_pc_2879c:                               ; preds = %bb2, %dec_label_pc_28792
  %v0_2879c = load i32, i32* @edi, align 4
  %v1_2879c = add i32 %v0_2879c, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_2879c = inttoptr i32 %v1_2879c to i32*
  %v3_2879c = load i32, i32* %v2_2879c, align 4
  ret i32 %v3_2879c
}

define i32 @function_287b0() local_unnamed_addr {
dec_label_pc_287b0:
  %v0_287b5 = load i32, i32* @ebx, align 4
  %v1_287b5 = add i32 %v0_287b5, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_287b5 = inttoptr i32 %v1_287b5 to i8*
  %v3_287b5 = load i8, i8* %v2_287b5, align 1
  %v10_287b5 = icmp eq i8 %v3_287b5, 0
  br i1 %v10_287b5, label %bb, label %dec_label_pc_287b0.dec_label_pc_287bb_crit_edge

dec_label_pc_287b0.dec_label_pc_287bb_crit_edge:  ; preds = %dec_label_pc_287b0
  %v0_287bb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_287bb

bb:                                               ; preds = %dec_label_pc_287b0
  %v1_287b9 = call i32 @function_2882f()
  store i32 %v1_287b9, i32* @eax, align 4
  br label %dec_label_pc_287bb

dec_label_pc_287bb:                               ; preds = %dec_label_pc_287b0.dec_label_pc_287bb_crit_edge, %bb
  %v0_287bb = phi i32 [ %v0_287bb.pre, %dec_label_pc_287b0.dec_label_pc_287bb_crit_edge ], [ %v1_287b9, %bb ]
  %v1_287bb = add i32 %v0_287bb, 20
  %v2_287bb = inttoptr i32 %v1_287bb to i8*
  %v3_287bb = load i8, i8* %v2_287bb, align 1
  %v10_287bb = icmp eq i8 %v3_287bb, 0
  br i1 %v10_287bb, label %bb3, label %dec_label_pc_287c1

bb3:                                              ; preds = %dec_label_pc_287bb
  %v1_287bf = call i32 @function_2882f()
  br label %dec_label_pc_287c1

dec_label_pc_287c1:                               ; preds = %bb3, %dec_label_pc_287bb
  %v0_287ce = phi i32 [ %v1_287bf, %bb3 ], [ %v0_287bb, %dec_label_pc_287bb ]
  %v0_287c1 = load i32, i32* @ebx, align 4
  %v1_287c1 = add i32 %v0_287c1, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_287c1 = inttoptr i32 %v1_287c1 to i32*
  %v3_287c1 = load i32, i32* %v2_287c1, align 4
  %v1_287c4 = add i32 %v0_287ce, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_287c4 = inttoptr i32 %v1_287c4 to i32*
  %v3_287c4 = load i32, i32* %v2_287c4, align 4
  %v5_287c4 = sub i32 %v3_287c4, %v3_287c1
  %v11_287c4 = xor i32 %v3_287c4, %v3_287c1
  %v12_287c4 = xor i32 %v5_287c4, %v3_287c4
  %v13_287c4 = and i32 %v12_287c4, %v11_287c4
  %v14_287c4 = icmp slt i32 %v13_287c4, 0
  %v16_287c4 = icmp slt i32 %v5_287c4, 0
  %v2_287c7 = icmp ne i1 %v16_287c4, %v14_287c4
  %v3_287c7 = zext i1 %v2_287c7 to i32
  %v5_287c7 = and i32 %v3_287c1, -256
  %v6_287c7 = or i32 %v3_287c7, %v5_287c7
  store i32 %v6_287c7, i32* @edx, align 4
  ret i32 %v0_287ce

; uselistorder directives
  uselistorder i32 %v5_287c4, { 1, 0 }
  uselistorder i32 %v3_287c1, { 1, 0, 2 }
  uselistorder i32 ()* @function_2882f, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_287bb, { 1, 0 }
}

define i32 @function_287d0() local_unnamed_addr {
dec_label_pc_287d0:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v2_287d4 = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_287d4, i32* %eax.global-to-local, align 4
  %v0_287d8 = load i32, i32* @ebx, align 4
  %v0_287dc = load i32, i32* @edi, align 4
  %v5_287ef = call i32 @unknown_50cb0(i32 %v2_287d4, i32 %tmp7, i32 0, i32 %v0_287dc, i32 %v0_287d8)
  %v0_287fb = load i32, i32* @esi, align 4
  %v1_287fb = add i32 %v0_287fb, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_287fb = inttoptr i32 %v1_287fb to i8*
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %v2_287fb, align 1
  %v0_287ff = load i32, i32* %eax.global-to-local, align 4
  %v1_287ff = load i32, i32* @esi, align 4
  %v2_287ff = inttoptr i32 %v1_287ff to i32*
  store i32 %v0_287ff, i32* %v2_287ff, align 4
  %v0_28801 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28801
}

define i32 @function_28808() local_unnamed_addr {
dec_label_pc_28808:
  %v0_28808 = load i32, i32* @edi, align 4
  store i32 %v0_28808, i32* @eax, align 4
  %v0_2880a = call i32 @function_28755()
  ret i32 %v0_2880a
}

define i32 @function_2880f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2880f:
  %v0_2880f = load i32, i32* @edx, align 4
  %v1_28811 = add i32 %v0_2880f, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_28811, i32* @edi, align 4
  %v0_28814 = load i32, i32* @eax, align 4
  ret i32 %v0_28814
}

define i32 @function_28819() local_unnamed_addr {
dec_label_pc_28819:
  %stack_var_44 = alloca i32, align 4
  %v2_28819 = ptrtoint i32* %stack_var_44 to i32
  ret i32 %v2_28819
}

define i32 @function_2882f() local_unnamed_addr {
dec_label_pc_2882f:
  %v3_28847 = load i32, i32* @eax, align 4
  ret i32 %v3_28847
}

define i32 @function_28853() local_unnamed_addr {
dec_label_pc_28853:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IvRKSsNS1_8functionIFvSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28860:
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v0_28873 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_28887 = add i32 %arg2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v12_2888a = icmp eq i32 %v1_28887, %arg3
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v12_2888a, label %bb, label %dec_label_pc_2889a

bb:                                               ; preds = %dec_label_pc_28860
  %v2_28894 = call i32 @function_289a0(i32 %v0_28873)
  %v0_2889a.pre = load i32, i32* @ebx, align 4
  %v0_288a3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2889a

dec_label_pc_2889a:                               ; preds = %bb, %dec_label_pc_28860
  %v0_288a3 = phi i32 [ %v0_288a3.pre, %bb ], [ %arg4, %dec_label_pc_28860 ]
  %v0_2889a = phi i32 [ %v0_2889a.pre, %bb ], [ %arg3, %dec_label_pc_28860 ]
  %v1_2889a = add i32 %v0_2889a, 16
  store i32 %v0_288a3, i32* @eax, align 4
  %v1_288a5 = trunc i32 %v1_2889a to i8
  %v2_288a5 = call i32 @function_28ad0(i8 %v1_288a5)
  %v4_288aa = trunc i32 %v2_288a5 to i8
  %v5_288aa = icmp eq i8 %v4_288aa, 0
  br i1 %v5_288aa, label %bb112, label %dec_label_pc_288b2

bb112:                                            ; preds = %dec_label_pc_2889a
  %v1_288ac = call i32 @function_28930()
  br label %dec_label_pc_288b2

dec_label_pc_288b2:                               ; preds = %bb112, %dec_label_pc_2889a
  %v0_288b2 = load i32, i32* @edi, align 4
  %v1_288b2 = add i32 %v0_288b2, 12
  %v2_288b2 = inttoptr i32 %v1_288b2 to i32*
  %v3_288b2 = load i32, i32* %v2_288b2, align 4
  store i32 %v3_288b2, i32* @eax, align 4
  %v1_288b5 = load i32, i32* @ebx, align 4
  %v12_288b5 = icmp eq i32 %v3_288b2, %v1_288b5
  br i1 %v12_288b5, label %bb113, label %dec_label_pc_288bd

bb113:                                            ; preds = %dec_label_pc_288b2
  %v1_288b7 = call i32 @function_28a18()
  br label %dec_label_pc_288bd

dec_label_pc_288bd:                               ; preds = %bb113, %dec_label_pc_288b2
  %v3_288bd = phi i32 [ %v1_288b7, %bb113 ], [ %v3_288b2, %dec_label_pc_288b2 ]
  ret i32 %v3_288bd

; uselistorder directives
  uselistorder i32 %v3_288b2, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2 }
}

define i32 @function_288c6() local_unnamed_addr {
dec_label_pc_288c6:
  %v0_288c6 = call i32 @function_408dc189()
  ret i32 %v0_288c6

; uselistorder directives
  uselistorder i32 ()* @function_408dc189, { 2, 1, 0 }
}

define i32 @function_28907() local_unnamed_addr {
dec_label_pc_28907:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_2890b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2890b = icmp eq i32 %v1_2890b, %tmp6
  %v0_28912 = load i32, i32* @esi, align 4
  store i32 %v0_28912, i32* @eax, align 4
  %v1_28914 = icmp eq i1 %v3_2890b, false
  br i1 %v1_28914, label %bb, label %dec_label_pc_2891a

bb:                                               ; preds = %dec_label_pc_28907
  %v2_28914 = call i32 @function_28a48()
  br label %dec_label_pc_2891a

dec_label_pc_2891a:                               ; preds = %bb, %dec_label_pc_28907
  %v0_2892d = phi i32 [ %v2_28914, %bb ], [ %v0_28912, %dec_label_pc_28907 ]
  ret i32 %v0_2892d
}

define i32 @function_28930() local_unnamed_addr {
dec_label_pc_28930:
  %v2_28936 = call i32 @function_28ad0(i8 ptrtoint (i32* @0 to i8))
  %v4_2893b = trunc i32 %v2_28936 to i8
  %v5_2893b = icmp eq i8 %v4_2893b, 0
  br i1 %v5_2893b, label %bb, label %dec_label_pc_28943

bb:                                               ; preds = %dec_label_pc_28930
  %v1_2893d = call i32 @function_289d0()
  br label %dec_label_pc_28943

dec_label_pc_28943:                               ; preds = %bb, %dec_label_pc_28930
  %v0_28943 = load i32, i32* @edi, align 4
  %v1_28943 = add i32 %v0_28943, 16
  %v2_28943 = inttoptr i32 %v1_28943 to i32*
  %v3_28943 = load i32, i32* %v2_28943, align 4
  store i32 %v3_28943, i32* @eax, align 4
  %v1_28946 = load i32, i32* @ebx, align 4
  %v12_28946 = icmp eq i32 %v3_28943, %v1_28946
  br i1 %v12_28946, label %bb4, label %dec_label_pc_2894e

bb4:                                              ; preds = %dec_label_pc_28943
  %v1_28948 = call i32 @function_28a3e()
  br label %dec_label_pc_2894e

dec_label_pc_2894e:                               ; preds = %bb4, %dec_label_pc_28943
  %v3_2894e = phi i32 [ %v1_28948, %bb4 ], [ %v3_28943, %dec_label_pc_28943 ]
  ret i32 %v3_2894e

; uselistorder directives
  uselistorder i32 %v3_28943, { 1, 0, 2 }
}

define i32 @function_28955() local_unnamed_addr {
dec_label_pc_28955:
  %ecx.global-to-local = alloca i32, align 4
  %v0_28955 = load i32, i32* %ecx.global-to-local, align 4
  %v1_28955 = add i32 %v0_28955, 273714625
  %v2_28955 = inttoptr i32 %v1_28955 to i32*
  %v3_28955 = load i32, i32* %v2_28955, align 4
  %v4_28955 = add i32 %v3_28955, -1
  store i32 %v4_28955, i32* %v2_28955, align 4
  %v0_2895b = load i32, i32* @ebp, align 4
  store i32 %v0_2895b, i32* @eax, align 4
  %v0_2895d = load i32, i32* %ecx.global-to-local, align 4
  %v1_28961 = trunc i32 %v0_2895d to i8
  %v2_28961 = call i32 @function_28ad0(i8 %v1_28961)
  store i32 %v0_2895d, i32* %ecx.global-to-local, align 4
  %v0_2896e = load i32, i32* @ebx, align 4
  %v1_2896e = add i32 %v0_2896e, 12
  %v2_2896e = inttoptr i32 %v1_2896e to i32*
  %v3_2896e = load i32, i32* %v2_2896e, align 4
  %v1_28975 = icmp eq i32 %v3_2896e, 0
  br i1 %v1_28975, label %bb, label %dec_label_pc_2897d

bb:                                               ; preds = %dec_label_pc_28955
  %v1_28977 = call i32 @function_28a38()
  %v0_28981.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_2897d

dec_label_pc_2897d:                               ; preds = %bb, %dec_label_pc_28955
  %v0_28981 = phi i32 [ %v0_28981.pre, %bb ], [ %v0_2895d, %dec_label_pc_28955 ]
  %v0_28985 = load i32, i32* @edi, align 4
  %v0_28989 = load i32, i32* @esi, align 4
  %v3_2898c = call i32 @unknown_50e40(i32 %v0_28989, i32 %v0_28985, i32 %v0_28981)
  %v0_28994 = call i32 @function_28907()
  ret i32 %v0_28994
}

define i32 @function_289a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_289a0:
  %stack_var_40 = alloca i32, align 4
  %v0_289a0 = load i32, i32* @edi, align 4
  %v1_289a0 = add i32 %v0_289a0, 20
  %v2_289a0 = inttoptr i32 %v1_289a0 to i32*
  %v3_289a0 = load i32, i32* %v2_289a0, align 4
  %v1_289a3 = icmp eq i32 %v3_289a0, 0
  %v1_289a5 = icmp eq i1 %v1_289a3, false
  br i1 %v1_289a5, label %bb, label %dec_label_pc_289a7

bb:                                               ; preds = %dec_label_pc_289a0
  %v2_289a5 = call i32 @function_289d8()
  %v0_289b2.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_289a7

dec_label_pc_289a7:                               ; preds = %bb, %dec_label_pc_289a0
  %v0_289b2 = phi i32 [ %v0_289b2.pre, %bb ], [ %v0_289a0, %dec_label_pc_289a0 ]
  %v2_289a7 = ptrtoint i32* %stack_var_40 to i32
  %v2_289b6 = call i32 @unknown_50f30(i32 %v2_289a7, i32 %v0_289b2)
  %v1_289c2 = load i32, i32* @esi, align 4
  %v2_289c2 = inttoptr i32 %v1_289c2 to i32*
  store i32 %arg1, i32* %v2_289c2, align 4
  %v0_289c4 = call i32 @function_28907()
  ret i32 %v0_289c4
}

define i32 @function_289d0() local_unnamed_addr {
dec_label_pc_289d0:
  %v0_289d0 = load i32, i32* @ebx, align 4
  %v1_289d0 = load i32, i32* @esi, align 4
  %v2_289d0 = inttoptr i32 %v1_289d0 to i32*
  store i32 %v0_289d0, i32* %v2_289d0, align 4
  %v0_289d2 = call i32 @function_28907()
  ret i32 %v0_289d2
}

define i32 @function_289d8() local_unnamed_addr {
dec_label_pc_289d8:
  %v0_289d8 = load i32, i32* @edi, align 4
  %v1_289d8 = add i32 %v0_289d8, 16
  %v2_289d8 = inttoptr i32 %v1_289d8 to i32*
  %v3_289d8 = load i32, i32* %v2_289d8, align 4
  store i32 %v3_289d8, i32* @ebx, align 4
  %v1_289dd = add i32 %v3_289d8, 16
  store i32 %v1_289dd, i32* @eax, align 4
  %v2_289e0 = call i32 @function_28ad0(i8 ptrtoint (i32* @0 to i8))
  %v0_289ed = load i32, i32* @ebx, align 4
  %v1_289f1 = call i32 @function_289fc(i32 %v0_289ed)
  ret i32 %v1_289f1

; uselistorder directives
  uselistorder i32 (i8)* @function_28ad0, { 1, 0, 2, 3 }
}

define i32 @function_289fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_289fc:
  %v0_28a04 = load i32, i32* @edi, align 4
  %v0_28a08 = load i32, i32* @esi, align 4
  %v3_28a0b = call i32 @unknown_50e40(i32 %v0_28a08, i32 %v0_28a04, i32 0)
  %v0_28a13 = call i32 @function_28907()
  ret i32 %v0_28a13
}

define i32 @function_28a18() local_unnamed_addr {
dec_label_pc_28a18:
  %v0_28a20 = load i32, i32* @eax, align 4
  %v0_28a24 = load i32, i32* @edi, align 4
  %v0_28a28 = load i32, i32* @esi, align 4
  %v3_28a2b = call i32 @unknown_50e40(i32 %v0_28a28, i32 %v0_28a24, i32 %v0_28a20)
  %v0_28a33 = call i32 @function_28907()
  ret i32 %v0_28a33

; uselistorder directives
  uselistorder i32 ()* @function_28907, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_50e40, { 1, 0, 2 }
}

define i32 @function_28a38() local_unnamed_addr {
dec_label_pc_28a38:
  %v0_28a38 = load i32, i32* @ebx, align 4
  %v1_28a3c = call i32 @function_289fc(i32 %v0_28a38)
  ret i32 %v1_28a3c
}

define i32 @function_28a3e() local_unnamed_addr {
dec_label_pc_28a3e:
  %v0_28a42 = load i32, i32* @eax, align 4
  %v1_28a46 = call i32 @function_289fc(i32 %v0_28a42)
  ret i32 %v1_28a46

; uselistorder directives
  uselistorder i32 (i32)* @function_289fc, { 1, 2, 0 }
}

define i32 @function_28a48() local_unnamed_addr {
dec_label_pc_28a48:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNK5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEj(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28a50:
  %edx.global-to-local = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %tmp113, i32* @ebp, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_28a79 = add i32 %tmp113, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28a79 = inttoptr i32 %v1_28a79 to i32*
  %v3_28a79 = load i32, i32* %v2_28a79, align 4
  store i32 %v3_28a79, i32* @eax, align 4
  %v1_28a88 = icmp eq i32 %v3_28a79, 0
  br i1 %v1_28a88, label %bb, label %dec_label_pc_28a94

bb:                                               ; preds = %dec_label_pc_28a50
  %v2_28a8e = call i32 @function_2904c(i32 %arg4)
  br label %dec_label_pc_28a94

dec_label_pc_28a94:                               ; preds = %bb, %dec_label_pc_28a50
  %v0_28a94 = phi i32 [ %v2_28a8e, %bb ], [ %v3_28a79, %dec_label_pc_28a50 ]
  %v1_28a94 = add i32 %v0_28a94, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28a94 = inttoptr i32 %v1_28a94 to i32*
  %v3_28a94 = load i32, i32* %v2_28a94, align 4
  store i32 %v3_28a94, i32* @eax, align 4
  %v10_28a97 = icmp eq i32 %v3_28a94, 1
  %v1_28a9a = icmp eq i1 %v10_28a97, false
  br i1 %v1_28a9a, label %bb120, label %dec_label_pc_28aa0

bb120:                                            ; preds = %dec_label_pc_28a94
  %sext3 = mul i32 %arg2, 16777216
  %v3_28a9a = sdiv i32 %sext3, 16777216
  %v4_28a9a = call i32 @function_2904c(i32 %v3_28a9a)
  br label %dec_label_pc_28aa0

dec_label_pc_28aa0:                               ; preds = %bb120, %dec_label_pc_28a94
  %v0_28aa0 = load i32, i32* @ebp, align 4
  %v1_28aa0 = inttoptr i32 %v0_28aa0 to i32*
  %v2_28aa0 = load i32, i32* %v1_28aa0, align 4
  %v0_28aa3 = load i32, i32* %edx.global-to-local, align 4
  %v1_28aa3 = inttoptr i32 %v0_28aa3 to i32*
  %v2_28aa3 = load i32, i32* %v1_28aa3, align 4
  store i32 %v2_28aa3, i32* @ebx, align 4
  %v1_28aa5 = icmp eq i32 %v2_28aa0, 0
  br i1 %v1_28aa5, label %bb121, label %dec_label_pc_28aad

bb121:                                            ; preds = %dec_label_pc_28aa0
  %sext2 = mul i32 %arg2, 16777216
  %v2_28aa7 = sdiv i32 %sext2, 16777216
  %v4_28aa7 = call i32 @function_2903d(i32 %v2_28aa7, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_28aad

dec_label_pc_28aad:                               ; preds = %bb121, %dec_label_pc_28aa0
  %v0_28aad = phi i32 [ %v4_28aa7, %bb121 ], [ %v2_28aa0, %dec_label_pc_28aa0 ]
  %v1_28aad = inttoptr i32 %v0_28aad to i32*
  %v2_28aad = load i32, i32* %v1_28aad, align 4
  store i32 %v2_28aad, i32* @eax, align 4
  %v1_28aaf = icmp eq i32 %v2_28aad, 0
  br i1 %v1_28aaf, label %bb122, label %dec_label_pc_28ab7

bb122:                                            ; preds = %dec_label_pc_28aad
  %sext1 = mul i32 %arg2, 16777216
  %v2_28ab1 = sdiv i32 %sext1, 16777216
  %v3_28ab1 = call i32 @function_29042(i32 %v2_28ab1)
  br label %dec_label_pc_28ab7

dec_label_pc_28ab7:                               ; preds = %bb122, %dec_label_pc_28aad
  %v1_28ab7 = phi i32 [ %v3_28ab1, %bb122 ], [ %v2_28aad, %dec_label_pc_28aad ]
  %v0_28ab7 = load i32, i32* @ebx, align 4
  %v12_28ab7 = icmp eq i32 %v0_28ab7, %v1_28ab7
  br i1 %v12_28ab7, label %bb123, label %dec_label_pc_28abf

bb123:                                            ; preds = %dec_label_pc_28ab7
  %sext = mul i32 %arg2, 16777216
  %v2_28ab9 = sdiv i32 %sext, 16777216
  %v3_28ab9 = call i32 @function_28b50(i32 %v2_28ab9)
  br label %dec_label_pc_28abf

dec_label_pc_28abf:                               ; preds = %bb123, %dec_label_pc_28ab7
  ret i32 %arg4

; uselistorder directives
  uselistorder i32* @0, { 0, 3, 4, 5, 1, 6, 2 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 17, 14, 18, 15, 19, 16 }
  uselistorder i32 (i32)* @function_2904c, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @function_28ad0(i8 %arg1) local_unnamed_addr {
dec_label_pc_28ad0:
  %eax.global-to-local = alloca i32, align 4
  %v2_28ad2 = load i32, i32* @eax, align 4
  %v4_28ad2 = mul i32 %v2_28ad2, 2
  %v21_28ad2 = inttoptr i32 %v2_28ad2 to i32*
  store i32 %v4_28ad2, i32* %v21_28ad2, align 4
  %v0_28ad4 = load i32, i32* @ebx, align 4
  %v1_28ad4 = lshr i32 %v0_28ad4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_28ad4 = load i32, i32* @eax, align 4
  %v4_28ad4 = trunc i32 %v3_28ad4 to i8
  %v5_28ad4 = add i32 %v1_28ad4, %v3_28ad4
  %v20_28ad4 = urem i32 %v5_28ad4, 256
  %v22_28ad4 = shl i32 %v20_28ad4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_28ad4 = and i32 %v0_28ad4, -65281
  %v24_28ad4 = or i32 %v22_28ad4, %v23_28ad4
  store i32 %v24_28ad4, i32* @ebx, align 4
  %v2_28ad7 = and i8 %v4_28ad4, ptrtoint (i32* @global_var_18.3278 to i8)
  %v8_28ad7 = zext i8 %v2_28ad7 to i32
  %v10_28ad7 = and i32 %v3_28ad4, -256
  %v11_28ad7 = or i32 %v8_28ad7, %v10_28ad7
  store i32 %v11_28ad7, i32* %eax.global-to-local, align 4
  %v1_28ad9 = inttoptr i32 %v11_28ad7 to i8*
  %v2_28ad9 = load i8, i8* %v1_28ad9, align 4
  %v5_28ad9 = add i8 %v2_28ad9, %v2_28ad7
  store i8 %v5_28ad9, i8* %v1_28ad9, align 4
  %v0_28adb = load i32, i32* %eax.global-to-local, align 4
  %v1_28adb = inttoptr i32 %v0_28adb to i8*
  %v2_28adb = load i8, i8* %v1_28adb, align 1
  %v4_28adb = trunc i32 %v0_28adb to i8
  %v5_28adb = add i8 %v2_28adb, %v4_28adb
  store i8 %v5_28adb, i8* %v1_28adb, align 1
  %v2_28add = load i32, i32* @esi, align 4
  store i32 %v2_28add, i32* @eax, align 4
  %v0_28ae5 = load i32, i32* @ebx, align 4
  %v1_28ae5 = add i32 %v0_28ae5, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_28ae5 = inttoptr i32 %v1_28ae5 to i32*
  %v3_28ae5 = load i32, i32* %v2_28ae5, align 4
  store i32 %v3_28ae5, i32* @edi, align 4
  %v10_28ae8 = icmp eq i8 %arg1, 0
  br i1 %v10_28ae8, label %bb, label %dec_label_pc_28af3

bb:                                               ; preds = %dec_label_pc_28ad0
  %v3_28aed = call i32 @function_28bb0(i32 %v2_28add)
  store i32 %v3_28aed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28af3

dec_label_pc_28af3:                               ; preds = %bb, %dec_label_pc_28ad0
  %v1_28afb = add i32 %v3_28ae5, 16
  store i32 %v1_28afb, i32* %eax.global-to-local, align 4
  %v2_28b02 = inttoptr i32 %v1_28afb to i32*
  %v3_28b02 = load i32, i32* %v2_28b02, align 4
  store i32 %v3_28b02, i32* %eax.global-to-local, align 4
  %v2_28b05 = add i32 %v3_28ae5, 20
  %v3_28b05 = inttoptr i32 %v2_28b05 to i32*
  %v4_28b05 = load i32, i32* %v3_28b05, align 4
  %v15_28b05 = icmp eq i32 %v3_28b02, %v4_28b05
  br i1 %v15_28b05, label %bb15, label %dec_label_pc_28b0e

bb15:                                             ; preds = %dec_label_pc_28af3
  %v2_28b08 = call i32 @function_28bb8(i32 %v1_28afb)
  store i32 %v2_28b08, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28b0e

dec_label_pc_28b0e:                               ; preds = %bb15, %dec_label_pc_28af3
  %v0_28b0e = phi i32 [ %v2_28b08, %bb15 ], [ %v3_28b02, %dec_label_pc_28af3 ]
  %v1_28b16 = inttoptr i32 %v0_28b0e to i32*
  %v2_28b16 = load i32, i32* %v1_28b16, align 4
  %v2_28b1a = ashr i32 %v2_28b16, 31
  %v2_28b1d = xor i32 %v2_28b1a, %v2_28b16
  store i32 %v2_28b1d, i32* @eax, align 4
  %tmp18 = icmp ult i32 %v2_28b1d, 20
  br i1 %tmp18, label %bb17, label %dec_label_pc_28b28

bb17:                                             ; preds = %dec_label_pc_28b0e
  %v4_28b22 = call i32 @function_28c38(i32 %v0_28b0e)
  store i32 %v4_28b22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_28b28

dec_label_pc_28b28:                               ; preds = %bb17, %dec_label_pc_28b0e
  %v3_28b40 = phi i32 [ %v4_28b22, %bb17 ], [ %v2_28b1d, %dec_label_pc_28b0e ]
  ret i32 %v3_28b40

; uselistorder directives
  uselistorder i32 %v2_28b1d, { 1, 0, 2 }
  uselistorder i32 %v0_28b0e, { 1, 0 }
  uselistorder i32 %v3_28b02, { 1, 0, 2 }
  uselistorder i32 %v3_28ad4, { 1, 0, 2 }
  uselistorder i32 %v2_28ad2, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32 31, { 8, 9, 1, 2, 10, 3, 4, 11, 5, 6, 12, 0, 13, 14, 15, 16, 17, 18, 19, 20, 7 }
  uselistorder i8 ptrtoint (i32* @global_var_18.3278 to i8), { 1, 2, 0 }
}

define i32 @function_28b50(i32 %arg1) local_unnamed_addr {
dec_label_pc_28b50:
  %v1_28b54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28b54 = xor i32 %v1_28b54, %arg1
  %v3_28b54 = icmp eq i32 %v2_28b54, 0
  store i32 %v2_28b54, i32* @eax, align 4
  %v0_28b5b = load i32, i32* @ebx, align 4
  %v1_28b5b = load i32, i32* @ebp, align 4
  %v2_28b5b = add i32 %v1_28b5b, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_28b5b = inttoptr i32 %v2_28b5b to i32*
  store i32 %v0_28b5b, i32* %v3_28b5b, align 4
  %v1_28b5e = icmp eq i1 %v3_28b54, false
  br i1 %v1_28b5e, label %bb, label %dec_label_pc_28b50.dec_label_pc_28b64_crit_edge

dec_label_pc_28b50.dec_label_pc_28b64_crit_edge:  ; preds = %dec_label_pc_28b50
  %v0_28b6b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_28b64

bb:                                               ; preds = %dec_label_pc_28b50
  %v2_28b5e = call i32 @function_29047()
  br label %dec_label_pc_28b64

dec_label_pc_28b64:                               ; preds = %dec_label_pc_28b50.dec_label_pc_28b64_crit_edge, %bb
  %v0_28b6b = phi i32 [ %v0_28b6b.pre, %dec_label_pc_28b50.dec_label_pc_28b64_crit_edge ], [ %v2_28b5e, %bb ]
  ret i32 %v0_28b6b

; uselistorder directives
  uselistorder label %dec_label_pc_28b64, { 1, 0 }
}

define i32 @function_28b83() local_unnamed_addr {
dec_label_pc_28b83:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_28b8b(i32 %arg1) local_unnamed_addr {
dec_label_pc_28b8b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_28ba9() local_unnamed_addr {
dec_label_pc_28ba9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_28bb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_28bb0:
  %v0_28bb2 = load i32, i32* @eax, align 4
  ret i32 %v0_28bb2
}

define i32 @function_28bb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_28bb8:
  %tmp9 = call i8* @__decompiler_undefined_function_1()
  %tmp14 = call i8 @__decompiler_undefined_function_2()
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %v0_28bb8 = load i32, i32* @edi, align 4
  %v1_28bb8 = add i32 %v0_28bb8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28bb8 = inttoptr i32 %v1_28bb8 to i8*
  %v3_28bb8 = load i8, i8* %v2_28bb8, align 1
  %v4_28bb8 = zext i8 %v3_28bb8 to i32
  store i32 %v4_28bb8, i32* @edi, align 4
  %v2_28bbc = load i32, i32* @esi, align 4
  %v5_28bc6 = icmp eq i8 %v3_28bb8, 0
  br i1 %v5_28bc6, label %bb, label %dec_label_pc_28bca

bb:                                               ; preds = %dec_label_pc_28bb8
  %v3_28bc8 = call i32 @function_28c48(i32 %v2_28bbc)
  br label %dec_label_pc_28bca

dec_label_pc_28bca:                               ; preds = %bb, %dec_label_pc_28bb8
  %v2_28bcc = load i32, i32* @ebp, align 4
  %v1_28bcf = icmp eq i32 %v2_28bcc, 0
  br i1 %v1_28bcf, label %bb20, label %dec_label_pc_28bd7

bb20:                                             ; preds = %dec_label_pc_28bca
  %v4_28bd1 = ptrtoint i8* %tmp9 to i32
  %v5_28bd1 = call i32 @function_2903d(i32 %v2_28bbc, i32 %v4_28bd1)
  %v2_28bd7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_28bd7

dec_label_pc_28bd7:                               ; preds = %bb20, %dec_label_pc_28bca
  %v2_28bd7 = phi i32 [ %v2_28bd7.pre, %bb20 ], [ %v2_28bcc, %dec_label_pc_28bca ]
  store i32 %v2_28bd7, i32* @eax, align 4
  %v1_28bd9 = icmp eq i32 %v2_28bd7, 0
  br i1 %v1_28bd9, label %bb21, label %dec_label_pc_28be1

bb21:                                             ; preds = %dec_label_pc_28bd7
  %v3_28bdb = call i32 @function_29042(i32 %v2_28bbc)
  br label %dec_label_pc_28be1

dec_label_pc_28be1:                               ; preds = %bb21, %dec_label_pc_28bd7
  %v0_28be1 = phi i32 [ %v3_28bdb, %bb21 ], [ %v2_28bd7, %dec_label_pc_28bd7 ]
  %v1_28be1 = load i32, i32* @ebx, align 4
  %v12_28be1 = icmp eq i32 %v0_28be1, %v1_28be1
  br i1 %v12_28be1, label %bb22, label %dec_label_pc_28be9

bb22:                                             ; preds = %dec_label_pc_28be1
  %v3_28be3 = call i32 @function_28b50(i32 %v2_28bbc)
  br label %dec_label_pc_28be9

dec_label_pc_28be9:                               ; preds = %bb22, %dec_label_pc_28be1
  %v3_28c268 = phi i32 [ %v3_28be3, %bb22 ], [ %v0_28be1, %dec_label_pc_28be1 ]
  %v5_28be9 = add i32 %arg1, ptrtoint (i8** @global_var_1.3274 to i32)
  %tmp24 = icmp ugt i32 %tmp15, %v5_28be9
  br i1 %tmp24, label %dec_label_pc_28c03, label %dec_label_pc_28bf8

dec_label_pc_28bf8:                               ; preds = %dec_label_pc_28be9
  %v10_28bf8 = icmp eq i8 %tmp14, 0
  br i1 %v10_28bf8, label %bb23, label %dec_label_pc_28c03

bb23:                                             ; preds = %dec_label_pc_28bf8
  %v3_28bfd = call i32 @function_28b50(i32 %v5_28be9)
  br label %dec_label_pc_28c03

dec_label_pc_28c03:                               ; preds = %dec_label_pc_28be9, %bb23, %dec_label_pc_28bf8
  %v3_28c26 = phi i32 [ %v3_28c268, %dec_label_pc_28be9 ], [ %v3_28bfd, %bb23 ], [ %v3_28c268, %dec_label_pc_28bf8 ]
  %v0_28c03 = load i32, i32* @ebx, align 4
  %v1_28c03 = add i32 %v0_28c03, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_28c03 = inttoptr i32 %v1_28c03 to i32*
  %v3_28c03 = load i32, i32* %v2_28c03, align 4
  store i32 %v3_28c03, i32* @esi, align 4
  ret i32 %v3_28c26

; uselistorder directives
  uselistorder i32 %v5_28be9, { 1, 0 }
  uselistorder i32 %v0_28be1, { 1, 0 }
  uselistorder i32 %v2_28bd7, { 0, 2, 1 }
  uselistorder i32 %v2_28bbc, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_28b50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28c03, { 1, 2, 0 }
}

define i32 @function_28c38(i32 %arg1) local_unnamed_addr {
dec_label_pc_28c38:
  %v0_28c38 = load i32, i32* @eax, align 4
  ret i32 %v0_28c38
}

define i32 @function_28c48(i32 %arg1) local_unnamed_addr {
dec_label_pc_28c48:
  %ecx.global-to-local = alloca i32, align 4
  %v0_28c48 = load i32, i32* @ebx, align 4
  %v1_28c48 = add i32 %v0_28c48, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_28c48 = inttoptr i32 %v1_28c48 to i32*
  %v3_28c48 = load i32, i32* %v2_28c48, align 4
  %v1_28c5b = add i32 %v3_28c48, ptrtoint (i32* @global_var_44.3548 to i32)
  %v2_28c62 = load i32, i32* @ebp, align 4
  %v1_28c65 = icmp eq i32 %v2_28c62, 0
  br i1 %v1_28c65, label %bb, label %dec_label_pc_28c6d

bb:                                               ; preds = %dec_label_pc_28c48
  %v3_28c67 = call i32 @function_2903d(i32 %v1_28c5b, i32 %v3_28c48)
  %v2_28c6d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_28c6d

dec_label_pc_28c6d:                               ; preds = %bb, %dec_label_pc_28c48
  %v0_28c81 = phi i32 [ %v2_28c6d.pre, %bb ], [ %v2_28c62, %dec_label_pc_28c48 ]
  store i32 %v0_28c81, i32* @eax, align 4
  %v1_28c6f = icmp eq i32 %v0_28c81, 0
  br i1 %v1_28c6f, label %bb33, label %dec_label_pc_28c7b

bb33:                                             ; preds = %dec_label_pc_28c6d
  %v2_28c75 = call i32 @function_29042(i32 0)
  store i32 %v2_28c75, i32* @eax, align 4
  br label %dec_label_pc_28c7b

dec_label_pc_28c7b:                               ; preds = %bb33, %dec_label_pc_28c6d
  %v0_28c7f = load i32, i32* @ebx, align 4
  %v12_28c7f = icmp eq i32 %v0_28c7f, %v0_28c81
  br i1 %v12_28c7f, label %bb34, label %dec_label_pc_28c8b

bb34:                                             ; preds = %dec_label_pc_28c7b
  %v2_28c85 = call i32 @function_290a6(i32 %v0_28c81)
  store i32 %v2_28c85, i32* @eax, align 4
  br label %dec_label_pc_28c8b

dec_label_pc_28c8b:                               ; preds = %bb34, %dec_label_pc_28c7b
  store i32 %v0_28c81, i32* %ecx.global-to-local, align 4
  %v1_28c8f = add i32 %v0_28c81, 16
  %v2_28c8f = inttoptr i32 %v1_28c8f to i32*
  %v3_28c8f = load i32, i32* %v2_28c8f, align 4
  %v1_28c92 = icmp eq i32 %v3_28c8f, 0
  br i1 %v1_28c92, label %bb35, label %dec_label_pc_28c9a

bb35:                                             ; preds = %dec_label_pc_28c8b
  %v1_28c94 = call i32 @function_29070()
  %v0_28c9e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_28c9a

dec_label_pc_28c9a:                               ; preds = %bb35, %dec_label_pc_28c8b
  %v0_28c9e = phi i32 [ %v0_28c9e.pre, %bb35 ], [ %v0_28c81, %dec_label_pc_28c8b ]
  %v1_28c9e = add i32 %v0_28c9e, 12
  store i32 %v1_28c9e, i32* %ecx.global-to-local, align 4
  store i32 %v1_28c9e, i32* @edi, align 4
  %v2_28ca7 = inttoptr i32 %v1_28c5b to i32*
  %v3_28ca7 = load i32, i32* %v2_28ca7, align 4
  store i32 %v3_28ca7, i32* @edx, align 4
  store i32 %v3_28c8f, i32* @eax, align 4
  br label %dec_label_pc_28cc0.outer

dec_label_pc_28cc0.outer:                         ; preds = %dec_label_pc_28ccc.dec_label_pc_28cc0.backedge_crit_edge, %dec_label_pc_28c9a
  %v4_28cd512.ph = phi i32 [ %v0_28ccc, %dec_label_pc_28ccc.dec_label_pc_28cc0.backedge_crit_edge ], [ %v1_28c9e, %dec_label_pc_28c9a ]
  %v1_28cb0.ph = phi i32 [ %v0_28cc3.pre.pre, %dec_label_pc_28ccc.dec_label_pc_28cc0.backedge_crit_edge ], [ %v3_28ca7, %dec_label_pc_28c9a ]
  %v0_28cb9.ph = phi i32 [ %v3_28cce, %dec_label_pc_28ccc.dec_label_pc_28cc0.backedge_crit_edge ], [ %v3_28c8f, %dec_label_pc_28c9a ]
  br label %dec_label_pc_28cc0

dec_label_pc_28cb0:                               ; preds = %dec_label_pc_28cc0
  %v8_28cc3 = xor i32 %v3_28cc0, %v1_28cb0.ph
  %v2_28cb0 = sub i32 %v3_28cc0, %v1_28cb0.ph
  %v9_28cb0 = xor i32 %v2_28cb0, %v3_28cc0
  %v10_28cb0 = and i32 %v9_28cb0, %v8_28cc3
  %v11_28cb0 = icmp slt i32 %v10_28cb0, 0
  %v13_28cb0 = icmp slt i32 %v2_28cb0, 0
  %v2_28cb2 = icmp ne i1 %v13_28cb0, %v11_28cb0
  %v3_28cb2 = zext i1 %v2_28cb2 to i32
  %v5_28cb2 = and i32 %v3_28cc0, -256
  %v6_28cb2 = or i32 %v3_28cb2, %v5_28cb2
  store i32 %v6_28cb2, i32* @ecx, align 4
  %v5_28cb5 = icmp eq i1 %v2_28cb2, false
  br i1 %v5_28cb5, label %dec_label_pc_28ccc.loopexit, label %dec_label_pc_28cb9

dec_label_pc_28cb9:                               ; preds = %dec_label_pc_28cb0
  %v1_28cb9 = add i32 %v0_28cb9, 12
  %v2_28cb9 = inttoptr i32 %v1_28cb9 to i32*
  %v3_28cb9 = load i32, i32* %v2_28cb9, align 4
  store i32 %v3_28cb9, i32* @eax, align 4
  %v1_28cbc = icmp eq i32 %v3_28cb9, 0
  br i1 %v1_28cbc, label %dec_label_pc_28cd5.loopexit, label %dec_label_pc_28cc0

dec_label_pc_28cc0:                               ; preds = %dec_label_pc_28cc0.outer, %dec_label_pc_28cb9
  %v0_28cb9 = phi i32 [ %v3_28cb9, %dec_label_pc_28cb9 ], [ %v0_28cb9.ph, %dec_label_pc_28cc0.outer ]
  %v1_28cc0 = add i32 %v0_28cb9, 16
  %v2_28cc0 = inttoptr i32 %v1_28cc0 to i32*
  %v3_28cc0 = load i32, i32* %v2_28cc0, align 4
  store i32 %v3_28cc0, i32* @ecx, align 4
  %v12_28cc3 = icmp eq i32 %v3_28cc0, %v1_28cb0.ph
  %v1_28cc5 = icmp eq i1 %v12_28cc3, false
  br i1 %v1_28cc5, label %dec_label_pc_28cb0, label %dec_label_pc_28cc7

dec_label_pc_28cc7:                               ; preds = %dec_label_pc_28cc0
  %v10_28cc7 = icmp eq i32 %v1_28cb0.ph, 1
  br i1 %v10_28cc7, label %bb38, label %dec_label_pc_28ccc

bb38:                                             ; preds = %dec_label_pc_28cc7
  %v1_28cca = call i32 @function_28d18()
  br label %dec_label_pc_28ccc

dec_label_pc_28ccc.loopexit:                      ; preds = %dec_label_pc_28cb0
  br label %dec_label_pc_28ccc

dec_label_pc_28ccc:                               ; preds = %dec_label_pc_28ccc.loopexit, %bb38, %dec_label_pc_28cc7
  %v0_28ccc = phi i32 [ %v1_28cca, %bb38 ], [ %v0_28cb9, %dec_label_pc_28cc7 ], [ %v0_28cb9, %dec_label_pc_28ccc.loopexit ]
  store i32 %v0_28ccc, i32* @edi, align 4
  %v1_28cce = add i32 %v0_28ccc, 8
  %v2_28cce = inttoptr i32 %v1_28cce to i32*
  %v3_28cce = load i32, i32* %v2_28cce, align 4
  store i32 %v3_28cce, i32* @eax, align 4
  %v1_28cd1 = icmp eq i32 %v3_28cce, 0
  %v1_28cd3 = icmp eq i1 %v1_28cd1, false
  br i1 %v1_28cd3, label %dec_label_pc_28ccc.dec_label_pc_28cc0.backedge_crit_edge, label %dec_label_pc_28cd5

dec_label_pc_28ccc.dec_label_pc_28cc0.backedge_crit_edge: ; preds = %dec_label_pc_28ccc
  %v0_28cc3.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_28cc0.outer

dec_label_pc_28cd5.loopexit:                      ; preds = %dec_label_pc_28cb9
  br label %dec_label_pc_28cd5

dec_label_pc_28cd5:                               ; preds = %dec_label_pc_28ccc, %dec_label_pc_28cd5.loopexit
  %v4_28cd5 = phi i32 [ %v4_28cd512.ph, %dec_label_pc_28cd5.loopexit ], [ %v0_28ccc, %dec_label_pc_28ccc ]
  %v15_28cd5 = icmp eq i32 %v1_28c9e, %v4_28cd5
  br i1 %v15_28cd5, label %bb39, label %dec_label_pc_28cdf

bb39:                                             ; preds = %dec_label_pc_28cd5
  %v1_28cd9 = call i32 @function_29070()
  %v0_28cdf.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_28cdf

dec_label_pc_28cdf:                               ; preds = %bb39, %dec_label_pc_28cd5
  %v0_28cdf = phi i32 [ %v0_28cdf.pre, %bb39 ], [ %v4_28cd5, %dec_label_pc_28cd5 ]
  %v1_28cdf = add i32 %v0_28cdf, 16
  %v2_28cdf = inttoptr i32 %v1_28cdf to i32*
  %v3_28cdf = load i32, i32* %v2_28cdf, align 4
  store i32 %v3_28cdf, i32* @eax, align 4
  %v1_28ce2 = load i32, i32* @edx, align 4
  %v2_28ce2 = sub i32 %v3_28cdf, %v1_28ce2
  %v8_28ce2 = xor i32 %v1_28ce2, %v3_28cdf
  %v9_28ce2 = xor i32 %v2_28ce2, %v3_28cdf
  %v10_28ce2 = and i32 %v9_28ce2, %v8_28ce2
  %v11_28ce2 = icmp slt i32 %v10_28ce2, 0
  %v13_28ce2 = icmp slt i32 %v2_28ce2, 0
  %v2_28ce4 = icmp ne i1 %v13_28ce2, %v11_28ce2
  %v3_28ce4 = zext i1 %v2_28ce4 to i32
  %v4_28ce4 = load i32, i32* @ecx, align 4
  %v5_28ce4 = and i32 %v4_28ce4, -256
  %v6_28ce4 = or i32 %v3_28ce4, %v5_28ce4
  store i32 %v6_28ce4, i32* @ecx, align 4
  %v12_28ce7 = icmp eq i32 %v3_28cdf, %v1_28ce2
  br i1 %v12_28ce7, label %bb40, label %dec_label_pc_28ceb

bb40:                                             ; preds = %dec_label_pc_28cdf
  %v1_28ce9 = call i32 @function_28d48()
  store i32 %v1_28ce9, i32* @eax, align 4
  %v0_28ceb.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_28ceb

dec_label_pc_28ceb:                               ; preds = %bb40, %dec_label_pc_28cdf
  %v3_28d0b17 = phi i32 [ %v1_28ce9, %bb40 ], [ %v3_28cdf, %dec_label_pc_28cdf ]
  %v0_28ceb = phi i32 [ %v0_28ceb.pre, %bb40 ], [ %v6_28ce4, %dec_label_pc_28cdf ]
  %v4_28ceb = trunc i32 %v0_28ceb to i8
  %v5_28ceb = icmp eq i8 %v4_28ceb, 0
  br i1 %v5_28ceb, label %bb41, label %dec_label_pc_28cf3

bb41:                                             ; preds = %dec_label_pc_28ceb
  %v1_28ced = call i32 @function_28f61()
  br label %dec_label_pc_28cf3

dec_label_pc_28cf3:                               ; preds = %bb41, %dec_label_pc_28ceb
  %v3_28d0b = phi i32 [ %v1_28ced, %bb41 ], [ %v3_28d0b17, %dec_label_pc_28ceb ]
  ret i32 %v3_28d0b

; uselistorder directives
  uselistorder i32 %v2_28ce2, { 1, 0 }
  uselistorder i32 %v3_28cdf, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v4_28cd5, { 1, 0 }
  uselistorder i32 %v3_28cce, { 1, 2, 0 }
  uselistorder i32 %v0_28ccc, { 0, 3, 2, 1 }
  uselistorder i32 %v3_28cc0, { 0, 5, 1, 4, 2, 3 }
  uselistorder i32 %v0_28cb9, { 0, 1, 3, 2 }
  uselistorder i32 %v2_28cb0, { 1, 0 }
  uselistorder i32 %v0_28c81, { 1, 5, 6, 2, 0, 4, 3 }
  uselistorder i32 ()* @function_29070, { 1, 0 }
  uselistorder i32 (i32)* @function_29042, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_2903d, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28cd5, { 1, 0 }
  uselistorder label %dec_label_pc_28cc0, { 1, 0 }
}

define i32 @function_28d18() local_unnamed_addr {
dec_label_pc_28d18:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_28d1c = add i32 %tmp, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28d1c = inttoptr i32 %v1_28d1c to i8*
  %v3_28d1c = load i8, i8* %v2_28d1c, align 1
  %v10_28d1c = icmp eq i8 %v3_28d1c, 0
  br i1 %v10_28d1c, label %bb, label %dec_label_pc_28d18.dec_label_pc_28d26_crit_edge

dec_label_pc_28d18.dec_label_pc_28d26_crit_edge:  ; preds = %dec_label_pc_28d18
  %v0_28d26.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_28d26

bb:                                               ; preds = %dec_label_pc_28d18
  %v1_28d20 = call i32 @function_29019()
  store i32 %v1_28d20, i32* @eax, align 4
  br label %dec_label_pc_28d26

dec_label_pc_28d26:                               ; preds = %dec_label_pc_28d18.dec_label_pc_28d26_crit_edge, %bb
  %v0_28d26 = phi i32 [ %v0_28d26.pre, %dec_label_pc_28d18.dec_label_pc_28d26_crit_edge ], [ %v1_28d20, %bb ]
  %v1_28d26 = add i32 %v0_28d26, 20
  %v2_28d26 = inttoptr i32 %v1_28d26 to i8*
  %v3_28d26 = load i8, i8* %v2_28d26, align 1
  %v10_28d26 = icmp eq i8 %v3_28d26, 0
  br i1 %v10_28d26, label %bb3, label %dec_label_pc_28d30

bb3:                                              ; preds = %dec_label_pc_28d26
  %v1_28d2a = call i32 @function_29019()
  br label %dec_label_pc_28d30

dec_label_pc_28d30:                               ; preds = %bb3, %dec_label_pc_28d26
  %v0_28d3d = phi i32 [ %v1_28d2a, %bb3 ], [ %v0_28d26, %dec_label_pc_28d26 ]
  %v1_28d34 = add i32 %tmp, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_28d34 = inttoptr i32 %v1_28d34 to i32*
  %v3_28d34 = load i32, i32* %v2_28d34, align 4
  %v1_28d37 = add i32 %v0_28d3d, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_28d37 = inttoptr i32 %v1_28d37 to i32*
  %v3_28d37 = load i32, i32* %v2_28d37, align 4
  %v5_28d37 = sub i32 %v3_28d37, %v3_28d34
  %v11_28d37 = xor i32 %v3_28d37, %v3_28d34
  %v12_28d37 = xor i32 %v5_28d37, %v3_28d37
  %v13_28d37 = and i32 %v12_28d37, %v11_28d37
  %v14_28d37 = icmp slt i32 %v13_28d37, 0
  %v16_28d37 = icmp slt i32 %v5_28d37, 0
  %v2_28d3a = icmp ne i1 %v16_28d37, %v14_28d37
  %v3_28d3a = zext i1 %v2_28d3a to i32
  %v5_28d3a = and i32 %v3_28d34, -256
  %v6_28d3a = or i32 %v3_28d3a, %v5_28d3a
  store i32 %v6_28d3a, i32* @ecx, align 4
  ret i32 %v0_28d3d

; uselistorder directives
  uselistorder i32 %v5_28d37, { 1, 0 }
  uselistorder i32 %v3_28d34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_28d26, { 1, 0 }
}

define i32 @function_28d48() local_unnamed_addr {
dec_label_pc_28d48:
  %v0_28d51 = load i32, i32* @eax, align 4
  %v10_28d51 = icmp eq i32 %v0_28d51, 1
  br i1 %v10_28d51, label %bb, label %dec_label_pc_28d56

bb:                                               ; preds = %dec_label_pc_28d48
  %v1_28d54 = call i32 @function_28da3()
  br label %dec_label_pc_28d56

dec_label_pc_28d56:                               ; preds = %bb, %dec_label_pc_28d48
  %v3_28d5b3 = phi i32 [ %v1_28d54, %bb ], [ %v0_28d51, %dec_label_pc_28d48 ]
  %v0_28d56 = load i32, i32* @ebx, align 4
  %v1_28d56 = load i32, i32* @edi, align 4
  %v2_28d56 = add i32 %v1_28d56, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_28d56 = inttoptr i32 %v2_28d56 to i32*
  %v4_28d56 = load i32, i32* %v3_28d56, align 4
  %v15_28d56 = icmp eq i32 %v0_28d56, %v4_28d56
  br i1 %v15_28d56, label %bb4, label %dec_label_pc_28d5b

bb4:                                              ; preds = %dec_label_pc_28d56
  %v1_28d59 = call i32 @function_28dd2()
  br label %dec_label_pc_28d5b

dec_label_pc_28d5b:                               ; preds = %bb4, %dec_label_pc_28d56
  %v3_28d5b = phi i32 [ %v1_28d59, %bb4 ], [ %v3_28d5b3, %dec_label_pc_28d56 ]
  ret i32 %v3_28d5b

; uselistorder directives
  uselistorder i32 %v0_28d51, { 1, 0 }
}

define i32 @function_28d5d() local_unnamed_addr {
dec_label_pc_28d5d:
  %v3_28d5d = load i32, i32* @eax, align 4
  ret i32 %v3_28d5d
}

define i32 @function_28d7a() local_unnamed_addr {
dec_label_pc_28d7a:
  %eax.global-to-local = alloca i32, align 4
  %v0_28d7a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28d7a
}

define i32 @function_28d7f(i32 %arg1) local_unnamed_addr {
dec_label_pc_28d7f:
  %edx.global-to-local = alloca i32, align 4
  %v0_28d7f = load i32, i32* %edx.global-to-local, align 4
  %v2_28d7f = icmp slt i32 %v0_28d7f, 0
  br i1 %v2_28d7f, label %bb, label %dec_label_pc_28d87

bb:                                               ; preds = %dec_label_pc_28d7f
  %v1_28d81 = call i32 @function_28f71()
  br label %dec_label_pc_28d87

dec_label_pc_28d87:                               ; preds = %bb, %dec_label_pc_28d7f
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_28d8b = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28d8b = inttoptr i32 %v1_28d8b to i32*
  %v3_28d8b = load i32, i32* %v2_28d8b, align 4
  store i32 %v3_28d8b, i32* @eax, align 4
  %v1_28d8e = icmp eq i32 %v3_28d8b, 0
  br i1 %v1_28d8e, label %bb99, label %dec_label_pc_28d96

bb99:                                             ; preds = %dec_label_pc_28d87
  %v1_28d90 = call i32 @function_28f82()
  store i32 %v1_28d90, i32* @eax, align 4
  br label %dec_label_pc_28d96

dec_label_pc_28d96:                               ; preds = %bb99, %dec_label_pc_28d87
  %v0_28d96 = phi i32 [ %v1_28d90, %bb99 ], [ %v3_28d8b, %dec_label_pc_28d87 ]
  %v1_28d96 = inttoptr i32 %v0_28d96 to i32*
  %v2_28d96 = load i32, i32* %v1_28d96, align 4
  store i32 %v2_28d96, i32* %edx.global-to-local, align 4
  %v1_28d9e = call i32 @function_28b8b(i32 %v0_28d96)
  ret i32 %v1_28d9e

; uselistorder directives
  uselistorder i32 %v0_28d96, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_28da3() local_unnamed_addr {
dec_label_pc_28da3:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_28da3 = load i32, i32* @edi, align 4
  %v1_28da3 = add i32 %v0_28da3, 20
  %v2_28da3 = inttoptr i32 %v1_28da3 to i8*
  %v3_28da3 = load i8, i8* %v2_28da3, align 1
  %v10_28da3 = icmp eq i8 %v3_28da3, 0
  br i1 %v10_28da3, label %bb, label %dec_label_pc_28dad

bb:                                               ; preds = %dec_label_pc_28da3
  %v1_28da7 = call i32 @function_29019()
  br label %dec_label_pc_28dad

dec_label_pc_28dad:                               ; preds = %bb, %dec_label_pc_28da3
  %v1_28db1 = add i32 %tmp, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_28db1 = inttoptr i32 %v1_28db1 to i8*
  %v3_28db1 = load i8, i8* %v2_28db1, align 1
  %v10_28db1 = icmp eq i8 %v3_28db1, 0
  br i1 %v10_28db1, label %bb1, label %dec_label_pc_28dbb

bb1:                                              ; preds = %dec_label_pc_28dad
  %v1_28db5 = call i32 @function_29019()
  br label %dec_label_pc_28dbb

dec_label_pc_28dbb:                               ; preds = %bb1, %dec_label_pc_28dad
  %v0_28dbf = load i32, i32* @edi, align 4
  %v1_28dbf = add i32 %v0_28dbf, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_28dbf = inttoptr i32 %v1_28dbf to i32*
  %v3_28dbf = load i32, i32* %v2_28dbf, align 4
  %v1_28dc2 = add i32 %tmp, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_28dc2 = inttoptr i32 %v1_28dc2 to i32*
  %v3_28dc2 = load i32, i32* %v2_28dc2, align 4
  %v5_28dc2 = sub i32 %v3_28dc2, %v3_28dbf
  %v11_28dc2 = xor i32 %v3_28dc2, %v3_28dbf
  %v12_28dc2 = xor i32 %v5_28dc2, %v3_28dc2
  %v13_28dc2 = and i32 %v12_28dc2, %v11_28dc2
  %v14_28dc2 = icmp slt i32 %v13_28dc2, 0
  %v16_28dc2 = icmp slt i32 %v5_28dc2, 0
  %v2_28dc5 = icmp ne i1 %v16_28dc2, %v14_28dc2
  %v3_28dc5 = zext i1 %v2_28dc5 to i32
  %v5_28dc5 = and i32 %v3_28dbf, -256
  %v6_28dc5 = or i32 %v3_28dc5, %v5_28dc5
  ret i32 %v6_28dc5

; uselistorder directives
  uselistorder i32 %v5_28dc2, { 1, 0 }
  uselistorder i32 %v3_28dbf, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_28dd2() local_unnamed_addr {
dec_label_pc_28dd2:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v2_28dd6 = load i32, i32* @ebx, align 4
  store i32 %v2_28dd6, i32* @ecx, align 4
  ret i32 %tmp2
}

define i32 @function_28de0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_28de0:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_60 = alloca i32, align 4
  %stack_var_76 = alloca i32, align 4
  %v0_28de0 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_28de0, i32* @eax, align 4
  %v0_28de2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_28e1e = add i32 %arg3, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28e1e = inttoptr i32 %v1_28e1e to i8*
  %v1_28e2f = add i32 %arg3, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_28e2f = inttoptr i32 %v1_28e2f to i32*
  br label %dec_label_pc_28dfa

dec_label_pc_28de8:                               ; preds = %dec_label_pc_28dfa
  %v16_28dfa = icmp slt i32 %v5_28dfa, 0
  %v12_28dfa = xor i32 %v5_28dfa, %v0_28dfa
  %v11_28dfa = xor i32 %v4_28dfa, %v0_28dfa
  %v13_28dfa = and i32 %v12_28dfa, %v11_28dfa
  %v14_28dfa = icmp slt i32 %v13_28dfa, 0
  %v2_28de8 = icmp ne i1 %v16_28dfa, %v14_28dfa
  %v3_28de8 = zext i1 %v2_28de8 to i32
  %v5_28de8 = and i32 %v4_28de8, -256
  %v6_28de8 = or i32 %v3_28de8, %v5_28de8
  br label %dec_label_pc_28deb

dec_label_pc_28deb:                               ; preds = %dec_label_pc_28e28, %dec_label_pc_28de8
  %v0_28def = phi i32 [ %v0_28e10, %dec_label_pc_28de8 ], [ %v0_28e2c, %dec_label_pc_28e28 ]
  %storemerge5 = phi i32 [ %v6_28de8, %dec_label_pc_28de8 ], [ %v6_28e32, %dec_label_pc_28e28 ]
  store i32 %storemerge5, i32* %ecx.global-to-local, align 4
  %v4_28deb = trunc i32 %storemerge5 to i8
  %v5_28deb = icmp eq i8 %v4_28deb, 0
  br i1 %v5_28deb, label %dec_label_pc_28e04, label %dec_label_pc_28def

dec_label_pc_28def:                               ; preds = %dec_label_pc_28deb
  %v1_28df3 = add i32 %v0_28def, 8
  br label %dec_label_pc_28df6

dec_label_pc_28df6:                               ; preds = %dec_label_pc_28def, %dec_label_pc_28e04
  %v4_28de89 = phi i32 [ %v4_28de810, %dec_label_pc_28e04 ], [ %storemerge5, %dec_label_pc_28def ]
  %stack_var_52.0 = phi i32 [ %stack_var_52.1, %dec_label_pc_28e04 ], [ %v0_28def, %dec_label_pc_28def ]
  %storemerge4.in.in = phi i32 [ %v1_28e04, %dec_label_pc_28e04 ], [ %v1_28df3, %dec_label_pc_28def ]
  %storemerge4.in = inttoptr i32 %storemerge4.in.in to i32*
  %storemerge4 = load i32, i32* %storemerge4.in, align 4
  store i32 %storemerge4, i32* @eax, align 4
  %v1_28df6 = icmp eq i32 %storemerge4, 0
  br i1 %v1_28df6, label %dec_label_pc_28e68, label %dec_label_pc_28dfa

dec_label_pc_28dfa:                               ; preds = %dec_label_pc_28df6, %dec_label_pc_28de0
  %v4_28de8 = phi i32 [ %v0_28de2, %dec_label_pc_28de0 ], [ %v4_28de89, %dec_label_pc_28df6 ]
  %v0_28e10 = phi i32 [ %v0_28de0, %dec_label_pc_28de0 ], [ %storemerge4, %dec_label_pc_28df6 ]
  %stack_var_52.1 = phi i32 [ %arg7, %dec_label_pc_28de0 ], [ %stack_var_52.0, %dec_label_pc_28df6 ]
  %v0_28dfa = load i32, i32* @edx, align 4
  %v2_28dfa = add i32 %v0_28e10, 16
  %v3_28dfa = inttoptr i32 %v2_28dfa to i32*
  %v4_28dfa = load i32, i32* %v3_28dfa, align 4
  %v5_28dfa = sub i32 %v0_28dfa, %v4_28dfa
  %v15_28dfa = icmp eq i32 %v5_28dfa, 0
  %v1_28dfd = icmp eq i1 %v15_28dfa, false
  br i1 %v1_28dfd, label %dec_label_pc_28de8, label %dec_label_pc_28dff

dec_label_pc_28dff:                               ; preds = %dec_label_pc_28dfa
  %v10_28dff = icmp eq i32 %v0_28dfa, 1
  br i1 %v10_28dff, label %dec_label_pc_28e10, label %dec_label_pc_28e04

dec_label_pc_28e04:                               ; preds = %dec_label_pc_28deb, %dec_label_pc_28dff
  %v0_28e04 = phi i32 [ %v0_28def, %dec_label_pc_28deb ], [ %v0_28e10, %dec_label_pc_28dff ]
  %v4_28de810 = phi i32 [ %storemerge5, %dec_label_pc_28deb ], [ %v4_28de8, %dec_label_pc_28dff ]
  %v1_28e04 = add i32 %v0_28e04, 12
  br label %dec_label_pc_28df6

dec_label_pc_28e10:                               ; preds = %dec_label_pc_28dff
  %v1_28e10 = add i32 %v0_28e10, 20
  %v2_28e10 = inttoptr i32 %v1_28e10 to i8*
  %v3_28e10 = load i8, i8* %v2_28e10, align 1
  %v10_28e10 = icmp eq i8 %v3_28e10, 0
  br i1 %v10_28e10, label %bb, label %dec_label_pc_28e1a

bb:                                               ; preds = %dec_label_pc_28e10
  %v1_28e14 = call i32 @function_29019()
  store i32 %v1_28e14, i32* @eax, align 4
  br label %dec_label_pc_28e1a

dec_label_pc_28e1a:                               ; preds = %bb, %dec_label_pc_28e10
  %v0_28e2c8 = phi i32 [ %v1_28e14, %bb ], [ %v0_28e10, %dec_label_pc_28e10 ]
  store i32 %arg3, i32* %ecx.global-to-local, align 4
  %v3_28e1e = load i8, i8* %v2_28e1e, align 1
  %v10_28e1e = icmp eq i8 %v3_28e1e, 0
  br i1 %v10_28e1e, label %bb144, label %dec_label_pc_28e28

bb144:                                            ; preds = %dec_label_pc_28e1a
  %v1_28e22 = call i32 @function_29019()
  br label %dec_label_pc_28e28

dec_label_pc_28e28:                               ; preds = %bb144, %dec_label_pc_28e1a
  %v0_28e2c = phi i32 [ %v1_28e22, %bb144 ], [ %v0_28e2c8, %dec_label_pc_28e1a ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v1_28e2c = add i32 %v0_28e2c, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_28e2c = inttoptr i32 %v1_28e2c to i32*
  %v3_28e2c = load i32, i32* %v2_28e2c, align 4
  store i32 %v3_28e2c, i32* %ecx.global-to-local, align 4
  %v3_28e2f = load i32, i32* %v2_28e2f, align 4
  %v5_28e2f = sub i32 %v3_28e2f, %v3_28e2c
  %v11_28e2f = xor i32 %v3_28e2f, %v3_28e2c
  %v12_28e2f = xor i32 %v5_28e2f, %v3_28e2f
  %v13_28e2f = and i32 %v12_28e2f, %v11_28e2f
  %v14_28e2f = icmp slt i32 %v13_28e2f, 0
  %v16_28e2f = icmp slt i32 %v5_28e2f, 0
  %v2_28e32 = icmp ne i1 %v16_28e2f, %v14_28e2f
  %v3_28e32 = zext i1 %v2_28e32 to i32
  %v5_28e32 = and i32 %v3_28e2c, -256
  %v6_28e32 = or i32 %v3_28e32, %v5_28e32
  br label %dec_label_pc_28deb

dec_label_pc_28e68:                               ; preds = %dec_label_pc_28df6
  %tmp145 = ptrtoint i32* %arg1 to i32
  %v15_28e6c = icmp eq i32 %stack_var_52.0, %arg5
  store i32 %tmp145, i32* %ebx.global-to-local, align 4
  br i1 %v15_28e6c, label %dec_label_pc_28e81, label %dec_label_pc_28e76

dec_label_pc_28e76:                               ; preds = %dec_label_pc_28e68
  store i32 %stack_var_52.0, i32* %ecx.global-to-local, align 4
  %v1_28e7a = add i32 %stack_var_52.0, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_28e7a = inttoptr i32 %v1_28e7a to i32*
  %v3_28e7a = load i32, i32* %v2_28e7a, align 4
  store i32 %v3_28e7a, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_28e81

dec_label_pc_28e81:                               ; preds = %dec_label_pc_28e76, %dec_label_pc_28e68
  %stack_var_48.0 = phi i32 [ %arg6, %dec_label_pc_28e68 ], [ %v3_28e7a, %dec_label_pc_28e76 ]
  store i32 %stack_var_48.0, i32* @eax, align 4
  %v15_28e85 = icmp eq i32 %v0_28de2, %stack_var_48.0
  store i32 %arg5, i32* @ecx, align 4
  br i1 %v15_28e85, label %bb146, label %dec_label_pc_28e93

bb146:                                            ; preds = %dec_label_pc_28e81
  %v1_28e8d = call i32 @function_28fee()
  br label %dec_label_pc_28e93

dec_label_pc_28e93:                               ; preds = %bb146, %dec_label_pc_28e81
  store i32 %arg3, i32* %edi.global-to-local, align 4
  %v0_28eb0.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_28eb0

dec_label_pc_28ea0:                               ; preds = %dec_label_pc_28eb0
  %v8_28eb3 = xor i32 %v0_28eb3, %v3_28eb0
  %v2_28ea0 = sub i32 %v3_28eb0, %v0_28eb3
  %v9_28ea0 = xor i32 %v2_28ea0, %v3_28eb0
  %v10_28ea0 = and i32 %v9_28ea0, %v8_28eb3
  %v11_28ea0 = icmp slt i32 %v10_28ea0, 0
  %v13_28ea0 = icmp slt i32 %v2_28ea0, 0
  %v2_28ea2 = icmp ne i1 %v13_28ea0, %v11_28ea0
  %v3_28ea2 = zext i1 %v2_28ea2 to i32
  %v5_28ea2 = and i32 %v3_28eb0, -256
  %v6_28ea2 = or i32 %v3_28ea2, %v5_28ea2
  br label %dec_label_pc_28ea5

dec_label_pc_28ea5:                               ; preds = %dec_label_pc_28edc, %dec_label_pc_28ea0
  %v0_28ea9 = phi i32 [ %v0_28eb0, %dec_label_pc_28ea0 ], [ %v0_28edf, %dec_label_pc_28edc ]
  %v0_28ec817 = phi i32 [ %v0_28ec8, %dec_label_pc_28ea0 ], [ %v0_28edc, %dec_label_pc_28edc ]
  %storemerge2 = phi i32 [ %v6_28ea2, %dec_label_pc_28ea0 ], [ %v6_28ee2, %dec_label_pc_28edc ]
  store i32 %storemerge2, i32* @eax, align 4
  %v4_28ea5 = trunc i32 %storemerge2 to i8
  %v5_28ea5 = icmp eq i8 %v4_28ea5, 0
  br i1 %v5_28ea5, label %dec_label_pc_28ebc, label %dec_label_pc_28ea9

dec_label_pc_28ea9:                               ; preds = %dec_label_pc_28ea5
  %v1_28ea9 = add i32 %v0_28ea9, 12
  br label %dec_label_pc_28eac

dec_label_pc_28eac:                               ; preds = %dec_label_pc_28ea9, %dec_label_pc_28ebc
  %v4_28ef726 = phi i32 [ %storemerge2, %dec_label_pc_28ea9 ], [ %v4_28ef727, %dec_label_pc_28ebc ]
  %v0_28ec815 = phi i32 [ %v0_28ec817, %dec_label_pc_28ea9 ], [ %v0_28ec816, %dec_label_pc_28ebc ]
  %storemerge.in.in = phi i32 [ %v1_28ea9, %dec_label_pc_28ea9 ], [ %v1_28ebe, %dec_label_pc_28ebc ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %esi.global-to-local, align 4
  %v1_28eac = icmp eq i32 %storemerge, 0
  br i1 %v1_28eac, label %dec_label_pc_28ee8, label %dec_label_pc_28eb0

dec_label_pc_28eb0:                               ; preds = %dec_label_pc_28eac, %dec_label_pc_28e93
  %v0_28ec8 = phi i32 [ %v0_28ec815, %dec_label_pc_28eac ], [ %arg3, %dec_label_pc_28e93 ]
  %v0_28eb0 = phi i32 [ %storemerge, %dec_label_pc_28eac ], [ %v0_28eb0.pre, %dec_label_pc_28e93 ]
  %v1_28eb0 = add i32 %v0_28eb0, 16
  %v2_28eb0 = inttoptr i32 %v1_28eb0 to i32*
  %v3_28eb0 = load i32, i32* %v2_28eb0, align 4
  store i32 %v3_28eb0, i32* @eax, align 4
  %v0_28eb3 = load i32, i32* @edx, align 4
  %v12_28eb3 = icmp eq i32 %v3_28eb0, %v0_28eb3
  %v1_28eb5 = icmp eq i1 %v12_28eb3, false
  br i1 %v1_28eb5, label %dec_label_pc_28ea0, label %dec_label_pc_28eb7

dec_label_pc_28eb7:                               ; preds = %dec_label_pc_28eb0
  %v10_28eb7 = icmp eq i32 %v0_28eb3, 1
  br i1 %v10_28eb7, label %dec_label_pc_28ec8, label %dec_label_pc_28ebc

dec_label_pc_28ebc:                               ; preds = %dec_label_pc_28ea5, %dec_label_pc_28eb7
  %v4_28ef727 = phi i32 [ %storemerge2, %dec_label_pc_28ea5 ], [ %v3_28eb0, %dec_label_pc_28eb7 ]
  %v0_28ebc = phi i32 [ %v0_28ea9, %dec_label_pc_28ea5 ], [ %v0_28eb0, %dec_label_pc_28eb7 ]
  %v0_28ec816 = phi i32 [ %v0_28ec817, %dec_label_pc_28ea5 ], [ %v0_28ec8, %dec_label_pc_28eb7 ]
  store i32 %v0_28ebc, i32* @ecx, align 4
  %v1_28ebe = add i32 %v0_28ebc, 8
  br label %dec_label_pc_28eac

dec_label_pc_28ec8:                               ; preds = %dec_label_pc_28eb7
  %v1_28ec8 = add i32 %v0_28ec8, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28ec8 = inttoptr i32 %v1_28ec8 to i8*
  %v3_28ec8 = load i8, i8* %v2_28ec8, align 1
  %v10_28ec8 = icmp eq i8 %v3_28ec8, 0
  br i1 %v10_28ec8, label %bb148, label %dec_label_pc_28ed2

bb148:                                            ; preds = %dec_label_pc_28ec8
  %v1_28ecc = call i32 @function_29019()
  store i32 %v1_28ecc, i32* @eax, align 4
  %v0_28ed2.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_28ed2

dec_label_pc_28ed2:                               ; preds = %bb148, %dec_label_pc_28ec8
  %v0_28ed2 = phi i32 [ %v0_28ed2.pre, %bb148 ], [ %v0_28eb0, %dec_label_pc_28ec8 ]
  %v1_28ed2 = add i32 %v0_28ed2, 20
  %v2_28ed2 = inttoptr i32 %v1_28ed2 to i8*
  %v3_28ed2 = load i8, i8* %v2_28ed2, align 1
  %v10_28ed2 = icmp eq i8 %v3_28ed2, 0
  br i1 %v10_28ed2, label %bb149, label %dec_label_pc_28edc

bb149:                                            ; preds = %dec_label_pc_28ed2
  %v1_28ed6 = call i32 @function_29019()
  %v0_28edf.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_28edc

dec_label_pc_28edc:                               ; preds = %bb149, %dec_label_pc_28ed2
  %v0_28edf = phi i32 [ %v0_28edf.pre, %bb149 ], [ %v0_28ed2, %dec_label_pc_28ed2 ]
  %v0_28edc = load i32, i32* %edi.global-to-local, align 4
  %v1_28edc = add i32 %v0_28edc, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_28edc = inttoptr i32 %v1_28edc to i32*
  %v3_28edc = load i32, i32* %v2_28edc, align 4
  %v1_28edf = add i32 %v0_28edf, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_28edf = inttoptr i32 %v1_28edf to i32*
  %v3_28edf = load i32, i32* %v2_28edf, align 4
  %v5_28edf = sub i32 %v3_28edf, %v3_28edc
  %v11_28edf = xor i32 %v3_28edf, %v3_28edc
  %v12_28edf = xor i32 %v5_28edf, %v3_28edf
  %v13_28edf = and i32 %v12_28edf, %v11_28edf
  %v14_28edf = icmp slt i32 %v13_28edf, 0
  %v16_28edf = icmp slt i32 %v5_28edf, 0
  %v2_28ee2 = icmp ne i1 %v16_28edf, %v14_28edf
  %v3_28ee2 = zext i1 %v2_28ee2 to i32
  %v5_28ee2 = and i32 %v3_28edc, -256
  %v6_28ee2 = or i32 %v3_28ee2, %v5_28ee2
  br label %dec_label_pc_28ea5

dec_label_pc_28ee8:                               ; preds = %dec_label_pc_28eac
  %v0_28ee8 = load i32, i32* @ecx, align 4
  %v15_28ee8 = icmp eq i32 %v0_28ee8, %arg5
  br i1 %v15_28ee8, label %dec_label_pc_28f02, label %dec_label_pc_28eee

dec_label_pc_28eee:                               ; preds = %dec_label_pc_28ee8
  %v0_28eee = load i32, i32* @edx, align 4
  %v2_28eee = add i32 %v0_28ee8, 16
  %v3_28eee = inttoptr i32 %v2_28eee to i32*
  %v4_28eee = load i32, i32* %v3_28eee, align 4
  %v5_28eee = sub i32 %v0_28eee, %v4_28eee
  %v11_28eee = xor i32 %v4_28eee, %v0_28eee
  %v12_28eee = xor i32 %v5_28eee, %v0_28eee
  %v13_28eee = and i32 %v12_28eee, %v11_28eee
  %v14_28eee = icmp slt i32 %v13_28eee, 0
  %v15_28eee = icmp eq i32 %v5_28eee, 0
  %v16_28eee = icmp slt i32 %v5_28eee, 0
  br i1 %v15_28eee, label %bb150, label %dec_label_pc_28ef7

bb150:                                            ; preds = %dec_label_pc_28eee
  %v1_28ef1 = call i32 @function_28fc3()
  %v0_28ef7.pre = load i1, i1* @sf, align 1
  %v1_28ef7.pre = load i1, i1* @of, align 1
  br label %dec_label_pc_28ef7

dec_label_pc_28ef7:                               ; preds = %bb150, %dec_label_pc_28eee
  %v4_28ef7 = phi i32 [ %v1_28ef1, %bb150 ], [ %v4_28ef726, %dec_label_pc_28eee ]
  %v1_28ef7 = phi i1 [ %v1_28ef7.pre, %bb150 ], [ %v14_28eee, %dec_label_pc_28eee ]
  %v0_28ef7 = phi i1 [ %v0_28ef7.pre, %bb150 ], [ %v16_28eee, %dec_label_pc_28eee ]
  %v2_28ef7 = icmp ne i1 %v0_28ef7, %v1_28ef7
  %v3_28ef7 = zext i1 %v2_28ef7 to i32
  %v5_28ef7 = and i32 %v4_28ef7, -256
  %v6_28ef7 = or i32 %v3_28ef7, %v5_28ef7
  store i32 %v6_28ef7, i32* @eax, align 4
  %v5_28efa = icmp eq i1 %v2_28ef7, false
  store i32 %v0_28de2, i32* %esi.global-to-local, align 4
  br i1 %v5_28efa, label %dec_label_pc_28ef7.dec_label_pc_28f55_crit_edge, label %dec_label_pc_28f02

dec_label_pc_28ef7.dec_label_pc_28f55_crit_edge:  ; preds = %dec_label_pc_28ef7
  %v1_28f59.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_28f55

dec_label_pc_28f02:                               ; preds = %dec_label_pc_28ef7, %dec_label_pc_28ee8
  %v0_28f06 = load i32, i32* @edx, align 4
  store i32 %v0_28f06, i32* %stack_var_76, align 4
  %v1_28f0f = add i32 %arg4, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_28f0f = inttoptr i32 %v1_28f0f to i8*
  %v3_28f0f = load i8, i8* %v2_28f0f, align 1
  %v10_28f0f = icmp eq i8 %v3_28f0f, 0
  br i1 %v10_28f0f, label %dec_label_pc_28f21, label %dec_label_pc_28f15

dec_label_pc_28f15:                               ; preds = %dec_label_pc_28f02
  br label %dec_label_pc_28f21

dec_label_pc_28f21:                               ; preds = %dec_label_pc_28f15, %dec_label_pc_28f02
  %v2_28f25 = ptrtoint i32* %stack_var_76 to i32
  store i32 %v2_28f25, i32* %esi.global-to-local, align 4
  %v0_28f2d = load i32, i32* @ecx, align 4
  %v1_28f39 = add i32 %arg2, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_28f40 = ptrtoint i32* %stack_var_60 to i32
  %v5_28f47 = call i32 @unknown_512b0(i32 %v2_28f40, i32 %v1_28f39, i32 %v0_28f2d, i32 %v2_28f25)
  store i32 %v5_28f47, i32* @eax, align 4
  %v0_28f4c = load i32, i32* %ebx.global-to-local, align 4
  %v1_28f4c = inttoptr i32 %v0_28f4c to i32*
  %v2_28f4c = load i32, i32* %v1_28f4c, align 4
  store i32 %v2_28f4c, i32* %esi.global-to-local, align 4
  store i32 %v0_28de2, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_28f55

dec_label_pc_28f55:                               ; preds = %dec_label_pc_28ef7.dec_label_pc_28f55_crit_edge, %dec_label_pc_28f21
  %v1_28f59 = phi i32 [ %v1_28f59.pre, %dec_label_pc_28ef7.dec_label_pc_28f55_crit_edge ], [ %v0_28de2, %dec_label_pc_28f21 ]
  %v2_28f59 = add i32 %v1_28f59, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_28f59 = inttoptr i32 %v2_28f59 to i32*
  store i32 %stack_var_52.0, i32* %v3_28f59, align 4
  %v0_28f5c = call i32 @function_28d5d()
  ret i32 %v0_28f5c

; uselistorder directives
  uselistorder i32 %v5_28eee, { 1, 2, 0 }
  uselistorder i32 %v0_28ee8, { 1, 0 }
  uselistorder i32 %v5_28edf, { 1, 0 }
  uselistorder i32 %v3_28edc, { 1, 0, 2 }
  uselistorder i32 %v0_28edc, { 1, 0 }
  uselistorder i32 %v0_28edf, { 1, 0 }
  uselistorder i32 %v0_28ebc, { 1, 0 }
  uselistorder i32 %v3_28eb0, { 3, 0, 6, 1, 5, 2, 4 }
  uselistorder i32 %v0_28eb0, { 2, 0, 3, 1 }
  uselistorder i32 %storemerge2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_28ec817, { 1, 0 }
  uselistorder i32 %v2_28ea0, { 1, 0 }
  uselistorder i32 %v5_28e2f, { 1, 0 }
  uselistorder i32 %v3_28e2c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_28e2c, { 1, 0 }
  uselistorder i32 %v5_28dfa, { 2, 1, 0 }
  uselistorder i32 %v4_28dfa, { 1, 0 }
  uselistorder i32 %v0_28dfa, { 0, 3, 1, 2 }
  uselistorder i32 %v0_28e10, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v4_28de8, { 1, 0 }
  uselistorder i32 %stack_var_52.0, { 3, 2, 1, 0, 4 }
  uselistorder i32 %storemerge5, { 1, 0, 2, 3 }
  uselistorder i32 %v0_28def, { 0, 2, 1 }
  uselistorder i32 %v0_28de2, { 1, 4, 3, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %arg5, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 5, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_28f55, { 1, 0 }
  uselistorder label %dec_label_pc_28ebc, { 1, 0 }
  uselistorder label %dec_label_pc_28eac, { 1, 0 }
  uselistorder label %dec_label_pc_28e04, { 1, 0 }
  uselistorder label %dec_label_pc_28df6, { 1, 0 }
}

define i32 @function_28f61() local_unnamed_addr {
dec_label_pc_28f61:
  %v0_28f61 = load i32, i32* @edx, align 4
  %v1_28f61 = load i32, i32* @eax, align 4
  %v2_28f61 = sub i32 %v0_28f61, %v1_28f61
  %v8_28f61 = xor i32 %v1_28f61, %v0_28f61
  %v9_28f61 = xor i32 %v2_28f61, %v0_28f61
  %v10_28f61 = and i32 %v9_28f61, %v8_28f61
  %v11_28f61 = icmp slt i32 %v10_28f61, 0
  %v13_28f61 = icmp slt i32 %v2_28f61, 0
  %v2_28f69 = icmp ne i1 %v13_28f61, %v11_28f61
  %v3_28f69 = zext i1 %v2_28f69 to i32
  %v5_28f69 = and i32 %v1_28f61, -256
  %v6_28f69 = or i32 %v3_28f69, %v5_28f69
  ret i32 %v6_28f69

; uselistorder directives
  uselistorder i32 %v2_28f61, { 1, 0 }
  uselistorder i32 %v1_28f61, { 1, 0, 2 }
}

define i32 @function_28f71() local_unnamed_addr {
dec_label_pc_28f71:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_28f75 = add i32 %tmp1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28f75 = inttoptr i32 %v1_28f75 to i32*
  %v3_28f75 = load i32, i32* %v2_28f75, align 4
  %v1_28f78 = inttoptr i32 %v3_28f75 to i32*
  %v2_28f78 = load i32, i32* %v1_28f78, align 4
  ret i32 %v2_28f78
}

define i32 @function_28f82() local_unnamed_addr {
dec_label_pc_28f82:
  %v3_28f9a = load i32, i32* @eax, align 4
  ret i32 %v3_28f9a
}

define i32 @function_28fa5() local_unnamed_addr {
dec_label_pc_28fa5:
  %eax.global-to-local = alloca i32, align 4
  %v0_28fa5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28fa5
}

define i32 @function_28fa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_28fa8:
  %edi.global-to-local = alloca i32, align 4
  %v1_28fac = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28fac = inttoptr i32 %v1_28fac to i32*
  %v3_28fac = load i32, i32* %v2_28fac, align 4
  %v1_28faf = add i32 %v3_28fac, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28faf = inttoptr i32 %v1_28faf to i32*
  %v3_28faf = load i32, i32* %v2_28faf, align 4
  store i32 %v3_28faf, i32* @eax, align 4
  %v1_28fb2 = icmp eq i32 %v3_28faf, 0
  %v1_28fb4 = icmp eq i1 %v1_28fb2, false
  br i1 %v1_28fb4, label %bb, label %dec_label_pc_28fba

bb:                                               ; preds = %dec_label_pc_28fa8
  %v2_28fb4 = call i32 @function_28b83()
  store i32 %v2_28fb4, i32* @eax, align 4
  br label %dec_label_pc_28fba

dec_label_pc_28fba:                               ; preds = %bb, %dec_label_pc_28fa8
  %v0_28fba = load i32, i32* %edi.global-to-local, align 4
  %v1_28fba = add i32 %v0_28fba, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_28fba = inttoptr i32 %v1_28fba to i8*
  store i8 0, i8* %v2_28fba, align 1
  %v0_28fbe = call i32 @function_28ba9()
  ret i32 %v0_28fbe
}

define i32 @function_28fc3() local_unnamed_addr {
dec_label_pc_28fc3:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_28fcc = load i32, i32* @ecx, align 4
  %v1_28fcc = add i32 %v0_28fcc, 20
  %v2_28fcc = inttoptr i32 %v1_28fcc to i8*
  %v3_28fcc = load i8, i8* %v2_28fcc, align 1
  %v10_28fcc = icmp eq i8 %v3_28fcc, 0
  br i1 %v10_28fcc, label %bb, label %dec_label_pc_28fd2

bb:                                               ; preds = %dec_label_pc_28fc3
  %v1_28fd0 = call i32 @function_29019()
  store i32 %v1_28fd0, i32* @eax, align 4
  br label %dec_label_pc_28fd2

dec_label_pc_28fd2:                               ; preds = %bb, %dec_label_pc_28fc3
  %v1_28fd6 = add i32 %tmp, ptrtoint (i8** @global_var_48.3313 to i32)
  %v2_28fd6 = inttoptr i32 %v1_28fd6 to i8*
  %v3_28fd6 = load i8, i8* %v2_28fd6, align 1
  %v10_28fd6 = icmp eq i8 %v3_28fd6, 0
  br i1 %v10_28fd6, label %bb3, label %dec_label_pc_28fdc

bb3:                                              ; preds = %dec_label_pc_28fd2
  %v1_28fda = call i32 @function_29019()
  br label %dec_label_pc_28fdc

dec_label_pc_28fdc:                               ; preds = %bb3, %dec_label_pc_28fd2
  %v0_28fe0 = load i32, i32* @ecx, align 4
  %v1_28fe0 = add i32 %v0_28fe0, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_28fe0 = inttoptr i32 %v1_28fe0 to i32*
  %v3_28fe0 = load i32, i32* %v2_28fe0, align 4
  %v1_28fe3 = add i32 %tmp, ptrtoint (i32* @global_var_4c.3290 to i32)
  %v2_28fe3 = inttoptr i32 %v1_28fe3 to i32*
  %v3_28fe3 = load i32, i32* %v2_28fe3, align 4
  %v5_28fe3 = sub i32 %v3_28fe3, %v3_28fe0
  %v11_28fe3 = xor i32 %v3_28fe3, %v3_28fe0
  %v12_28fe3 = xor i32 %v5_28fe3, %v3_28fe3
  %v13_28fe3 = and i32 %v12_28fe3, %v11_28fe3
  %v14_28fe3 = icmp slt i32 %v13_28fe3, 0
  store i1 %v14_28fe3, i1* @of, align 1
  %v16_28fe3 = icmp slt i32 %v5_28fe3, 0
  store i1 %v16_28fe3, i1* @sf, align 1
  %v2_28fe6 = icmp ne i1 %v16_28fe3, %v14_28fe3
  %v3_28fe6 = zext i1 %v2_28fe6 to i32
  %v5_28fe6 = and i32 %tmp, -256
  %v6_28fe6 = or i32 %v3_28fe6, %v5_28fe6
  ret i32 %v6_28fe6

; uselistorder directives
  uselistorder i32 %v5_28fe3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i1* @sf, { 5, 0, 3, 1, 4, 2 }
  uselistorder i1* @of, { 6, 0, 4, 1, 3, 5, 2 }
  uselistorder i32 ptrtoint (i8** @global_var_48.3313 to i32), { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_29019, { 5, 4, 3, 2, 1, 0, 9, 8, 7, 6 }
}

define i32 @function_28fde() local_unnamed_addr {
dec_label_pc_28fde:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_28fee() local_unnamed_addr {
dec_label_pc_28fee:
  %v3_28ff2 = load i32, i32* @eax, align 4
  ret i32 %v3_28ff2
}

define i32 @function_2900b() local_unnamed_addr {
dec_label_pc_2900b:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2900b = load i32, i32* %ebx.global-to-local, align 4
  %v1_2900b = add i32 %v0_2900b, -2095831948
  %v2_2900b = inttoptr i32 %v1_2900b to i32*
  %v3_2900b = load i32, i32* %v2_2900b, align 4
  %v4_2900b = sub i32 %v3_2900b, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2900b, i32* %v2_2900b, align 4
  %v0_29011 = load i32, i32* %edx.global-to-local, align 4
  %v1_29011 = trunc i32 %v0_29011 to i16
  %v4_29011 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_29011, i8 %v4_29011)
  %v0_29012 = load i32, i32* %eax.global-to-local, align 4
  %v1_29012 = trunc i32 %v0_29012 to i8
  %v2_29012 = load i1, i1* %cf.global-to-local, align 1
  %v3_29012 = zext i1 %v2_29012 to i32
  %v4_29012 = sub i32 %v0_29012, zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32)
  %v5_29012 = add i32 %v4_29012, %v3_29012
  %v17_29012 = icmp eq i8 %v1_29012, 0
  %v18_29012 = or i1 %v2_29012, %v17_29012
  store i1 %v18_29012, i1* %cf.global-to-local, align 1
  %v31_29012 = and i32 %v5_29012, 255
  %v33_29012 = and i32 %v0_29012, -256
  %v34_29012 = or i32 %v31_29012, %v33_29012
  store i32 %v34_29012, i32* %eax.global-to-local, align 4
  ret i32 %v34_29012

; uselistorder directives
  uselistorder i1 %v2_29012, { 1, 0 }
  uselistorder i32 %v0_29012, { 1, 0, 2 }
  uselistorder i32 zext (i8 ptrtoint (i8** @global_var_1.3274 to i8) to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
}

define i32 @function_29019() local_unnamed_addr {
dec_label_pc_29019:
  %v3_29031 = load i32, i32* @eax, align 4
  ret i32 %v3_29031
}

define i32 @function_2903d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2903d:
  %v0_2903d = call i32 @unknown_39e8a()
  ret i32 %v0_2903d
}

define i32 @function_29042(i32 %arg1) local_unnamed_addr {
dec_label_pc_29042:
  %v0_29042 = call i32 @function_39fc2()
  ret i32 %v0_29042
}

define i32 @function_29047() local_unnamed_addr {
dec_label_pc_29047:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2904c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2904c:
  %v3_29064 = load i32, i32* @eax, align 4
  ret i32 %v3_29064
}

define i32 @function_29070() local_unnamed_addr {
dec_label_pc_29070:
  %v3_29088 = load i32, i32* @eax, align 4
  ret i32 %v3_29088
}

define i32 @function_29095() local_unnamed_addr {
dec_label_pc_29095:
  %eax.global-to-local = alloca i32, align 4
  %v0_29095 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29095
}

define i32 @function_290a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_290a6:
  %v4_290a6 = load i32, i32* @eax, align 4
  ret i32 %v4_290a6
}

define i32 @function_290b0(i8 %arg1) local_unnamed_addr {
dec_label_pc_290b0:
  %stack_var_0 = alloca i8, align 1
  %v2_290b2 = ptrtoint i8* %stack_var_0 to i32
  %v0_290b5 = load i32, i32* @ebx, align 4
  %v1_290b5 = lshr i32 %v0_290b5, ptrtoint (i8** @global_var_8.3277 to i32)
  %v5_290b5 = add i32 %v1_290b5, %v2_290b2
  %v20_290b5 = mul i32 %v5_290b5, 256
  %v22_290b5 = and i32 %v20_290b5, 65280
  %v23_290b5 = and i32 %v0_290b5, -65281
  %v24_290b5 = or i32 %v22_290b5, %v23_290b5
  store i32 %v24_290b5, i32* @ebx, align 4
  %v0_290ba = load i16, i16* @gs, align 2
  %v1_290ba = load i32, i32* @ebp, align 4
  %v2_290ba = add i32 %v1_290ba, 80150528
  %v3_290ba = inttoptr i32 %v2_290ba to i16*
  store i16 %v0_290ba, i16* %v3_290ba, align 2
  ret i32 %v2_290b2

; uselistorder directives
  uselistorder i32 %v2_290b2, { 1, 0 }
}

define i32 @_ZNK5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvS4_SB_EESH_EEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29120:
  %v1_29143 = add i32 %arg1, 12
  ret i32 %v1_29143
}

define i32 @function_2916e() local_unnamed_addr {
dec_label_pc_2916e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29179(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29179:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_29179 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29179 = add i32 %v0_29179, 1698440276
  %v2_29179 = inttoptr i32 %v1_29179 to i32*
  %v3_29179 = load i32, i32* %v2_29179, align 4
  %v4_29179 = add i32 %v3_29179, -1
  store i32 %v4_29179, i32* %v2_29179, align 4
  %v0_2917f = load i32, i32* %edx.global-to-local, align 4
  %v1_2917f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2917f = xor i32 %v1_2917f, %v0_2917f
  %v3_2917f = icmp eq i32 %v2_2917f, 0
  store i32 %v2_2917f, i32* %edx.global-to-local, align 4
  %v1_29185 = icmp eq i1 %v3_2917f, false
  br i1 %v1_29185, label %bb, label %dec_label_pc_29179.dec_label_pc_2918b_crit_edge

dec_label_pc_29179.dec_label_pc_2918b_crit_edge:  ; preds = %dec_label_pc_29179
  %v0_2919e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2918b

bb:                                               ; preds = %dec_label_pc_29179
  %v2_29185 = call i32 @function_292c5()
  br label %dec_label_pc_2918b

dec_label_pc_2918b:                               ; preds = %dec_label_pc_29179.dec_label_pc_2918b_crit_edge, %bb
  %v0_2919e = phi i32 [ %v0_2919e.pre, %dec_label_pc_29179.dec_label_pc_2918b_crit_edge ], [ %v2_29185, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_2919e

; uselistorder directives
  uselistorder label %dec_label_pc_2918b, { 1, 0 }
}

define i32 @function_29248() local_unnamed_addr {
dec_label_pc_29248:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_56 = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %v0_29248 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29248 = add i32 %v0_29248, -953408428
  %v2_29248 = inttoptr i32 %v1_29248 to i32*
  %v3_29248 = load i32, i32* %v2_29248, align 4
  %v4_29248 = sub i32 %v3_29248, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_29248, i32* %v2_29248, align 4
  %v0_2924e = load i32, i32* %eax.global-to-local, align 4
  %v4_2924e = mul i32 %v0_2924e, 2
  %v19_2924e = and i32 %v4_2924e, 254
  %v21_2924e = and i32 %v0_2924e, -256
  %v22_2924e = or i32 %v19_2924e, %v21_2924e
  %v1_29250 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v22_2924e, i32* %ebx.global-to-local, align 4
  %v4_29251 = add i32 %v22_2924e, %v1_29250
  store i32 %v4_29251, i32* %eax.global-to-local, align 4
  %v1_29253 = add i32 %v4_29251, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29253 = inttoptr i32 %v1_29253 to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_29253, align 4
  %v0_2925a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2925a = load i32, i32* %eax.global-to-local, align 4
  %v2_2925a = add i32 %v1_2925a, 12
  %v3_2925a = inttoptr i32 %v2_2925a to i32*
  store i32 %v0_2925a, i32* %v3_2925a, align 4
  %v0_2925f = load i32, i32* %eax.global-to-local, align 4
  %v1_2925f = add i32 %v0_2925f, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2925f = inttoptr i32 %v1_2925f to i32*
  store i32 ptrtoint (i8** @global_var_1.3274 to i32), i32* %v2_2925f, align 4
  %v0_29266 = load i32, i32* %edx.global-to-local, align 4
  %v1_29266 = load i32, i32* %ebx.global-to-local, align 4
  %v2_29266 = inttoptr i32 %v1_29266 to i32*
  store i32 %v0_29266, i32* %v2_29266, align 4
  %v0_29268 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29268 = add i32 %v0_29268, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29268 = inttoptr i32 %v1_29268 to i32*
  %v3_29268 = load i32, i32* %v2_29268, align 4
  store i32 %v3_29268, i32* %edx.global-to-local, align 4
  %v0_2926b = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_2926b, i32* %v2_29268, align 4
  %v2_2926e = ptrtoint i32* %stack_var_48 to i32
  store i32 %v2_2926e, i32* @eax, align 4
  %v0_29279 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_29279, i32* %stack_var_48, align 4
  %v1_2927d = call i32 @function_3cb80(i32 %v2_2926e)
  store i32 %v1_2927d, i32* %eax.global-to-local, align 4
  %v0_29282 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29282 = inttoptr i32 %v0_29282 to i32*
  %v2_29282 = load i32, i32* %v1_29282, align 4
  store i32 %v2_29282, i32* @eax, align 4
  %v1_29284 = icmp eq i32 %v2_29282, 0
  br i1 %v1_29284, label %dec_label_pc_292be, label %dec_label_pc_29288

dec_label_pc_29288:                               ; preds = %dec_label_pc_29248
  %v1_29288 = inttoptr i32 %v2_29282 to i32*
  %v2_29288 = load i32, i32* %v1_29288, align 4
  %v1_2928a = icmp eq i32 %v2_29288, 0
  br i1 %v1_2928a, label %dec_label_pc_292b9, label %dec_label_pc_2928e

dec_label_pc_2928e:                               ; preds = %dec_label_pc_29288
  %v1_2928e = inttoptr i32 %v2_29288 to i32*
  %v2_2928e = load i32, i32* %v1_2928e, align 4
  store i32 %v2_2928e, i32* %stack_var_56, align 4
  %v2_292a7 = ptrtoint i32* %stack_var_56 to i32
  store i32 %v2_292a7, i32* %eax.global-to-local, align 4
  %v4_292af = call i32 @unknown_51b70(i32 %v0_29282, i32 0, i32 %v2_292a7, i32 0)
  store i32 %v4_292af, i32* @eax, align 4
  %v0_292b4 = call i32 @function_2916e()
  store i32 %v0_292b4, i32* %eax.global-to-local, align 4
  ret i32 %v0_292b4

dec_label_pc_292b9:                               ; preds = %dec_label_pc_29288
  %v0_292b9 = call i32 @unknown_3a692()
  store i32 %v0_292b9, i32* @eax, align 4
  br label %dec_label_pc_292be

dec_label_pc_292be:                               ; preds = %dec_label_pc_292b9, %dec_label_pc_29248
  %v0_292c0 = call i32 @function_3a55a()
  store i32 %v0_292c0, i32* %eax.global-to-local, align 4
  ret i32 %v0_292c0

; uselistorder directives
  uselistorder i32 %v0_2924e, { 1, 0 }
  uselistorder i32 254, { 3, 0, 4, 1, 2 }
}

define i32 @function_292c5() local_unnamed_addr {
dec_label_pc_292c5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29304() local_unnamed_addr {
dec_label_pc_29304:
  %eax.global-to-local = alloca i32, align 4
  %v0_29304 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29304
}

define i32 @function_29311() local_unnamed_addr {
dec_label_pc_29311:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29319() local_unnamed_addr {
dec_label_pc_29319:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2932c() local_unnamed_addr {
dec_label_pc_2932c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2932c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2932c = add i32 %v0_2932c, -1981223997
  %v2_2932c = inttoptr i32 %v1_2932c to i32*
  %v3_2932c = load i32, i32* %v2_2932c, align 4
  %v4_2932c = sub i32 %v3_2932c, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_2932c, i32* %v2_2932c, align 4
  %v0_29332 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29332
}

define i32 @function_29333() local_unnamed_addr {
dec_label_pc_29333:
  %v0_29333 = call i32 @function_29311()
  ret i32 %v0_29333
}

define i32 @function_2934f() local_unnamed_addr {
dec_label_pc_2934f:
  %eax.global-to-local = alloca i32, align 4
  %v0_2934f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2934f
}

define i32 @function_29355() local_unnamed_addr {
dec_label_pc_29355:
  %v0_29355 = call i32 @function_29319()
  ret i32 %v0_29355
}

define i32 @function_29358() local_unnamed_addr {
dec_label_pc_29358:
  %eax.global-to-local = alloca i32, align 4
  %v0_29358 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29358
}

define i32 @function_2935d() local_unnamed_addr {
dec_label_pc_2935d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2935d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2935d
}

define i32 @function_29360() local_unnamed_addr {
dec_label_pc_29360:
  %v0_29360 = call i32 @function_29311()
  ret i32 %v0_29360

; uselistorder directives
  uselistorder i32 ()* @function_29311, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal1_implIvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_EEENS9_IFvRKNS0_10connectionES4_EEENS0_5mutexEEclES4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29370:
  %v1_293a7 = add i32 %arg1, 12
  ret i32 %v1_293a7
}

define i32 @function_293d7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_293d7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_293e3() local_unnamed_addr {
dec_label_pc_293e3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29412(i32* %arg1) local_unnamed_addr {
dec_label_pc_29412:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_68 = alloca i32, align 4
  %stack_var_36 = alloca i32, align 4
  %tmp126 = ptrtoint i32* %arg1 to i32
  %stack_var_52 = alloca i32, align 4
  %stack_var_116 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_29412 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29412 = add i32 %v0_29412, -1923603388
  %v2_29412 = inttoptr i32 %v1_29412 to i32*
  %v3_29412 = load i32, i32* %v2_29412, align 4
  %v4_29412 = sub i32 %v3_29412, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_29412, i32* %v2_29412, align 4
  %v4_29418 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_29418, i32* %stack_var_-4, align 4
  %v0_29419 = load i32, i32* %eax.global-to-local, align 4
  %v11_29419 = and i32 %v0_29419, -132
  store i32 %v11_29419, i32* @eax, align 4
  store i8 0, i8* %stack_var_116, align 1
  %v0_2942b = load i32, i32* %edx.global-to-local, align 4
  %v1_2942f = icmp eq i32 %v11_29419, 0
  br i1 %v1_2942f, label %bb, label %dec_label_pc_29466

bb:                                               ; preds = %dec_label_pc_29412
  %v2_29460 = call i32 @function_29830(i32 %v4_29418)
  store i32 %v2_29460, i32* @eax, align 4
  br label %dec_label_pc_29466

dec_label_pc_29466:                               ; preds = %bb, %dec_label_pc_29412
  %v0_29466 = phi i32 [ %v2_29460, %bb ], [ %v11_29419, %dec_label_pc_29412 ]
  %v1_29466 = inttoptr i32 %v0_29466 to i32*
  %v2_29466 = load i32, i32* %v1_29466, align 4
  %v1_29468 = icmp eq i32 %v2_29466, 0
  br i1 %v1_29468, label %bb141, label %dec_label_pc_29470

bb141:                                            ; preds = %dec_label_pc_29466
  %v1_2946a = call i32 @function_2982b()
  store i32 %v1_2946a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29470

dec_label_pc_29470:                               ; preds = %bb141, %dec_label_pc_29466
  %v2_29470 = ptrtoint i8* %stack_var_116 to i32
  %v2_29474 = ptrtoint i32* %stack_var_52 to i32
  store i32 %v2_29474, i32* %eax.global-to-local, align 4
  store i32 %v2_29466, i32* %stack_var_52, align 4
  store i32 %v2_29474, i32* %stack_var_-4, align 4
  %v1_2948b = call i32 @unknown_47540(i32 %v2_29474)
  store i32 %tmp126, i32* @eax, align 4
  %v1_29494 = icmp eq i32* %arg1, null
  br i1 %v1_29494, label %bb142, label %dec_label_pc_2949c

bb142:                                            ; preds = %dec_label_pc_29470
  %v1_29496 = load i32, i32* %stack_var_-4, align 4
  %v2_29496 = call i32 @function_29830(i32 %v1_29496)
  store i32 %v2_29496, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2949c

dec_label_pc_2949c:                               ; preds = %bb142, %dec_label_pc_29470
  %v0_2949c = phi i32 [ %v2_29496, %bb142 ], [ %tmp126, %dec_label_pc_29470 ]
  %v1_2949c = inttoptr i32 %v0_2949c to i32*
  %v2_2949c = load i32, i32* %v1_2949c, align 4
  store i32 %v2_2949c, i32* @eax, align 4
  %v1_2949e = icmp eq i32 %v2_2949c, 0
  br i1 %v1_2949e, label %bb143, label %dec_label_pc_294a6

bb143:                                            ; preds = %dec_label_pc_2949c
  %v1_294a0 = call i32 @function_2982b()
  store i32 %v1_294a0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_294a6

dec_label_pc_294a6:                               ; preds = %bb143, %dec_label_pc_2949c
  %v0_294a6 = phi i32 [ %v1_294a0, %bb143 ], [ %v2_2949c, %dec_label_pc_2949c ]
  %v1_294a6 = inttoptr i32 %v0_294a6 to i32*
  %v2_294a6 = load i32, i32* %v1_294a6, align 4
  %v2_294b0 = ptrtoint i32* %stack_var_36 to i32
  store i32 %v2_294b0, i32* %eax.global-to-local, align 4
  store i32 %v2_294b0, i32* %stack_var_-4, align 4
  store i32 %v2_294a6, i32* %stack_var_36, align 4
  store i32 %v2_29470, i32* %edx.global-to-local, align 4
  %v1_294c3 = call i32 @unknown_47540(i32 %v2_294b0)
  store i32 %tmp126, i32* @eax, align 4
  br i1 %v1_29494, label %bb144, label %dec_label_pc_294d4

bb144:                                            ; preds = %dec_label_pc_294a6
  %v2_294ce = call i32 @function_29830(i32 %v2_29470)
  store i32 %v2_294ce, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_294d4

dec_label_pc_294d4:                               ; preds = %bb144, %dec_label_pc_294a6
  %v0_294d4 = phi i32 [ %v2_294ce, %bb144 ], [ %tmp126, %dec_label_pc_294a6 ]
  %v1_294d4 = add i32 %v0_294d4, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_294d4 = inttoptr i32 %v1_294d4 to i32*
  %v3_294d4 = load i32, i32* %v2_294d4, align 4
  store i32 %v3_294d4, i32* @eax, align 4
  %v1_294d7 = icmp eq i32 %v3_294d4, 0
  br i1 %v1_294d7, label %bb145, label %dec_label_pc_294df

bb145:                                            ; preds = %dec_label_pc_294d4
  %v1_294d9 = call i32 @function_29802()
  store i32 %v1_294d9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_294df

dec_label_pc_294df:                               ; preds = %bb145, %dec_label_pc_294d4
  %v2_294e3 = ptrtoint i32* %stack_var_68 to i32
  store i32 %v2_294e3, i32* %ebx.global-to-local, align 4
  %v3_294e7 = load i32, i32* %stack_var_36, align 4
  store i32 %v3_294e7, i32* %eax.global-to-local, align 4
  %v3_294eb = load i32, i32* %stack_var_52, align 4
  store i32 %v3_294eb, i32* %esi.global-to-local, align 4
  store i32 %v3_294e7, i32* %stack_var_68, align 4
  store i32 %v0_294a6, i32* %edx.global-to-local, align 4
  %v1_2953b = add i32 %v2_29470, ptrtoint (i32* @global_var_88.3507 to i32)
  %v2_2953b = inttoptr i32 %v1_2953b to i32*
  br label %dec_label_pc_2952b

dec_label_pc_29510:                               ; preds = %dec_label_pc_29570, %dec_label_pc_2952f
  %v0_29510 = phi i32 [ %v3_29570, %dec_label_pc_29570 ], [ %v0_29538, %dec_label_pc_2952f ]
  %v1_29510 = inttoptr i32 %v0_29510 to i32*
  %v2_29510 = load i32, i32* %v1_29510, align 4
  store i32 %v2_29510, i32* %eax.global-to-local, align 4
  store i32 %v2_294e3, i32* %stack_var_-4, align 4
  store i32 %v2_29510, i32* %stack_var_68, align 4
  %v1_29519 = call i32 @unknown_47540(i32 %v2_294e3)
  store i32 %v2_29470, i32* %eax.global-to-local, align 4
  %v2_29522 = load i8, i8* %stack_var_116, align 1
  %v9_29522 = icmp eq i8 %v2_29522, 0
  %v1_29525 = icmp eq i1 %v9_29522, false
  br i1 %v1_29525, label %dec_label_pc_29578, label %dec_label_pc_29527

dec_label_pc_29527:                               ; preds = %dec_label_pc_29578, %dec_label_pc_29510
  %v3_29527 = load i32, i32* %stack_var_68, align 4
  store i32 %v3_29527, i32* %eax.global-to-local, align 4
  %v0_2952b.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_2952b

dec_label_pc_2952b:                               ; preds = %dec_label_pc_29527, %dec_label_pc_294df
  %v0_29538 = phi i32 [ %v3_29527, %dec_label_pc_29527 ], [ %v3_294e7, %dec_label_pc_294df ]
  %v0_2952b = phi i32 [ %v0_2952b.pre, %dec_label_pc_29527 ], [ %v3_294eb, %dec_label_pc_294df ]
  %v12_2952b = icmp eq i32 %v0_2952b, %v0_29538
  br i1 %v12_2952b, label %dec_label_pc_29580, label %dec_label_pc_2952f

dec_label_pc_2952f:                               ; preds = %dec_label_pc_2952b
  store i32 %v2_29470, i32* %edx.global-to-local, align 4
  %v2_29533 = load i8, i8* %stack_var_116, align 1
  %v9_29533 = icmp eq i8 %v2_29533, 0
  %v1_29536 = icmp eq i1 %v9_29533, false
  br i1 %v1_29536, label %dec_label_pc_29510, label %dec_label_pc_29538

dec_label_pc_29538:                               ; preds = %dec_label_pc_2952f
  %v1_29538 = add i32 %v0_29538, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_29538 = inttoptr i32 %v1_29538 to i32*
  %v3_29538 = load i32, i32* %v2_29538, align 4
  store i32 %v3_29538, i32* @eax, align 4
  %v3_2953b = load i32, i32* %v2_2953b, align 4
  store i32 %v3_2953b, i32* @ecx, align 4
  %v1_29541 = icmp eq i32 %v3_29538, 0
  br i1 %v1_29541, label %bb146, label %dec_label_pc_29549

bb146:                                            ; preds = %dec_label_pc_29538
  %v1_29543 = call i32 @function_296f1()
  store i32 %v1_29543, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29549

dec_label_pc_29549:                               ; preds = %bb146, %dec_label_pc_29538
  %v0_29549 = phi i32 [ %v1_29543, %bb146 ], [ %v3_29538, %dec_label_pc_29538 ]
  %v1_29549 = add i32 %v0_29549, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_29549 = inttoptr i32 %v1_29549 to i32*
  %v3_29549 = load i32, i32* %v2_29549, align 4
  store i32 %v3_29549, i32* %edx.global-to-local, align 4
  %v1_2954c = icmp eq i32 %v3_29549, 0
  br i1 %v1_2954c, label %bb147, label %dec_label_pc_29554

bb147:                                            ; preds = %dec_label_pc_29549
  %v1_2954e = call i32 @function_296f6()
  store i32 %v1_2954e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29554

dec_label_pc_29554:                               ; preds = %bb147, %dec_label_pc_29549
  %v0_29554 = phi i32 [ %v1_2954e, %bb147 ], [ %v0_29549, %dec_label_pc_29549 ]
  %v1_29554 = add i32 %v0_29554, ptrtoint (i32* @global_var_20.3279 to i32)
  %v1_29557 = and i32 %v3_29549, -2
  store i32 %v1_29557, i32* %edx.global-to-local, align 4
  %v0_2955a = load i32, i32* @ecx, align 4
  store i32 %v0_2955a, i32* %stack_var_0, align 4
  store i32 %v1_29554, i32* %stack_var_-4, align 4
  store i32 %v2_29470, i32* %eax.global-to-local, align 4
  %v2_29568 = load i8, i8* %stack_var_116, align 1
  %v9_29568 = icmp eq i8 %v2_29568, 0
  %v1_2956b = icmp eq i1 %v9_29568, false
  br i1 %v1_2956b, label %dec_label_pc_29570, label %dec_label_pc_2956d

dec_label_pc_2956d:                               ; preds = %dec_label_pc_29554
  store i8 ptrtoint (i8** @global_var_1.3274 to i8), i8* %stack_var_116, align 1
  br label %dec_label_pc_29570

dec_label_pc_29570:                               ; preds = %dec_label_pc_2956d, %dec_label_pc_29554
  %v3_29570 = load i32, i32* %stack_var_68, align 4
  store i32 %v3_29570, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29510

dec_label_pc_29578:                               ; preds = %dec_label_pc_29510
  store i8 0, i8* %stack_var_116, align 1
  br label %dec_label_pc_29527

dec_label_pc_29580:                               ; preds = %dec_label_pc_2952b
  store i32 %v0_2942b, i32* @eax, align 4
  %v1_29597 = icmp eq i32 %v0_2942b, 0
  br i1 %v1_29597, label %bb148, label %dec_label_pc_2959b

bb148:                                            ; preds = %dec_label_pc_29580
  %v1_29599 = call i32 @function_295d5()
  store i32 %v1_29599, i32* @eax, align 4
  br label %dec_label_pc_2959b

dec_label_pc_2959b:                               ; preds = %bb148, %dec_label_pc_29580
  %v0_295ab = phi i32 [ %v1_29599, %bb148 ], [ %v0_2942b, %dec_label_pc_29580 ]
  store i32 10, i32* @edx, align 4
  %v15_295ab = icmp eq i32 %v0_295ab, %v0_2942b
  br i1 %v15_295ab, label %bb149, label %dec_label_pc_295c4

bb149:                                            ; preds = %dec_label_pc_2959b
  %v1_295af = call i32 @function_296d0()
  store i32 %v1_295af, i32* %eax.global-to-local, align 4
  %v0_295bc.pre = load i32, i32* @edx, align 4
  %phitmp = icmp ult i32 %v0_295bc.pre, 11
  br label %dec_label_pc_295c4

dec_label_pc_295c4:                               ; preds = %dec_label_pc_2959b, %bb149
  %v0_295cd16 = phi i32 [ %v1_295af, %bb149 ], [ %v0_295ab, %dec_label_pc_2959b ]
  %v0_295bc = phi i1 [ %phitmp, %bb149 ], [ true, %dec_label_pc_2959b ]
  br i1 %v0_295bc, label %bb151, label %dec_label_pc_295cd

bb151:                                            ; preds = %dec_label_pc_295c4
  %v3_295cb = call i32 @function_295d5()
  store i32 %v3_295cb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_295cd

dec_label_pc_295cd:                               ; preds = %bb151, %dec_label_pc_295c4
  %v0_295cd = phi i32 [ %v3_295cb, %bb151 ], [ %v0_295cd16, %dec_label_pc_295c4 ]
  ret i32 %v0_295cd

; uselistorder directives
  uselistorder i32 %v0_295ab, { 1, 0 }
  uselistorder i32 %v3_29570, { 1, 0 }
  uselistorder i32 %v0_29538, { 2, 0, 1 }
  uselistorder i32 %v2_294e3, { 1, 0, 2 }
  uselistorder i32 %v0_294a6, { 1, 0 }
  uselistorder i1 %v1_29494, { 1, 0 }
  uselistorder i32 %v2_29474, { 1, 0, 2 }
  uselistorder i32 %v2_29470, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %v11_29419, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_116, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %tmp126, { 0, 3, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 9, 13, 2, 3, 10, 11, 12, 14, 4, 8, 15, 6, 7, 16, 5, 17 }
  uselistorder i32 10, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @function_295d5, { 1, 0 }
  uselistorder i8 ptrtoint (i8** @global_var_1.3274 to i8), { 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 0, 1, 10, 9, 8, 2, 7, 6, 5, 4, 3 }
  uselistorder i32 -2, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32* null, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 1, 2 }
  uselistorder i32 (i32)* @unknown_47540, { 2, 1, 0 }
  uselistorder label %dec_label_pc_295c4, { 1, 0 }
}

define i32 @function_295d5() local_unnamed_addr {
dec_label_pc_295d5:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_92 = alloca i32, align 4
  %v2_295e1 = ptrtoint i32* %stack_var_92 to i32
  store i32 %v2_295e1, i32* @eax, align 4
  %v1_295e8 = call i32 @function_3cdd0(i32 %v2_295e1)
  store i32 %v1_295e8, i32* @eax, align 4
  %v1_295f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_295f4 = icmp eq i32 %v1_295f4, %tmp10
  %v1_295fb = icmp eq i1 %v3_295f4, false
  br i1 %v1_295fb, label %bb, label %dec_label_pc_29601

bb:                                               ; preds = %dec_label_pc_295d5
  %v2_295fb = call i32 @function_29862()
  br label %dec_label_pc_29601

dec_label_pc_29601:                               ; preds = %bb, %dec_label_pc_295d5
  %v0_2960b = phi i32 [ %v2_295fb, %bb ], [ %v1_295e8, %dec_label_pc_295d5 ]
  ret i32 %v0_2960b
}

define i32 @function_2960c() local_unnamed_addr {
dec_label_pc_2960c:
  %v0_29610 = load i32, i32* @edi, align 4
  %v1_29613 = call i32 @unknown_52490(i32 %v0_29610)
  ret i32 %v1_29613
}

define i32 @function_2961d() local_unnamed_addr {
dec_label_pc_2961d:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_2961d = load i32, i32* @ecx, align 4
  %v2_2961d = mul i32 %v0_2961d, 2
  %v3_2961d = add i32 %v0_2961d, -3
  %v4_2961d = add i32 %v3_2961d, %v2_2961d
  %v0_29621 = load i32, i32* @eax, align 4
  %v2_29621 = mul i32 %v4_2961d, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29621 = add i32 %v2_29621, %v0_29621
  store i32 %v3_29621, i32* %ebx.global-to-local, align 4
  %tmp4 = mul i32 %v0_2961d, -12
  %v2_2962c = add i32 %v3_29621, %tmp4
  store i32 %v2_2962c, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_29638

dec_label_pc_29638:                               ; preds = %dec_label_pc_29638, %dec_label_pc_2961d
  %v0_29638 = phi i32 [ %v1_29640, %dec_label_pc_29638 ], [ %v3_29621, %dec_label_pc_2961d ]
  %v1_2963b = call i32 @unknown_3fa60(i32 %v0_29638)
  %v0_29640 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29640 = add i32 %v0_29640, -12
  store i32 %v1_29640, i32* %ebx.global-to-local, align 4
  %v0_29643 = load i32, i32* %esi.global-to-local, align 4
  %v7_29643 = icmp ult i32 %v0_29643, %v1_29640
  br i1 %v7_29643, label %dec_label_pc_29638, label %dec_label_pc_29647

dec_label_pc_29647:                               ; preds = %dec_label_pc_29638
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_29640, { 1, 2, 0 }
  uselistorder i32 %v3_29621, { 1, 0, 2 }
  uselistorder i32 %v0_2961d, { 0, 2, 1 }
}

define i32 @function_2965a() local_unnamed_addr {
dec_label_pc_2965a:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %stack_var_116 = alloca i32, align 4
  %v0_2965a = load i32, i32* %eax.global-to-local, align 4
  %v1_2965a = add i32 %v0_2965a, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2965a = inttoptr i32 %v1_2965a to i32*
  %v3_2965a = load i32, i32* %v2_2965a, align 4
  store i32 %v3_2965a, i32* @eax, align 4
  %v10_2965d = icmp eq i32 %v3_2965a, 1
  %v1_29660 = icmp eq i1 %v10_2965d, false
  br i1 %v1_29660, label %bb, label %dec_label_pc_29666

bb:                                               ; preds = %dec_label_pc_2965a
  %v2_29660 = call i32 @function_297c4()
  store i32 %v2_29660, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29666

dec_label_pc_29666:                               ; preds = %bb, %dec_label_pc_2965a
  %v2_29666 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v2_29666, i32* @eax, align 4
  store i32 0, i32* %stack_var_116, align 4
  %v1_29670 = icmp eq i32 %v2_29666, 0
  br i1 %v1_29670, label %bb111, label %dec_label_pc_29678

bb111:                                            ; preds = %dec_label_pc_29666
  %v2_29672 = call i32 @function_29830(i32 0)
  store i32 %v2_29672, i32* %eax.global-to-local, align 4
  %v2_29678.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_29678

dec_label_pc_29678:                               ; preds = %bb111, %dec_label_pc_29666
  %v2_29678 = phi i32 [ %v2_29678.pre, %bb111 ], [ %v2_29666, %dec_label_pc_29666 ]
  store i32 %v2_29678, i32* @eax, align 4
  %v1_2967a = icmp eq i32 %v2_29678, 0
  br i1 %v1_2967a, label %bb112, label %dec_label_pc_29682

bb112:                                            ; preds = %dec_label_pc_29678
  %v1_2967c = call i32 @function_2982b()
  store i32 %v1_2967c, i32* @eax, align 4
  %v1_29682.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_29682

dec_label_pc_29682:                               ; preds = %bb112, %dec_label_pc_29678
  %v1_29682 = phi i32 [ %v1_29682.pre, %bb112 ], [ %v2_29678, %dec_label_pc_29678 ]
  %v0_29682 = phi i32 [ %v1_2967c, %bb112 ], [ %v2_29678, %dec_label_pc_29678 ]
  %v2_29682 = add i32 %v1_29682, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_29682 = inttoptr i32 %v2_29682 to i32*
  %v4_29682 = load i32, i32* %v3_29682, align 4
  %v15_29682 = icmp eq i32 %v0_29682, %v4_29682
  br i1 %v15_29682, label %bb113, label %dec_label_pc_29687

bb113:                                            ; preds = %dec_label_pc_29682
  %v1_29685 = call i32 @function_296e9()
  store i32 %v1_29685, i32* %eax.global-to-local, align 4
  %v0_29687.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_29687

dec_label_pc_29687:                               ; preds = %bb113, %dec_label_pc_29682
  %v0_296a6 = phi i32 [ %v0_29687.pre, %bb113 ], [ %v1_29682, %dec_label_pc_29682 ]
  %v1_29687 = add i32 %v0_296a6, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_29687 = inttoptr i32 %v1_29687 to i32*
  %v3_29687 = load i32, i32* %v2_29687, align 4
  store i32 %v3_29687, i32* %stack_var_116, align 4
  %v2_2968e = ptrtoint i32* %stack_var_116 to i32
  store i32 %v2_2968e, i32* %eax.global-to-local, align 4
  %v5_296a9 = call i32 @unknown_51dc0(i32 %v0_296a6, i32 0, i32 %v2_2968e, i32 ptrtoint (i8** @global_var_1.3274 to i32))
  store i32 %v5_296a9, i32* %eax.global-to-local, align 4
  %v0_296ae = load i32, i32* %edi.global-to-local, align 4
  %v1_296ae = add i32 %v0_296ae, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_296ae = inttoptr i32 %v1_296ae to i32*
  %v3_296ae = load i32, i32* %v2_296ae, align 4
  store i32 %v3_296ae, i32* @eax, align 4
  %v1_296b3 = icmp eq i32 %v3_296ae, 0
  %v1_296bd = icmp eq i1 %v1_296b3, false
  br i1 %v1_296bd, label %bb114, label %dec_label_pc_296c3

bb114:                                            ; preds = %dec_label_pc_29687
  %v4_296bd = call i32 @function_293d7(i32 %v0_296ae, i32 %v3_296ae)
  store i32 %v4_296bd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_296c3

dec_label_pc_296c3:                               ; preds = %bb114, %dec_label_pc_29687
  store i32 0, i32* @eax, align 4
  %v0_296c5 = call i32 @function_293e3()
  store i32 %v0_296c5, i32* %eax.global-to-local, align 4
  ret i32 %v0_296c5

; uselistorder directives
  uselistorder i32 %v2_29678, { 1, 0, 3, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 4, 0, 5, 6, 1, 3, 2, 7 }
  uselistorder i32 ()* @function_2982b, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_29830, { 3, 2, 1, 0 }
}

define i32 @function_296d0() local_unnamed_addr {
dec_label_pc_296d0:
  %v0_296d3 = load i32, i32* @eax, align 4
  ret i32 %v0_296d3
}

define i32 @function_296d9() local_unnamed_addr {
dec_label_pc_296d9:
  %v0_296d9 = call i32 @function_3abee()
  store i32 0, i32* @eax, align 4
  %v0_296e4 = call i32 @function_293e3()
  ret i32 %v0_296e4
}

define i32 @function_296e9() local_unnamed_addr {
dec_label_pc_296e9:
  %v0_296ef = load i32, i32* @eax, align 4
  ret i32 %v0_296ef
}

define i32 @function_296f1() local_unnamed_addr {
dec_label_pc_296f1:
  %v0_296f1 = call i32 @function_3a846()
  ret i32 %v0_296f1
}

define i32 @function_296f6() local_unnamed_addr {
dec_label_pc_296f6:
  %stack_var_104 = alloca i32, align 4
  %v2_296f6 = ptrtoint i32* %stack_var_104 to i32
  %v1_296fd = call i32 @unknown_3dc70(i32 %v2_296f6)
  %v1_29709 = call i32 @unknown_402c0(i32 %v2_296f6)
  store i32 %v2_296f6, i32* @ecx, align 4
  ret i32 %v1_29709
}

define i32 @function_2971e() local_unnamed_addr {
dec_label_pc_2971e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2972a() local_unnamed_addr {
dec_label_pc_2972a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2972f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2972f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29734() local_unnamed_addr {
dec_label_pc_29734:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2973c() local_unnamed_addr {
dec_label_pc_2973c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2973c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2973c
}

define i32 @function_29752() local_unnamed_addr {
dec_label_pc_29752:
  %stack_var_92 = alloca i32, align 4
  %stack_var_120 = alloca i32, align 4
  %v2_29752 = ptrtoint i32* %stack_var_120 to i32
  %v1_29759 = call i32 @unknown_41800(i32 %v2_29752)
  %v2_2975e = ptrtoint i32* %stack_var_92 to i32
  store i32 %v2_2975e, i32* @eax, align 4
  %v1_29765 = call i32 @function_3cdd0(i32 %v2_2975e)
  ret i32 %v1_29765

; uselistorder directives
  uselistorder i32 (i32)* @function_3cdd0, { 1, 0 }
}

define i32 @function_2977f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2977f:
  ret i32 %arg1
}

define i32 @function_297c4() local_unnamed_addr {
dec_label_pc_297c4:
  %v3_297dc = load i32, i32* @eax, align 4
  ret i32 %v3_297dc
}

define i32 @function_297f4() local_unnamed_addr {
dec_label_pc_297f4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_297f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_297f4 = add i32 %v0_297f4, -1961614268
  %v2_297f4 = inttoptr i32 %v1_297f4 to i32*
  %v3_297f4 = load i32, i32* %v2_297f4, align 4
  %v4_297f4 = sub i32 %v3_297f4, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v4_297f4, i32* %v2_297f4, align 4
  %v4_297fa = ptrtoint i32* %stack_var_0 to i32
  %v0_297fb = load i32, i32* %eax.global-to-local, align 4
  %v11_297fb = and i32 %v0_297fb, -240
  store i32 %v11_297fb, i32* @eax, align 4
  %v1_297fd = call i32 @function_2972f(i32 %v4_297fa)
  store i32 %v1_297fd, i32* %eax.global-to-local, align 4
  ret i32 %v1_297fd
}

define i32 @function_29802() local_unnamed_addr {
dec_label_pc_29802:
  %v3_2981a = load i32, i32* @eax, align 4
  ret i32 %v3_2981a
}

define i32 @function_29826() local_unnamed_addr {
dec_label_pc_29826:
  %v0_29826 = call i32 @function_29734()
  ret i32 %v0_29826
}

define i32 @function_2982b() local_unnamed_addr {
dec_label_pc_2982b:
  %v0_2982b = call i32 @function_3a8e2()
  ret i32 %v0_2982b
}

define i32 @function_29830(i32 %arg1) local_unnamed_addr {
dec_label_pc_29830:
  %v0_29830 = call i32 @function_3a7aa()
  %v0_29837 = call i32 @function_29752()
  ret i32 %v0_29837
}

define i32 @function_2983c(i8 %arg1) local_unnamed_addr {
dec_label_pc_2983c:
  %eax.global-to-local = alloca i32, align 4
  %v0_29848 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29848
}

define i32 @function_2984f() local_unnamed_addr {
dec_label_pc_2984f:
  %stack_var_112 = alloca i32, align 4
  %v2_29851 = ptrtoint i32* %stack_var_112 to i32
  %v1_29858 = call i32 @unknown_428b0(i32 %v2_29851)
  ret i32 %v1_29858

; uselistorder directives
  uselistorder i32 (i32)* @unknown_428b0, { 1, 0 }
}

define i32 @function_29862() local_unnamed_addr {
dec_label_pc_29862:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29867() local_unnamed_addr {
dec_label_pc_29867:
  %v0_29867 = call i32 @function_2972a()
  ret i32 %v0_29867
}

define i32 @_ZN5boost8signals27signal1IvRKSsNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEclES3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29870:
  %v1_29887 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29887 = inttoptr i32 %v1_29887 to i32*
  %v3_29887 = load i32, i32* %v2_29887, align 4
  store i32 %v3_29887, i32* @eax, align 4
  %v1_2988a = icmp eq i32 %v3_29887, 0
  br i1 %v1_2988a, label %dec_label_pc_298ab, label %dec_label_pc_2988e

dec_label_pc_2988e:                               ; preds = %dec_label_pc_29870
  br i1 false, label %bb, label %dec_label_pc_2989b

bb:                                               ; preds = %dec_label_pc_2988e
  br label %dec_label_pc_2989b

dec_label_pc_2989b:                               ; preds = %bb, %dec_label_pc_2988e
  %v2_298a6 = call i32 @function_52be0(i32 %v3_29887, i32 %arg2)
  ret i32 %v2_298a6

dec_label_pc_298ab:                               ; preds = %dec_label_pc_29870
  ret i32 0
}

define i32 @function_298cf(i32 %arg1) local_unnamed_addr {
dec_label_pc_298cf:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZSt4fillIP7uint256S0_EvT_S2_RKT0_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_298e0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg3 to i32
  %v0_298e0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %edx.global-to-local, align 4
  %v12_298fd = icmp eq i32 %arg2, %arg1
  br i1 %v12_298fd, label %dec_label_pc_2993d, label %dec_label_pc_29908

dec_label_pc_29908:                               ; preds = %dec_label_pc_298e0, %dec_label_pc_29908.dec_label_pc_29908_crit_edge
  %v1_2990a = phi i32 [ %v1_29936, %dec_label_pc_29908.dec_label_pc_29908_crit_edge ], [ %arg1, %dec_label_pc_298e0 ]
  %v0_29908 = phi i32 [ %v0_29908.pre, %dec_label_pc_29908.dec_label_pc_29908_crit_edge ], [ %tmp100, %dec_label_pc_298e0 ]
  %v1_29908 = inttoptr i32 %v0_29908 to i32*
  %v2_29908 = load i32, i32* %v1_29908, align 4
  %v2_2990a = inttoptr i32 %v1_2990a to i32*
  store i32 %v2_29908, i32* %v2_2990a, align 4
  %v0_2990c = load i32, i32* %edx.global-to-local, align 4
  %v1_2990c = add i32 %v0_2990c, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2990c = inttoptr i32 %v1_2990c to i32*
  %v3_2990c = load i32, i32* %v2_2990c, align 4
  %v1_2990f = load i32, i32* %eax.global-to-local, align 4
  %v2_2990f = add i32 %v1_2990f, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_2990f = inttoptr i32 %v2_2990f to i32*
  store i32 %v3_2990c, i32* %v3_2990f, align 4
  %v0_29912 = load i32, i32* %edx.global-to-local, align 4
  %v1_29912 = add i32 %v0_29912, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_29912 = inttoptr i32 %v1_29912 to i32*
  %v3_29912 = load i32, i32* %v2_29912, align 4
  %v1_29915 = load i32, i32* %eax.global-to-local, align 4
  %v2_29915 = add i32 %v1_29915, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_29915 = inttoptr i32 %v2_29915 to i32*
  store i32 %v3_29912, i32* %v3_29915, align 4
  %v0_29918 = load i32, i32* %edx.global-to-local, align 4
  %v1_29918 = add i32 %v0_29918, 12
  %v2_29918 = inttoptr i32 %v1_29918 to i32*
  %v3_29918 = load i32, i32* %v2_29918, align 4
  %v1_2991b = load i32, i32* %eax.global-to-local, align 4
  %v2_2991b = add i32 %v1_2991b, 12
  %v3_2991b = inttoptr i32 %v2_2991b to i32*
  store i32 %v3_29918, i32* %v3_2991b, align 4
  %v0_2991e = load i32, i32* %edx.global-to-local, align 4
  %v1_2991e = add i32 %v0_2991e, 16
  %v2_2991e = inttoptr i32 %v1_2991e to i32*
  %v3_2991e = load i32, i32* %v2_2991e, align 4
  %v1_29921 = load i32, i32* %eax.global-to-local, align 4
  %v2_29921 = add i32 %v1_29921, 16
  %v3_29921 = inttoptr i32 %v2_29921 to i32*
  store i32 %v3_2991e, i32* %v3_29921, align 4
  %v0_29924 = load i32, i32* %edx.global-to-local, align 4
  %v1_29924 = add i32 %v0_29924, 20
  %v2_29924 = inttoptr i32 %v1_29924 to i32*
  %v3_29924 = load i32, i32* %v2_29924, align 4
  %v1_29927 = load i32, i32* %eax.global-to-local, align 4
  %v2_29927 = add i32 %v1_29927, 20
  %v3_29927 = inttoptr i32 %v2_29927 to i32*
  store i32 %v3_29924, i32* %v3_29927, align 4
  %v0_2992a = load i32, i32* %edx.global-to-local, align 4
  %v1_2992a = add i32 %v0_2992a, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_2992a = inttoptr i32 %v1_2992a to i32*
  %v3_2992a = load i32, i32* %v2_2992a, align 4
  %v1_2992d = load i32, i32* %eax.global-to-local, align 4
  %v2_2992d = add i32 %v1_2992d, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_2992d = inttoptr i32 %v2_2992d to i32*
  store i32 %v3_2992a, i32* %v3_2992d, align 4
  %v0_29930 = load i32, i32* %edx.global-to-local, align 4
  %v1_29930 = add i32 %v0_29930, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_29930 = inttoptr i32 %v1_29930 to i32*
  %v3_29930 = load i32, i32* %v2_29930, align 4
  %v1_29933 = load i32, i32* %eax.global-to-local, align 4
  %v2_29933 = add i32 %v1_29933, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_29933 = inttoptr i32 %v2_29933 to i32*
  store i32 %v3_29930, i32* %v3_29933, align 4
  %v0_29936 = load i32, i32* %eax.global-to-local, align 4
  %v1_29936 = add i32 %v0_29936, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29936, i32* %eax.global-to-local, align 4
  %v0_29939 = load i32, i32* %ebx.global-to-local, align 4
  %v12_29939 = icmp eq i32 %v0_29939, %v1_29936
  %v1_2993b = icmp eq i1 %v12_29939, false
  br i1 %v1_2993b, label %dec_label_pc_29908.dec_label_pc_29908_crit_edge, label %dec_label_pc_2993d.loopexit

dec_label_pc_29908.dec_label_pc_29908_crit_edge:  ; preds = %dec_label_pc_29908
  %v0_29908.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_29908

dec_label_pc_2993d.loopexit:                      ; preds = %dec_label_pc_29908
  br label %dec_label_pc_2993d

dec_label_pc_2993d:                               ; preds = %dec_label_pc_2993d.loopexit, %dec_label_pc_298e0
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 false, label %dec_label_pc_2994f, label %dec_label_pc_2994a

dec_label_pc_2994a:                               ; preds = %dec_label_pc_2993d
  store i32 %v0_298e0, i32* %ebx.global-to-local, align 4
  ret i32 0

dec_label_pc_2994f:                               ; preds = %dec_label_pc_2993d
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_29936, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_29908, { 1, 0 }
}

define i32 @_ZNSt6vectorI7uint256SaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29960:
  %tmp108 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* @ebp, align 4
  store i32 %tmp108, i32* @eax, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_29990 = icmp eq i32 %arg3, 0
  br i1 %v1_29990, label %bb, label %dec_label_pc_2999c

bb:                                               ; preds = %dec_label_pc_29960
  %v2_29996 = call i32 @function_29b48(i32 %tmp108)
  br label %dec_label_pc_2999c

dec_label_pc_2999c:                               ; preds = %bb, %dec_label_pc_29960
  %v0_2999c = phi i32 [ %v2_29996, %bb ], [ %tmp108, %dec_label_pc_29960 ]
  %v1_2999c = add i32 %v0_2999c, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_2999c = inttoptr i32 %v1_2999c to i32*
  %v3_2999c = load i32, i32* %v2_2999c, align 4
  store i32 %v3_2999c, i32* @esi, align 4
  %v1_2999f = add i32 %v0_2999c, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_2999f = inttoptr i32 %v1_2999f to i32*
  %v3_2999f = load i32, i32* %v2_2999f, align 4
  %v2_299a2 = sub i32 %v3_2999f, %v3_2999c
  %v2_299a4 = ashr i32 %v2_299a2, ptrtoint (i32* @global_var_5.3604 to i32)
  %tmp118 = icmp ult i32 %v2_299a4, %arg3
  br i1 %tmp118, label %dec_label_pc_299af, label %bb115

bb115:                                            ; preds = %dec_label_pc_2999c
  %v3_299a9 = call i32 @function_29b68()
  %v0_299b3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_299af

dec_label_pc_299af:                               ; preds = %dec_label_pc_2999c, %bb115
  %v0_299b3 = phi i32 [ %v0_299b3.pre, %bb115 ], [ %v3_2999c, %dec_label_pc_2999c ]
  %v2_299b5 = load i32, i32* %arg1, align 4
  %v2_299b7 = sub i32 %v0_299b3, %v2_299b5
  %v2_299b9 = ashr i32 %v2_299b7, ptrtoint (i32* @global_var_5.3604 to i32)
  store i32 %v2_299b9, i32* @eax, align 4
  %v2_299c5 = sub i32 134217727, %v2_299b9
  %tmp119 = icmp ult i32 %v2_299c5, %arg3
  br i1 %tmp119, label %bb116, label %dec_label_pc_299cf

bb116:                                            ; preds = %dec_label_pc_299af
  %v5_299c9 = call i32 @function_29d0d(i32 %v2_299b5)
  br label %dec_label_pc_299cf

dec_label_pc_299cf:                               ; preds = %dec_label_pc_299af, %bb116
  %v3_299d3 = phi i32 [ %v2_299b9, %dec_label_pc_299af ], [ %v5_299c9, %bb116 ]
  %v7_299cf = icmp ult i32 %v3_299d3, %arg3
  %v1_299d3 = icmp eq i1 %v7_299cf, false
  %v4_299d3 = select i1 %v1_299d3, i32 %v3_299d3, i32 %arg3
  %v2_299d6 = add i32 %v4_299d3, %v3_299d3
  %v7_299d6 = icmp ult i32 %v2_299d6, %v3_299d3
  store i32 %v2_299d6, i32* @eax, align 4
  %v1_299d8 = icmp eq i1 %v7_299d6, false
  br i1 %v1_299d8, label %bb117, label %dec_label_pc_299de

bb117:                                            ; preds = %dec_label_pc_299cf
  %v2_299d8 = call i32 @function_29c40()
  br label %dec_label_pc_299de

dec_label_pc_299de:                               ; preds = %bb117, %dec_label_pc_299cf
  ret i32 -32

; uselistorder directives
  uselistorder i32 %v3_299d3, { 2, 0, 1, 3 }
  uselistorder i32 %v0_2999c, { 1, 0 }
  uselistorder i32 %arg3, { 2, 3, 0, 1, 4, 5 }
  uselistorder label %dec_label_pc_299cf, { 1, 0 }
  uselistorder label %dec_label_pc_299af, { 1, 0 }
}

define i32 @function_29a18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29a18:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_29a18 = load i32, i32* @edx, align 4
  %v0_29a1a = load i32, i32* @ebp, align 4
  store i32 %v0_29a1a, i32* %edx.global-to-local, align 4
  %v2_29a1c = shl i32 %v0_29a18, ptrtoint (i32* @global_var_5.3604 to i32)
  %v5_29a1f = add i32 %v2_29a1c, %arg2
  store i32 %v5_29a1f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29a28

dec_label_pc_29a28:                               ; preds = %dec_label_pc_29a5a, %dec_label_pc_29a18
  %v0_29a5d3 = phi i32 [ %v1_29a5d, %dec_label_pc_29a5a ], [ %v0_29a1a, %dec_label_pc_29a18 ]
  %v1_29a2e = phi i32 [ %v1_29a5a, %dec_label_pc_29a5a ], [ %v5_29a1f, %dec_label_pc_29a18 ]
  %v1_29a28 = icmp eq i32 %v1_29a2e, 0
  br i1 %v1_29a28, label %dec_label_pc_29a5a, label %dec_label_pc_29a2c

dec_label_pc_29a2c:                               ; preds = %dec_label_pc_29a28
  %v2_29a2c = load i32, i32* @ebx, align 4
  %v2_29a2e = inttoptr i32 %v1_29a2e to i32*
  store i32 %v2_29a2c, i32* %v2_29a2e, align 4
  %v0_29a30 = load i32, i32* @ebx, align 4
  %v1_29a30 = add i32 %v0_29a30, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29a30 = inttoptr i32 %v1_29a30 to i32*
  %v3_29a30 = load i32, i32* %v2_29a30, align 4
  %v1_29a33 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a33 = add i32 %v1_29a33, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29a33 = inttoptr i32 %v2_29a33 to i32*
  store i32 %v3_29a30, i32* %v3_29a33, align 4
  %v0_29a36 = load i32, i32* @ebx, align 4
  %v1_29a36 = add i32 %v0_29a36, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_29a36 = inttoptr i32 %v1_29a36 to i32*
  %v3_29a36 = load i32, i32* %v2_29a36, align 4
  %v1_29a39 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a39 = add i32 %v1_29a39, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_29a39 = inttoptr i32 %v2_29a39 to i32*
  store i32 %v3_29a36, i32* %v3_29a39, align 4
  %v0_29a3c = load i32, i32* @ebx, align 4
  %v1_29a3c = add i32 %v0_29a3c, 12
  %v2_29a3c = inttoptr i32 %v1_29a3c to i32*
  %v3_29a3c = load i32, i32* %v2_29a3c, align 4
  %v1_29a3f = load i32, i32* %eax.global-to-local, align 4
  %v2_29a3f = add i32 %v1_29a3f, 12
  %v3_29a3f = inttoptr i32 %v2_29a3f to i32*
  store i32 %v3_29a3c, i32* %v3_29a3f, align 4
  %v0_29a42 = load i32, i32* @ebx, align 4
  %v1_29a42 = add i32 %v0_29a42, 16
  %v2_29a42 = inttoptr i32 %v1_29a42 to i32*
  %v3_29a42 = load i32, i32* %v2_29a42, align 4
  %v1_29a45 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a45 = add i32 %v1_29a45, 16
  %v3_29a45 = inttoptr i32 %v2_29a45 to i32*
  store i32 %v3_29a42, i32* %v3_29a45, align 4
  %v0_29a48 = load i32, i32* @ebx, align 4
  %v1_29a48 = add i32 %v0_29a48, 20
  %v2_29a48 = inttoptr i32 %v1_29a48 to i32*
  %v3_29a48 = load i32, i32* %v2_29a48, align 4
  %v1_29a4b = load i32, i32* %eax.global-to-local, align 4
  %v2_29a4b = add i32 %v1_29a4b, 20
  %v3_29a4b = inttoptr i32 %v2_29a4b to i32*
  store i32 %v3_29a48, i32* %v3_29a4b, align 4
  %v0_29a4e = load i32, i32* @ebx, align 4
  %v1_29a4e = add i32 %v0_29a4e, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_29a4e = inttoptr i32 %v1_29a4e to i32*
  %v3_29a4e = load i32, i32* %v2_29a4e, align 4
  %v1_29a51 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a51 = add i32 %v1_29a51, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_29a51 = inttoptr i32 %v2_29a51 to i32*
  store i32 %v3_29a4e, i32* %v3_29a51, align 4
  %v0_29a54 = load i32, i32* @ebx, align 4
  %v1_29a54 = add i32 %v0_29a54, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_29a54 = inttoptr i32 %v1_29a54 to i32*
  %v3_29a54 = load i32, i32* %v2_29a54, align 4
  %v1_29a57 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a57 = add i32 %v1_29a57, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_29a57 = inttoptr i32 %v2_29a57 to i32*
  store i32 %v3_29a54, i32* %v3_29a57, align 4
  %v0_29a5a.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_29a5d.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_29a5a

dec_label_pc_29a5a:                               ; preds = %dec_label_pc_29a2c, %dec_label_pc_29a28
  %v0_29a5d = phi i32 [ %v0_29a5d.pre, %dec_label_pc_29a2c ], [ %v0_29a5d3, %dec_label_pc_29a28 ]
  %v0_29a5a = phi i32 [ %v0_29a5a.pre, %dec_label_pc_29a2c ], [ 0, %dec_label_pc_29a28 ]
  %v1_29a5a = add i32 %v0_29a5a, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29a5a, i32* %eax.global-to-local, align 4
  %v1_29a5d = sub i32 %v0_29a5d, ptrtoint (i8** @global_var_1.3274 to i32)
  %v10_29a5d = icmp eq i32 %v1_29a5d, 0
  store i32 %v1_29a5d, i32* %edx.global-to-local, align 4
  %v1_29a60 = icmp eq i1 %v10_29a5d, false
  br i1 %v1_29a60, label %dec_label_pc_29a28, label %dec_label_pc_29a62

dec_label_pc_29a62:                               ; preds = %dec_label_pc_29a5a
  %v4_29a62 = load i32, i32* @edi, align 4
  %v15_29a62 = icmp eq i32 %v4_29a62, %arg1
  store i32 %arg2, i32* %eax.global-to-local, align 4
  br i1 %v15_29a62, label %dec_label_pc_29ac4, label %dec_label_pc_29a6c

dec_label_pc_29a6c:                               ; preds = %dec_label_pc_29a62
  store i32 %arg1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_29a70

dec_label_pc_29a70:                               ; preds = %dec_label_pc_29aa2, %dec_label_pc_29a6c
  %v0_29aa89 = phi i32 [ %v0_29ab0, %dec_label_pc_29aa2 ], [ %v4_29a62, %dec_label_pc_29a6c ]
  %v0_29a74 = phi i32 [ %v1_29aa2, %dec_label_pc_29aa2 ], [ %arg1, %dec_label_pc_29a6c ]
  %v1_29a76 = phi i32 [ %v1_29aa5, %dec_label_pc_29aa2 ], [ %arg2, %dec_label_pc_29a6c ]
  %v1_29a70 = icmp eq i32 %v1_29a76, 0
  br i1 %v1_29a70, label %dec_label_pc_29aa2, label %dec_label_pc_29a74

dec_label_pc_29a74:                               ; preds = %dec_label_pc_29a70
  %v1_29a74 = inttoptr i32 %v0_29a74 to i32*
  %v2_29a74 = load i32, i32* %v1_29a74, align 4
  %v2_29a76 = inttoptr i32 %v1_29a76 to i32*
  store i32 %v2_29a74, i32* %v2_29a76, align 4
  %v0_29a78 = load i32, i32* %edx.global-to-local, align 4
  %v1_29a78 = add i32 %v0_29a78, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29a78 = inttoptr i32 %v1_29a78 to i32*
  %v3_29a78 = load i32, i32* %v2_29a78, align 4
  %v1_29a7b = load i32, i32* %eax.global-to-local, align 4
  %v2_29a7b = add i32 %v1_29a7b, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29a7b = inttoptr i32 %v2_29a7b to i32*
  store i32 %v3_29a78, i32* %v3_29a7b, align 4
  %v0_29a7e = load i32, i32* %edx.global-to-local, align 4
  %v1_29a7e = add i32 %v0_29a7e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_29a7e = inttoptr i32 %v1_29a7e to i32*
  %v3_29a7e = load i32, i32* %v2_29a7e, align 4
  %v1_29a81 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a81 = add i32 %v1_29a81, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_29a81 = inttoptr i32 %v2_29a81 to i32*
  store i32 %v3_29a7e, i32* %v3_29a81, align 4
  %v0_29a84 = load i32, i32* %edx.global-to-local, align 4
  %v1_29a84 = add i32 %v0_29a84, 12
  %v2_29a84 = inttoptr i32 %v1_29a84 to i32*
  %v3_29a84 = load i32, i32* %v2_29a84, align 4
  %v1_29a87 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a87 = add i32 %v1_29a87, 12
  %v3_29a87 = inttoptr i32 %v2_29a87 to i32*
  store i32 %v3_29a84, i32* %v3_29a87, align 4
  %v0_29a8a = load i32, i32* %edx.global-to-local, align 4
  %v1_29a8a = add i32 %v0_29a8a, 16
  %v2_29a8a = inttoptr i32 %v1_29a8a to i32*
  %v3_29a8a = load i32, i32* %v2_29a8a, align 4
  %v1_29a8d = load i32, i32* %eax.global-to-local, align 4
  %v2_29a8d = add i32 %v1_29a8d, 16
  %v3_29a8d = inttoptr i32 %v2_29a8d to i32*
  store i32 %v3_29a8a, i32* %v3_29a8d, align 4
  %v0_29a90 = load i32, i32* %edx.global-to-local, align 4
  %v1_29a90 = add i32 %v0_29a90, 20
  %v2_29a90 = inttoptr i32 %v1_29a90 to i32*
  %v3_29a90 = load i32, i32* %v2_29a90, align 4
  %v1_29a93 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a93 = add i32 %v1_29a93, 20
  %v3_29a93 = inttoptr i32 %v2_29a93 to i32*
  store i32 %v3_29a90, i32* %v3_29a93, align 4
  %v0_29a96 = load i32, i32* %edx.global-to-local, align 4
  %v1_29a96 = add i32 %v0_29a96, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_29a96 = inttoptr i32 %v1_29a96 to i32*
  %v3_29a96 = load i32, i32* %v2_29a96, align 4
  %v1_29a99 = load i32, i32* %eax.global-to-local, align 4
  %v2_29a99 = add i32 %v1_29a99, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_29a99 = inttoptr i32 %v2_29a99 to i32*
  store i32 %v3_29a96, i32* %v3_29a99, align 4
  %v0_29a9c = load i32, i32* %edx.global-to-local, align 4
  %v1_29a9c = add i32 %v0_29a9c, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_29a9c = inttoptr i32 %v1_29a9c to i32*
  %v3_29a9c = load i32, i32* %v2_29a9c, align 4
  %v1_29a9f = load i32, i32* %eax.global-to-local, align 4
  %v2_29a9f = add i32 %v1_29a9f, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_29a9f = inttoptr i32 %v2_29a9f to i32*
  store i32 %v3_29a9c, i32* %v3_29a9f, align 4
  %v0_29aa2.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_29aa5.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_29aa8.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_29aa2

dec_label_pc_29aa2:                               ; preds = %dec_label_pc_29a74, %dec_label_pc_29a70
  %v0_29ab0 = phi i32 [ %v0_29aa8.pre, %dec_label_pc_29a74 ], [ %v0_29aa89, %dec_label_pc_29a70 ]
  %v0_29aa5 = phi i32 [ %v0_29aa5.pre, %dec_label_pc_29a74 ], [ 0, %dec_label_pc_29a70 ]
  %v0_29aa2 = phi i32 [ %v0_29aa2.pre, %dec_label_pc_29a74 ], [ %v0_29a74, %dec_label_pc_29a70 ]
  %v1_29aa2 = add i32 %v0_29aa2, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29aa2, i32* %edx.global-to-local, align 4
  %v1_29aa5 = add i32 %v0_29aa5, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29aa5, i32* %eax.global-to-local, align 4
  %v12_29aa8 = icmp eq i32 %v0_29ab0, %v1_29aa2
  %v1_29aaa = icmp eq i1 %v12_29aa8, false
  br i1 %v1_29aaa, label %dec_label_pc_29a70, label %dec_label_pc_29aac

dec_label_pc_29aac:                               ; preds = %dec_label_pc_29aa2
  %v1_29ab2.neg = sub i32 sub (i32 0, i32 ptrtoint (i32* @global_var_20.3279 to i32)), %arg1
  %v2_29ab5 = add i32 %v1_29ab2.neg, %v0_29ab0
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_29abd = and i32 %v2_29ab5, -32
  %v2_29ac0 = mul i32 %v1_29abd, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29ac0 = add i32 %arg2, ptrtoint (i32* @global_var_20.3279 to i32)
  %v4_29ac0 = add i32 %v3_29ac0, %v2_29ac0
  store i32 %v4_29ac0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29ac4

dec_label_pc_29ac4:                               ; preds = %dec_label_pc_29aac, %dec_label_pc_29a62
  %v0_29acd = phi i32 [ %v0_29ab0, %dec_label_pc_29aac ], [ %v4_29a62, %dec_label_pc_29a62 ]
  %v1_29ac7 = phi i32 [ %v4_29ac0, %dec_label_pc_29aac ], [ %arg2, %dec_label_pc_29a62 ]
  %v0_29ac4 = load i32, i32* @ebp, align 4
  %v2_29ac4 = shl i32 %v0_29ac4, ptrtoint (i32* @global_var_5.3604 to i32)
  %v2_29ac7 = add i32 %v2_29ac4, %v1_29ac7
  store i32 %v2_29ac7, i32* @ebp, align 4
  %v1_29ac9 = load i32, i32* @esi, align 4
  %v12_29ac9 = icmp eq i32 %v0_29acd, %v1_29ac9
  br i1 %v12_29ac9, label %dec_label_pc_29b20, label %dec_label_pc_29acd

dec_label_pc_29acd:                               ; preds = %dec_label_pc_29ac4
  store i32 %v0_29acd, i32* %eax.global-to-local, align 4
  store i32 %v2_29ac7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_29ad8

dec_label_pc_29ad8:                               ; preds = %dec_label_pc_29b0a, %dec_label_pc_29acd
  %v1_29b1018 = phi i32 [ %v1_29b10, %dec_label_pc_29b0a ], [ %v1_29ac9, %dec_label_pc_29acd ]
  %v0_29adc = phi i32 [ %v1_29b0a, %dec_label_pc_29b0a ], [ %v0_29acd, %dec_label_pc_29acd ]
  %v1_29ade = phi i32 [ %v1_29b0d, %dec_label_pc_29b0a ], [ %v2_29ac7, %dec_label_pc_29acd ]
  %v1_29ad8 = icmp eq i32 %v1_29ade, 0
  br i1 %v1_29ad8, label %dec_label_pc_29b0a, label %dec_label_pc_29adc

dec_label_pc_29adc:                               ; preds = %dec_label_pc_29ad8
  %v1_29adc = inttoptr i32 %v0_29adc to i32*
  %v2_29adc = load i32, i32* %v1_29adc, align 4
  %v2_29ade = inttoptr i32 %v1_29ade to i32*
  store i32 %v2_29adc, i32* %v2_29ade, align 4
  %v0_29ae0 = load i32, i32* %eax.global-to-local, align 4
  %v1_29ae0 = add i32 %v0_29ae0, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29ae0 = inttoptr i32 %v1_29ae0 to i32*
  %v3_29ae0 = load i32, i32* %v2_29ae0, align 4
  %v1_29ae3 = load i32, i32* %edx.global-to-local, align 4
  %v2_29ae3 = add i32 %v1_29ae3, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29ae3 = inttoptr i32 %v2_29ae3 to i32*
  store i32 %v3_29ae0, i32* %v3_29ae3, align 4
  %v0_29ae6 = load i32, i32* %eax.global-to-local, align 4
  %v1_29ae6 = add i32 %v0_29ae6, ptrtoint (i8** @global_var_8.3277 to i32)
  %v2_29ae6 = inttoptr i32 %v1_29ae6 to i32*
  %v3_29ae6 = load i32, i32* %v2_29ae6, align 4
  %v1_29ae9 = load i32, i32* %edx.global-to-local, align 4
  %v2_29ae9 = add i32 %v1_29ae9, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_29ae9 = inttoptr i32 %v2_29ae9 to i32*
  store i32 %v3_29ae6, i32* %v3_29ae9, align 4
  %v0_29aec = load i32, i32* %eax.global-to-local, align 4
  %v1_29aec = add i32 %v0_29aec, 12
  %v2_29aec = inttoptr i32 %v1_29aec to i32*
  %v3_29aec = load i32, i32* %v2_29aec, align 4
  %v1_29aef = load i32, i32* %edx.global-to-local, align 4
  %v2_29aef = add i32 %v1_29aef, 12
  %v3_29aef = inttoptr i32 %v2_29aef to i32*
  store i32 %v3_29aec, i32* %v3_29aef, align 4
  %v0_29af2 = load i32, i32* %eax.global-to-local, align 4
  %v1_29af2 = add i32 %v0_29af2, 16
  %v2_29af2 = inttoptr i32 %v1_29af2 to i32*
  %v3_29af2 = load i32, i32* %v2_29af2, align 4
  %v1_29af5 = load i32, i32* %edx.global-to-local, align 4
  %v2_29af5 = add i32 %v1_29af5, 16
  %v3_29af5 = inttoptr i32 %v2_29af5 to i32*
  store i32 %v3_29af2, i32* %v3_29af5, align 4
  %v0_29af8 = load i32, i32* %eax.global-to-local, align 4
  %v1_29af8 = add i32 %v0_29af8, 20
  %v2_29af8 = inttoptr i32 %v1_29af8 to i32*
  %v3_29af8 = load i32, i32* %v2_29af8, align 4
  %v1_29afb = load i32, i32* %edx.global-to-local, align 4
  %v2_29afb = add i32 %v1_29afb, 20
  %v3_29afb = inttoptr i32 %v2_29afb to i32*
  store i32 %v3_29af8, i32* %v3_29afb, align 4
  %v0_29afe = load i32, i32* %eax.global-to-local, align 4
  %v1_29afe = add i32 %v0_29afe, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_29afe = inttoptr i32 %v1_29afe to i32*
  %v3_29afe = load i32, i32* %v2_29afe, align 4
  %v1_29b01 = load i32, i32* %edx.global-to-local, align 4
  %v2_29b01 = add i32 %v1_29b01, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_29b01 = inttoptr i32 %v2_29b01 to i32*
  store i32 %v3_29afe, i32* %v3_29b01, align 4
  %v0_29b04 = load i32, i32* %eax.global-to-local, align 4
  %v1_29b04 = add i32 %v0_29b04, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_29b04 = inttoptr i32 %v1_29b04 to i32*
  %v3_29b04 = load i32, i32* %v2_29b04, align 4
  %v1_29b07 = load i32, i32* %edx.global-to-local, align 4
  %v2_29b07 = add i32 %v1_29b07, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_29b07 = inttoptr i32 %v2_29b07 to i32*
  store i32 %v3_29b04, i32* %v3_29b07, align 4
  %v0_29b0a.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_29b0d.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_29b10.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_29b0a

dec_label_pc_29b0a:                               ; preds = %dec_label_pc_29adc, %dec_label_pc_29ad8
  %v1_29b10 = phi i32 [ %v1_29b10.pre, %dec_label_pc_29adc ], [ %v1_29b1018, %dec_label_pc_29ad8 ]
  %v0_29b0d = phi i32 [ %v0_29b0d.pre, %dec_label_pc_29adc ], [ 0, %dec_label_pc_29ad8 ]
  %v0_29b0a = phi i32 [ %v0_29b0a.pre, %dec_label_pc_29adc ], [ %v0_29adc, %dec_label_pc_29ad8 ]
  %v1_29b0a = add i32 %v0_29b0a, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29b0a, i32* %eax.global-to-local, align 4
  %v1_29b0d = add i32 %v0_29b0d, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29b0d, i32* %edx.global-to-local, align 4
  %v12_29b10 = icmp eq i32 %v1_29b0a, %v1_29b10
  %v1_29b12 = icmp eq i1 %v12_29b10, false
  br i1 %v1_29b12, label %dec_label_pc_29ad8, label %dec_label_pc_29b14

dec_label_pc_29b14:                               ; preds = %dec_label_pc_29b0a
  %v0_29b14 = load i32, i32* @edi, align 4
  %v1_29b14 = add i32 %v0_29b14, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29b14, i32* @edi, align 4
  %v2_29b17 = sub i32 %v1_29b0a, %v1_29b14
  %v1_29b19 = and i32 %v2_29b17, -32
  store i32 %v1_29b19, i32* %eax.global-to-local, align 4
  %v0_29b1c = load i32, i32* @ebp, align 4
  %v3_29b1c = add i32 %v1_29b19, ptrtoint (i32* @global_var_20.3279 to i32)
  %v4_29b1c = add i32 %v3_29b1c, %v0_29b1c
  store i32 %v4_29b1c, i32* @ebp, align 4
  br label %dec_label_pc_29b20

dec_label_pc_29b20:                               ; preds = %dec_label_pc_29b14, %dec_label_pc_29ac4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_29b24 = icmp eq i32 %arg1, 0
  br i1 %v1_29b24, label %bb, label %dec_label_pc_29b28

bb:                                               ; preds = %dec_label_pc_29b20
  %v1_29b26 = call i32 @function_29b34()
  store i32 %v1_29b26, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29b28

dec_label_pc_29b28:                               ; preds = %bb, %dec_label_pc_29b20
  store i32 %arg1, i32* %eax.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_29b0d, { 1, 0 }
  uselistorder i32 %v1_29b0a, { 0, 1, 3, 2 }
  uselistorder i32 %v1_29ac9, { 1, 0 }
  uselistorder i32 %v0_29acd, { 1, 2, 0 }
  uselistorder i32 %v1_29aa5, { 1, 0 }
  uselistorder i32 %v1_29aa2, { 0, 2, 1 }
  uselistorder i32 %v0_29ab0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_29a62, { 1, 2, 0 }
  uselistorder i32 %v1_29a5d, { 1, 2, 0 }
  uselistorder i32 %v1_29a5a, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 9, 2, 3, 7, 4, 5, 6, 8, 10, 11, 12, 20, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 32, 25, 26, 27, 28, 29, 30, 31, 33 }
  uselistorder i32 %arg2, { 2, 0, 5, 3, 4, 1 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 1, 2, 3, 0 }
}

define i32 @function_29b34() local_unnamed_addr {
dec_label_pc_29b34:
  %eax.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_29b3c = load i32, i32* @ebp, align 4
  %v2_29b3c = add i32 %tmp1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29b3c = inttoptr i32 %v2_29b3c to i32*
  store i32 %v0_29b3c, i32* %v3_29b3c, align 4
  %v4_29b3c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_29b3c
}

define i32 @function_29b40() local_unnamed_addr {
dec_label_pc_29b40:
  %eax.global-to-local = alloca i32, align 4
  %v0_29b40 = load i32, i32* @eax, align 4
  %v1_29b40 = trunc i32 %v0_29b40 to i8
  %v4_29b40 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v5_29b40 = add i8 %v1_29b40, %v4_29b40
  %v2_29b43 = and i8 %v5_29b40, 44
  %v8_29b43 = zext i8 %v2_29b43 to i32
  %v10_29b43 = and i32 %v0_29b40, -256
  %v11_29b43 = or i32 %v8_29b43, %v10_29b43
  store i32 %v11_29b43, i32* %eax.global-to-local, align 4
  %v1_29b45 = load i32, i32* @edx, align 4
  %v2_29b45 = add i32 %v1_29b45, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_29b45 = inttoptr i32 %v2_29b45 to i32*
  store i32 %v11_29b43, i32* %v3_29b45, align 4
  %v4_29b45 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_29b45
}

define i32 @function_29b48(i32 %arg1) local_unnamed_addr {
dec_label_pc_29b48:
  %v1_29b4c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29b4c = xor i32 %v1_29b4c, %arg1
  %v3_29b4c = icmp eq i32 %v2_29b4c, 0
  store i32 %v2_29b4c, i32* @edx, align 4
  %v1_29b53 = icmp eq i1 %v3_29b4c, false
  br i1 %v1_29b53, label %bb, label %dec_label_pc_29b48.dec_label_pc_29b59_crit_edge

dec_label_pc_29b48.dec_label_pc_29b59_crit_edge:  ; preds = %dec_label_pc_29b48
  %v0_29b60.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_29b59

bb:                                               ; preds = %dec_label_pc_29b48
  %v2_29b53 = call i32 @function_29cfc()
  br label %dec_label_pc_29b59

dec_label_pc_29b59:                               ; preds = %dec_label_pc_29b48.dec_label_pc_29b59_crit_edge, %bb
  %v0_29b60 = phi i32 [ %v2_29b53, %bb ], [ %v0_29b60.pre, %dec_label_pc_29b48.dec_label_pc_29b59_crit_edge ]
  ret i32 %v0_29b60

; uselistorder directives
  uselistorder label %dec_label_pc_29b59, { 1, 0 }
}

define i32 @function_29b68() local_unnamed_addr {
dec_label_pc_29b68:
  %v2_29b68 = load i32, i32* @ebx, align 4
  %v1_29b7c = add i32 %v2_29b68, 12
  %v2_29b7c = inttoptr i32 %v1_29b7c to i32*
  %v3_29b7c = load i32, i32* %v2_29b7c, align 4
  ret i32 %v3_29b7c
}

define i32 @function_29b80(i32 %arg1) local_unnamed_addr {
dec_label_pc_29b80:
  %eax.global-to-local = alloca i32, align 4
  %v0_29b81 = load i32, i32* @eax, align 4
  %v11_29b81 = and i32 %v0_29b81, or (i32 zext (i8 ptrtoint (i8** @global_var_48.3313 to i8) to i32), i32 -256)
  store i32 %v11_29b81, i32* %eax.global-to-local, align 4
  %v0_29b83 = load i32, i32* @ebx, align 4
  %v1_29b83 = add i32 %v0_29b83, 16
  %v2_29b83 = inttoptr i32 %v1_29b83 to i32*
  %v3_29b83 = load i32, i32* %v2_29b83, align 4
  store i32 %v3_29b83, i32* %eax.global-to-local, align 4
  %v1_29b8a = add i32 %v0_29b83, 20
  %v2_29b8a = inttoptr i32 %v1_29b8a to i32*
  %v3_29b8a = load i32, i32* %v2_29b8a, align 4
  store i32 %v3_29b8a, i32* %eax.global-to-local, align 4
  %v1_29b91 = add i32 %v0_29b83, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_29b91 = inttoptr i32 %v1_29b91 to i32*
  %v3_29b91 = load i32, i32* %v2_29b91, align 4
  store i32 %v3_29b91, i32* %eax.global-to-local, align 4
  %v1_29b98 = add i32 %v0_29b83, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_29b98 = inttoptr i32 %v1_29b98 to i32*
  %v3_29b98 = load i32, i32* %v2_29b98, align 4
  store i32 %v3_29b98, i32* %eax.global-to-local, align 4
  %v0_29b9b = load i32, i32* @esi, align 4
  %v1_29b9d = load i32, i32* @edi, align 4
  %v2_29b9d = sub i32 %v0_29b9b, %v1_29b9d
  %v2_29b9f = ashr i32 %v2_29b9d, ptrtoint (i32* @global_var_5.3604 to i32)
  store i32 %v2_29b9f, i32* @ebx, align 4
  %v0_29ba2 = load i32, i32* @ebp, align 4
  %v7_29ba2 = icmp ult i32 %v0_29ba2, %v2_29b9f
  %v1_29ba8 = icmp eq i1 %v7_29ba2, false
  br i1 %v1_29ba8, label %bb, label %dec_label_pc_29bae

bb:                                               ; preds = %dec_label_pc_29b80
  %v6_29ba8 = call i32 @function_29c78(i32 %v3_29b83, i32 %v3_29b8a, i32 %v3_29b91, i32 %v3_29b98)
  store i32 %v6_29ba8, i32* %eax.global-to-local, align 4
  %v0_29bae.pre = load i32, i32* @ebp, align 4
  %v0_29bb1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_29bae

dec_label_pc_29bae:                               ; preds = %bb, %dec_label_pc_29b80
  %v0_29bb5 = phi i32 [ %v0_29bb1.pre, %bb ], [ %v0_29b9b, %dec_label_pc_29b80 ]
  %v0_29bae = phi i32 [ %v0_29bae.pre, %bb ], [ %v0_29ba2, %dec_label_pc_29b80 ]
  %v2_29bae = shl i32 %v0_29bae, ptrtoint (i32* @global_var_5.3604 to i32)
  store i32 %v2_29bae, i32* @ebp, align 4
  %v2_29bb3 = sub i32 %v0_29bb5, %v2_29bae
  store i32 %v2_29bb3, i32* @ebx, align 4
  store i32 %v0_29bb5, i32* @edx, align 4
  store i32 %v2_29bb3, i32* @eax, align 4
  %v0_29bbb = call i32 @function_29b40()
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v0_29bc4 = load i32, i32* @ebx, align 4
  %v1_29bc6 = load i32, i32* @edi, align 4
  %v2_29bc6 = sub i32 %v0_29bc4, %v1_29bc6
  %v2_29bc8 = ashr i32 %v2_29bc6, ptrtoint (i32* @global_var_5.3604 to i32)
  store i32 %v2_29bc8, i32* @edx, align 4
  %v1_29bcb = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29bcb = inttoptr i32 %v1_29bcb to i32*
  %v3_29bcb = load i32, i32* %v2_29bcb, align 4
  %v4_29bcb = load i32, i32* @ebp, align 4
  %v5_29bcb = add i32 %v4_29bcb, %v3_29bcb
  store i32 %v5_29bcb, i32* %v2_29bcb, align 4
  %tmp10 = icmp slt i32 %v2_29bc8, 1
  br i1 %tmp10, label %bb11, label %dec_label_pc_29bd2

bb11:                                             ; preds = %dec_label_pc_29bae
  %v5_29bd0 = call i32 @function_29c20()
  store i32 %v5_29bd0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29bd2

dec_label_pc_29bd2:                               ; preds = %bb11, %dec_label_pc_29bae
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_29bd8 = load i32, i32* @ebx, align 4
  %v4_29bd8 = add i32 %v0_29bd8, -32
  %v5_29bd8 = inttoptr i32 %v4_29bd8 to i32*
  %v6_29bd8 = load i32, i32* %v5_29bd8, align 4
  %v1_29bdc = load i32, i32* @esi, align 4
  %v4_29bdc = add i32 %v1_29bdc, -32
  %v6_29bdc = inttoptr i32 %v4_29bdc to i32*
  store i32 %v6_29bd8, i32* %v6_29bdc, align 4
  %v7_29bdc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v7_29bdc

; uselistorder directives
  uselistorder i32 %v0_29b83, { 1, 0, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 4, 1, 5, 6, 7, 8, 9 }
  uselistorder i32 -32, { 6, 2, 3, 4, 0, 1, 5 }
  uselistorder i8** @global_var_48.3313, { 1, 0 }
}

define i32 @function_29be0(i32 %arg1) local_unnamed_addr {
dec_label_pc_29be0:
  %v0_29be0 = load i32, i32* @ebx, align 4
  %v1_29be0 = load i32, i32* @eax, align 4
  %v2_29be0 = mul i32 %v1_29be0, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29be0 = add i32 %v0_29be0, -28
  %v4_29be0 = add i32 %v3_29be0, %v2_29be0
  %v5_29be0 = inttoptr i32 %v4_29be0 to i32*
  %v6_29be0 = load i32, i32* %v5_29be0, align 4
  %v1_29be4 = load i32, i32* @esi, align 4
  %v4_29be4 = add i32 %v2_29be0, -28
  %v5_29be4 = add i32 %v4_29be4, %v1_29be4
  %v6_29be4 = inttoptr i32 %v5_29be4 to i32*
  store i32 %v6_29be0, i32* %v6_29be4, align 4
  %v0_29be8 = load i32, i32* @ebx, align 4
  %v1_29be8 = load i32, i32* @eax, align 4
  %v2_29be8 = mul i32 %v1_29be8, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29be8 = add i32 %v0_29be8, -24
  %v4_29be8 = add i32 %v3_29be8, %v2_29be8
  %v5_29be8 = inttoptr i32 %v4_29be8 to i32*
  %v6_29be8 = load i32, i32* %v5_29be8, align 4
  %v1_29bec = load i32, i32* @esi, align 4
  %v4_29bec = add i32 %v2_29be8, -24
  %v5_29bec = add i32 %v4_29bec, %v1_29bec
  %v6_29bec = inttoptr i32 %v5_29bec to i32*
  store i32 %v6_29be8, i32* %v6_29bec, align 4
  %v0_29bf0 = load i32, i32* @ebx, align 4
  %v1_29bf0 = load i32, i32* @eax, align 4
  %v2_29bf0 = mul i32 %v1_29bf0, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29bf0 = add i32 %v0_29bf0, -20
  %v4_29bf0 = add i32 %v3_29bf0, %v2_29bf0
  %v5_29bf0 = inttoptr i32 %v4_29bf0 to i32*
  %v6_29bf0 = load i32, i32* %v5_29bf0, align 4
  %v1_29bf4 = load i32, i32* @esi, align 4
  %v4_29bf4 = add i32 %v2_29bf0, -20
  %v5_29bf4 = add i32 %v4_29bf4, %v1_29bf4
  %v6_29bf4 = inttoptr i32 %v5_29bf4 to i32*
  store i32 %v6_29bf0, i32* %v6_29bf4, align 4
  %v0_29bf8 = load i32, i32* @ebx, align 4
  %v1_29bf8 = load i32, i32* @eax, align 4
  %v2_29bf8 = mul i32 %v1_29bf8, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29bf8 = add i32 %v0_29bf8, -16
  %v4_29bf8 = add i32 %v3_29bf8, %v2_29bf8
  %v5_29bf8 = inttoptr i32 %v4_29bf8 to i32*
  %v6_29bf8 = load i32, i32* %v5_29bf8, align 4
  %v1_29bfc = load i32, i32* @esi, align 4
  %v4_29bfc = add i32 %v2_29bf8, -16
  %v5_29bfc = add i32 %v4_29bfc, %v1_29bfc
  %v6_29bfc = inttoptr i32 %v5_29bfc to i32*
  store i32 %v6_29bf8, i32* %v6_29bfc, align 4
  %v0_29c00 = load i32, i32* @ebx, align 4
  %v1_29c00 = load i32, i32* @eax, align 4
  %v2_29c00 = mul i32 %v1_29c00, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29c00 = add i32 %v0_29c00, -12
  %v4_29c00 = add i32 %v3_29c00, %v2_29c00
  %v5_29c00 = inttoptr i32 %v4_29c00 to i32*
  %v6_29c00 = load i32, i32* %v5_29c00, align 4
  %v1_29c04 = load i32, i32* @esi, align 4
  %v4_29c04 = add i32 %v2_29c00, -12
  %v5_29c04 = add i32 %v4_29c04, %v1_29c04
  %v6_29c04 = inttoptr i32 %v5_29c04 to i32*
  store i32 %v6_29c00, i32* %v6_29c04, align 4
  %v0_29c08 = load i32, i32* @ebx, align 4
  %v1_29c08 = load i32, i32* @eax, align 4
  %v2_29c08 = mul i32 %v1_29c08, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29c08 = add i32 %v0_29c08, -8
  %v4_29c08 = add i32 %v3_29c08, %v2_29c08
  %v5_29c08 = inttoptr i32 %v4_29c08 to i32*
  %v6_29c08 = load i32, i32* %v5_29c08, align 4
  %v1_29c0c = load i32, i32* @esi, align 4
  %v4_29c0c = add i32 %v2_29c08, -8
  %v5_29c0c = add i32 %v4_29c0c, %v1_29c0c
  %v6_29c0c = inttoptr i32 %v5_29c0c to i32*
  store i32 %v6_29c08, i32* %v6_29c0c, align 4
  %v0_29c10 = load i32, i32* @ebx, align 4
  %v1_29c10 = load i32, i32* @eax, align 4
  %v2_29c10 = mul i32 %v1_29c10, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29c10 = add i32 %v0_29c10, -4
  %v4_29c10 = add i32 %v3_29c10, %v2_29c10
  %v5_29c10 = inttoptr i32 %v4_29c10 to i32*
  %v6_29c10 = load i32, i32* %v5_29c10, align 4
  %v1_29c14 = load i32, i32* @esi, align 4
  %v4_29c14 = add i32 %v2_29c10, -4
  %v5_29c14 = add i32 %v4_29c14, %v1_29c14
  %v6_29c14 = inttoptr i32 %v5_29c14 to i32*
  store i32 %v6_29c10, i32* %v6_29c14, align 4
  %v0_29c18 = load i32, i32* @eax, align 4
  %v1_29c18 = sub i32 %v0_29c18, ptrtoint (i32* @global_var_20.3279 to i32)
  ret i32 %v1_29c18

; uselistorder directives
  uselistorder i32 -4, { 3, 4, 0, 2, 1 }
  uselistorder i32 -8, { 1, 2, 0 }
  uselistorder i32 -12, { 28, 29, 5, 0, 6, 1, 7, 2, 8, 9, 10, 11, 12, 13, 23, 17, 18, 24, 19, 20, 14, 25, 26, 15, 3, 16, 4, 21, 30, 31, 27, 22 }
  uselistorder i32 -20, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0 }
}

define i32 @function_29c1c() local_unnamed_addr {
dec_label_pc_29c1c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29c20() local_unnamed_addr {
dec_label_pc_29c20:
  %stack_var_60 = alloca i32, align 4
  %v2_29c20 = ptrtoint i32* %stack_var_60 to i32
  %v1_29c24 = load i32, i32* @edi, align 4
  %v2_29c31 = call i32 @unknown_53240(i32 %v1_29c24, i32 %v2_29c20)
  store i32 %v2_29c31, i32* @eax, align 4
  %v1_29c36 = call i32 @function_29b48(i32 %v1_29c24)
  ret i32 %v1_29c36

; uselistorder directives
  uselistorder i32 %v1_29c24, { 1, 0 }
}

define i32 @function_29c40() local_unnamed_addr {
dec_label_pc_29c40:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_29c40 = load i32, i32* @eax, align 4
  %v0_29c4b = load i32, i32* @edi, align 4
  %v5_29c4d = sub i32 %v0_29c4b, %tmp2
  %v2_29c51 = ashr i32 %v5_29c4d, ptrtoint (i32* @global_var_5.3604 to i32)
  store i32 %v2_29c51, i32* @edx, align 4
  %v1_29c54 = icmp eq i32 %v0_29c40, 0
  %v1_29c56 = icmp eq i1 %v1_29c54, false
  br i1 %v1_29c56, label %bb, label %dec_label_pc_29c5c

bb:                                               ; preds = %dec_label_pc_29c40
  %v2_29c56 = call i32 @function_29d01()
  br label %dec_label_pc_29c5c

dec_label_pc_29c5c:                               ; preds = %bb, %dec_label_pc_29c40
  %v2_29c6c = call i32 @function_29a18(i32 0, i32 0)
  ret i32 %v2_29c6c
}

define i32 @function_29c78(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29c78:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_60 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_60, align 4
  %v0_29c78 = load i32, i32* @ebp, align 4
  %v1_29c78 = load i32, i32* @ebx, align 4
  %v2_29c78 = sub i32 %v0_29c78, %v1_29c78
  %v12_29c78 = icmp eq i32 %v2_29c78, 0
  store i32 %v2_29c78, i32* %ebp.global-to-local, align 4
  br i1 %v12_29c78, label %dec_label_pc_29cc3, label %dec_label_pc_29c7c

dec_label_pc_29c7c:                               ; preds = %dec_label_pc_29c78
  store i32 %v2_29c78, i32* %edx.global-to-local, align 4
  %v0_29c7e = load i32, i32* @esi, align 4
  store i32 %v0_29c7e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29c80

dec_label_pc_29c80:                               ; preds = %dec_label_pc_29cbb, %dec_label_pc_29c7c
  %v0_29cbe3 = phi i32 [ %v1_29cbe, %dec_label_pc_29cbb ], [ %v2_29c78, %dec_label_pc_29c7c ]
  %v1_29c88 = phi i32 [ %v1_29cbb, %dec_label_pc_29cbb ], [ %v0_29c7e, %dec_label_pc_29c7c ]
  %v1_29c80 = icmp eq i32 %v1_29c88, 0
  br i1 %v1_29c80, label %dec_label_pc_29cbb, label %dec_label_pc_29c84

dec_label_pc_29c84:                               ; preds = %dec_label_pc_29c80
  %v3_29c84 = load i32, i32* %stack_var_60, align 4
  %v2_29c88 = inttoptr i32 %v1_29c88 to i32*
  store i32 %v3_29c84, i32* %v2_29c88, align 4
  %v1_29c8e = load i32, i32* %eax.global-to-local, align 4
  %v2_29c8e = add i32 %v1_29c8e, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29c8e = inttoptr i32 %v2_29c8e to i32*
  store i32 %arg3, i32* %v3_29c8e, align 4
  %v1_29c95 = load i32, i32* %eax.global-to-local, align 4
  %v2_29c95 = add i32 %v1_29c95, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_29c95 = inttoptr i32 %v2_29c95 to i32*
  store i32 %arg4, i32* %v3_29c95, align 4
  %v1_29c9c = load i32, i32* %eax.global-to-local, align 4
  %v2_29c9c = add i32 %v1_29c9c, 12
  %v3_29c9c = inttoptr i32 %v2_29c9c to i32*
  %v1_29ca3 = load i32, i32* %eax.global-to-local, align 4
  %v2_29ca3 = add i32 %v1_29ca3, 16
  %v3_29ca3 = inttoptr i32 %v2_29ca3 to i32*
  %v1_29caa = load i32, i32* %eax.global-to-local, align 4
  %v2_29caa = add i32 %v1_29caa, 20
  %v3_29caa = inttoptr i32 %v2_29caa to i32*
  %v1_29cb1 = load i32, i32* %eax.global-to-local, align 4
  %v2_29cb1 = add i32 %v1_29cb1, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_29cb1 = inttoptr i32 %v2_29cb1 to i32*
  %v1_29cb8 = load i32, i32* %eax.global-to-local, align 4
  %v2_29cb8 = add i32 %v1_29cb8, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_29cb8 = inttoptr i32 %v2_29cb8 to i32*
  %v0_29cbb.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_29cbe.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_29cbb

dec_label_pc_29cbb:                               ; preds = %dec_label_pc_29c84, %dec_label_pc_29c80
  %v0_29cbe = phi i32 [ %v0_29cbe.pre, %dec_label_pc_29c84 ], [ %v0_29cbe3, %dec_label_pc_29c80 ]
  %v0_29cbb = phi i32 [ %v0_29cbb.pre, %dec_label_pc_29c84 ], [ 0, %dec_label_pc_29c80 ]
  %v1_29cbb = add i32 %v0_29cbb, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29cbb, i32* %eax.global-to-local, align 4
  %v1_29cbe = sub i32 %v0_29cbe, ptrtoint (i8** @global_var_1.3274 to i32)
  %v10_29cbe = icmp eq i32 %v1_29cbe, 0
  store i32 %v1_29cbe, i32* %edx.global-to-local, align 4
  %v1_29cc1 = icmp eq i1 %v10_29cbe, false
  br i1 %v1_29cc1, label %dec_label_pc_29c80, label %dec_label_pc_29cc3.loopexit

dec_label_pc_29cc3.loopexit:                      ; preds = %dec_label_pc_29cbb
  %v0_29cc7.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_29ccf.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_29cc3

dec_label_pc_29cc3:                               ; preds = %dec_label_pc_29cc3.loopexit, %dec_label_pc_29c78
  %v0_29ccf = phi i32 [ %v0_29ccf.pre, %dec_label_pc_29cc3.loopexit ], [ %v1_29c78, %dec_label_pc_29c78 ]
  %v0_29cc7 = phi i32 [ %v0_29cc7.pre, %dec_label_pc_29cc3.loopexit ], [ 0, %dec_label_pc_29c78 ]
  %v2_29cc7 = shl i32 %v0_29cc7, ptrtoint (i32* @global_var_5.3604 to i32)
  store i32 %v2_29cc7, i32* %ebp.global-to-local, align 4
  %v0_29cca = load i32, i32* @edi, align 4
  store i32 %v0_29cca, i32* @eax, align 4
  %v0_29ccc = load i32, i32* @esi, align 4
  %v2_29ccc = mul i32 %v2_29cc7, ptrtoint (i8** @global_var_1.3274 to i32)
  %v3_29ccc = add i32 %v0_29ccc, %v2_29ccc
  %v2_29ccf = shl i32 %v0_29ccf, ptrtoint (i32* @global_var_5.3604 to i32)
  store i32 %v2_29ccf, i32* %ebx.global-to-local, align 4
  %v2_29cd2 = add i32 %arg1, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29cd2 = inttoptr i32 %v2_29cd2 to i32*
  store i32 %v3_29ccc, i32* %v3_29cd2, align 4
  %v0_29cd5 = load i32, i32* @esi, align 4
  store i32 %v0_29cd5, i32* @edx, align 4
  %v0_29cd7 = call i32 @function_29b40()
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v3_29ce0 = load i32, i32* %v3_29cd2, align 4
  %v4_29ce0 = load i32, i32* %ebx.global-to-local, align 4
  %v5_29ce0 = add i32 %v4_29ce0, %v3_29ce0
  store i32 %v5_29ce0, i32* %v3_29cd2, align 4
  %v2_29ce3 = ptrtoint i32* %stack_var_60 to i32
  store i32 %v2_29ce3, i32* %eax.global-to-local, align 4
  %v0_29ceb = load i32, i32* @esi, align 4
  %v0_29cef = load i32, i32* @edi, align 4
  %v2_29cf2 = call i32 @unknown_53240(i32 %v0_29cef, i32 %v0_29ceb)
  store i32 %v2_29cf2, i32* @eax, align 4
  %v1_29cf7 = call i32 @function_29b48(i32 %v0_29cef)
  store i32 %v1_29cf7, i32* %eax.global-to-local, align 4
  ret i32 %v1_29cf7

; uselistorder directives
  uselistorder i32 %v1_29cbe, { 1, 2, 0 }
  uselistorder i32 %v1_29cbb, { 1, 0 }
  uselistorder i32* %stack_var_60, { 1, 2, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 11, 4, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 (i32)* @function_29b48, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @unknown_53240, { 1, 0 }
  uselistorder i32 ()* @function_29b40, { 1, 0 }
  uselistorder i32* @edi, { 234, 235, 83, 236, 237, 238, 80, 81, 0, 82, 84, 41, 85, 86, 87, 1, 88, 89, 90, 91, 92, 93, 94, 95, 2, 96, 42, 97, 98, 99, 100, 102, 101, 103, 104, 4, 5, 105, 3, 106, 43, 44, 35, 6, 200, 201, 65, 202, 203, 204, 7, 107, 108, 109, 67, 68, 110, 8, 111, 112, 113, 114, 66, 115, 116, 239, 117, 9, 118, 45, 119, 240, 120, 121, 122, 205, 206, 207, 11, 12, 208, 10, 123, 13, 220, 221, 222, 223, 14, 224, 225, 226, 124, 210, 46, 211, 125, 47, 209, 212, 126, 127, 213, 215, 214, 216, 217, 16, 17, 218, 15, 219, 227, 230, 228, 229, 18, 19, 36, 48, 128, 20, 21, 37, 49, 129, 130, 131, 132, 133, 134, 135, 50, 22, 136, 137, 138, 139, 140, 141, 51, 23, 142, 143, 144, 145, 146, 147, 52, 24, 148, 53, 55, 150, 54, 56, 149, 151, 152, 153, 38, 154, 57, 59, 156, 58, 60, 155, 157, 158, 159, 39, 160, 25, 161, 164, 165, 166, 33, 167, 168, 26, 169, 34, 162, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 27, 182, 247, 248, 249, 250, 251, 28, 252, 61, 233, 183, 29, 184, 30, 185, 186, 187, 31, 188, 189, 32, 190, 191, 243, 244, 245, 62, 192, 193, 194, 195, 63, 64, 242, 241, 196, 197, 198, 199, 69, 70, 246, 71, 72, 73, 74, 75, 76, 77, 40, 78, 79, 231, 232 }
  uselistorder i32* @ebp, { 142, 143, 144, 0, 145, 48, 49, 50, 51, 52, 53, 54, 146, 1, 24, 2, 25, 57, 55, 56, 30, 3, 58, 59, 4, 26, 5, 27, 62, 60, 61, 31, 6, 63, 64, 7, 28, 8, 29, 139, 137, 138, 9, 65, 141, 10, 140, 11, 66, 21, 67, 12, 68, 22, 69, 13, 70, 23, 71, 72, 73, 14, 74, 75, 76, 77, 15, 78, 79, 80, 81, 16, 82, 83, 17, 84, 85, 18, 86, 87, 96, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 101, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 112, 113, 114, 120, 121, 122, 123, 124, 19, 125, 154, 155, 156, 157, 158, 151, 152, 153, 159, 160, 161, 162, 163, 20, 164, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 147, 149, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 148, 43, 44, 45, 46, 47, 150 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29cfc() local_unnamed_addr {
dec_label_pc_29cfc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29d01() local_unnamed_addr {
dec_label_pc_29d01:
  %v0_29d01 = load i32, i32* @eax, align 4
  %v2_29d01 = shl i32 %v0_29d01, ptrtoint (i32* @global_var_5.3604 to i32)
  ret i32 %v2_29d01
}

define i32 @function_29d0d(i32 %arg1) local_unnamed_addr {
dec_label_pc_29d0d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29d0e() local_unnamed_addr {
dec_label_pc_29d0e:
  %v0_29d0e = load i32, i32* @eax, align 4
  %v2_29d0e = add i32 %v0_29d0e, 36
  %v16_29d0e = and i32 %v2_29d0e, 255
  %v18_29d0e = and i32 %v0_29d0e, -256
  %v19_29d0e = or i32 %v16_29d0e, %v18_29d0e
  ret i32 %v19_29d0e

; uselistorder directives
  uselistorder i32 %v0_29d0e, { 1, 0 }
  uselistorder i32 36, { 0, 24, 8, 12, 13, 14, 15, 9, 1, 10, 11, 16, 17, 2, 18, 19, 20, 21, 22, 3, 23, 4, 5, 6, 7 }
}

define i32 @_Z16Unserialize_implI11CDataStream7uint256SaIS1_EEvRT_RSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29d20:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp132 = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v0_29d2e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp132, i32* %esi.global-to-local, align 4
  %v1_29d41 = inttoptr i32 %arg3 to i32*
  %v2_29d41 = load i32, i32* %v1_29d41, align 4
  store i32 %v2_29d41, i32* %eax.global-to-local, align 4
  %v2_29d43 = add i32 %arg3, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29d43 = inttoptr i32 %v2_29d43 to i32*
  store i32 %v2_29d41, i32* %v3_29d43, align 4
  %v0_29d46 = load i32, i32* %esi.global-to-local, align 4
  %v1_29d49 = call i32 @unknown_43ab0(i32 %v0_29d46)
  store i32 %v1_29d49, i32* %eax.global-to-local, align 4
  %v1_29d4e = icmp eq i32 %v1_29d49, 0
  store i32 %v1_29d49, i32* %ebp.global-to-local, align 4
  br i1 %v1_29d4e, label %dec_label_pc_29f08, label %dec_label_pc_29d58

dec_label_pc_29d58:                               ; preds = %dec_label_pc_29d20
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_29e25 = ptrtoint i32* %stack_var_-64 to i32
  br label %dec_label_pc_29d86

dec_label_pc_29d68:                               ; preds = %dec_label_pc_29d86
  %v1_29d68 = icmp eq i1 %v7_29da5, false
  br i1 %v1_29d68, label %dec_label_pc_29d74, label %dec_label_pc_29d6a

dec_label_pc_29d6a:                               ; preds = %dec_label_pc_29d68
  %v2_29d6c = mul i32 %v6_29d93, 32
  store i32 %v2_29d6c, i32* %eax.global-to-local, align 4
  %v2_29d6f = add i32 %v2_29d8f, %v2_29d6c
  store i32 %v2_29d6f, i32* %edx.global-to-local, align 4
  store i32 %v2_29d6f, i32* %v2_29d86, align 4
  %v0_29d74.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_29d74

dec_label_pc_29d74:                               ; preds = %dec_label_pc_29d6a, %dec_label_pc_29d68
  %v0_29d74 = phi i32 [ %v0_29d74.pre, %dec_label_pc_29d6a ], [ %v6_29d93, %dec_label_pc_29d68 ]
  %v15_29d74 = icmp eq i32 %v0_29d74, 0
  br i1 %v15_29d74, label %dec_label_pc_29d7e, label %dec_label_pc_29e4b

dec_label_pc_29d7e:                               ; preds = %dec_label_pc_29d74, %dec_label_pc_29e25
  %v0_29d7e = load i32, i32* %ebp.global-to-local, align 4
  %v12_29d7e = icmp eq i32 %v0_29d7e, 0
  br i1 %v12_29d7e, label %dec_label_pc_29f08.loopexit, label %dec_label_pc_29d86

dec_label_pc_29d86:                               ; preds = %dec_label_pc_29d7e, %dec_label_pc_29d58
  %v5_29d93 = phi i32 [ %v0_29d7e, %dec_label_pc_29d7e ], [ %v1_29d49, %dec_label_pc_29d58 ]
  %v0_29d86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29d86 = add i32 %v0_29d86, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29d86 = inttoptr i32 %v1_29d86 to i32*
  %v3_29d86 = load i32, i32* %v2_29d86, align 4
  store i32 %v3_29d86, i32* %ecx.global-to-local, align 4
  store i32 156250, i32* %edi.global-to-local, align 4
  %v1_29d8f = inttoptr i32 %v0_29d86 to i32*
  %v2_29d8f = load i32, i32* %v1_29d8f, align 4
  store i32 %v2_29d8f, i32* %edx.global-to-local, align 4
  %tmp140 = icmp ugt i32 %v5_29d93, 156249
  %v3_29d93 = icmp ne i1 %tmp140, true
  %v6_29d93 = select i1 %v3_29d93, i32 %v5_29d93, i32 156250
  store i32 %v6_29d93, i32* %edi.global-to-local, align 4
  %v2_29da0 = sub i32 %v3_29d86, %v2_29d8f
  %v2_29da2 = ashr i32 %v2_29da0, ptrtoint (i32* @global_var_5.3604 to i32)
  store i32 %v2_29da2, i32* %eax.global-to-local, align 4
  %v2_29da5 = sub i32 %v6_29d93, %v2_29da2
  %v7_29da5 = icmp ult i32 %v6_29d93, %v2_29da2
  %v12_29da5 = icmp eq i32 %v2_29da5, 0
  store i32 0, i32* %stack_var_-64, align 4
  %v2_29e1f = or i1 %v7_29da5, %v12_29da5
  br i1 %v2_29e1f, label %dec_label_pc_29d68, label %dec_label_pc_29e25

dec_label_pc_29e25:                               ; preds = %dec_label_pc_29d86
  store i32 %v2_29da5, i32* %edx.global-to-local, align 4
  %v4_29e3c = call i32 @unknown_53680(i32 %v0_29d86, i32 %v3_29d86, i32 %v2_29da5, i32 %v2_29e25)
  store i32 %v4_29e3c, i32* %eax.global-to-local, align 4
  %v0_29e41 = load i32, i32* %edi.global-to-local, align 4
  %v15_29e41 = icmp eq i32 %v0_29e41, 0
  br i1 %v15_29e41, label %dec_label_pc_29d7e, label %dec_label_pc_29e4b

dec_label_pc_29e4b:                               ; preds = %dec_label_pc_29d74, %dec_label_pc_29e25
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_29e56 = load i32, i32* %esi.global-to-local, align 4
  %v1_29e56 = add i32 %v0_29e56, 12
  %v2_29e56 = inttoptr i32 %v1_29e56 to i32*
  %v3_29e56 = load i32, i32* %v2_29e56, align 4
  store i32 %v3_29e56, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_29e5d = load i32, i32* %ebx.global-to-local, align 4
  %v2_29e5d = inttoptr i32 %v1_29e5d to i32*
  %v3_29e5d = load i32, i32* %v2_29e5d, align 4
  store i32 %v3_29e5d, i32* @eax, align 4
  %v1_29e5f = add i32 %v3_29e56, ptrtoint (i32* @global_var_20.3279 to i32)
  store i32 %v1_29e5f, i32* %edx.global-to-local, align 4
  %v1_29e66 = inttoptr i32 %v0_29e56 to i32*
  %v2_29e66 = load i32, i32* %v1_29e66, align 4
  store i32 %v2_29e66, i32* %edx.global-to-local, align 4
  %v1_29e6c = add i32 %v0_29e56, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29e6c = inttoptr i32 %v1_29e6c to i32*
  %v3_29e6c = load i32, i32* %v2_29e6c, align 4
  %v5_29e6f = sub i32 %v3_29e6c, %v2_29e66
  store i32 %v5_29e6f, i32* %edx.global-to-local, align 4
  %v10_29e73 = icmp ult i32 %v1_29e5f, %v5_29e6f
  br i1 %v10_29e73, label %dec_label_pc_29f28, label %dec_label_pc_29e7d

dec_label_pc_29e7d:                               ; preds = %dec_label_pc_29e4b
  %v15_29e73 = icmp eq i32 %v1_29e5f, %v5_29e6f
  br i1 %v15_29e73, label %bb, label %dec_label_pc_29e83

bb:                                               ; preds = %dec_label_pc_29e7d
  %v6_29e7d = call i32 @function_29f80(i32 %v2_29e66, i32 0, i32 %v1_29e5f)
  store i32 %v6_29e7d, i32* @eax, align 4
  %v0_29e83.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_29e83

dec_label_pc_29e83:                               ; preds = %bb, %dec_label_pc_29e7d
  %v2_29e91 = phi i32 [ %v0_29e83.pre, %bb ], [ %v0_29e56, %dec_label_pc_29e7d ]
  %v1_29e83 = add i32 %v2_29e91, 16
  %v2_29e83 = inttoptr i32 %v1_29e83 to i16*
  %v3_29e83 = load i16, i16* %v2_29e83, align 2
  %v4_29e83 = zext i16 %v3_29e83 to i32
  store i32 %v4_29e83, i32* %edx.global-to-local, align 4
  %v1_29e87 = add i32 %v2_29e91, 18
  %v2_29e87 = inttoptr i32 %v1_29e87 to i16*
  %v3_29e87 = load i16, i16* %v2_29e87, align 2
  %v4_29e87 = zext i16 %v3_29e87 to i32
  store i32 %v4_29e87, i32* %ecx.global-to-local, align 4
  %v1_29e8b = or i32 %v4_29e83, 4
  store i32 %v1_29e8b, i32* %edx.global-to-local, align 4
  %v4_29e8e1 = and i32 %v4_29e87, %v1_29e8b
  %v5_29e8e = icmp eq i32 %v4_29e8e1, 0
  %v1_29e91 = trunc i32 %v1_29e8b to i16
  store i16 %v1_29e91, i16* %v2_29e83, align 2
  %v1_29e95 = icmp eq i1 %v5_29e8e, false
  br i1 %v1_29e95, label %bb141, label %dec_label_pc_29e83.dec_label_pc_29e9b_crit_edge

dec_label_pc_29e83.dec_label_pc_29e9b_crit_edge:  ; preds = %dec_label_pc_29e83
  %v0_29e9b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_29e9b

bb141:                                            ; preds = %dec_label_pc_29e83
  %v2_29e95 = call i32 @function_29fcc()
  store i32 %v2_29e95, i32* @eax, align 4
  br label %dec_label_pc_29e9b

dec_label_pc_29e9b:                               ; preds = %dec_label_pc_29e83.dec_label_pc_29e9b_crit_edge, %bb141
  %v0_29e9d = phi i32 [ %v0_29e9b.pre, %dec_label_pc_29e83.dec_label_pc_29e9b_crit_edge ], [ %v2_29e95, %bb141 ]
  %v2_29e9b = urem i32 %v0_29e9d, 2
  %v3_29e9b = icmp eq i32 %v2_29e9b, 0
  store i32 %v0_29e9d, i32* @ecx, align 4
  %v1_29ea7 = icmp eq i1 %v3_29e9b, false
  br i1 %v1_29ea7, label %bb142, label %dec_label_pc_29ead

bb142:                                            ; preds = %dec_label_pc_29e9b
  %v3_29ea7 = call i32 @function_29fa7(i32 ptrtoint (i32* @global_var_20.3279 to i32))
  store i32 %v3_29ea7, i32* @eax, align 4
  %v0_29ead.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_29ead

dec_label_pc_29ead:                               ; preds = %bb142, %dec_label_pc_29e9b
  %v0_29ead = phi i32 [ %v0_29ead.pre, %bb142 ], [ %v0_29e9d, %dec_label_pc_29e9b ]
  %v2_29ead = and i32 %v0_29ead, 2
  %v3_29ead = icmp eq i32 %v2_29ead, 0
  %v1_29eb0 = icmp eq i1 %v3_29ead, false
  br i1 %v1_29eb0, label %bb143, label %dec_label_pc_29eb6

bb143:                                            ; preds = %dec_label_pc_29ead
  %v2_29eb0 = call i32 @function_29fba()
  store i32 %v2_29eb0, i32* @eax, align 4
  br label %dec_label_pc_29eb6

dec_label_pc_29eb6:                               ; preds = %bb143, %dec_label_pc_29ead
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_29ec3

dec_label_pc_29ec3:                               ; preds = %dec_label_pc_29ec3, %dec_label_pc_29eb6
  %v1_29ec3 = phi i32 [ %v1_29eca, %dec_label_pc_29ec3 ], [ 0, %dec_label_pc_29eb6 ]
  %v0_29ec3 = load i32, i32* @ecx, align 4
  %v3_29ec3 = add i32 %v0_29ec3, %v1_29ec3
  %v4_29ec3 = inttoptr i32 %v3_29ec3 to i32*
  store i32 0, i32* %v4_29ec3, align 4
  %v0_29eca = load i32, i32* %edx.global-to-local, align 4
  %v1_29eca = add i32 %v0_29eca, ptrtoint (i16** @global_var_4.3276 to i32)
  store i32 %v1_29eca, i32* %edx.global-to-local, align 4
  %v10_29ecd = icmp ult i32 %v1_29eca, ptrtoint (i32* @global_var_20.3279 to i32)
  br i1 %v10_29ecd, label %dec_label_pc_29ec3, label %dec_label_pc_29ed3

dec_label_pc_29ed3:                               ; preds = %dec_label_pc_29ec3
  %v0_29ed3 = load i32, i32* @ecx, align 4
  %v2_29ed3 = add i32 %v0_29ed3, %v1_29eca
  store i32 %v2_29ed3, i32* %ecx.global-to-local, align 4
  %v0_29eee = load i32, i32* %esi.global-to-local, align 4
  %v1_29eee = inttoptr i32 %v0_29eee to i32*
  %v2_29eee = load i32, i32* %v1_29eee, align 4
  store i32 %v2_29eee, i32* %edx.global-to-local, align 4
  %v1_29ef0 = add i32 %v0_29eee, 12
  %v2_29ef0 = inttoptr i32 %v1_29ef0 to i32*
  %v3_29ef0 = load i32, i32* %v2_29ef0, align 4
  store i32 %v3_29ef0, i32* @ecx, align 4
  %v1_29ef7 = add i32 %v0_29eee, ptrtoint (i16** @global_var_4.3276 to i32)
  %v2_29ef7 = inttoptr i32 %v1_29ef7 to i32*
  %v3_29ef7 = load i32, i32* %v2_29ef7, align 4
  %v5_29efa = sub i32 %v3_29ef7, %v2_29eee
  %v2_29efe = sub i32 %v5_29efa, %v3_29ef0
  store i32 %v2_29efe, i32* %edx.global-to-local, align 4
  %v1_29f00 = call i32 @function_29f85(i32 %v2_29eee)
  store i32 %v1_29f00, i32* %eax.global-to-local, align 4
  ret i32 %v1_29f00

dec_label_pc_29f08.loopexit:                      ; preds = %dec_label_pc_29d7e
  %v4_29f08.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29f08

dec_label_pc_29f08:                               ; preds = %dec_label_pc_29f08.loopexit, %dec_label_pc_29d20
  %v4_29f08 = phi i32 [ %v4_29f08.pre, %dec_label_pc_29f08.loopexit ], [ 0, %dec_label_pc_29d20 ]
  store i32 %v0_29d2e, i32* %edx.global-to-local, align 4
  ret i32 %v4_29f08

dec_label_pc_29f28:                               ; preds = %dec_label_pc_29e4b
  %v5_29f28 = add i32 %v2_29e66, %v3_29e56
  store i32 %v5_29f28, i32* %ecx.global-to-local, align 4
  %v1_29f2c = inttoptr i32 %v5_29f28 to i32*
  %v2_29f2c = load i32, i32* %v1_29f2c, align 4
  store i32 %v2_29f2c, i32* %edx.global-to-local, align 4
  %v2_29f2e = inttoptr i32 %v3_29e5d to i32*
  store i32 %v2_29f2c, i32* %v2_29f2e, align 4
  %v0_29f30 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29f30 = add i32 %v0_29f30, 4
  %v2_29f30 = inttoptr i32 %v1_29f30 to i32*
  %v3_29f30 = load i32, i32* %v2_29f30, align 4
  store i32 %v3_29f30, i32* %edx.global-to-local, align 4
  %v1_29f33 = load i32, i32* @eax, align 4
  %v2_29f33 = add i32 %v1_29f33, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29f33 = inttoptr i32 %v2_29f33 to i32*
  store i32 %v3_29f30, i32* %v3_29f33, align 4
  %v0_29f36 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29f36 = add i32 %v0_29f36, 8
  %v2_29f36 = inttoptr i32 %v1_29f36 to i32*
  %v3_29f36 = load i32, i32* %v2_29f36, align 4
  store i32 %v3_29f36, i32* %edx.global-to-local, align 4
  %v1_29f39 = load i32, i32* @eax, align 4
  %v2_29f39 = add i32 %v1_29f39, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_29f39 = inttoptr i32 %v2_29f39 to i32*
  store i32 %v3_29f36, i32* %v3_29f39, align 4
  %v0_29f3c = load i32, i32* %ecx.global-to-local, align 4
  %v1_29f3c = add i32 %v0_29f3c, 12
  %v2_29f3c = inttoptr i32 %v1_29f3c to i32*
  %v3_29f3c = load i32, i32* %v2_29f3c, align 4
  store i32 %v3_29f3c, i32* %edx.global-to-local, align 4
  %v1_29f3f = load i32, i32* @eax, align 4
  %v2_29f3f = add i32 %v1_29f3f, 12
  %v3_29f3f = inttoptr i32 %v2_29f3f to i32*
  store i32 %v3_29f3c, i32* %v3_29f3f, align 4
  %v0_29f42 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29f42 = add i32 %v0_29f42, 16
  %v2_29f42 = inttoptr i32 %v1_29f42 to i32*
  %v3_29f42 = load i32, i32* %v2_29f42, align 4
  store i32 %v3_29f42, i32* %edx.global-to-local, align 4
  %v1_29f45 = load i32, i32* @eax, align 4
  %v2_29f45 = add i32 %v1_29f45, 16
  %v3_29f45 = inttoptr i32 %v2_29f45 to i32*
  store i32 %v3_29f42, i32* %v3_29f45, align 4
  %v0_29f48 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29f48 = add i32 %v0_29f48, 20
  %v2_29f48 = inttoptr i32 %v1_29f48 to i32*
  %v3_29f48 = load i32, i32* %v2_29f48, align 4
  store i32 %v3_29f48, i32* %edx.global-to-local, align 4
  %v1_29f4b = load i32, i32* @eax, align 4
  %v2_29f4b = add i32 %v1_29f4b, 20
  %v3_29f4b = inttoptr i32 %v2_29f4b to i32*
  store i32 %v3_29f48, i32* %v3_29f4b, align 4
  %v0_29f4e = load i32, i32* %ecx.global-to-local, align 4
  %v1_29f4e = add i32 %v0_29f4e, ptrtoint (i32* @global_var_18.3278 to i32)
  %v2_29f4e = inttoptr i32 %v1_29f4e to i32*
  %v3_29f4e = load i32, i32* %v2_29f4e, align 4
  store i32 %v3_29f4e, i32* %edx.global-to-local, align 4
  %v1_29f51 = load i32, i32* @eax, align 4
  %v2_29f51 = add i32 %v1_29f51, ptrtoint (i32* @global_var_18.3278 to i32)
  %v3_29f51 = inttoptr i32 %v2_29f51 to i32*
  store i32 %v3_29f4e, i32* %v3_29f51, align 4
  %v0_29f54 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29f54 = add i32 %v0_29f54, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v2_29f54 = inttoptr i32 %v1_29f54 to i32*
  %v3_29f54 = load i32, i32* %v2_29f54, align 4
  store i32 %v3_29f54, i32* %edx.global-to-local, align 4
  %v1_29f57 = load i32, i32* @eax, align 4
  %v2_29f57 = add i32 %v1_29f57, ptrtoint (i32* @global_var_1c.3271 to i32)
  %v3_29f57 = inttoptr i32 %v2_29f57 to i32*
  store i32 %v3_29f54, i32* %v3_29f57, align 4
  store i32 %v1_29e5f, i32* %eax.global-to-local, align 4
  %v1_29f5e = load i32, i32* %esi.global-to-local, align 4
  %v2_29f5e = add i32 %v1_29f5e, 12
  %v3_29f5e = inttoptr i32 %v2_29f5e to i32*
  store i32 %v1_29e5f, i32* %v3_29f5e, align 4
  %v4_29f5e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_29f5e

; uselistorder directives
  uselistorder i32 %v1_29eca, { 0, 2, 3, 1 }
  uselistorder i32 %v0_29e9d, { 1, 2, 0 }
  uselistorder i32 %v1_29e8b, { 1, 0, 2 }
  uselistorder i32 %v2_29e91, { 1, 0 }
  uselistorder i32 %v1_29e5f, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_29e56, { 0, 2, 1, 3 }
  uselistorder i32 %v2_29da5, { 1, 0, 2 }
  uselistorder i32 %v2_29da2, { 1, 0, 2 }
  uselistorder i32 %v6_29d93, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_29d8f, { 1, 2, 0 }
  uselistorder i32* %v2_29d86, { 1, 0 }
  uselistorder i32 %v5_29d93, { 1, 0 }
  uselistorder i32 %v0_29d7e, { 1, 0 }
  uselistorder i32 %v2_29d6c, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 3, 4, 1 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 7, 8, 2, 9, 10, 1, 3, 0, 4, 5, 6 }
  uselistorder i32* @global_var_1c.3271, { 0, 1, 2, 4, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1c.3271 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 0, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158 }
  uselistorder i32 ptrtoint (i32* @global_var_18.3278 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121 }
  uselistorder i32 8, { 36, 37, 38, 12, 13, 29, 14, 15, 30, 32, 33, 34, 31, 5, 6, 7, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 26, 27, 10, 28, 35, 11, 4 }
  uselistorder i32 4, { 41, 42, 11, 12, 0, 16, 13, 1, 17, 14, 2, 18, 15, 3, 4, 19, 5, 6, 7, 8, 20, 21, 10, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 9 }
  uselistorder i32 18, { 3, 0, 1, 2 }
  uselistorder i32 16, { 183, 184, 185, 189, 190, 66, 67, 68, 69, 70, 71, 72, 73, 186, 187, 188, 74, 75, 76, 77, 78, 79, 80, 81, 82, 166, 167, 83, 84, 85, 86, 87, 88, 89, 90, 91, 168, 171, 172, 173, 174, 175, 176, 1, 2, 169, 92, 170, 3, 4, 177, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 93, 94, 95, 17, 18, 96, 97, 98, 19, 20, 99, 100, 101, 21, 22, 102, 103, 104, 23, 24, 105, 106, 107, 25, 26, 108, 109, 110, 27, 28, 29, 30, 31, 32, 33, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 34, 192, 146, 147, 35, 193, 148, 149, 36, 37, 38, 39, 150, 151, 152, 153, 154, 155, 40, 194, 156, 41, 42, 157, 0, 158, 159, 191, 160, 161, 43, 44, 162, 163, 164, 165, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 178, 56, 57, 58, 59, 60, 61, 62, 63, 179, 180, 64, 65, 181, 182 }
  uselistorder i32 ptrtoint (i32* @global_var_20.3279 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 12, { 363, 364, 365, 366, 367, 370, 126, 120, 121, 122, 123, 124, 125, 127, 128, 372, 24, 129, 368, 369, 130, 131, 25, 132, 133, 134, 293, 289, 311, 135, 136, 137, 100, 26, 138, 335, 336, 139, 27, 140, 341, 342, 343, 344, 28, 337, 141, 338, 339, 340, 29, 345, 347, 346, 30, 31, 348, 349, 0, 350, 32, 33, 34, 35, 36, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 46, 47, 2, 48, 49, 50, 51, 52, 142, 143, 3, 144, 145, 53, 54, 55, 146, 147, 4, 148, 149, 56, 57, 58, 59, 60, 104, 150, 151, 5, 152, 153, 61, 62, 63, 64, 154, 155, 6, 156, 157, 65, 66, 67, 68, 69, 70, 158, 159, 7, 160, 161, 71, 72, 73, 74, 75, 76, 162, 163, 8, 164, 165, 77, 78, 79, 80, 81, 82, 83, 84, 9, 85, 86, 87, 88, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 10, 238, 11, 12, 239, 240, 89, 13, 241, 14, 242, 15, 16, 243, 244, 90, 17, 245, 18, 246, 19, 20, 247, 248, 91, 21, 249, 92, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 93, 260, 261, 22, 94, 95, 262, 263, 96, 264, 265, 266, 267, 269, 268, 270, 97, 271, 23, 98, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 99, 283, 284, 285, 286, 287, 288, 290, 291, 371, 101, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 119, 361, 362 }
  uselistorder i1 true, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 156250, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_29e9b, { 1, 0 }
  uselistorder label %dec_label_pc_29e4b, { 1, 0 }
  uselistorder label %dec_label_pc_29d7e, { 1, 0 }
}

define i32 @function_29f64() local_unnamed_addr {
dec_label_pc_29f64:
  %v2_29f64 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_29f64 = load i32, i32* @eax, align 4
  %v4_29f64 = trunc i32 %v3_29f64 to i8
  %v5_29f64 = load i1, i1* @cf, align 1
  %v6_29f64 = zext i1 %v5_29f64 to i8
  %v7_29f64 = add i8 %v4_29f64, %v2_29f64
  %v8_29f64 = add i8 %v7_29f64, %v6_29f64
  %v29_29f64 = load i32, i32* @ecx, align 4
  %v30_29f64 = inttoptr i32 %v29_29f64 to i8*
  store i8 %v8_29f64, i8* %v30_29f64, align 1
  %v0_29f75 = load i32, i32* @eax, align 4
  ret i32 %v0_29f75

; uselistorder directives
  uselistorder i1* @cf, { 10, 8, 3, 4, 0, 1, 5, 6, 2, 7, 9 }
}

define i32 @function_29f80(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29f80:
  %v0_29f80 = load i32, i32* @eax, align 4
  ret i32 %v0_29f80
}

define i32 @function_29f85(i32 %arg1) local_unnamed_addr {
dec_label_pc_29f85:
  %v4_29f90 = load i32, i32* @eax, align 4
  ret i32 %v4_29f90
}

define i32 @function_29f98() local_unnamed_addr {
dec_label_pc_29f98:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_29f98 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29f98 = add i32 %v0_29f98, 205965062
  %v2_29f98 = inttoptr i32 %v1_29f98 to i32*
  %v3_29f98 = load i32, i32* %v2_29f98, align 4
  %v4_29f98 = add i32 %v3_29f98, -1
  store i32 %v4_29f98, i32* %v2_29f98, align 4
  %v2_29f9e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_29f9e = load i32, i32* %eax.global-to-local, align 4
  %v4_29f9e = trunc i32 %v3_29f9e to i8
  %v5_29f9e = add i8 %v4_29f9e, %v2_29f9e
  %v21_29f9e = inttoptr i32 %v3_29f9e to i8*
  store i8 %v5_29f9e, i8* %v21_29f9e, align 1
  %v2_29fa0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_29fa0 = load i32, i32* %eax.global-to-local, align 4
  %v4_29fa0 = trunc i32 %v3_29fa0 to i8
  %v5_29fa0 = add i8 %v4_29fa0, %v2_29fa0
  %v21_29fa0 = inttoptr i32 %v3_29fa0 to i8*
  store i8 %v5_29fa0, i8* %v21_29fa0, align 1
  %v0_29fa2 = load i32, i32* %eax.global-to-local, align 4
  %v1_29fa2 = load i32, i32* %esi.global-to-local, align 4
  %v2_29fa2 = add i32 %v1_29fa2, ptrtoint (i16** @global_var_4.3276 to i32)
  %v3_29fa2 = inttoptr i32 %v2_29fa2 to i32*
  store i32 %v0_29fa2, i32* %v3_29fa2, align 4
  %v0_29fa5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29fa5
}

define i32 @function_29fa7(i32 %arg1) local_unnamed_addr {
dec_label_pc_29fa7:
  %v0_29fa7 = load i32, i32* @eax, align 4
  %v1_29fa7 = inttoptr i32 %v0_29fa7 to i8*
  store i8 0, i8* %v1_29fa7, align 1
  %v0_29faa = load i32, i32* @eax, align 4
  %v1_29faa = add i32 %v0_29faa, ptrtoint (i8** @global_var_1.3274 to i32)
  store i32 %v1_29faa, i32* @ecx, align 4
  ret i32 %v0_29faa

; uselistorder directives
  uselistorder i8** @global_var_1.3274, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i8** @global_var_1.3274 to i32), { 357, 356, 355, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 11, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 12, 333, 332, 334, 331, 330, 329, 0, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317, 316, 1, 315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 13, 243, 242, 241, 240, 239, 238, 7, 14, 237, 236, 235, 234, 233, 232, 231, 8, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 15, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 2, 3, 186, 185, 5, 6, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 4, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 9, 10, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16 }
  uselistorder i8 0, { 241, 11, 13, 14, 12, 8, 2, 242, 243, 15, 244, 245, 246, 247, 248, 249, 250, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 142, 145, 16, 17, 20, 21, 18, 19, 9, 3, 199, 200, 122, 201, 202, 203, 204, 146, 147, 148, 149, 150, 151, 124, 152, 153, 154, 155, 156, 123, 157, 158, 159, 205, 206, 208, 209, 207, 210, 251, 22, 24, 25, 23, 26, 10, 4, 219, 220, 27, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 28, 29, 211, 212, 160, 213, 214, 216, 217, 215, 218, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 87, 88, 181, 89, 90, 91, 182, 92, 93, 94, 183, 95, 184, 185, 0, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 253, 108, 186, 187, 188, 189, 190, 191, 192, 109, 252, 193, 110, 194, 195, 196, 197, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 198, 236, 125, 126, 127, 128, 129, 1, 237, 238, 239, 240, 5, 6, 7 }
}

define i32 @function_29fba() local_unnamed_addr {
dec_label_pc_29fba:
  %v0_29fba = load i32, i32* @ecx, align 4
  %v1_29fba = inttoptr i32 %v0_29fba to i16*
  store i16 0, i16* %v1_29fba, align 2
  %v0_29fbf = load i32, i32* @ecx, align 4
  %v1_29fbf = add i32 %v0_29fbf, 2
  store i32 %v1_29fbf, i32* @ecx, align 4
  %v0_29fc7 = load i32, i32* @eax, align 4
  ret i32 %v0_29fc7

; uselistorder directives
  uselistorder i32 2, { 45, 33, 3, 36, 4, 5, 37, 6, 7, 8, 9, 10, 11, 38, 12, 0, 13, 14, 15, 16, 39, 17, 40, 18, 41, 34, 19, 20, 21, 22, 35, 42, 43, 44, 23, 1, 24, 25, 26, 27, 28, 2, 29, 30, 31, 32 }
}

define i32 @function_29fcc() local_unnamed_addr {
dec_label_pc_29fcc:
  %v3_29fd3 = load i32, i32* @eax, align 4
  ret i32 %v3_29fd3
}

define i32 @function_2a028() local_unnamed_addr {
dec_label_pc_2a028:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a028 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a028
}

define i32 @_ZN3CDB4ReadISs13CBlockLocatorEEbRKT_RT0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a040:
  %v2_2a06f = load i32, i32* %arg1, align 4
  %v1_2a075 = icmp eq i32 %v2_2a06f, 0
  br i1 %v1_2a075, label %bb, label %dec_label_pc_2a07d

bb:                                               ; preds = %dec_label_pc_2a040
  %v2_2a077 = call i32 @function_2a460(i32 %arg3)
  br label %dec_label_pc_2a07d

dec_label_pc_2a07d:                               ; preds = %bb, %dec_label_pc_2a040
  %v5_2a0c6 = phi i32 [ %v2_2a077, %bb ], [ %arg3, %dec_label_pc_2a040 ]
  ret i32 %v5_2a0c6
}

define i32 @function_2a13c() local_unnamed_addr {
dec_label_pc_2a13c:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_2a148 = sub i32 %tmp5, %tmp6
  %v2_2a14a = sub i32 %v2_2a148, %tmp4
  ret i32 %v2_2a14a
}

define i32 @function_2a150(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a150:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a1fa() local_unnamed_addr {
dec_label_pc_2a1fa:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a1fa = load i32, i32* %eax.global-to-local, align 4
  %v1_2a1fa = trunc i32 %v0_2a1fa to i8
  %v2_2a1fa = urem i8 %v1_2a1fa, 16
  %v8_2a1fa = zext i8 %v2_2a1fa to i32
  %v10_2a1fa = and i32 %v0_2a1fa, -256
  %v11_2a1fa = or i32 %v8_2a1fa, %v10_2a1fa
  store i32 %v11_2a1fa, i32* %eax.global-to-local, align 4
  %v3_2a1fe = inttoptr i32 %v11_2a1fa to i8*
  %v4_2a1fe = load i8, i8* %v3_2a1fe, align 1
  %v5_2a1fe = add i8 %v4_2a1fe, %v2_2a1fa
  %v20_2a1fe = zext i8 %v5_2a1fe to i32
  %v23_2a1fe = or i32 %v20_2a1fe, %v10_2a1fa
  store i32 %v23_2a1fe, i32* @eax, align 4
  %v0_2a200 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2a200 = add i32 %v0_2a200, -1994120124
  %v2_2a200 = inttoptr i32 %v1_2a200 to i8*
  %v3_2a200 = load i8, i8* %v2_2a200, align 1
  %v4_2a200 = load i32, i32* %ecx.global-to-local, align 4
  %v5_2a200 = trunc i32 %v4_2a200 to i8
  %v6_2a200 = add i8 %v5_2a200, %v3_2a200
  store i8 %v6_2a200, i8* %v2_2a200, align 1
  %v0_2a206 = call i32 @function_8424ac89()
  store i32 %v0_2a206, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a206

; uselistorder directives
  uselistorder i8 %v2_2a1fa, { 1, 0 }
}

define i32 @function_2a220() local_unnamed_addr {
dec_label_pc_2a220:
  %v0_2a220 = call i32 @function_2956b2()
  ret i32 %v0_2a220
}

define i32 @function_2a232() local_unnamed_addr {
dec_label_pc_2a232:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a232 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a232
}

define i32 @function_2a23e() local_unnamed_addr {
dec_label_pc_2a23e:
  %v0_2a23e = call i32 @function_8424ac8b()
  ret i32 %v0_2a23e
}

define i32 @function_2a256(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a256:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_2a256 = load i32, i32* @eax, align 4
  %v1_2a256 = trunc i32 %v0_2a256 to i8
  %v2_2a256 = and i8 %v1_2a256, -112
  %v8_2a256 = zext i8 %v2_2a256 to i32
  %v10_2a256 = and i32 %v0_2a256, -256
  %v11_2a256 = or i32 %v8_2a256, %v10_2a256
  store i32 %v11_2a256, i32* %eax.global-to-local, align 4
  %v1_2a258 = inttoptr i32 %v11_2a256 to i8*
  %v2_2a258 = load i8, i8* %v1_2a258, align 16
  %v5_2a258 = add i8 %v2_2a258, %v2_2a256
  store i8 %v5_2a258, i8* %v1_2a258, align 16
  %v0_2a25a = load i32, i32* %eax.global-to-local, align 4
  %v1_2a25a = inttoptr i32 %v0_2a25a to i8*
  %v2_2a25a = load i8, i8* %v1_2a25a, align 1
  %v4_2a25a = trunc i32 %v0_2a25a to i8
  %v5_2a25a = add i8 %v2_2a25a, %v4_2a25a
  store i8 %v5_2a25a, i8* %v1_2a25a, align 1
  %v0_2a25c = load i32, i32* %eax.global-to-local, align 4
  %v1_2a25c = inttoptr i32 %v0_2a25c to i8*
  %v2_2a25c = load i8, i8* %v1_2a25c, align 1
  %v4_2a25c = trunc i32 %v0_2a25c to i8
  %v5_2a25c = add i8 %v2_2a25c, %v4_2a25c
  store i8 %v5_2a25c, i8* %v1_2a25c, align 1
  %v0_2a25e = load i32, i32* @ebx, align 4
  %v1_2a25e = lshr i32 %v0_2a25e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_2a25e = load i32, i32* %eax.global-to-local, align 4
  %v4_2a25e = trunc i32 %v3_2a25e to i8
  %v5_2a25e = add i32 %v1_2a25e, %v3_2a25e
  %v20_2a25e = and i32 %v5_2a25e, 255
  %v22_2a25e = shl i32 %v20_2a25e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_2a25e = and i32 %v0_2a25e, -65281
  %v24_2a25e = or i32 %v22_2a25e, %v23_2a25e
  store i32 %v24_2a25e, i32* %ebx.global-to-local, align 4
  %v1_2a263 = inttoptr i32 %v3_2a25e to i8*
  %v2_2a263 = load i8, i8* %v1_2a263, align 1
  %v5_2a263 = add i8 %v2_2a263, %v4_2a25e
  store i8 %v5_2a263, i8* %v1_2a263, align 1
  %v2_2a265 = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v3_2a265 = load i32, i32* %eax.global-to-local, align 4
  %v4_2a265 = trunc i32 %v3_2a265 to i8
  %v5_2a265 = add i8 %v4_2a265, %v2_2a265
  %v20_2a265 = load i32, i32* @edx, align 4
  %v21_2a265 = inttoptr i32 %v20_2a265 to i8*
  store i8 %v5_2a265, i8* %v21_2a265, align 1
  %v0_2a267 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a267 = inttoptr i32 %v0_2a267 to i8*
  %v2_2a267 = load i8, i8* %v1_2a267, align 1
  %v4_2a267 = trunc i32 %v0_2a267 to i8
  %v5_2a267 = add i8 %v2_2a267, %v4_2a267
  store i8 %v5_2a267, i8* %v1_2a267, align 1
  %v0_2a269 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2a269 = lshr i32 %v0_2a269, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_2a269 = load i32, i32* %eax.global-to-local, align 4
  %v4_2a269 = trunc i32 %v3_2a269 to i8
  %v5_2a269 = add i32 %v1_2a269, %v3_2a269
  %v20_2a269 = and i32 %v5_2a269, 255
  %v22_2a269 = shl i32 %v20_2a269, ptrtoint (i8** @global_var_8.3277 to i32)
  %v23_2a269 = and i32 %v0_2a269, -65281
  %v24_2a269 = or i32 %v22_2a269, %v23_2a269
  store i32 %v24_2a269, i32* %ebx.global-to-local, align 4
  %v1_2a26e = inttoptr i32 %v3_2a269 to i8*
  %v2_2a26e = load i8, i8* %v1_2a26e, align 1
  %v5_2a26e = add i8 %v2_2a26e, %v4_2a269
  store i8 %v5_2a26e, i8* %v1_2a26e, align 1
  %v0_2a270 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a270 = add i32 %v0_2a270, -112
  %v2_2a270 = inttoptr i32 %v1_2a270 to i8*
  %v3_2a270 = load i8, i8* %v2_2a270, align 1
  %v5_2a270 = lshr i32 %v0_2a270, ptrtoint (i8** @global_var_8.3277 to i32)
  %v6_2a270 = trunc i32 %v5_2a270 to i8
  %v7_2a270 = add i8 %v6_2a270, %v3_2a270
  store i8 %v7_2a270, i8* %v2_2a270, align 1
  %v6_2a277 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a27a = inttoptr i32 %v6_2a277 to i8*
  %v2_2a27a = load i8, i8* %v1_2a27a, align 1
  %v4_2a27a = trunc i32 %v6_2a277 to i8
  %v5_2a27a = add i8 %v2_2a27a, %v4_2a27a
  store i8 %v5_2a27a, i8* %v1_2a27a, align 1
  %v0_2a27c = load i32, i32* %eax.global-to-local, align 4
  %v1_2a27c = inttoptr i32 %v0_2a27c to i8*
  %v2_2a27c = load i8, i8* %v1_2a27c, align 1
  %v4_2a27c = trunc i32 %v0_2a27c to i8
  %v5_2a27c = add i8 %v2_2a27c, %v4_2a27c
  store i8 %v5_2a27c, i8* %v1_2a27c, align 1
  %v0_2a27e = load i32, i32* @esi, align 4
  %v1_2a27e = add i32 %v0_2a27e, -57
  %v2_2a27e = inttoptr i32 %v1_2a27e to i8*
  %v3_2a27e = load i8, i8* %v2_2a27e, align 1
  %v4_2a27e = load i32, i32* %eax.global-to-local, align 4
  %v5_2a27e = lshr i32 %v4_2a27e, ptrtoint (i8** @global_var_8.3277 to i32)
  %v6_2a27e = trunc i32 %v5_2a27e to i8
  %v7_2a27e = add i8 %v6_2a27e, %v3_2a27e
  store i8 %v7_2a27e, i8* %v2_2a27e, align 1
  %v6_2a281 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a284 = inttoptr i32 %v6_2a281 to i8*
  %v2_2a284 = load i8, i8* %v1_2a284, align 1
  %v4_2a284 = trunc i32 %v6_2a281 to i8
  %v5_2a284 = add i8 %v2_2a284, %v4_2a284
  store i8 %v5_2a284, i8* %v1_2a284, align 1
  %v0_2a286 = load i8, i8* inttoptr (i32 612681472 to i8*), align 256
  %v1_2a286 = load i32, i32* %eax.global-to-local, align 4
  %v2_2a286 = trunc i32 %v1_2a286 to i8
  %v3_2a286 = add i8 %v2_2a286, %v0_2a286
  store i8 %v3_2a286, i8* inttoptr (i32 612681472 to i8*), align 256
  %v0_2a28c = load i8, i8* inttoptr (i32 1610612736 to i8*), align 536870912
  %v1_2a28c = zext i8 %v0_2a28c to i32
  %v3_2a28c = and i32 %v1_2a286, -256
  %v4_2a28c = or i32 %v3_2a28c, %v1_2a28c
  store i32 %v4_2a28c, i32* %eax.global-to-local, align 4
  %v0_2a295 = load i32, i32* @esi, align 4
  %v1_2a295 = add i32 %v0_2a295, 251658241
  %v2_2a295 = inttoptr i32 %v1_2a295 to i32*
  %v3_2a295 = load i32, i32* %v2_2a295, align 4
  %v8_2a295 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v8_2a295, i32* %v2_2a295, align 4
  %v1_2a2a1 = add i32 %v3_2a295, 148
  %v2_2a2a1 = inttoptr i32 %v1_2a2a1 to i32*
  store i32 -1668481020, i32* %v2_2a2a1, align 4
  %v0_2a2ac = load i32, i32* %eax.global-to-local, align 4
  %v1_2a2ac = trunc i32 %v0_2a2ac to i8
  %v2_2a2ac = and i8 %v1_2a2ac, -92
  %v8_2a2ac = zext i8 %v2_2a2ac to i32
  %v10_2a2ac = and i32 %v0_2a2ac, -256
  %v11_2a2ac = or i32 %v8_2a2ac, %v10_2a2ac
  store i32 %v11_2a2ac, i32* %eax.global-to-local, align 4
  %v1_2a2ae = inttoptr i32 %v11_2a2ac to i8*
  %v2_2a2ae = load i8, i8* %v1_2a2ae, align 4
  %v5_2a2ae = add i8 %v2_2a2ae, %v2_2a2ac
  store i8 %v5_2a2ae, i8* %v1_2a2ae, align 4
  %v0_2a2b0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2a2b0 = lshr i32 %v0_2a2b0, ptrtoint (i8** @global_var_8.3277 to i32)
  %v3_2a2b0 = load i32, i32* %eax.global-to-local, align 4
  %v4_2a2b0 = trunc i32 %v3_2a2b0 to i8
  %v5_2a2b0 = add i32 %v1_2a2b0, %v3_2a2b0
  %v20_2a2b0 = mul i32 %v5_2a2b0, 256
  %v22_2a2b0 = and i32 %v20_2a2b0, 65280
  %v23_2a2b0 = and i32 %v0_2a2b0, -65281
  %v24_2a2b0 = or i32 %v22_2a2b0, %v23_2a2b0
  store i32 %v24_2a2b0, i32* %ebx.global-to-local, align 4
  %v2_2a2b2 = add i8 %v4_2a2b0, 36
  %v16_2a2b2 = zext i8 %v2_2a2b2 to i32
  %v18_2a2b2 = and i32 %v3_2a2b0, -256
  %v19_2a2b2 = or i32 %v16_2a2b2, %v18_2a2b2
  store i32 %v19_2a2b2, i32* %eax.global-to-local, align 4
  %v1_2a2b4 = inttoptr i32 %v19_2a2b2 to i8*
  %v2_2a2b4 = load i8, i8* %v1_2a2b4, align 1
  %v5_2a2b4 = or i8 %v2_2a2b4, %v2_2a2b2
  store i8 %v5_2a2b4, i8* %v1_2a2b4, align 1
  %v0_2a2b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a2b6 = inttoptr i32 %v0_2a2b6 to i8*
  %v2_2a2b6 = load i8, i8* %v1_2a2b6, align 1
  %v4_2a2b6 = trunc i32 %v0_2a2b6 to i8
  %v5_2a2b6 = add i8 %v2_2a2b6, %v4_2a2b6
  store i8 %v5_2a2b6, i8* %v1_2a2b6, align 1
  %v22_2a2b6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_2a2b6

; uselistorder directives
  uselistorder i32 %v3_2a2b0, { 1, 0, 2 }
  uselistorder i32 %v6_2a281, { 1, 0 }
  uselistorder i32 %v6_2a277, { 1, 0 }
  uselistorder i32 %v3_2a269, { 1, 0, 2 }
  uselistorder i32 %v3_2a25e, { 1, 0, 2 }
  uselistorder i8 36, { 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 0, 13 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 64, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 65, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 58, 59, 60, 61, 62, 63 }
  uselistorder i32 148, { 2, 0, 1 }
  uselistorder i32* @esi, { 216, 217, 278, 279, 280, 281, 271, 272, 273, 274, 275, 276, 277, 282, 1, 283, 2, 87, 3, 88, 89, 41, 42, 90, 91, 92, 94, 61, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 43, 242, 0, 104, 105, 44, 45, 106, 284, 107, 108, 62, 285, 286, 109, 294, 295, 293, 243, 244, 110, 111, 112, 63, 64, 65, 259, 4, 5, 40, 6, 260, 46, 113, 246, 245, 247, 66, 248, 249, 114, 250, 251, 252, 253, 254, 255, 265, 256, 257, 258, 261, 262, 263, 264, 266, 7, 8, 47, 268, 9, 267, 10, 11, 48, 67, 12, 13, 49, 68, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 14, 15, 50, 69, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 51, 154, 155, 52, 53, 16, 156, 17, 157, 158, 54, 159, 160, 55, 56, 18, 161, 19, 162, 163, 57, 164, 165, 58, 59, 20, 166, 21, 167, 70, 168, 71, 72, 169, 73, 22, 23, 175, 176, 177, 178, 179, 180, 181, 182, 24, 183, 184, 185, 186, 170, 171, 172, 173, 174, 191, 187, 188, 189, 190, 192, 193, 195, 194, 196, 197, 198, 199, 200, 201, 203, 202, 204, 210, 211, 212, 205, 206, 207, 208, 25, 209, 26, 213, 214, 27, 215, 301, 302, 303, 296, 297, 298, 299, 28, 300, 29, 304, 305, 30, 306, 74, 270, 218, 219, 220, 221, 31, 222, 223, 224, 225, 226, 227, 32, 33, 34, 228, 229, 35, 230, 231, 36, 37, 38, 232, 233, 234, 235, 290, 291, 292, 236, 237, 238, 39, 239, 289, 287, 288, 75, 240, 241, 76, 77, 78, 79, 80, 81, 82, 83, 84, 60, 85, 269, 86 }
  uselistorder i32* @edx, { 99, 138, 58, 140, 141, 139, 137, 57, 0, 25, 59, 133, 134, 135, 136, 60, 1, 61, 62, 63, 2, 64, 65, 66, 3, 26, 67, 108, 109, 110, 111, 4, 68, 50, 69, 70, 5, 71, 49, 112, 72, 114, 6, 115, 116, 73, 27, 28, 29, 32, 7, 33, 30, 31, 121, 122, 123, 124, 125, 126, 127, 8, 128, 117, 118, 9, 119, 120, 129, 130, 131, 51, 52, 34, 10, 11, 35, 12, 36, 37, 13, 14, 38, 15, 39, 40, 16, 17, 41, 18, 42, 43, 44, 21, 22, 74, 75, 76, 77, 78, 79, 80, 23, 24, 81, 82, 84, 91, 85, 86, 83, 87, 88, 89, 19, 20, 90, 92, 93, 94, 95, 96, 97, 98, 144, 145, 146, 147, 142, 143, 148, 149, 45, 46, 47, 100, 101, 102, 103, 104, 105, 106, 107, 48, 113, 53, 54, 55, 56, 132 }
  uselistorder i32 -65281, { 40, 41, 42, 50, 38, 39, 0, 1, 43, 44, 45, 46, 47, 48, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49 }
  uselistorder i8** @global_var_8.3277, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8.3277 to i32), { 464, 463, 462, 461, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 0, 384, 383, 382, 381, 380, 379, 378, 377, 376, 1, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 2, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 341, 340, 3, 339, 338, 337, 336, 335, 334, 333, 332, 331, 330, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 4, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 309, 308, 5, 307, 306, 305, 304, 303, 302, 301, 300, 299, 6, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 257, 258, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 7, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 8, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9 }
  uselistorder i32 -256, { 128, 129, 130, 131, 24, 132, 9, 15, 25, 26, 167, 110, 168, 169, 170, 171, 172, 111, 112, 114, 113, 115, 116, 117, 27, 0, 133, 28, 135, 134, 118, 136, 137, 138, 119, 120, 121, 122, 90, 91, 123, 125, 124, 126, 139, 140, 29, 83, 30, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 155, 141, 142, 31, 143, 144, 32, 159, 157, 158, 160, 161, 162, 33, 34, 35, 16, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 17, 52, 97, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 10, 67, 11, 68, 12, 69, 70, 71, 72, 127, 73, 74, 75, 76, 1, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 13, 92, 93, 94, 95, 96, 2, 14, 98, 99, 100, 101, 102, 103, 104, 3, 105, 106, 4, 18, 107, 108, 109, 19, 23, 5, 6, 7, 20, 163, 21, 8, 22, 164, 165, 166 }
}

declare i32 @_ZNSsC1EPKcRKSaIcE.2600() local_unnamed_addr

define i32 @function_2a311() local_unnamed_addr {
dec_label_pc_2a311:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %es.global-to-local = alloca i16, align 2
  %v0_2a311 = load i16, i16* %es.global-to-local, align 2
  %v1_2a311 = load i32, i32* %ecx.global-to-local, align 4
  %v2_2a311 = add i32 %v1_2a311, 16777217
  %v3_2a311 = inttoptr i32 %v2_2a311 to i16*
  store i16 %v0_2a311, i16* %v3_2a311, align 2
  %v0_2a317 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a317
}

define i32 @function_2a330(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a330:
  %v0_2a330 = load i32, i32* @ecx, align 4
  %v1_2a330 = add i32 %v0_2a330, -672652284
  %v2_2a330 = inttoptr i32 %v1_2a330 to i8*
  %v3_2a330 = load i8, i8* %v2_2a330, align 1
  %v5_2a330 = trunc i32 %v0_2a330 to i8
  %v6_2a330 = and i8 %v3_2a330, %v5_2a330
  store i8 %v6_2a330, i8* %v2_2a330, align 1
  %v2_2a336 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v14_2a336 = load i32, i32* @ecx, align 4
  %v15_2a336 = inttoptr i32 %v14_2a336 to i8*
  store i8 %v2_2a336, i8* %v15_2a336, align 1
  %v0_2a339 = call i32 @function_2a13c()
  ret i32 %v0_2a339

; uselistorder directives
  uselistorder i32* @ecx, { 99, 100, 141, 142, 143, 144, 149, 145, 146, 147, 0, 148, 19, 20, 21, 22, 150, 151, 152, 1, 153, 154, 155, 49, 50, 2, 52, 53, 54, 51, 3, 55, 56, 57, 58, 23, 35, 36, 101, 102, 106, 107, 108, 4, 109, 110, 111, 59, 60, 61, 62, 63, 44, 45, 5, 46, 64, 6, 66, 67, 68, 65, 156, 157, 7, 112, 113, 114, 69, 24, 37, 25, 26, 27, 121, 122, 123, 8, 124, 125, 126, 127, 128, 129, 130, 131, 9, 133, 134, 135, 132, 115, 10, 116, 11, 117, 118, 119, 120, 138, 136, 139, 137, 140, 47, 28, 12, 29, 13, 30, 14, 31, 32, 33, 70, 34, 71, 72, 73, 74, 75, 76, 77, 78, 15, 79, 80, 81, 82, 85, 83, 84, 86, 87, 88, 158, 159, 89, 90, 91, 92, 93, 16, 17, 94, 95, 96, 97, 98, 38, 39, 40, 41, 42, 43, 103, 104, 105, 48, 18 }
}

define i32 @function_2a34f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a34f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a390(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a390:
  %v2_2a390 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2a390 = load i32, i32* @eax, align 4
  %v4_2a390 = trunc i32 %v3_2a390 to i8
  %v5_2a390 = add i8 %v4_2a390, %v2_2a390
  %v21_2a390 = inttoptr i32 %v3_2a390 to i8*
  store i8 %v5_2a390, i8* %v21_2a390, align 1
  %v0_2a392 = load i32, i32* @ebx, align 4
  %v1_2a392 = icmp eq i32 %v0_2a392, 0
  br i1 %v1_2a392, label %bb, label %dec_label_pc_2a390.dec_label_pc_2a396_crit_edge

dec_label_pc_2a390.dec_label_pc_2a396_crit_edge:  ; preds = %dec_label_pc_2a390
  %v0_2a396.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2a396

bb:                                               ; preds = %dec_label_pc_2a390
  %v1_2a394 = call i32 @function_2a3ac()
  %v1_2a396.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_2a396

dec_label_pc_2a396:                               ; preds = %dec_label_pc_2a390.dec_label_pc_2a396_crit_edge, %bb
  %v1_2a396 = phi i32 [ %v0_2a392, %dec_label_pc_2a390.dec_label_pc_2a396_crit_edge ], [ %v1_2a396.pre, %bb ]
  %v0_2a396 = phi i32 [ %v0_2a396.pre, %dec_label_pc_2a390.dec_label_pc_2a396_crit_edge ], [ %v1_2a394, %bb ]
  %v2_2a396 = sub i32 %v0_2a396, %v1_2a396
  ret i32 %v2_2a396

; uselistorder directives
  uselistorder label %dec_label_pc_2a396, { 1, 0 }
}

define i32 @function_2a3ac() local_unnamed_addr {
dec_label_pc_2a3ac:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_2a3db() local_unnamed_addr {
dec_label_pc_2a3db:
  %stack_var_0 = alloca i32, align 4
  %v2_2a3db = ptrtoint i32* %stack_var_0 to i32
  ret i32 %v2_2a3db
}

define i32 @function_2a3dd() local_unnamed_addr {
dec_label_pc_2a3dd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a413() local_unnamed_addr {
dec_label_pc_2a413:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v1_2a41a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a41a = icmp eq i32 %v1_2a41a, %tmp10
  %v0_2a421 = load i32, i32* @ebx, align 4
  store i32 %v0_2a421, i32* @eax, align 4
  %v1_2a423 = icmp eq i1 %v3_2a41a, false
  br i1 %v1_2a423, label %bb, label %dec_label_pc_2a425

bb:                                               ; preds = %dec_label_pc_2a413
  %v2_2a423 = call i32 @function_2a46b()
  br label %dec_label_pc_2a425

dec_label_pc_2a425:                               ; preds = %bb, %dec_label_pc_2a413
  %v0_2a42f = phi i32 [ %v2_2a423, %bb ], [ %v0_2a421, %dec_label_pc_2a413 ]
  ret i32 %v0_2a42f

; uselistorder directives
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 0, 1, 2, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 3, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 4, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 5, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 6, 7, 8, 243, 244, 9, 10, 245, 246, 247, 248, 249, 250, 251, 11, 12, 252, 253, 254, 255, 256, 257, 258, 13, 259, 260, 261, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
}

define i32 @function_2a438() local_unnamed_addr {
dec_label_pc_2a438:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a438 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a438
}

define i32 @function_2a440() local_unnamed_addr {
dec_label_pc_2a440:
  %ebp.global-to-local = alloca i32, align 4
  %v2_2a440 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v2_2a440, i32* @eax, align 4
  %v2_2a455 = call i32 @function_2a34f(i32 ptrtoint (i16** @global_var_4.3276 to i32))
  ret i32 %v2_2a455

; uselistorder directives
  uselistorder i16** @global_var_4.3276, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_4.3276 to i32), { 1, 450, 449, 448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 387, 386, 385, 384, 383, 382, 381, 380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 335, 334, 333, 332, 331, 330, 329, 328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 2, 317, 316, 315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 283, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 3, 4, 5, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 0, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 6, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 95, 96, 94, 93, 92, 7, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8 }
}

define i32 @function_2a460(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a460:
  store i32 0, i32* @ebx, align 4
  %v0_2a462 = call i32 @function_2a413()
  ret i32 %v0_2a462

; uselistorder directives
  uselistorder i32* @ebx, { 147, 146, 0, 305, 282, 1, 415, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 32, 148, 149, 150, 151, 152, 153, 154, 33, 155, 421, 422, 34, 158, 159, 160, 162, 163, 161, 164, 165, 166, 156, 157, 47, 167, 168, 169, 48, 170, 171, 2, 172, 173, 174, 175, 176, 3, 177, 49, 50, 51, 52, 53, 54, 55, 86, 319, 35, 320, 306, 36, 324, 37, 101, 102, 179, 180, 181, 183, 184, 100, 182, 185, 186, 187, 4, 178, 188, 189, 56, 190, 423, 424, 191, 5, 192, 326, 327, 328, 6, 193, 442, 57, 58, 7, 59, 38, 358, 359, 360, 362, 361, 329, 330, 332, 333, 338, 8, 9, 194, 346, 347, 348, 349, 10, 60, 352, 353, 363, 364, 365, 366, 367, 387, 388, 372, 373, 378, 379, 389, 383, 390, 391, 399, 11, 398, 61, 12, 195, 62, 196, 63, 13, 197, 64, 198, 65, 14, 199, 66, 200, 201, 202, 203, 211, 212, 213, 214, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 219, 39, 40, 220, 221, 222, 15, 223, 224, 225, 226, 227, 16, 228, 229, 230, 231, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 266, 268, 269, 271, 272, 273, 278, 274, 275, 276, 41, 277, 42, 279, 280, 17, 281, 438, 434, 435, 436, 43, 437, 44, 439, 440, 18, 441, 283, 284, 285, 77, 78, 79, 80, 81, 45, 19, 286, 287, 288, 289, 290, 291, 292, 46, 293, 20, 294, 427, 428, 429, 21, 430, 431, 22, 295, 296, 297, 23, 298, 299, 24, 300, 25, 26, 82, 83, 84, 85, 87, 301, 27, 302, 303, 28, 304, 425, 426, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 433, 432, 99, 307, 308, 309, 103, 104, 310, 311, 312, 29, 313, 314, 315, 316, 317, 318, 321, 322, 323, 325, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 350, 351, 354, 355, 356, 357, 368, 369, 370, 371, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 392, 393, 394, 395, 396, 397, 30, 400, 401, 402, 31, 403, 404, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 405, 142, 143, 406, 407, 144, 145 }
}

define i32 @function_2a464() local_unnamed_addr {
dec_label_pc_2a464:
  %v0_2a466 = call i32 @function_2a3dd()
  ret i32 %v0_2a466
}

define i32 @function_2a46b() local_unnamed_addr {
dec_label_pc_2a46b:
  %v1_2a46c = load i32, i32* @eax, align 4
  ret i32 %v1_2a46c
}

define i32 @function_2a476() local_unnamed_addr {
dec_label_pc_2a476:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a476 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a476
}

define i32 @function_2a477() local_unnamed_addr {
dec_label_pc_2a477:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a483() local_unnamed_addr {
dec_label_pc_2a483:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a49d() local_unnamed_addr {
dec_label_pc_2a49d:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a49d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a49d
}

define i32 @function_2a4b1() local_unnamed_addr {
dec_label_pc_2a4b1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a4b8() local_unnamed_addr {
dec_label_pc_2a4b8:
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a4b8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a4b8 = add i32 %v0_2a4b8, -2081781264
  %v2_2a4b8 = inttoptr i32 %v1_2a4b8 to i8*
  %v3_2a4b8 = load i8, i8* %v2_2a4b8, align 1
  %v5_2a4b8 = trunc i32 %v0_2a4b8 to i8
  %v6_2a4b8 = add i8 %v3_2a4b8, %v5_2a4b8
  store i8 %v6_2a4b8, i8* %v2_2a4b8, align 1
  %v0_2a4be = call i32 @function_89127401()
  ret i32 %v0_2a4be
}

define i32 @function_2a4cc() local_unnamed_addr {
dec_label_pc_2a4cc:
  %v0_2a4cc = call i32 @function_2a477()
  ret i32 %v0_2a4cc
}

define i32 @function_2a4ce() local_unnamed_addr {
dec_label_pc_2a4ce:
  %v0_2a4d2 = call i32 @function_2a4b1()
  ret i32 %v0_2a4d2
}

define i32 @function_2a4e3() local_unnamed_addr {
dec_label_pc_2a4e3:
  %v0_2a4e3 = call i32 @function_2a3dd()
  ret i32 %v0_2a4e3

; uselistorder directives
  uselistorder i32 ()* @function_2a3dd, { 1, 0 }
}

define i32 @function_2a4e8() local_unnamed_addr {
dec_label_pc_2a4e8:
  %v0_2a4f0 = call i32 @function_2a483()
  ret i32 %v0_2a4f0
}

define i32 @function_2a4f2() local_unnamed_addr {
dec_label_pc_2a4f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a4f2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a4f2
}

define i32 @function_2a4f4() local_unnamed_addr {
dec_label_pc_2a4f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a4f4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a4f4
}

define i32 @function_2a4fe() local_unnamed_addr {
dec_label_pc_2a4fe:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a4fe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a4fe
}

define i32 @function_2a522() local_unnamed_addr {
dec_label_pc_2a522:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2a522 = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_2a522
}

define i32 @_GLOBAL__sub_I_strWalletFile() local_unnamed_addr {
dec_label_pc_2a530:
  ret i32 0
}

define i32 @function_2a566() local_unnamed_addr {
dec_label_pc_2a566:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a56b() local_unnamed_addr {
dec_label_pc_2a56b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a56b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a56b
}

define i32 @function_2a575() local_unnamed_addr {
dec_label_pc_2a575:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a575 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a575
}

define i32 @function_2a58e() local_unnamed_addr {
dec_label_pc_2a58e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a5db() local_unnamed_addr {
dec_label_pc_2a5db:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2a5db = load i32, i32* %ebx.global-to-local, align 4
  %v1_2a5db = add i32 %v0_2a5db, 1696343108
  %v2_2a5db = inttoptr i32 %v1_2a5db to i32*
  %v3_2a5db = load i32, i32* %v2_2a5db, align 4
  %v4_2a5db = add i32 %v3_2a5db, -1
  store i32 %v4_2a5db, i32* %v2_2a5db, align 4
  %v0_2a5e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a5e1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a5e1 = xor i32 %v1_2a5e1, %v0_2a5e1
  %v3_2a5e1 = icmp eq i32 %v2_2a5e1, 0
  store i32 %v2_2a5e1, i32* @eax, align 4
  %v1_2a5e7 = icmp eq i1 %v3_2a5e1, false
  br i1 %v1_2a5e7, label %bb, label %dec_label_pc_2a5e9

bb:                                               ; preds = %dec_label_pc_2a5db
  %v2_2a5e7 = call i32 @function_2a622()
  store i32 %v2_2a5e7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2a5e9

dec_label_pc_2a5e9:                               ; preds = %bb, %dec_label_pc_2a5db
  %v0_2a5ec = phi i32 [ %v2_2a5e7, %bb ], [ %v2_2a5e1, %dec_label_pc_2a5db ]
  ret i32 %v0_2a5ec

; uselistorder directives
  uselistorder i1 false, { 332, 555, 882, 883, 884, 556, 888, 560, 890, 889, 557, 558, 559, 561, 562, 0, 563, 1, 333, 334, 335, 337, 338, 336, 339, 340, 319, 886, 887, 565, 566, 320, 567, 564, 569, 568, 570, 571, 321, 572, 573, 310, 341, 342, 2, 343, 344, 345, 322, 844, 575, 323, 576, 577, 324, 515, 578, 574, 579, 891, 897, 857, 325, 858, 859, 311, 346, 347, 348, 508, 349, 350, 352, 353, 351, 354, 355, 326, 866, 867, 327, 868, 869, 328, 870, 860, 861, 862, 863, 329, 864, 865, 312, 356, 357, 358, 359, 872, 871, 360, 875, 876, 874, 284, 318, 361, 285, 362, 363, 364, 365, 366, 367, 368, 286, 369, 370, 371, 288, 372, 287, 373, 374, 375, 376, 377, 378, 289, 379, 380, 381, 291, 382, 290, 383, 384, 385, 386, 580, 387, 292, 581, 293, 582, 388, 389, 390, 391, 583, 392, 294, 584, 295, 585, 393, 394, 395, 396, 397, 398, 296, 399, 400, 586, 298, 587, 297, 401, 402, 403, 404, 405, 588, 406, 299, 589, 300, 590, 407, 408, 409, 410, 411, 412, 413, 301, 414, 415, 591, 303, 592, 302, 416, 417, 418, 419, 420, 421, 422, 304, 423, 424, 593, 306, 594, 305, 425, 426, 427, 428, 429, 430, 431, 307, 432, 433, 434, 309, 435, 308, 436, 437, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 3, 626, 4, 627, 5, 628, 6, 629, 7, 630, 8, 631, 9, 632, 10, 633, 11, 634, 12, 13, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 439, 438, 716, 440, 717, 718, 442, 441, 719, 443, 720, 721, 445, 444, 722, 446, 723, 447, 448, 449, 724, 725, 450, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 451, 452, 744, 745, 453, 746, 747, 748, 751, 752, 753, 754, 755, 756, 757, 14, 454, 455, 749, 456, 457, 750, 758, 458, 314, 759, 15, 760, 761, 459, 460, 762, 16, 17, 18, 19, 20, 461, 462, 21, 22, 23, 24, 463, 464, 25, 26, 27, 28, 465, 466, 29, 30, 31, 32, 467, 468, 33, 34, 35, 36, 469, 470, 37, 38, 39, 40, 471, 472, 41, 42, 43, 44, 473, 474, 763, 330, 764, 315, 765, 316, 766, 45, 46, 47, 48, 475, 476, 49, 50, 51, 52, 477, 478, 53, 768, 479, 769, 767, 770, 771, 772, 773, 899, 480, 900, 898, 901, 902, 903, 904, 54, 55, 56, 57, 58, 481, 482, 483, 484, 485, 907, 885, 774, 775, 776, 777, 781, 778, 779, 780, 782, 59, 783, 784, 785, 786, 60, 787, 788, 61, 789, 486, 487, 488, 790, 791, 62, 792, 793, 794, 795, 796, 797, 798, 63, 799, 800, 801, 64, 802, 803, 804, 805, 65, 806, 807, 66, 808, 809, 810, 811, 67, 68, 812, 813, 814, 489, 490, 815, 816, 817, 69, 906, 895, 896, 491, 492, 493, 818, 905, 494, 70, 894, 71, 819, 820, 821, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 822, 331, 505, 506, 507, 823, 509, 510, 824, 72, 892, 511, 512, 73, 513, 74, 514, 825, 75, 826, 516, 893, 827, 828, 829, 517, 830, 831, 518, 519, 832, 317, 833, 76, 77, 834, 835, 78, 836, 79, 837, 80, 838, 81, 839, 82, 840, 83, 841, 84, 842, 85, 843, 86, 845, 87, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 88, 89, 856, 90, 91, 520, 92, 521, 93, 522, 94, 523, 95, 524, 525, 96, 526, 97, 527, 98, 528, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 873, 111, 112, 113, 114, 877, 878, 529, 530, 531, 532, 533, 534, 115, 535, 536, 537, 538, 116, 117, 539, 879, 540, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 880, 272, 273, 274, 275, 276, 277, 278, 279, 541, 542, 543, 544, 545, 546, 313, 547, 280, 548, 281, 549, 881, 550, 282, 283, 551, 552, 553, 554, 908, 909, 910, 911, 912, 913, 914, 915 }
  uselistorder i32 20, { 166, 167, 171, 172, 81, 82, 83, 84, 85, 86, 87, 88, 168, 169, 170, 89, 90, 0, 91, 92, 93, 94, 147, 148, 95, 96, 97, 98, 1, 99, 100, 149, 150, 153, 154, 155, 156, 157, 158, 101, 151, 152, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 102, 103, 104, 29, 30, 31, 105, 106, 107, 32, 33, 34, 108, 109, 110, 35, 36, 37, 111, 112, 113, 38, 39, 40, 114, 115, 116, 41, 42, 43, 117, 118, 119, 44, 45, 46, 47, 48, 49, 50, 51, 52, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 2, 132, 3, 133, 4, 134, 5, 53, 135, 54, 136, 9, 55, 56, 57, 58, 59, 137, 138, 6, 139, 7, 8, 60, 140, 141, 142, 143, 144, 61, 62, 145, 146, 159, 160, 161, 162, 163, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 10, 80, 173, 164, 165, 11, 12 }
  uselistorder i32* inttoptr (i32 20 to i32*), { 0, 119, 120, 443, 1, 2, 121, 122, 123, 124, 3, 125, 4, 5, 126, 444, 127, 451, 6, 7, 8, 9, 431, 429, 128, 430, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 129, 20, 21, 130, 22, 23, 24, 25, 26, 131, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 37, 268, 38, 269, 270, 39, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 40, 289, 290, 41, 291, 292, 293, 296, 42, 43, 294, 44, 45, 295, 297, 298, 299, 300, 46, 301, 302, 303, 304, 305, 306, 47, 307, 308, 309, 310, 48, 311, 312, 313, 314, 49, 315, 316, 317, 318, 50, 319, 320, 321, 322, 51, 323, 324, 325, 52, 326, 327, 328, 329, 53, 330, 331, 332, 333, 334, 335, 336, 54, 337, 338, 339, 340, 55, 56, 341, 342, 57, 452, 453, 343, 344, 345, 346, 58, 59, 455, 442, 347, 348, 349, 60, 61, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 62, 63, 369, 370, 371, 448, 449, 450, 64, 65, 372, 373, 454, 66, 374, 446, 447, 375, 376, 377, 67, 378, 68, 69, 70, 379, 71, 72, 73, 380, 74, 75, 76, 77, 78, 79, 80, 381, 81, 445, 382, 383, 384, 82, 385, 83, 84, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 85, 415, 416, 86, 417, 418, 87, 419, 420, 421, 422, 423, 424, 88, 425, 426, 89, 427, 428, 90, 91, 92, 93, 94, 95, 96, 97, 98, 432, 433, 434, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 435, 436, 109, 437, 110, 111, 112, 438, 113, 439, 440, 114, 441, 115, 116, 117, 118 }
  uselistorder i32 -1, { 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 0, 177, 1, 2, 78, 79, 80, 81, 8, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 10, 3, 121, 11, 4, 122, 123, 124, 125, 126, 9, 12, 5, 127, 128, 6, 178, 179, 129, 130, 175, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 180, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 7, 161, 162, 163, 164, 165, 166, 176, 167, 168, 169, 170, 171, 181, 172, 173, 174, 182 }
}

define i32 @function_2a5f6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a5f6:
  %v0_2a5fb = call i32 @unknown_40300()
  ret i32 %v0_2a5fb
}

define i32 @function_2a61d() local_unnamed_addr {
dec_label_pc_2a61d:
  %v0_2a61d = call i32 @function_2a58e()
  ret i32 %v0_2a61d
}

define i32 @function_2a622() local_unnamed_addr {
dec_label_pc_2a622:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZZN5boost15recursive_mutexC1EvE19__PRETTY_FUNCTION__() local_unnamed_addr {
dec_label_pc_2a720:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_2a740(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a740:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a9d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a9d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2aa80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aa80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2aac0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aac0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ad5a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad5a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2adda() local_unnamed_addr {
dec_label_pc_2adda:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ae6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ae6a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2aeea() local_unnamed_addr {
dec_label_pc_2aeea:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b0de(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b0de:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b1fe() local_unnamed_addr {
dec_label_pc_2b1fe:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b28e() local_unnamed_addr {
dec_label_pc_2b28e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b410(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b410:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b446(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b446:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b4e2() local_unnamed_addr {
dec_label_pc_2b4e2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b57e() local_unnamed_addr {
dec_label_pc_2b57e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b610(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b610:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b6ea(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b6ea:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b720(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b720:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b80a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b80a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b88a() local_unnamed_addr {
dec_label_pc_2b88a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2baea(i32 %arg1) local_unnamed_addr {
dec_label_pc_2baea:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bb00(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb00:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bb20(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb20:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bb82(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb82:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bb86() local_unnamed_addr {
dec_label_pc_2bb86:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bba0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bba0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bc02() local_unnamed_addr {
dec_label_pc_2bc02:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bc22() local_unnamed_addr {
dec_label_pc_2bc22:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bc90(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bc90:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bd00(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd00:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bd32() local_unnamed_addr {
dec_label_pc_2bd32:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bd72(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd72:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bd8e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bd8e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2be0e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2be0e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2be8e() local_unnamed_addr {
dec_label_pc_2be8e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2beaa() local_unnamed_addr {
dec_label_pc_2beaa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bf1e() local_unnamed_addr {
dec_label_pc_2bf1e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c016(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c016:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c096() local_unnamed_addr {
dec_label_pc_2c096:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c126(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c126:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEE5eraseERKSB_RKSt14_List_iteratorISL_EE19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c180:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c510(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c510:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c516(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c516:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c560(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c560:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c596() local_unnamed_addr {
dec_label_pc_2c596:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c640(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c640:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c6c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c6c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c6c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c6c6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c8aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c8aa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c8b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c8b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c92a() local_unnamed_addr {
dec_label_pc_2c92a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c950(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c950:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c9ba(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c9ba:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c9e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c9e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cba0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cba0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cc3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cc3e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cc56() local_unnamed_addr {
dec_label_pc_2cc56:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cc8a() local_unnamed_addr {
dec_label_pc_2cc8a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ccbe() local_unnamed_addr {
dec_label_pc_2ccbe:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cd4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd4e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cdc2() local_unnamed_addr {
dec_label_pc_2cdc2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cdce() local_unnamed_addr {
dec_label_pc_2cdce:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cdf6() local_unnamed_addr {
dec_label_pc_2cdf6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ce00(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ce00:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ce2a() local_unnamed_addr {
dec_label_pc_2ce2a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cf00(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cf00:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2cfe0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cfe0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d110(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d110:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d190(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d190:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d220(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d220:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d2a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d2a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d330(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d330:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d460(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d460:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d4e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d4e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d580(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d580:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d610(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d610:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d8a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d8a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2daa0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2daa0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2db70(i32 %arg1) local_unnamed_addr {
dec_label_pc_2db70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2dbf0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dbf0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2dc90(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dc90:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2dcf0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dcf0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2dd10(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dd10:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2dd50(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dd50:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2dda0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dda0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2de50(i32 %arg1) local_unnamed_addr {
dec_label_pc_2de50:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ded0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ded0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2df30(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2df50(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df50:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2dfe0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dfe0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e080(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e080:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e110(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e110:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e1d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e1d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e1e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e1e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e220(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e220:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e231() local_unnamed_addr {
dec_label_pc_2e231:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS1_5void_ESB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_SB_E18has_fallback_type_EEENT_11result_typeEiRSE_T0_PNS1_22apply_visitor_unrolledET1_lE19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e260:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e2b9() local_unnamed_addr {
dec_label_pc_2e2b9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e2e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e2e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e370(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e370:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e3b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e3b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZZN5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_E19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e400:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e410(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e410:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e420(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e420:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e430() local_unnamed_addr {
dec_label_pc_2e430:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_2e4d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e4d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e520() local_unnamed_addr {
dec_label_pc_2e520:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_2e550(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e550:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e560(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e560:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e590(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e590:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e5d0() local_unnamed_addr {
dec_label_pc_2e5d0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_2e5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e5e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e660(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e660:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e6c0() local_unnamed_addr {
dec_label_pc_2e6c0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @_ZZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsPKcNS_8functionIFSsSE_EEEEENS0_5mutexEEEEEEC1ERKSM_E19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e700:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e830(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e830:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e8b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e940(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e940:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e9c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e9c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e9e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e9e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ea60(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ea60:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2eb80(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2eb90(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb90:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ec10(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec10:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2eca0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eca0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ed20(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ed20:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2edc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2edc0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2eef0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eef0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ef70(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f000(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f080(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f080:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f0c0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f0c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f110(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f110:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f150(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f150:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f180(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f180:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f240(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f240:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f360(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f360:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f3f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f3f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f420(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f420:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot5IvP7CWalletRKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_EERKSsb10ChangeTypeNS_8functionIFvSB_SL_SN_bSO_EEEEENS1_5mutexEEEEptEvE19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f4c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f660(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f660:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f6a6() local_unnamed_addr {
dec_label_pc_2f6a6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f720(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f720:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f820(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f820:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fa82() local_unnamed_addr {
dec_label_pc_2fa82:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fd70(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fd70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ff10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff10:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ff80(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ff80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30012() local_unnamed_addr {
dec_label_pc_30012:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30120(i32 %arg1) local_unnamed_addr {
dec_label_pc_30120:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30140(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30140:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30300(i32 %arg1) local_unnamed_addr {
dec_label_pc_30300:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30422() local_unnamed_addr {
dec_label_pc_30422:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_307f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_307f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30a1a() local_unnamed_addr {
dec_label_pc_30a1a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30ae0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30ae0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30dc2() local_unnamed_addr {
dec_label_pc_30dc2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30fb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_30fb0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31010(i32 %arg1) local_unnamed_addr {
dec_label_pc_31010:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31070(i32 %arg1) local_unnamed_addr {
dec_label_pc_31070:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_310d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_310d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31130(i32 %arg1) local_unnamed_addr {
dec_label_pc_31130:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31190(i32 %arg1) local_unnamed_addr {
dec_label_pc_31190:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_311f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_311f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31250(i32 %arg1) local_unnamed_addr {
dec_label_pc_31250:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_312b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_312b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31690(i32 %arg1) local_unnamed_addr {
dec_label_pc_31690:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31710() local_unnamed_addr {
dec_label_pc_31710:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96

; uselistorder directives
  uselistorder i32 1, {}
}

define i32 @function_31900(i32 %arg1) local_unnamed_addr {
dec_label_pc_31900:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_319a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_319a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31a30(i32 %arg1) local_unnamed_addr {
dec_label_pc_31a30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31a70(i32 %arg1) local_unnamed_addr {
dec_label_pc_31a70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31c30(i32 %arg1) local_unnamed_addr {
dec_label_pc_31c30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31ee0(i32 %arg1) local_unnamed_addr {
dec_label_pc_31ee0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32210(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_32210:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32360(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32360:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_325d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_325d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32c30(i32 %arg1) local_unnamed_addr {
dec_label_pc_32c30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32cb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_32cb0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_32d40:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32dc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_32dc0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32f70(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_332d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_332d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33350(i32 %arg1) local_unnamed_addr {
dec_label_pc_33350:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_333f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_333f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33480(i32 %arg1) local_unnamed_addr {
dec_label_pc_33480:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33980(i32 %arg1) local_unnamed_addr {
dec_label_pc_33980:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_339f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_339f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33b60(i32 %arg1) local_unnamed_addr {
dec_label_pc_33b60:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33bd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_33bd0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_33d40:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33db0(i32 %arg1) local_unnamed_addr {
dec_label_pc_33db0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33f20(i32 %arg1) local_unnamed_addr {
dec_label_pc_33f20:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33f50(i32 %arg1) local_unnamed_addr {
dec_label_pc_33f50:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33f90(i32 %arg1) local_unnamed_addr {
dec_label_pc_33f90:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34100(i32 %arg1) local_unnamed_addr {
dec_label_pc_34100:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34150(i32 %arg1) local_unnamed_addr {
dec_label_pc_34150:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34170(i32 %arg1) local_unnamed_addr {
dec_label_pc_34170:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_341d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_341d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34270(i32 %arg1) local_unnamed_addr {
dec_label_pc_34270:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_342e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_342e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_342f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_342f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34350(i32 %arg1) local_unnamed_addr {
dec_label_pc_34350:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_344c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_344c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34530(i32 %arg1) local_unnamed_addr {
dec_label_pc_34530:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_346a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_346a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_346a6() local_unnamed_addr {
dec_label_pc_346a6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34710(i32 %arg1) local_unnamed_addr {
dec_label_pc_34710:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_347b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_347b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_347de() local_unnamed_addr {
dec_label_pc_347de:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34830(i32 %arg1) local_unnamed_addr {
dec_label_pc_34830:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34880(i32 %arg1) local_unnamed_addr {
dec_label_pc_34880:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_348c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_348c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_348f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_348f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34960(i32 %arg1) local_unnamed_addr {
dec_label_pc_34960:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34a60(i32 %arg1) local_unnamed_addr {
dec_label_pc_34a60:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34ad0(i32 %arg1) local_unnamed_addr {
dec_label_pc_34ad0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34dc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_34dc0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34e30(i32 %arg1) local_unnamed_addr {
dec_label_pc_34e30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34e40(i32 %arg1) local_unnamed_addr {
dec_label_pc_34e40:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34ea0(i32 %arg1) local_unnamed_addr {
dec_label_pc_34ea0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34eb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_34eb0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34ec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_34ec0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34f30(i32 %arg1) local_unnamed_addr {
dec_label_pc_34f30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34f40(i32 %arg1) local_unnamed_addr {
dec_label_pc_34f40:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34fc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_34fc0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35040(i32 %arg1) local_unnamed_addr {
dec_label_pc_35040:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_350c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_350c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35140(i32 %arg1) local_unnamed_addr {
dec_label_pc_35140:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_351c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_351c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_351ea() local_unnamed_addr {
dec_label_pc_351ea:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35240(i32 %arg1) local_unnamed_addr {
dec_label_pc_35240:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35260(i32 %arg1) local_unnamed_addr {
dec_label_pc_35260:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_352c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_352c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35322() local_unnamed_addr {
dec_label_pc_35322:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35350(i32 %arg1) local_unnamed_addr {
dec_label_pc_35350:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_353e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_353e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35410(i32 %arg1) local_unnamed_addr {
dec_label_pc_35410:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35470(i32 %arg1) local_unnamed_addr {
dec_label_pc_35470:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35490(i32 %arg1) local_unnamed_addr {
dec_label_pc_35490:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35500(i32 %arg1) local_unnamed_addr {
dec_label_pc_35500:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35520(i32 %arg1) local_unnamed_addr {
dec_label_pc_35520:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35590(i32 %arg1) local_unnamed_addr {
dec_label_pc_35590:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_355a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_355a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35620(i32 %arg1) local_unnamed_addr {
dec_label_pc_35620:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_356b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_356b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_356b2() local_unnamed_addr {
dec_label_pc_356b2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_356f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_356f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35740(i32 %arg1) local_unnamed_addr {
dec_label_pc_35740:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3574e() local_unnamed_addr {
dec_label_pc_3574e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_357d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_357d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_358e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_358e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_359f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_359f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35a70(i32 %arg1) local_unnamed_addr {
dec_label_pc_35a70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35af0(i32 %arg1) local_unnamed_addr {
dec_label_pc_35af0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35b80(i32 %arg1) local_unnamed_addr {
dec_label_pc_35b80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35c00(i32 %arg1) local_unnamed_addr {
dec_label_pc_35c00:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35c20(i32 %arg1) local_unnamed_addr {
dec_label_pc_35c20:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35c30(i32 %arg1) local_unnamed_addr {
dec_label_pc_35c30:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35ca0(i32 %arg1) local_unnamed_addr {
dec_label_pc_35ca0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35d60(i32 %arg1) local_unnamed_addr {
dec_label_pc_35d60:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35eb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_35eb0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36050(i32 %arg1) local_unnamed_addr {
dec_label_pc_36050:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36130(i32 %arg1) local_unnamed_addr {
dec_label_pc_36130:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_361b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_361b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36230(i32 %arg1) local_unnamed_addr {
dec_label_pc_36230:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36240(i32 %arg1) local_unnamed_addr {
dec_label_pc_36240:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36280(i32 %arg1) local_unnamed_addr {
dec_label_pc_36280:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_362c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_362c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36350(i32 %arg1) local_unnamed_addr {
dec_label_pc_36350:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36380(i32 %arg1) local_unnamed_addr {
dec_label_pc_36380:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36630(i32 %arg1) local_unnamed_addr {
dec_label_pc_36630:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_366b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_366b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_367f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_367f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36860(i32 %arg1) local_unnamed_addr {
dec_label_pc_36860:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36870(i32 %arg1) local_unnamed_addr {
dec_label_pc_36870:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_368f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_368f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36900(i32 %arg1) local_unnamed_addr {
dec_label_pc_36900:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36980(i32 %arg1) local_unnamed_addr {
dec_label_pc_36980:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36a10(i32 %arg1) local_unnamed_addr {
dec_label_pc_36a10:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_36d00() local_unnamed_addr {
dec_label_pc_36d00:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37370(i32 %arg1) local_unnamed_addr {
dec_label_pc_37370:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_374a2() local_unnamed_addr {
dec_label_pc_374a2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3753e() local_unnamed_addr {
dec_label_pc_3753e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_375da() local_unnamed_addr {
dec_label_pc_375da:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_376b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_376b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37810(i32 %arg1) local_unnamed_addr {
dec_label_pc_37810:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37b72() local_unnamed_addr {
dec_label_pc_37b72:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37c0e() local_unnamed_addr {
dec_label_pc_37c0e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37d40(i32 %arg1) local_unnamed_addr {
dec_label_pc_37d40:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37dc2() local_unnamed_addr {
dec_label_pc_37dc2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37e5e() local_unnamed_addr {
dec_label_pc_37e5e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37efa() local_unnamed_addr {
dec_label_pc_37efa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37f40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37f40:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38170(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38170:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3826e() local_unnamed_addr {
dec_label_pc_3826e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_382b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_382b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_383b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_383b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38990(i32 %arg1) local_unnamed_addr {
dec_label_pc_38990:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38a52() local_unnamed_addr {
dec_label_pc_38a52:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38aee() local_unnamed_addr {
dec_label_pc_38aee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38f70(i32 %arg1) local_unnamed_addr {
dec_label_pc_38f70:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_39086() local_unnamed_addr

define i32 @function_391be() local_unnamed_addr {
dec_label_pc_391be:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_392d6() local_unnamed_addr

define i32 @function_39372() local_unnamed_addr {
dec_label_pc_39372:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_3940e() local_unnamed_addr

define i32 @_ZTVN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39540:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3974e() local_unnamed_addr {
dec_label_pc_3974e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_39d30(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39e8a() local_unnamed_addr

define i32 @function_39eb0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_39eb0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_39f26() local_unnamed_addr {
dec_label_pc_39f26:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_39fc2() local_unnamed_addr {
dec_label_pc_39fc2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3a000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a200(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a200:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a450(i32 %arg1) local_unnamed_addr {
dec_label_pc_3a450:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a55a() local_unnamed_addr {
dec_label_pc_3a55a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_3a692() local_unnamed_addr

define i32 @function_3a7aa() local_unnamed_addr {
dec_label_pc_3a7aa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a846() local_unnamed_addr {
dec_label_pc_3a846:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3a8e2() local_unnamed_addr {
dec_label_pc_3a8e2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3abee() local_unnamed_addr {
dec_label_pc_3abee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3b2b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3b2b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_3b2f0(i32) local_unnamed_addr

define i32 @function_3b430(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b430:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3b580(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3b580:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3b930(i32 %arg1) local_unnamed_addr {
dec_label_pc_3b930:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3c250(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_3c250:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3c7d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c7d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3cb80(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cb80:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3cbf0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_3cbf0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3cdd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_3cdd0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3d0e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d0e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3d590(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_3d590:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3d670(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d670:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3d940(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d940:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_3dc70(i32) local_unnamed_addr

declare i32 @unknown_3e150(i32) local_unnamed_addr

declare i32 @unknown_3e5c0(i32) local_unnamed_addr

declare i32 @unknown_3ee20(i32) local_unnamed_addr

declare i32 @unknown_3fa60(i32) local_unnamed_addr

declare i32 @unknown_3fa90(i32) local_unnamed_addr

declare i32 @unknown_3fd60(i32, i32) local_unnamed_addr

declare i32 @unknown_3fd70(i32) local_unnamed_addr

declare i32 @unknown_3fdd0(i32, i32) local_unnamed_addr

declare i32 @unknown_3fe40(i32, i32) local_unnamed_addr

declare i32 @unknown_3ff30(i32) local_unnamed_addr

declare i32 @unknown_400d0(i32) local_unnamed_addr

declare i32 @unknown_40120(i32, i32) local_unnamed_addr

declare i32 @unknown_40190(i32, i32) local_unnamed_addr

declare i32 @unknown_40200(i32, i32) local_unnamed_addr

declare i32 @unknown_402c0(i32) local_unnamed_addr

declare i32 @unknown_40300() local_unnamed_addr

declare i32 @unknown_404e0(i32, i32) local_unnamed_addr

declare i32 @unknown_40550(i32, i32) local_unnamed_addr

declare i32 @unknown_405c0(i32, i32) local_unnamed_addr

declare i32 @unknown_40710(i32) local_unnamed_addr

declare i32 @unknown_408a0(i32, i32) local_unnamed_addr

declare i32 @unknown_40910(i32, i32) local_unnamed_addr

declare i32 @unknown_40980(i32, i32) local_unnamed_addr

declare i32 @unknown_40c60(i32, i32) local_unnamed_addr

declare i32 @unknown_40ca0(i32) local_unnamed_addr

declare i32 @unknown_40cd0(i32, i32) local_unnamed_addr

declare i32 @unknown_40d40(i32, i32) local_unnamed_addr

declare i32 @unknown_41020(i32, i32) local_unnamed_addr

declare i32 @unknown_41090(i32, i32) local_unnamed_addr

declare i32 @unknown_41100(i32, i32) local_unnamed_addr

declare i32 @unknown_412e0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_413e0(i32, i32) local_unnamed_addr

declare i32 @unknown_41410(i32) local_unnamed_addr

declare i32 @unknown_41450(i32, i32) local_unnamed_addr

declare i32 @unknown_414c0(i32, i32) local_unnamed_addr

declare i32 @unknown_41710(i32, i32) local_unnamed_addr

declare i32 @unknown_417a0(i32, i32) local_unnamed_addr

declare i32 @unknown_41800(i32) local_unnamed_addr

declare i32 @unknown_41810(i32, i32) local_unnamed_addr

declare i32 @unknown_41880(i32, i32) local_unnamed_addr

declare i32 @unknown_41980(i32, i32) local_unnamed_addr

declare i32 @unknown_41b60(i32, i32) local_unnamed_addr

declare i32 @unknown_41bd0(i32, i32) local_unnamed_addr

declare i32 @unknown_41bf0(i32, i32) local_unnamed_addr

declare i32 @unknown_41c40(i32, i32) local_unnamed_addr

declare i32 @unknown_41e00(i32) local_unnamed_addr

declare i32 @unknown_41e60(i32, i32) local_unnamed_addr

declare i32 @unknown_41f20(i32, i32) local_unnamed_addr

declare i32 @unknown_41f90(i32, i32) local_unnamed_addr

declare i32 @unknown_42000(i32, i32) local_unnamed_addr

declare i32 @unknown_420d0(i32, i32) local_unnamed_addr

declare i32 @unknown_420f0(i32, i32) local_unnamed_addr

declare i32 @unknown_42340(i32, i32) local_unnamed_addr

declare i32 @unknown_42440(i32) local_unnamed_addr

declare i32 @unknown_425b0(i32, i32) local_unnamed_addr

declare i32 @unknown_42820(i32, i32) local_unnamed_addr

declare i32 @unknown_428b0(i32) local_unnamed_addr

define i32 @function_50420() local_unnamed_addr {
dec_label_pc_50420:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_50cb0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50e40(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50f30(i32, i32) local_unnamed_addr

declare i32 @unknown_42a80(i32) local_unnamed_addr

declare i32 @unknown_42a90(i32, i32) local_unnamed_addr

declare i32 @unknown_42d00(i32, i32) local_unnamed_addr

declare i32 @unknown_43070(i32, i32) local_unnamed_addr

declare i32 @unknown_436f0() local_unnamed_addr

declare i32 @unknown_43ab0(i32) local_unnamed_addr

declare i32 @unknown_43c00(i32, i32) local_unnamed_addr

declare i32 @unknown_43d60() local_unnamed_addr

declare i32 @unknown_43f40(i32, i32) local_unnamed_addr

declare i32 @unknown_445c0(i32, i32) local_unnamed_addr

declare i32 @unknown_447c0(i32, i32) local_unnamed_addr

declare i32 @unknown_44920(i32, i32) local_unnamed_addr

declare i32 @unknown_44cd0(i32, i32) local_unnamed_addr

declare i32 @unknown_44d60(i32, i32) local_unnamed_addr

declare i32 @unknown_45380(i32, i32) local_unnamed_addr

declare i32 @unknown_454e0(i32, i32) local_unnamed_addr

declare i32 @unknown_45520(i32, i32) local_unnamed_addr

declare i32 @unknown_45920(i32, i32) local_unnamed_addr

declare i32 @unknown_45ce0(i32, i32) local_unnamed_addr

declare i32 @unknown_45f00(i32) local_unnamed_addr

declare i32 @unknown_45f40(i32, i32) local_unnamed_addr

declare i32 @unknown_460a0(i32, i32) local_unnamed_addr

declare i32 @unknown_469a0(i32, i32) local_unnamed_addr

declare i32 @unknown_46a40(i32) local_unnamed_addr

declare i32 @unknown_46b00(i32, i32) local_unnamed_addr

declare i32 @unknown_46fa0() local_unnamed_addr

declare i32 @unknown_47540(i32) local_unnamed_addr

declare i32 @unknown_47560(i32, i32) local_unnamed_addr

declare i32 @unknown_476c0(i32, i32) local_unnamed_addr

declare i32 @unknown_47fc0(i32, i32) local_unnamed_addr

declare i32 @unknown_48120(i32, i32) local_unnamed_addr

declare i32 @unknown_48a20(i32, i32) local_unnamed_addr

declare i32 @unknown_48b80() local_unnamed_addr

declare i32 @unknown_49150(i32) local_unnamed_addr

declare i32 @unknown_49460(i32, i32) local_unnamed_addr

declare i32 @unknown_495e0(i32, i32) local_unnamed_addr

declare i32 @unknown_49690() local_unnamed_addr

declare i32 @unknown_49740() local_unnamed_addr

declare i32 @unknown_4a1a0(i32, i32) local_unnamed_addr

declare i32 @unknown_4a300(i32, i32) local_unnamed_addr

declare i32 @unknown_4abc0(i32, i32) local_unnamed_addr

declare i32 @unknown_4b9b0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bb40(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bc30(i32, i32) local_unnamed_addr

declare i32 @unknown_4bfb0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c870(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4cac0(i32) local_unnamed_addr

declare i32 @unknown_4d190(i32, i32) local_unnamed_addr

define i32 @function_52be0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_52be0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2956b2() local_unnamed_addr {
dec_label_pc_2956b2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_53240(i32, i32) local_unnamed_addr

declare i32 @unknown_53680(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4da30(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e500(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e5f0(i32, i32) local_unnamed_addr

declare i32 @unknown_4e970(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f230(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f480(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fb50(i32, i32) local_unnamed_addr

declare i32 @unknown_512b0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51b70(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_51dc0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52490(i32) local_unnamed_addr

define i32 @function_768d01() local_unnamed_addr {
dec_label_pc_768d01:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4890000(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_4890000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4c70000(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_4c70000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c24548b() local_unnamed_addr {
dec_label_pc_1c24548b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_408dc189() local_unnamed_addr {
dec_label_pc_408dc189:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_838b0000() local_unnamed_addr {
dec_label_pc_838b0000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_838b8f88(i32 %arg1) local_unnamed_addr {
dec_label_pc_838b8f88:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_838b8fa0() local_unnamed_addr {
dec_label_pc_838b8fa0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8424ac89() local_unnamed_addr {
dec_label_pc_8424ac89:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8424ac8b() local_unnamed_addr {
dec_label_pc_8424ac8b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_85045f8b() local_unnamed_addr {
dec_label_pc_85045f8b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_85105f8b() local_unnamed_addr {
dec_label_pc_85105f8b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_89000000() local_unnamed_addr {
dec_label_pc_89000000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8900009b() local_unnamed_addr {
dec_label_pc_8900009b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_89127401() local_unnamed_addr {
dec_label_pc_89127401:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_893c7401() local_unnamed_addr {
dec_label_pc_893c7401:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8b000139() local_unnamed_addr {
dec_label_pc_8b000139:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_958d818f(i32 %arg1) local_unnamed_addr {
dec_label_pc_958d818f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9c8dffff() local_unnamed_addr {
dec_label_pc_9c8dffff:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9c8e1962() local_unnamed_addr {
dec_label_pc_9c8e1962:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9c8e19e0() local_unnamed_addr {
dec_label_pc_9c8e19e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c68a52c6() local_unnamed_addr {
dec_label_pc_c68a52c6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c68a5339() local_unnamed_addr {
dec_label_pc_c68a5339:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_c701293b() local_unnamed_addr

declare i32 @unknown_c7015501() local_unnamed_addr

define i32 @function_c7ffffb4() local_unnamed_addr {
dec_label_pc_c7ffffb4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_e8023aff() local_unnamed_addr {
dec_label_pc_e8023aff:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f8a0f8a0() local_unnamed_addr {
dec_label_pc_f8a0f8a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8dfffffffce8() local_unnamed_addr {
dec_label_pc_8dfffffffce8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 694, 0, 604, 1500, 1047, 466, 1667, 467, 605, 521, 522, 1, 525, 524, 523, 1050, 600, 1051, 1048, 1049, 606, 1052, 607, 469, 1685, 468, 1686, 1687, 540, 541, 1058, 608, 1688, 1053, 470, 1054, 457, 471, 1055, 1056, 472, 1057, 1059, 243, 2, 242, 3, 1697, 609, 610, 695, 542, 696, 473, 697, 601, 698, 699, 700, 701, 702, 703, 704, 543, 544, 705, 706, 707, 1669, 1670, 708, 1063, 1064, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1683, 1681, 1684, 1682, 1065, 1066, 709, 710, 1067, 1068, 1072, 1073, 1074, 1069, 1070, 1071, 1075, 474, 1076, 1077, 1079, 1080, 1078, 1060, 1061, 1062, 545, 1081, 711, 546, 1082, 1083, 1084, 1085, 459, 1087, 1088, 1089, 460, 1086, 1090, 611, 1091, 244, 1092, 4, 5, 547, 529, 712, 713, 714, 612, 715, 716, 475, 717, 548, 549, 1527, 476, 1528, 718, 1529, 1540, 1541, 1095, 1096, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1097, 1098, 1099, 1100, 1103, 1101, 1104, 1102, 1105, 1106, 1107, 1108, 1112, 1113, 1114, 1109, 1110, 1111, 1115, 1116, 477, 1117, 1119, 1007, 1118, 1120, 1093, 1094, 550, 1121, 719, 1689, 1574, 1575, 1576, 1577, 461, 1579, 1580, 1581, 462, 1578, 1122, 613, 1123, 720, 614, 992, 721, 722, 723, 724, 725, 726, 478, 727, 551, 552, 728, 729, 1596, 1597, 730, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1614, 1612, 1615, 1613, 1616, 1617, 731, 732, 1618, 1619, 1623, 1624, 1625, 1620, 1621, 1622, 1626, 479, 1627, 1628, 480, 1629, 1631, 1632, 1630, 1582, 1583, 1584, 553, 733, 1585, 554, 1586, 1587, 1588, 1589, 463, 1591, 1592, 1593, 464, 1590, 1594, 615, 1635, 734, 735, 1595, 1633, 1634, 6, 1636, 1637, 736, 1640, 1639, 438, 737, 439, 1641, 1642, 738, 739, 740, 741, 7, 742, 743, 744, 745, 748, 746, 747, 749, 441, 750, 440, 751, 752, 753, 754, 755, 756, 757, 758, 8, 759, 760, 761, 762, 766, 763, 765, 764, 442, 767, 444, 768, 443, 769, 770, 771, 772, 773, 774, 775, 776, 9, 777, 778, 779, 1124, 1125, 445, 1126, 1127, 1128, 1129, 1130, 780, 781, 782, 783, 10, 784, 785, 786, 1131, 1132, 446, 1133, 1134, 1135, 1136, 1137, 787, 788, 789, 790, 11, 791, 792, 793, 794, 1138, 795, 796, 1139, 448, 1140, 447, 1141, 1142, 1143, 1144, 797, 798, 799, 800, 12, 801, 802, 803, 804, 1145, 1146, 449, 1147, 1148, 1149, 1150, 1151, 805, 806, 807, 808, 13, 809, 810, 811, 1152, 602, 812, 1153, 813, 814, 1154, 451, 1155, 450, 1156, 1157, 1158, 1159, 815, 816, 817, 818, 14, 819, 820, 821, 1160, 603, 822, 1161, 823, 824, 1162, 453, 1163, 452, 1164, 1165, 1166, 1167, 825, 826, 827, 828, 15, 829, 830, 831, 832, 836, 833, 835, 834, 454, 837, 456, 838, 455, 839, 840, 841, 842, 843, 844, 845, 846, 16, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 17, 245, 1189, 1190, 18, 246, 1191, 1192, 19, 247, 1193, 1194, 20, 248, 1195, 1196, 21, 249, 1197, 1198, 22, 250, 1199, 1200, 23, 251, 1201, 1202, 24, 252, 1203, 1204, 25, 253, 1205, 1206, 26, 254, 1207, 27, 28, 256, 29, 255, 1208, 616, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 617, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 618, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 619, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 620, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 621, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 622, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 623, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 624, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 625, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 626, 847, 848, 849, 850, 859, 860, 861, 851, 481, 852, 853, 856, 555, 30, 31, 854, 627, 855, 857, 858, 1289, 1290, 1291, 862, 530, 558, 556, 557, 482, 863, 1292, 1293, 483, 1294, 864, 865, 866, 867, 876, 877, 878, 868, 484, 869, 870, 873, 559, 32, 33, 871, 628, 872, 874, 875, 1295, 1296, 1297, 879, 531, 562, 560, 561, 485, 880, 1298, 1299, 486, 1300, 881, 882, 883, 884, 893, 894, 563, 895, 885, 487, 886, 887, 890, 564, 34, 35, 888, 629, 889, 891, 892, 1301, 1302, 1303, 896, 532, 567, 565, 566, 488, 897, 1304, 1305, 489, 1306, 898, 899, 900, 901, 630, 902, 1703, 568, 1308, 903, 904, 905, 1307, 569, 1309, 631, 238, 906, 907, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 908, 1704, 570, 1321, 909, 910, 911, 1320, 571, 1322, 632, 239, 912, 913, 1323, 1324, 1325, 1326, 1327, 633, 1335, 490, 491, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 240, 1345, 241, 1346, 36, 37, 914, 915, 38, 39, 916, 917, 1328, 1329, 572, 573, 918, 1330, 1331, 533, 1332, 1333, 1334, 634, 635, 534, 636, 1347, 40, 1348, 919, 920, 1349, 637, 1350, 492, 574, 493, 1352, 638, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 535, 1359, 1360, 1361, 639, 640, 41, 257, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 258, 1370, 259, 1371, 641, 260, 1372, 261, 1373, 642, 923, 921, 922, 924, 42, 262, 1374, 263, 1375, 643, 264, 1376, 265, 1377, 644, 927, 925, 926, 928, 43, 266, 1378, 645, 267, 1379, 268, 1380, 269, 1381, 646, 931, 929, 930, 932, 44, 270, 1382, 271, 1383, 647, 272, 1384, 273, 1385, 648, 935, 933, 934, 936, 45, 274, 1386, 275, 1387, 276, 1388, 649, 277, 1389, 650, 939, 937, 938, 940, 46, 278, 1390, 47, 279, 1391, 280, 1392, 281, 1393, 651, 943, 941, 942, 944, 48, 282, 1394, 283, 1395, 652, 284, 1396, 285, 1397, 653, 947, 945, 946, 948, 49, 654, 655, 1398, 1399, 50, 51, 1400, 1401, 286, 1402, 287, 1403, 52, 288, 1404, 289, 1405, 656, 951, 949, 950, 952, 53, 290, 1406, 291, 1407, 657, 292, 1408, 293, 1409, 658, 955, 953, 954, 956, 54, 536, 659, 1414, 1415, 1416, 1417, 494, 1418, 1410, 1411, 660, 1412, 495, 1413, 661, 1419, 1420, 537, 662, 1708, 1709, 1710, 1711, 496, 1712, 1705, 1706, 663, 1707, 497, 664, 1713, 1714, 294, 1421, 665, 295, 1422, 296, 1423, 55, 297, 666, 298, 1424, 667, 959, 957, 958, 960, 1425, 961, 963, 962, 668, 964, 498, 669, 965, 670, 1426, 1668, 1427, 1428, 499, 1429, 500, 1430, 575, 1435, 1431, 501, 1432, 502, 1433, 503, 1434, 299, 505, 1436, 504, 1437, 1438, 671, 300, 56, 1439, 1440, 302, 1441, 57, 301, 1442, 1443, 672, 966, 967, 968, 969, 970, 576, 1444, 1445, 1446, 58, 303, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 506, 1454, 673, 1455, 1456, 304, 59, 1457, 1458, 1459, 1460, 305, 60, 1461, 1462, 1463, 1464, 1465, 1466, 306, 61, 1467, 1468, 307, 62, 1469, 1470, 1471, 1472, 1473, 526, 308, 674, 971, 1474, 63, 309, 1475, 1476, 675, 1477, 1478, 1479, 972, 973, 1480, 1481, 1482, 1483, 1484, 594, 64, 310, 65, 577, 676, 1694, 1695, 1696, 507, 974, 1485, 677, 1715, 678, 975, 311, 66, 1700, 1701, 1702, 1692, 1693, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 578, 1493, 976, 977, 978, 979, 509, 508, 980, 981, 982, 983, 985, 986, 984, 987, 538, 988, 989, 990, 679, 1494, 579, 680, 991, 993, 994, 1495, 510, 580, 67, 313, 68, 312, 1496, 681, 1690, 995, 996, 997, 998, 999, 1000, 1497, 1498, 1001, 1002, 69, 70, 315, 71, 314, 1499, 682, 511, 72, 1003, 1004, 1005, 316, 73, 1006, 74, 75, 1501, 1502, 1503, 1504, 527, 1505, 539, 1506, 317, 1507, 76, 1508, 77, 1008, 1009, 1691, 1509, 1510, 1511, 1512, 1513, 683, 1010, 512, 1514, 1515, 78, 1516, 684, 1517, 79, 318, 80, 319, 1518, 321, 1519, 513, 320, 1520, 323, 1521, 514, 322, 1522, 1523, 81, 324, 1524, 1525, 82, 325, 1526, 1530, 83, 326, 1531, 1532, 84, 327, 1533, 328, 1534, 1535, 1536, 85, 329, 1537, 1538, 86, 330, 1539, 1550, 87, 331, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 332, 88, 1572, 1573, 89, 333, 1011, 334, 1012, 335, 1013, 336, 1014, 337, 1015, 1016, 338, 1017, 339, 1018, 340, 1019, 90, 341, 91, 342, 92, 343, 93, 344, 94, 345, 346, 95, 347, 348, 349, 350, 351, 1638, 352, 353, 96, 354, 355, 97, 356, 1643, 98, 1644, 685, 1645, 1646, 686, 1020, 99, 1021, 1022, 100, 1023, 1024, 101, 1025, 102, 1026, 103, 1027, 104, 1647, 1028, 105, 1029, 106, 1030, 107, 1031, 108, 109, 110, 111, 112, 1032, 113, 114, 115, 116, 117, 118, 1648, 1033, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 357, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 401, 155, 156, 1659, 402, 157, 403, 158, 404, 159, 405, 160, 406, 161, 407, 162, 408, 163, 409, 164, 410, 165, 411, 166, 412, 167, 413, 168, 414, 169, 415, 170, 416, 171, 417, 172, 418, 173, 419, 174, 420, 175, 421, 176, 422, 177, 178, 1660, 423, 179, 180, 1661, 424, 181, 182, 1662, 425, 183, 426, 184, 427, 185, 428, 186, 429, 187, 430, 188, 431, 189, 432, 190, 433, 191, 434, 192, 435, 193, 436, 194, 437, 195, 358, 196, 359, 197, 360, 198, 361, 199, 362, 200, 363, 201, 364, 202, 365, 203, 366, 204, 367, 205, 368, 206, 369, 207, 370, 208, 371, 209, 372, 210, 373, 211, 374, 212, 375, 213, 376, 214, 377, 215, 378, 216, 379, 217, 380, 218, 381, 219, 382, 220, 383, 221, 384, 222, 385, 223, 386, 224, 387, 225, 388, 226, 389, 227, 390, 228, 391, 229, 392, 230, 393, 231, 394, 232, 395, 233, 515, 516, 396, 234, 235, 397, 236, 399, 237, 398, 458, 687, 1034, 1698, 1699, 518, 517, 520, 519, 1035, 1036, 688, 1037, 1038, 581, 1039, 465, 528, 689, 1040, 1041, 1663, 690, 1042, 1043, 691, 1044, 1045, 1046, 692, 400, 1666, 1664, 1665, 693, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723 }
  uselistorder i32* @eax, {}
}

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

declare i8 @__asm_insb(i16) local_unnamed_addr

declare void @__asm_outsb(i16, i8) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i64 @__decompiler_undefined_function_6() local_unnamed_addr

attributes #0 = { nounwind readnone }

;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-10 00:05:18
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: _Z11MurmurHash3jRKSt6vectorIhSaIhEE at 0x0 -- 0x3
0x0:       55                        	push ebp
0x1:       89 e5                     	mov ebp, esp
; data inside code section at 0x3 -- 0x2c
0x3:       83 ec 58 8b 45 08 89 45  c4 8b 45 0c 89 45 c0 65   |..X.E..E..E..E.e|
0x13:      a1 14 00 00 00 89 45 f4  31 c0 8b 45 c4 89 45 d0   |......E.1..E..E.|
0x23:      c7 45 dc 51 2d 9e cc c7  45                        |.E.Q-...E       |
; function: function_2c at 0x2c -- 0x1db
0x2c:      e0 93                     	loopne 0xffffffc1 <function_ffffffc1>
0x2e:      35 87 1b 8b 45            	xor eax, 0x458b1b87
0x33:      c0 89 04 24 e8 b4 02      	ror byte ptr [ecx - 0x4b17dbfc], 2
0x3a:      00 00                     	add byte ptr [eax], al
0x3c:      c1 e8 02                  	shr eax, 2
0x3f:      89 45 e4                  	mov dword ptr [ebp - 0x1c], eax
0x42:      c7 44 24 04 00 00 00 00   	mov dword ptr [esp + 4], 0
0x4a:      8b 45 c0                  	mov eax, dword ptr [ebp - 0x40]
0x4d:      89 04 24                  	mov dword ptr [esp], eax
0x50:      e8 d9 02 00 00            	call 0x32e <_ZNKSt6vectorIhSaIhEEixEj>
0x55:      8b 55 e4                  	mov edx, dword ptr [ebp - 0x1c]
0x58:      c1 e2 02                  	shl edx, 2
0x5b:      01 d0                     	add eax, edx
0x5d:      89 45 e8                  	mov dword ptr [ebp - 0x18], eax
0x60:      8b 45 e4                  	mov eax, dword ptr [ebp - 0x1c]
0x63:      f7 d8                     	neg eax
0x65:      89 45 d4                  	mov dword ptr [ebp - 0x2c], eax
0x68:      eb 6e                     	jmp 0xd8 <function_2c+0xac>
0x6a:      8b 45 d4                  	mov eax, dword ptr [ebp - 0x2c]
0x6d:      c1 e0 02                  	shl eax, 2
0x70:      03 45 e8                  	add eax, dword ptr [ebp - 0x18]
0x73:      8b 00                     	mov eax, dword ptr [eax]
0x75:      89 45 ec                  	mov dword ptr [ebp - 0x14], eax
0x78:      8b 45 ec                  	mov eax, dword ptr [ebp - 0x14]
0x7b:      69 c0 51 2d 9e cc         	imul eax, eax, 0xcc9e2d51
0x81:      89 45 ec                  	mov dword ptr [ebp - 0x14], eax
0x84:      c7 44 24 04 0f 00 00 00   	mov dword ptr [esp + 4], 0xf
0x8c:      8b 45 ec                  	mov eax, dword ptr [ebp - 0x14]
0x8f:      89 04 24                  	mov dword ptr [esp], eax
0x92:      e8 15 02 00 00            	call 0x2ac <_Z6ROTL32ja>
0x97:      89 45 ec                  	mov dword ptr [ebp - 0x14], eax
0x9a:      8b 45 ec                  	mov eax, dword ptr [ebp - 0x14]
0x9d:      69 c0 93 35 87 1b         	imul eax, eax, 0x1b873593
0xa3:      89 45 ec                  	mov dword ptr [ebp - 0x14], eax
0xa6:      8b 45 ec                  	mov eax, dword ptr [ebp - 0x14]
0xa9:      31 45 d0                  	xor dword ptr [ebp - 0x30], eax
0xac:      c7 44 24 04 0d 00 00 00   	mov dword ptr [esp + 4], 0xd
0xb4:      8b 45 d0                  	mov eax, dword ptr [ebp - 0x30]
0xb7:      89 04 24                  	mov dword ptr [esp], eax
0xba:      e8 ed 01 00 00            	call 0x2ac <_Z6ROTL32ja>
0xbf:      89 45 d0                  	mov dword ptr [ebp - 0x30], eax
0xc2:      8b 55 d0                  	mov edx, dword ptr [ebp - 0x30]
0xc5:      89 d0                     	mov eax, edx
0xc7:      c1 e0 02                  	shl eax, 2
0xca:      01 d0                     	add eax, edx
0xcc:      2d 9c 94 ab 19            	sub eax, 0x19ab949c
0xd1:      89 45 d0                  	mov dword ptr [ebp - 0x30], eax
0xd4:      83 45 d4 01               	add dword ptr [ebp - 0x2c], 1
0xd8:      83 7d d4 00               	cmp dword ptr [ebp - 0x2c], 0
0xdc:      0f 95 c0                  	setne al
0xdf:      84 c0                     	test al, al
0xe1:      75 87                     	jne 0x6a <function_2c+0x3e>
0xe3:      c7 44 24 04 00 00 00 00   	mov dword ptr [esp + 4], 0
0xeb:      8b 45 c0                  	mov eax, dword ptr [ebp - 0x40]
0xee:      89 04 24                  	mov dword ptr [esp], eax
0xf1:      e8 38 02 00 00            	call 0x32e <_ZNKSt6vectorIhSaIhEEixEj>
0xf6:      8b 55 e4                  	mov edx, dword ptr [ebp - 0x1c]
0xf9:      c1 e2 02                  	shl edx, 2
0xfc:      01 d0                     	add eax, edx
0xfe:      89 45 f0                  	mov dword ptr [ebp - 0x10], eax
0x101:     c7 45 d8 00 00 00 00      	mov dword ptr [ebp - 0x28], 0
0x108:     8b 45 c0                  	mov eax, dword ptr [ebp - 0x40]
0x10b:     89 04 24                  	mov dword ptr [esp], eax
0x10e:     e8 dd 01 00 00            	call 0x2f0 <_ZNKSt6vectorIhSaIhEE4sizeEv>
0x113:     83 e0 03                  	and eax, 3
0x116:     83 f8 02                  	cmp eax, 2
0x119:     74 1e                     	je 0x139 <function_2c+0x10d>
0x11b:     83 f8 03                  	cmp eax, 3
0x11e:     74 07                     	je 0x127 <function_2c+0xfb>
0x120:     83 f8 01                  	cmp eax, 1
0x123:     74 26                     	je 0x14b <function_2c+0x11f>
0x125:     eb 64                     	jmp 0x18b <function_2c+0x15f>
0x127:     8b 45 f0                  	mov eax, dword ptr [ebp - 0x10]
0x12a:     83 c0 02                  	add eax, 2
0x12d:     0f b6 00                  	movzx eax, byte ptr [eax]
0x130:     0f b6 c0                  	movzx eax, al
0x133:     c1 e0 10                  	shl eax, 0x10
0x136:     31 45 d8                  	xor dword ptr [ebp - 0x28], eax
0x139:     8b 45 f0                  	mov eax, dword ptr [ebp - 0x10]
0x13c:     83 c0 01                  	add eax, 1
0x13f:     0f b6 00                  	movzx eax, byte ptr [eax]
0x142:     0f b6 c0                  	movzx eax, al
0x145:     c1 e0 08                  	shl eax, 8
0x148:     31 45 d8                  	xor dword ptr [ebp - 0x28], eax
0x14b:     8b 45 f0                  	mov eax, dword ptr [ebp - 0x10]
0x14e:     0f b6 00                  	movzx eax, byte ptr [eax]
0x151:     0f b6 c0                  	movzx eax, al
0x154:     31 45 d8                  	xor dword ptr [ebp - 0x28], eax
0x157:     8b 45 d8                  	mov eax, dword ptr [ebp - 0x28]
0x15a:     69 c0 51 2d 9e cc         	imul eax, eax, 0xcc9e2d51
0x160:     89 45 d8                  	mov dword ptr [ebp - 0x28], eax
0x163:     c7 44 24 04 0f 00 00 00   	mov dword ptr [esp + 4], 0xf
0x16b:     8b 45 d8                  	mov eax, dword ptr [ebp - 0x28]
0x16e:     89 04 24                  	mov dword ptr [esp], eax
0x171:     e8 36 01 00 00            	call 0x2ac <_Z6ROTL32ja>
0x176:     89 45 d8                  	mov dword ptr [ebp - 0x28], eax
0x179:     8b 45 d8                  	mov eax, dword ptr [ebp - 0x28]
0x17c:     69 c0 93 35 87 1b         	imul eax, eax, 0x1b873593
0x182:     89 45 d8                  	mov dword ptr [ebp - 0x28], eax
0x185:     8b 45 d8                  	mov eax, dword ptr [ebp - 0x28]
0x188:     31 45 d0                  	xor dword ptr [ebp - 0x30], eax
0x18b:     8b 45 c0                  	mov eax, dword ptr [ebp - 0x40]
0x18e:     89 04 24                  	mov dword ptr [esp], eax
0x191:     e8 5a 01 00 00            	call 0x2f0 <_ZNKSt6vectorIhSaIhEE4sizeEv>
0x196:     31 45 d0                  	xor dword ptr [ebp - 0x30], eax
0x199:     8b 45 d0                  	mov eax, dword ptr [ebp - 0x30]
0x19c:     c1 e8 10                  	shr eax, 0x10
0x19f:     31 45 d0                  	xor dword ptr [ebp - 0x30], eax
0x1a2:     8b 45 d0                  	mov eax, dword ptr [ebp - 0x30]
0x1a5:     69 c0 6b ca eb 85         	imul eax, eax, 0x85ebca6b
0x1ab:     89 45 d0                  	mov dword ptr [ebp - 0x30], eax
0x1ae:     8b 45 d0                  	mov eax, dword ptr [ebp - 0x30]
0x1b1:     c1 e8 0d                  	shr eax, 0xd
0x1b4:     31 45 d0                  	xor dword ptr [ebp - 0x30], eax
0x1b7:     8b 45 d0                  	mov eax, dword ptr [ebp - 0x30]
0x1ba:     69 c0 35 ae b2 c2         	imul eax, eax, 0xc2b2ae35
0x1c0:     89 45 d0                  	mov dword ptr [ebp - 0x30], eax
0x1c3:     8b 45 d0                  	mov eax, dword ptr [ebp - 0x30]
0x1c6:     c1 e8 10                  	shr eax, 0x10
0x1c9:     31 45 d0                  	xor dword ptr [ebp - 0x30], eax
0x1cc:     8b 45 d0                  	mov eax, dword ptr [ebp - 0x30]
0x1cf:     8b 55 f4                  	mov edx, dword ptr [ebp - 0xc]
0x1d2:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x1d9:     74 05                     	je 0x1e0 <function_1e0>
; data inside code section at 0x1db -- 0x1dc
0x1db:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1dc -- 0x1dd
; data inside code section at 0x1dd -- 0x1e0
0x1dd:     ff ff ff                                           |...             |
; function: function_1e0 at 0x1e0 -- 0x1e2
0x1e0:     c9                        	leave 
0x1e1:     c3                        	ret 
; function: __static_initialization_and_destruction_0 at 0x1e2 -- 0x215
0x1e2:     55                        	push ebp
0x1e3:     89 e5                     	mov ebp, esp
0x1e5:     83 ec 38                  	sub esp, 0x38
0x1e8:     8b 45 08                  	mov eax, dword ptr [ebp + 8]
0x1eb:     89 45 e4                  	mov dword ptr [ebp - 0x1c], eax
0x1ee:     8b 45 0c                  	mov eax, dword ptr [ebp + 0xc]
0x1f1:     89 45 e0                  	mov dword ptr [ebp - 0x20], eax
0x1f4:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x1fa:     89 45 f4                  	mov dword ptr [ebp - 0xc], eax
0x1fd:     31 c0                     	xor eax, eax
0x1ff:     83 7d e4 01               	cmp dword ptr [ebp - 0x1c], 1
0x203:     75 32                     	jne 0x237 <function_237>
0x205:     81 7d e0 ff ff 00 00      	cmp dword ptr [ebp - 0x20], 0xffff
0x20c:     75 29                     	jne 0x237 <function_237>
0x20e:     c7 04 24 84 02 00 00      	mov dword ptr [esp], 0x284
; data inside code section at 0x215 -- 0x216
0x215:     e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x216 -- 0x217
; data inside code section at 0x217 -- 0x21b
0x217:     ff ff ff b8                                        |....            |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x21b -- 0x21f
; data inside code section at 0x21f -- 0x223
0x21f:     c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x223 -- 0x232
; data inside code section at 0x232 -- 0x233
0x232:     e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x233 -- 0x234
; data inside code section at 0x234 -- 0x237
0x234:     ff ff ff                                           |...             |
; function: function_237 at 0x237 -- 0x243
0x237:     8b 45 f4                  	mov eax, dword ptr [ebp - 0xc]
0x23a:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x241:     74 05                     	je 0x248 <function_248>
; data inside code section at 0x243 -- 0x244
0x243:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x244 -- 0x245
; data inside code section at 0x245 -- 0x248
0x245:     ff ff ff                                           |...             |
; function: function_248 at 0x248 -- 0x24a
0x248:     c9                        	leave 
0x249:     c3                        	ret 
; function: _GLOBAL__sub_I__Z11MurmurHash3jRKSt6vectorIhSaIhEE at 0x24a -- 0x27b
0x24a:     55                        	push ebp
0x24b:     89 e5                     	mov ebp, esp
0x24d:     83 ec 28                  	sub esp, 0x28
0x250:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x256:     89 45 f4                  	mov dword ptr [ebp - 0xc], eax
0x259:     31 c0                     	xor eax, eax
0x25b:     c7 44 24 04 ff ff 00 00   	mov dword ptr [esp + 4], 0xffff
0x263:     c7 04 24 01 00 00 00      	mov dword ptr [esp], 1
0x26a:     e8 73 ff ff ff            	call 0x1e2 <__static_initialization_and_destruction_0>
0x26f:     8b 45 f4                  	mov eax, dword ptr [ebp - 0xc]
0x272:     65 33 05 14 00 00 00      	xor eax, dword ptr gs:[0x14]
0x279:     74 05                     	je 0x280 <function_280>
; data inside code section at 0x27b -- 0x27c
0x27b:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x27c -- 0x27d
; data inside code section at 0x27d -- 0x280
0x27d:     ff ff ff                                           |...             |
; function: function_280 at 0x280 -- 0x282
0x280:     c9                        	leave 
0x281:     c3                        	ret 
; section: .text._Z6ROTL32ja
; function: _Z6ROTL32ja at 0x2ac -- 0x2e5
0x2ac:     55                        	push ebp
0x2ad:     89 e5                     	mov ebp, esp
0x2af:     53                        	push ebx
0x2b0:     83 ec 24                  	sub esp, 0x24
0x2b3:     8b 45 0c                  	mov eax, dword ptr [ebp + 0xc]
0x2b6:     8b 55 08                  	mov edx, dword ptr [ebp + 8]
0x2b9:     89 55 e4                  	mov dword ptr [ebp - 0x1c], edx
0x2bc:     88 45 e0                  	mov byte ptr [ebp - 0x20], al
0x2bf:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x2c5:     89 45 f4                  	mov dword ptr [ebp - 0xc], eax
0x2c8:     31 c0                     	xor eax, eax
0x2ca:     0f be 45 e0               	movsx eax, byte ptr [ebp - 0x20]
0x2ce:     8b 55 e4                  	mov edx, dword ptr [ebp - 0x1c]
0x2d1:     89 d3                     	mov ebx, edx
0x2d3:     89 c1                     	mov ecx, eax
0x2d5:     d3 c3                     	rol ebx, cl
0x2d7:     89 d8                     	mov eax, ebx
0x2d9:     8b 55 f4                  	mov edx, dword ptr [ebp - 0xc]
0x2dc:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x2e3:     74 05                     	je 0x2ea <function_2ea>
; data inside code section at 0x2e5 -- 0x2e6
0x2e5:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2e6 -- 0x2e7
; data inside code section at 0x2e7 -- 0x2ea
0x2e7:     ff ff ff                                           |...             |
; function: function_2ea at 0x2ea -- 0x2f0
0x2ea:     83 c4 24                  	add esp, 0x24
0x2ed:     5b                        	pop ebx
0x2ee:     5d                        	pop ebp
0x2ef:     c3                        	ret 
; section: .text._ZNKSt6vectorIhSaIhEE4sizeEv
; function: _ZNKSt6vectorIhSaIhEE4sizeEv at 0x2f0 -- 0x32d
0x2f0:     55                        	push ebp
0x2f1:     89 e5                     	mov ebp, esp
0x2f3:     83 ec 28                  	sub esp, 0x28
0x2f6:     8b 45 08                  	mov eax, dword ptr [ebp + 8]
0x2f9:     89 45 e4                  	mov dword ptr [ebp - 0x1c], eax
0x2fc:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x302:     89 45 f4                  	mov dword ptr [ebp - 0xc], eax
0x305:     31 c0                     	xor eax, eax
0x307:     8b 45 e4                  	mov eax, dword ptr [ebp - 0x1c]
0x30a:     8b 40 04                  	mov eax, dword ptr [eax + 4]
0x30d:     89 c2                     	mov edx, eax
0x30f:     8b 45 e4                  	mov eax, dword ptr [ebp - 0x1c]
0x312:     8b 00                     	mov eax, dword ptr [eax]
0x314:     89 d1                     	mov ecx, edx
0x316:     29 c1                     	sub ecx, eax
0x318:     89 c8                     	mov eax, ecx
0x31a:     8b 55 f4                  	mov edx, dword ptr [ebp - 0xc]
0x31d:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x324:     74 05                     	je 0x32b <_ZNKSt6vectorIhSaIhEE4sizeEv+0x3b>
0x326:     e8 fc ff ff ff            	call 0x327
0x32b:     c9                        	leave 
0x32c:     c3                        	ret 
; section: .text._ZNKSt6vectorIhSaIhEEixEj
; function: _ZNKSt6vectorIhSaIhEEixEj at 0x32e -- 0x35f
0x32e:     55                        	push ebp
0x32f:     89 e5                     	mov ebp, esp
0x331:     83 ec 28                  	sub esp, 0x28
0x334:     8b 45 08                  	mov eax, dword ptr [ebp + 8]
0x337:     89 45 e4                  	mov dword ptr [ebp - 0x1c], eax
0x33a:     8b 45 0c                  	mov eax, dword ptr [ebp + 0xc]
0x33d:     89 45 e0                  	mov dword ptr [ebp - 0x20], eax
0x340:     65 a1 14 00 00 00         	mov eax, dword ptr gs:[0x14]
0x346:     89 45 f4                  	mov dword ptr [ebp - 0xc], eax
0x349:     31 c0                     	xor eax, eax
0x34b:     8b 45 e4                  	mov eax, dword ptr [ebp - 0x1c]
0x34e:     8b 00                     	mov eax, dword ptr [eax]
0x350:     03 45 e0                  	add eax, dword ptr [ebp - 0x20]
0x353:     8b 55 f4                  	mov edx, dword ptr [ebp - 0xc]
0x356:     65 33 15 14 00 00 00      	xor edx, dword ptr gs:[0x14]
0x35d:     74 05                     	je 0x364 <function_364>
; data inside code section at 0x35f -- 0x360
0x35f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x360 -- 0x361
; data inside code section at 0x361 -- 0x364
0x361:     ff ff ff                                           |...             |
; function: function_364 at 0x364 -- 0x366
0x364:     c9                        	leave 
0x365:     c3                        	ret 

;;
;; Data Segment
;;

; section: .rodata
0x284:     00 00 00 00 60 90 0f 00  80 38 01 00 d1 00 00 00   |....`....8......|
0x294:     aa 7a 00 00 00 7d 00 00  90 7e 00 00 60 ea 00 00   |.z...}...~..`...|
0x2a4:     62 ea 00 00 00 00 00 02  55                        |b.......U       |
; section: .ctors
0x368:     4a 02 00 00 ??                                     |J...?           |
; section: .eh_frame
0xd4a08:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0xd4a18:   1b 0c 04 04 88 01 00 00  20 00 00 00 1c 00 00 00   |........ .......|
0xd4a28:   8c 02 00 00 44 00 00 00  00 41 0e 08 85 02 42 0d   |....D....A....B.|
0xd4a38:   05 64 83 03 5b c3 41 0c  04 04 c5 00 1c 00 00 00   |.d..[.A.........|
0xd4a48:   40 00 00 00 bc ff ff ff  e2 01 00 00 00 41 0e 08   |@............A..|
0xd4a58:   85 02 42 0d 05 03 de 01  c5 0c 04 04 1c 00 00 00   |..B.............|
0xd4a68:   60 00 00 00 8c 02 00 00  3d 00 00 00 00 41 0e 08   |`.......=....A..|
0xd4a78:   85 02 42 0d 05 79 c5 0c  04 04 00 00 1c 00 00 00   |..B..y..........|
0xd4a88:   80 00 00 00 aa 02 00 00  38 00 00 00 00 41 0e 08   |........8....A..|
0xd4a98:   85 02 42 0d 05 74 c5 0c  04 04 00 00 1c 00 00 00   |..B..t..........|
0xd4aa8:   a0 00 00 00 3e 01 00 00  68 00 00 00 00 41 0e 08   |....>...h....A..|
0xd4ab8:   85 02 42 0d 05 02 64 c5  0c 04 04 00 1c 00 00 00   |..B...d.........|
0xd4ac8:   c0 00 00 00 86 01 00 00  38 00 00 00 00 41 0e 08   |........8....A..|
0xd4ad8:   85 02 42 0d 05 74 c5 0c  04 04 00 00 ??            |..B..t......?   |
